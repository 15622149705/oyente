
======= Doubler =======
EVM assembly:
.code:
  PUSH 60		contract Doubler {...
  PUSH 40		contract Doubler {...
  MSTORE			contract Doubler {...
  PUSH 0		0
  PUSH 1		uint public payoutIdx = 0
  PUSH 0		uint public payoutIdx = 0
  POP			uint public payoutIdx = 0
  SSTORE			uint public payoutIdx = 0
  PUSH 0		0
  PUSH 3		uint public balance = 0
  PUSH 0		uint public balance = 0
  POP			uint public balance = 0
  SSTORE			uint public balance = 0
tag1: 
  JUMPDEST		function Doubler() {...
  CALLER			msg.sender
  PUSH 4		owner
  PUSH 0		owner
  PUSH 100		owner = msg.sender
  EXP			owner = msg.sender
  DUP2			owner = msg.sender
  SLOAD			owner = msg.sender
  DUP2			owner = msg.sender
  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		owner = msg.sender
  MUL			owner = msg.sender
  NOT			owner = msg.sender
  AND			owner = msg.sender
  SWAP1			owner = msg.sender
  DUP4			owner = msg.sender
  MUL			owner = msg.sender
  OR			owner = msg.sender
  SWAP1			owner = msg.sender
  SSTORE			owner = msg.sender
  POP			owner = msg.sender
tag2: 
  JUMPDEST		function Doubler() {...
  PUSH #[$00000000…00000000]		contract Doubler {...
  DUP1			contract Doubler {...
  PUSH [$00000000…00000000]		contract Doubler {...
  PUSH 0		contract Doubler {...
  CODECOPY			contract Doubler {...
  PUSH 0		contract Doubler {...
  RETURN			contract Doubler {...
.data:
  0: 
  .code:
    PUSH 60		contract Doubler {...
    PUSH 40		contract Doubler {...
    MSTORE			contract Doubler {...
    CALLDATASIZE			contract Doubler {...
    ISZERO			contract Doubler {...
    PUSH [tag1]		contract Doubler {...
    JUMPI			contract Doubler {...
    PUSH 0		contract Doubler {...
    CALLDATALOAD			contract Doubler {...
    PUSH 100000000000000000000000000000000000000000000000000000000		contract Doubler {...
    SWAP1			contract Doubler {...
    DIV			contract Doubler {...
    DUP1			contract Doubler {...
    PUSH 13AF4035		contract Doubler {...
    EQ			contract Doubler {...
    PUSH [tag2]		contract Doubler {...
    JUMPI			contract Doubler {...
    DUP1			contract Doubler {...
    PUSH 35C1D349		contract Doubler {...
    EQ			contract Doubler {...
    PUSH [tag3]		contract Doubler {...
    JUMPI			contract Doubler {...
    DUP1			contract Doubler {...
    PUSH 8DA5CB5B		contract Doubler {...
    EQ			contract Doubler {...
    PUSH [tag4]		contract Doubler {...
    JUMPI			contract Doubler {...
    DUP1			contract Doubler {...
    PUSH 9003ADFE		contract Doubler {...
    EQ			contract Doubler {...
    PUSH [tag5]		contract Doubler {...
    JUMPI			contract Doubler {...
    DUP1			contract Doubler {...
    PUSH A60F3588		contract Doubler {...
    EQ			contract Doubler {...
    PUSH [tag6]		contract Doubler {...
    JUMPI			contract Doubler {...
    DUP1			contract Doubler {...
    PUSH B69EF8A8		contract Doubler {...
    EQ			contract Doubler {...
    PUSH [tag7]		contract Doubler {...
    JUMPI			contract Doubler {...
    DUP1			contract Doubler {...
    PUSH C8796572		contract Doubler {...
    EQ			contract Doubler {...
    PUSH [tag8]		contract Doubler {...
    JUMPI			contract Doubler {...
    DUP1			contract Doubler {...
    PUSH E97DCB62		contract Doubler {...
    EQ			contract Doubler {...
    PUSH [tag9]		contract Doubler {...
    JUMPI			contract Doubler {...
    PUSH [tag1]		contract Doubler {...
    JUMP			contract Doubler {...
  tag1: 
    JUMPDEST		contract Doubler {...
    PUSH [tag10]		contract Doubler {...
  tag11: 
    JUMPDEST		function() {...
    PUSH [tag13]		enter()
    PUSH [tag14]		enter
    JUMP	[in]		enter()
  tag13: 
    JUMPDEST		enter()
  tag12: 
    JUMPDEST		function() {...
    JUMP	[out]		function() {...
  tag10: 
    JUMPDEST		contract Doubler {...
    STOP			contract Doubler {...
  tag2: 
    JUMPDEST		function setOwner(address _owner) onlyowner {...
    PUSH [tag15]		function setOwner(address _owner) onlyowner {...
    PUSH 4		function setOwner(address _owner) onlyowner {...
    DUP1			function setOwner(address _owner) onlyowner {...
    DUP1			function setOwner(address _owner) onlyowner {...
    CALLDATALOAD			function setOwner(address _owner) onlyowner {...
    SWAP1			function setOwner(address _owner) onlyowner {...
    PUSH 20		function setOwner(address _owner) onlyowner {...
    ADD			function setOwner(address _owner) onlyowner {...
    SWAP1			function setOwner(address _owner) onlyowner {...
    SWAP2			function setOwner(address _owner) onlyowner {...
    SWAP1			function setOwner(address _owner) onlyowner {...
    POP			function setOwner(address _owner) onlyowner {...
    POP			function setOwner(address _owner) onlyowner {...
    PUSH [tag16]		function setOwner(address _owner) onlyowner {...
    JUMP			function setOwner(address _owner) onlyowner {...
  tag15: 
    JUMPDEST		function setOwner(address _owner) onlyowner {...
    STOP			function setOwner(address _owner) onlyowner {...
  tag3: 
    JUMPDEST		Participant[] public participants
    PUSH [tag17]		Participant[] public participants
    PUSH 4		Participant[] public participants
    DUP1			Participant[] public participants
    DUP1			Participant[] public participants
    CALLDATALOAD			Participant[] public participants
    SWAP1			Participant[] public participants
    PUSH 20		Participant[] public participants
    ADD			Participant[] public participants
    SWAP1			Participant[] public participants
    SWAP2			Participant[] public participants
    SWAP1			Participant[] public participants
    POP			Participant[] public participants
    POP			Participant[] public participants
    PUSH [tag18]		Participant[] public participants
    JUMP			Participant[] public participants
  tag17: 
    JUMPDEST		Participant[] public participants
    PUSH 40		Participant[] public participants
    MLOAD			Participant[] public participants
    DUP1			Participant[] public participants
    DUP4			Participant[] public participants
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		Participant[] public participants
    AND			Participant[] public participants
    DUP2			Participant[] public participants
    MSTORE			Participant[] public participants
    PUSH 20		Participant[] public participants
    ADD			Participant[] public participants
    DUP3			Participant[] public participants
    DUP2			Participant[] public participants
    MSTORE			Participant[] public participants
    PUSH 20		Participant[] public participants
    ADD			Participant[] public participants
    SWAP3			Participant[] public participants
    POP			Participant[] public participants
    POP			Participant[] public participants
    POP			Participant[] public participants
    PUSH 40		Participant[] public participants
    MLOAD			Participant[] public participants
    DUP1			Participant[] public participants
    SWAP2			Participant[] public participants
    SUB			Participant[] public participants
    SWAP1			Participant[] public participants
    RETURN			Participant[] public participants
  tag4: 
    JUMPDEST		address public owner
    PUSH [tag19]		address public owner
    PUSH 4		address public owner
    DUP1			address public owner
    POP			address public owner
    POP			address public owner
    PUSH [tag20]		address public owner
    JUMP			address public owner
  tag19: 
    JUMPDEST		address public owner
    PUSH 40		address public owner
    MLOAD			address public owner
    DUP1			address public owner
    DUP3			address public owner
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		address public owner
    AND			address public owner
    DUP2			address public owner
    MSTORE			address public owner
    PUSH 20		address public owner
    ADD			address public owner
    SWAP2			address public owner
    POP			address public owner
    POP			address public owner
    PUSH 40		address public owner
    MLOAD			address public owner
    DUP1			address public owner
    SWAP2			address public owner
    SUB			address public owner
    SWAP1			address public owner
    RETURN			address public owner
  tag5: 
    JUMPDEST		uint public collectedFees
    PUSH [tag21]		uint public collectedFees
    PUSH 4		uint public collectedFees
    DUP1			uint public collectedFees
    POP			uint public collectedFees
    POP			uint public collectedFees
    PUSH [tag22]		uint public collectedFees
    JUMP			uint public collectedFees
  tag21: 
    JUMPDEST		uint public collectedFees
    PUSH 40		uint public collectedFees
    MLOAD			uint public collectedFees
    DUP1			uint public collectedFees
    DUP3			uint public collectedFees
    DUP2			uint public collectedFees
    MSTORE			uint public collectedFees
    PUSH 20		uint public collectedFees
    ADD			uint public collectedFees
    SWAP2			uint public collectedFees
    POP			uint public collectedFees
    POP			uint public collectedFees
    PUSH 40		uint public collectedFees
    MLOAD			uint public collectedFees
    DUP1			uint public collectedFees
    SWAP2			uint public collectedFees
    SUB			uint public collectedFees
    SWAP1			uint public collectedFees
    RETURN			uint public collectedFees
  tag6: 
    JUMPDEST		uint public payoutIdx = 0
    PUSH [tag23]		uint public payoutIdx = 0
    PUSH 4		uint public payoutIdx = 0
    DUP1			uint public payoutIdx = 0
    POP			uint public payoutIdx = 0
    POP			uint public payoutIdx = 0
    PUSH [tag24]		uint public payoutIdx = 0
    JUMP			uint public payoutIdx = 0
  tag23: 
    JUMPDEST		uint public payoutIdx = 0
    PUSH 40		uint public payoutIdx = 0
    MLOAD			uint public payoutIdx = 0
    DUP1			uint public payoutIdx = 0
    DUP3			uint public payoutIdx = 0
    DUP2			uint public payoutIdx = 0
    MSTORE			uint public payoutIdx = 0
    PUSH 20		uint public payoutIdx = 0
    ADD			uint public payoutIdx = 0
    SWAP2			uint public payoutIdx = 0
    POP			uint public payoutIdx = 0
    POP			uint public payoutIdx = 0
    PUSH 40		uint public payoutIdx = 0
    MLOAD			uint public payoutIdx = 0
    DUP1			uint public payoutIdx = 0
    SWAP2			uint public payoutIdx = 0
    SUB			uint public payoutIdx = 0
    SWAP1			uint public payoutIdx = 0
    RETURN			uint public payoutIdx = 0
  tag7: 
    JUMPDEST		uint public balance = 0
    PUSH [tag25]		uint public balance = 0
    PUSH 4		uint public balance = 0
    DUP1			uint public balance = 0
    POP			uint public balance = 0
    POP			uint public balance = 0
    PUSH [tag26]		uint public balance = 0
    JUMP			uint public balance = 0
  tag25: 
    JUMPDEST		uint public balance = 0
    PUSH 40		uint public balance = 0
    MLOAD			uint public balance = 0
    DUP1			uint public balance = 0
    DUP3			uint public balance = 0
    DUP2			uint public balance = 0
    MSTORE			uint public balance = 0
    PUSH 20		uint public balance = 0
    ADD			uint public balance = 0
    SWAP2			uint public balance = 0
    POP			uint public balance = 0
    POP			uint public balance = 0
    PUSH 40		uint public balance = 0
    MLOAD			uint public balance = 0
    DUP1			uint public balance = 0
    SWAP2			uint public balance = 0
    SUB			uint public balance = 0
    SWAP1			uint public balance = 0
    RETURN			uint public balance = 0
  tag8: 
    JUMPDEST		function collectFees() onlyowner {...
    PUSH [tag27]		function collectFees() onlyowner {...
    PUSH 4		function collectFees() onlyowner {...
    DUP1			function collectFees() onlyowner {...
    POP			function collectFees() onlyowner {...
    POP			function collectFees() onlyowner {...
    PUSH [tag28]		function collectFees() onlyowner {...
    JUMP			function collectFees() onlyowner {...
  tag27: 
    JUMPDEST		function collectFees() onlyowner {...
    STOP			function collectFees() onlyowner {...
  tag9: 
    JUMPDEST		function enter() {...
    PUSH [tag29]		function enter() {...
    PUSH 4		function enter() {...
    DUP1			function enter() {...
    POP			function enter() {...
    POP			function enter() {...
    PUSH [tag14]		function enter() {...
    JUMP			function enter() {...
  tag29: 
    JUMPDEST		function enter() {...
    STOP			function enter() {...
  tag18: 
    JUMPDEST		Participant[] public participants
    PUSH 0		Participant[] public participants
    PUSH 0		Participant[] public participants
    POP			Participant[] public participants
    DUP2			Participant[] public participants
    DUP2			Participant[] public participants
    SLOAD			Participant[] public participants
    DUP2			Participant[] public participants
    LT			Participant[] public participants
    ISZERO			Participant[] public participants
    PUSH [ErrorTag]		Participant[] public participants
    JUMPI			Participant[] public participants
    SWAP1			Participant[] public participants
    PUSH 0		Participant[] public participants
    MSTORE			Participant[] public participants
    PUSH 20		Participant[] public participants
    PUSH 0		Participant[] public participants
    SHA3			Participant[] public participants
    SWAP1			Participant[] public participants
    PUSH 2		Participant[] public participants
    MUL			Participant[] public participants
    ADD			Participant[] public participants
    PUSH 0		Participant[] public participants
  tag30: 
    JUMPDEST		Participant[] public participants
    SWAP2			Participant[] public participants
    POP			Participant[] public participants
    SWAP1			Participant[] public participants
    POP			Participant[] public participants
    DUP1			Participant[] public participants
    PUSH 0		Participant[] public participants
    ADD			Participant[] public participants
    PUSH 0		Participant[] public participants
    SWAP1			Participant[] public participants
    SLOAD			Participant[] public participants
    SWAP1			Participant[] public participants
    PUSH 100		Participant[] public participants
    EXP			Participant[] public participants
    SWAP1			Participant[] public participants
    DIV			Participant[] public participants
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		Participant[] public participants
    AND			Participant[] public participants
    SWAP1			Participant[] public participants
    DUP1			Participant[] public participants
    PUSH 1		Participant[] public participants
    ADD			Participant[] public participants
    PUSH 0		Participant[] public participants
    POP			Participant[] public participants
    SLOAD			Participant[] public participants
    SWAP1			Participant[] public participants
    POP			Participant[] public participants
    DUP3			Participant[] public participants
    JUMP	[out]		Participant[] public participants
  tag24: 
    JUMPDEST		uint public payoutIdx = 0
    PUSH 1		uint public payoutIdx = 0
    PUSH 0		uint public payoutIdx = 0
    POP			uint public payoutIdx = 0
    SLOAD			uint public payoutIdx = 0
    DUP2			uint public payoutIdx = 0
    JUMP	[out]		uint public payoutIdx = 0
  tag22: 
    JUMPDEST		uint public collectedFees
    PUSH 2		uint public collectedFees
    PUSH 0		uint public collectedFees
    POP			uint public collectedFees
    SLOAD			uint public collectedFees
    DUP2			uint public collectedFees
    JUMP	[out]		uint public collectedFees
  tag26: 
    JUMPDEST		uint public balance = 0
    PUSH 3		uint public balance = 0
    PUSH 0		uint public balance = 0
    POP			uint public balance = 0
    SLOAD			uint public balance = 0
    DUP2			uint public balance = 0
    JUMP	[out]		uint public balance = 0
  tag20: 
    JUMPDEST		address public owner
    PUSH 4		address public owner
    PUSH 0		address public owner
    SWAP1			address public owner
    SLOAD			address public owner
    SWAP1			address public owner
    PUSH 100		address public owner
    EXP			address public owner
    SWAP1			address public owner
    DIV			address public owner
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		address public owner
    AND			address public owner
    DUP2			address public owner
    JUMP	[out]		address public owner
  tag14: 
    JUMPDEST		function enter() {...
    PUSH 0		uint idx
    PUSH 0		uint transactionAmount
    PUSH DE0B6B3A7640000		1 ether
    CALLVALUE			msg.value
    LT			msg.value < 1 ether
    ISZERO			if (msg.value < 1 ether) {...
    PUSH [tag32]		if (msg.value < 1 ether) {...
    JUMPI			if (msg.value < 1 ether) {...
    CALLER			msg.sender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		msg.sender.send
    AND			msg.sender.send
    PUSH 0		msg.sender.send(msg.value)
    CALLVALUE			msg.value
    PUSH 40		msg.sender.send(msg.value)
    MLOAD			msg.sender.send(msg.value)
    DUP1			msg.sender.send(msg.value)
    SWAP1			msg.sender.send(msg.value)
    POP			msg.sender.send(msg.value)
    PUSH 0		msg.sender.send(msg.value)
    PUSH 40		msg.sender.send(msg.value)
    MLOAD			msg.sender.send(msg.value)
    DUP1			msg.sender.send(msg.value)
    DUP4			msg.sender.send(msg.value)
    SUB			msg.sender.send(msg.value)
    DUP2			msg.sender.send(msg.value)
    DUP6			msg.sender.send(msg.value)
    DUP9			msg.sender.send(msg.value)
    DUP9			msg.sender.send(msg.value)
    CALL			msg.sender.send(msg.value)
    SWAP4			msg.sender.send(msg.value)
    POP			msg.sender.send(msg.value)
    POP			msg.sender.send(msg.value)
    POP			msg.sender.send(msg.value)
    POP			msg.sender.send(msg.value)
    POP			msg.sender.send(msg.value)
    PUSH [tag31]		return;
    JUMP			return;
  tag32: 
    JUMPDEST		if (msg.value < 1 ether) {...
    PUSH 0		participants
    PUSH 0		participants
    POP			participants
    DUP1			participants.length
    SLOAD			participants.length
    SWAP1			participants.length
    POP			participants.length
    SWAP2			uint idx = participants.length
    POP			uint idx = participants.length
    PUSH 1		1
    PUSH 0		participants
    PUSH 0		participants
    POP			participants
    DUP2			participants.length += 1
    DUP2			participants.length += 1
    DUP1			participants.length += 1
    SLOAD			participants.length += 1
    SWAP1			participants.length += 1
    POP			participants.length += 1
    ADD			participants.length += 1
    SWAP2			participants.length += 1
    POP			participants.length += 1
    DUP2			participants.length += 1
    DUP2			participants.length += 1
    SLOAD			participants.length += 1
    DUP2			participants.length += 1
    DUP4			participants.length += 1
    SSTORE			participants.length += 1
    DUP2			participants.length += 1
    DUP2			participants.length += 1
    ISZERO			participants.length += 1
    GT			participants.length += 1
    PUSH [tag33]		participants.length += 1
    JUMPI			participants.length += 1
    PUSH 2		participants.length += 1
    MUL			participants.length += 1
    DUP2			participants.length += 1
    PUSH 2		participants.length += 1
    MUL			participants.length += 1
    DUP4			participants.length += 1
    PUSH 0		participants.length += 1
    MSTORE			participants.length += 1
    PUSH 20		participants.length += 1
    PUSH 0		participants.length += 1
    SHA3			participants.length += 1
    SWAP2			participants.length += 1
    DUP3			participants.length += 1
    ADD			participants.length += 1
    SWAP2			participants.length += 1
    ADD			participants.length += 1
    PUSH [tag34]		participants.length += 1
    SWAP2			participants.length += 1
    SWAP1			participants.length += 1
    PUSH [tag35]		participants.length += 1
    JUMP			participants.length += 1
  tag35: 
    JUMPDEST		participants.length += 1
    DUP1			participants.length += 1
    DUP3			participants.length += 1
    GT			participants.length += 1
    ISZERO			participants.length += 1
    PUSH [tag36]		participants.length += 1
    JUMPI			participants.length += 1
    PUSH 0		participants.length += 1
    PUSH 0		participants.length += 1
    DUP3			participants.length += 1
    ADD			participants.length += 1
    PUSH 0		participants.length += 1
    PUSH 100		participants.length += 1
    EXP			participants.length += 1
    DUP2			participants.length += 1
    SLOAD			participants.length += 1
    SWAP1			participants.length += 1
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		participants.length += 1
    MUL			participants.length += 1
    NOT			participants.length += 1
    AND			participants.length += 1
    SWAP1			participants.length += 1
    SSTORE			participants.length += 1
    PUSH 1		participants.length += 1
    DUP3			participants.length += 1
    ADD			participants.length += 1
    PUSH 0		participants.length += 1
    POP			participants.length += 1
    PUSH 0		participants.length += 1
    SWAP1			participants.length += 1
    SSTORE			participants.length += 1
    POP			participants.length += 1
    PUSH 1		participants.length += 1
    ADD			participants.length += 1
    PUSH [tag35]		participants.length += 1
    JUMP			participants.length += 1
  tag36: 
    JUMPDEST		participants.length += 1
    POP			participants.length += 1
    SWAP1			participants.length += 1
    JUMP			participants.length += 1
  tag34: 
    JUMPDEST		participants.length += 1
  tag33: 
    JUMPDEST		participants.length += 1
    POP			participants.length += 1
    POP			participants.length += 1
    POP			participants.length += 1
    POP			participants.length += 1
    CALLER			msg.sender
    PUSH 0		participants
    PUSH 0		participants
    POP			participants
    DUP4			idx
    DUP2			participants[idx]
    SLOAD			participants[idx]
    DUP2			participants[idx]
    LT			participants[idx]
    ISZERO			participants[idx]
    PUSH [ErrorTag]		participants[idx]
    JUMPI			participants[idx]
    SWAP1			participants[idx]
    PUSH 0		participants[idx]
    MSTORE			participants[idx]
    PUSH 20		participants[idx]
    PUSH 0		participants[idx]
    SHA3			participants[idx]
    SWAP1			participants[idx]
    PUSH 2		participants[idx]
    MUL			participants[idx]
    ADD			participants[idx]
    PUSH 0		participants[idx]
  tag37: 
    JUMPDEST		participants[idx]
    POP			participants[idx]
    PUSH 0		participants[idx].etherAddress
    ADD			participants[idx].etherAddress
    PUSH 0		participants[idx].etherAddress
    PUSH 100		participants[idx].etherAddress = msg.sender
    EXP			participants[idx].etherAddress = msg.sender
    DUP2			participants[idx].etherAddress = msg.sender
    SLOAD			participants[idx].etherAddress = msg.sender
    DUP2			participants[idx].etherAddress = msg.sender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		participants[idx].etherAddress = msg.sender
    MUL			participants[idx].etherAddress = msg.sender
    NOT			participants[idx].etherAddress = msg.sender
    AND			participants[idx].etherAddress = msg.sender
    SWAP1			participants[idx].etherAddress = msg.sender
    DUP4			participants[idx].etherAddress = msg.sender
    MUL			participants[idx].etherAddress = msg.sender
    OR			participants[idx].etherAddress = msg.sender
    SWAP1			participants[idx].etherAddress = msg.sender
    SSTORE			participants[idx].etherAddress = msg.sender
    POP			participants[idx].etherAddress = msg.sender
    CALLVALUE			msg.value
    PUSH 0		participants
    PUSH 0		participants
    POP			participants
    DUP4			idx
    DUP2			participants[idx]
    SLOAD			participants[idx]
    DUP2			participants[idx]
    LT			participants[idx]
    ISZERO			participants[idx]
    PUSH [ErrorTag]		participants[idx]
    JUMPI			participants[idx]
    SWAP1			participants[idx]
    PUSH 0		participants[idx]
    MSTORE			participants[idx]
    PUSH 20		participants[idx]
    PUSH 0		participants[idx]
    SHA3			participants[idx]
    SWAP1			participants[idx]
    PUSH 2		participants[idx]
    MUL			participants[idx]
    ADD			participants[idx]
    PUSH 0		participants[idx]
  tag38: 
    JUMPDEST		participants[idx]
    POP			participants[idx]
    PUSH 1		participants[idx].amount
    ADD			participants[idx].amount
    PUSH 0		participants[idx].amount
    POP			participants[idx].amount = msg.value
    DUP2			participants[idx].amount = msg.value
    SWAP1			participants[idx].amount = msg.value
    SSTORE			participants[idx].amount = msg.value
    POP			participants[idx].amount = msg.value
    PUSH 0		0
    DUP3			idx
    EQ			idx != 0
    ISZERO			idx != 0
    ISZERO			if (idx != 0) {...
    PUSH [tag39]		if (idx != 0) {...
    JUMPI			if (idx != 0) {...
    PUSH A		10
    CALLVALUE			msg.value
    DIV			msg.value / 10
    PUSH 2		collectedFees
    PUSH 0		collectedFees
    DUP3			collectedFees += msg.value / 10
    DUP3			collectedFees += msg.value / 10
    DUP3			collectedFees += msg.value / 10
    POP			collectedFees += msg.value / 10
    SLOAD			collectedFees += msg.value / 10
    ADD			collectedFees += msg.value / 10
    SWAP3			collectedFees += msg.value / 10
    POP			collectedFees += msg.value / 10
    POP			collectedFees += msg.value / 10
    DUP2			collectedFees += msg.value / 10
    SWAP1			collectedFees += msg.value / 10
    SSTORE			collectedFees += msg.value / 10
    POP			collectedFees += msg.value / 10
    CALLVALUE			msg.value
    PUSH 3		balance
    PUSH 0		balance
    DUP3			balance += msg.value
    DUP3			balance += msg.value
    DUP3			balance += msg.value
    POP			balance += msg.value
    SLOAD			balance += msg.value
    ADD			balance += msg.value
    SWAP3			balance += msg.value
    POP			balance += msg.value
    POP			balance += msg.value
    DUP2			balance += msg.value
    SWAP1			balance += msg.value
    SSTORE			balance += msg.value
    POP			balance += msg.value
    PUSH [tag40]		if (idx != 0) {...
    JUMP			if (idx != 0) {...
  tag39: 
    JUMPDEST		if (idx != 0) {...
    CALLVALUE			msg.value
    PUSH 2		collectedFees
    PUSH 0		collectedFees
    DUP3			collectedFees += msg.value
    DUP3			collectedFees += msg.value
    DUP3			collectedFees += msg.value
    POP			collectedFees += msg.value
    SLOAD			collectedFees += msg.value
    ADD			collectedFees += msg.value
    SWAP3			collectedFees += msg.value
    POP			collectedFees += msg.value
    POP			collectedFees += msg.value
    DUP2			collectedFees += msg.value
    SWAP1			collectedFees += msg.value
    SSTORE			collectedFees += msg.value
    POP			collectedFees += msg.value
  tag40: 
    JUMPDEST		if (idx != 0) {...
    PUSH 2		2
    PUSH 0		participants
    PUSH 0		participants
    POP			participants
    PUSH 1		payoutIdx
    PUSH 0		payoutIdx
    POP			payoutIdx
    SLOAD			payoutIdx
    DUP2			participants[payoutIdx]
    SLOAD			participants[payoutIdx]
    DUP2			participants[payoutIdx]
    LT			participants[payoutIdx]
    ISZERO			participants[payoutIdx]
    PUSH [ErrorTag]		participants[payoutIdx]
    JUMPI			participants[payoutIdx]
    SWAP1			participants[payoutIdx]
    PUSH 0		participants[payoutIdx]
    MSTORE			participants[payoutIdx]
    PUSH 20		participants[payoutIdx]
    PUSH 0		participants[payoutIdx]
    SHA3			participants[payoutIdx]
    SWAP1			participants[payoutIdx]
    PUSH 2		participants[payoutIdx]
    MUL			participants[payoutIdx]
    ADD			participants[payoutIdx]
    PUSH 0		participants[payoutIdx]
  tag41: 
    JUMPDEST		participants[payoutIdx]
    POP			participants[payoutIdx]
    PUSH 1		participants[payoutIdx].amount
    ADD			participants[payoutIdx].amount
    PUSH 0		participants[payoutIdx].amount
    POP			participants[payoutIdx].amount
    SLOAD			participants[payoutIdx].amount
    MUL			participants[payoutIdx].amount * 2
    PUSH 3		balance
    PUSH 0		balance
    POP			balance
    SLOAD			balance
    GT			balance > participants[payoutIdx].amount * 2
    ISZERO			if (balance > participants[payoutIdx].amount * 2) {...
    PUSH [tag42]		if (balance > participants[payoutIdx].amount * 2) {...
    JUMPI			if (balance > participants[payoutIdx].amount * 2) {...
    PUSH A		10
    PUSH 0		participants
    PUSH 0		participants
    POP			participants
    PUSH 1		payoutIdx
    PUSH 0		payoutIdx
    POP			payoutIdx
    SLOAD			payoutIdx
    DUP2			participants[payoutIdx]
    SLOAD			participants[payoutIdx]
    DUP2			participants[payoutIdx]
    LT			participants[payoutIdx]
    ISZERO			participants[payoutIdx]
    PUSH [ErrorTag]		participants[payoutIdx]
    JUMPI			participants[payoutIdx]
    SWAP1			participants[payoutIdx]
    PUSH 0		participants[payoutIdx]
    MSTORE			participants[payoutIdx]
    PUSH 20		participants[payoutIdx]
    PUSH 0		participants[payoutIdx]
    SHA3			participants[payoutIdx]
    SWAP1			participants[payoutIdx]
    PUSH 2		participants[payoutIdx]
    MUL			participants[payoutIdx]
    ADD			participants[payoutIdx]
    PUSH 0		participants[payoutIdx]
  tag43: 
    JUMPDEST		participants[payoutIdx]
    POP			participants[payoutIdx]
    PUSH 1		participants[payoutIdx].amount
    ADD			participants[payoutIdx].amount
    PUSH 0		participants[payoutIdx].amount
    POP			participants[payoutIdx].amount
    SLOAD			participants[payoutIdx].amount
    DIV			participants[payoutIdx].amount / 10
    PUSH 0		participants
    PUSH 0		participants
    POP			participants
    PUSH 1		payoutIdx
    PUSH 0		payoutIdx
    POP			payoutIdx
    SLOAD			payoutIdx
    DUP2			participants[payoutIdx]
    SLOAD			participants[payoutIdx]
    DUP2			participants[payoutIdx]
    LT			participants[payoutIdx]
    ISZERO			participants[payoutIdx]
    PUSH [ErrorTag]		participants[payoutIdx]
    JUMPI			participants[payoutIdx]
    SWAP1			participants[payoutIdx]
    PUSH 0		participants[payoutIdx]
    MSTORE			participants[payoutIdx]
    PUSH 20		participants[payoutIdx]
    PUSH 0		participants[payoutIdx]
    SHA3			participants[payoutIdx]
    SWAP1			participants[payoutIdx]
    PUSH 2		participants[payoutIdx]
    MUL			participants[payoutIdx]
    ADD			participants[payoutIdx]
    PUSH 0		participants[payoutIdx]
  tag44: 
    JUMPDEST		participants[payoutIdx]
    POP			participants[payoutIdx]
    PUSH 1		participants[payoutIdx].amount
    ADD			participants[payoutIdx].amount
    PUSH 0		participants[payoutIdx].amount
    POP			participants[payoutIdx].amount
    SLOAD			participants[payoutIdx].amount
    SUB			participants[payoutIdx].amount - participants[payoutIdx].amount / 10
    PUSH 2		2
    MUL			2 * (participants[payoutIdx].amount - participants[payoutIdx].amount / 10)
    SWAP1			uint transactionAmount = 2 * (participants[payoutIdx].amount - participants[payoutIdx].amount / 10)
    POP			uint transactionAmount = 2 * (participants[payoutIdx].amount - participants[payoutIdx].amount / 10)
    PUSH 0		participants
    PUSH 0		participants
    POP			participants
    PUSH 1		payoutIdx
    PUSH 0		payoutIdx
    POP			payoutIdx
    SLOAD			payoutIdx
    DUP2			participants[payoutIdx]
    SLOAD			participants[payoutIdx]
    DUP2			participants[payoutIdx]
    LT			participants[payoutIdx]
    ISZERO			participants[payoutIdx]
    PUSH [ErrorTag]		participants[payoutIdx]
    JUMPI			participants[payoutIdx]
    SWAP1			participants[payoutIdx]
    PUSH 0		participants[payoutIdx]
    MSTORE			participants[payoutIdx]
    PUSH 20		participants[payoutIdx]
    PUSH 0		participants[payoutIdx]
    SHA3			participants[payoutIdx]
    SWAP1			participants[payoutIdx]
    PUSH 2		participants[payoutIdx]
    MUL			participants[payoutIdx]
    ADD			participants[payoutIdx]
    PUSH 0		participants[payoutIdx]
  tag45: 
    JUMPDEST		participants[payoutIdx]
    POP			participants[payoutIdx]
    PUSH 0		participants[payoutIdx].etherAddress
    ADD			participants[payoutIdx].etherAddress
    PUSH 0		participants[payoutIdx].etherAddress
    SWAP1			participants[payoutIdx].etherAddress
    SLOAD			participants[payoutIdx].etherAddress
    SWAP1			participants[payoutIdx].etherAddress
    PUSH 100		participants[payoutIdx].etherAddress
    EXP			participants[payoutIdx].etherAddress
    SWAP1			participants[payoutIdx].etherAddress
    DIV			participants[payoutIdx].etherAddress
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		participants[payoutIdx].etherAddress
    AND			participants[payoutIdx].etherAddress
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		participants[payoutIdx].etherAddress.send
    AND			participants[payoutIdx].etherAddress.send
    PUSH 0		participants[payoutIdx].etherAddress.send(transactionAmount)
    DUP3			transactionAmount
    PUSH 40		participants[payoutIdx].etherAddress.send(transactionAmount)
    MLOAD			participants[payoutIdx].etherAddress.send(transactionAmount)
    DUP1			participants[payoutIdx].etherAddress.send(transactionAmount)
    SWAP1			participants[payoutIdx].etherAddress.send(transactionAmount)
    POP			participants[payoutIdx].etherAddress.send(transactionAmount)
    PUSH 0		participants[payoutIdx].etherAddress.send(transactionAmount)
    PUSH 40		participants[payoutIdx].etherAddress.send(transactionAmount)
    MLOAD			participants[payoutIdx].etherAddress.send(transactionAmount)
    DUP1			participants[payoutIdx].etherAddress.send(transactionAmount)
    DUP4			participants[payoutIdx].etherAddress.send(transactionAmount)
    SUB			participants[payoutIdx].etherAddress.send(transactionAmount)
    DUP2			participants[payoutIdx].etherAddress.send(transactionAmount)
    DUP6			participants[payoutIdx].etherAddress.send(transactionAmount)
    DUP9			participants[payoutIdx].etherAddress.send(transactionAmount)
    DUP9			participants[payoutIdx].etherAddress.send(transactionAmount)
    CALL			participants[payoutIdx].etherAddress.send(transactionAmount)
    SWAP4			participants[payoutIdx].etherAddress.send(transactionAmount)
    POP			participants[payoutIdx].etherAddress.send(transactionAmount)
    POP			participants[payoutIdx].etherAddress.send(transactionAmount)
    POP			participants[payoutIdx].etherAddress.send(transactionAmount)
    POP			participants[payoutIdx].etherAddress.send(transactionAmount)
    POP			participants[payoutIdx].etherAddress.send(transactionAmount)
    PUSH 2		2
    PUSH 0		participants
    PUSH 0		participants
    POP			participants
    PUSH 1		payoutIdx
    PUSH 0		payoutIdx
    POP			payoutIdx
    SLOAD			payoutIdx
    DUP2			participants[payoutIdx]
    SLOAD			participants[payoutIdx]
    DUP2			participants[payoutIdx]
    LT			participants[payoutIdx]
    ISZERO			participants[payoutIdx]
    PUSH [ErrorTag]		participants[payoutIdx]
    JUMPI			participants[payoutIdx]
    SWAP1			participants[payoutIdx]
    PUSH 0		participants[payoutIdx]
    MSTORE			participants[payoutIdx]
    PUSH 20		participants[payoutIdx]
    PUSH 0		participants[payoutIdx]
    SHA3			participants[payoutIdx]
    SWAP1			participants[payoutIdx]
    PUSH 2		participants[payoutIdx]
    MUL			participants[payoutIdx]
    ADD			participants[payoutIdx]
    PUSH 0		participants[payoutIdx]
  tag46: 
    JUMPDEST		participants[payoutIdx]
    POP			participants[payoutIdx]
    PUSH 1		participants[payoutIdx].amount
    ADD			participants[payoutIdx].amount
    PUSH 0		participants[payoutIdx].amount
    POP			participants[payoutIdx].amount
    SLOAD			participants[payoutIdx].amount
    MUL			participants[payoutIdx].amount * 2
    PUSH 3		balance
    PUSH 0		balance
    DUP3			balance -= participants[payoutIdx].amount * 2
    DUP3			balance -= participants[payoutIdx].amount * 2
    DUP3			balance -= participants[payoutIdx].amount * 2
    POP			balance -= participants[payoutIdx].amount * 2
    SLOAD			balance -= participants[payoutIdx].amount * 2
    SUB			balance -= participants[payoutIdx].amount * 2
    SWAP3			balance -= participants[payoutIdx].amount * 2
    POP			balance -= participants[payoutIdx].amount * 2
    POP			balance -= participants[payoutIdx].amount * 2
    DUP2			balance -= participants[payoutIdx].amount * 2
    SWAP1			balance -= participants[payoutIdx].amount * 2
    SSTORE			balance -= participants[payoutIdx].amount * 2
    POP			balance -= participants[payoutIdx].amount * 2
    PUSH 1		1
    PUSH 1		payoutIdx
    PUSH 0		payoutIdx
    DUP3			payoutIdx += 1
    DUP3			payoutIdx += 1
    DUP3			payoutIdx += 1
    POP			payoutIdx += 1
    SLOAD			payoutIdx += 1
    ADD			payoutIdx += 1
    SWAP3			payoutIdx += 1
    POP			payoutIdx += 1
    POP			payoutIdx += 1
    DUP2			payoutIdx += 1
    SWAP1			payoutIdx += 1
    SSTORE			payoutIdx += 1
    POP			payoutIdx += 1
  tag42: 
    JUMPDEST		if (balance > participants[payoutIdx].amount * 2) {...
  tag31: 
    JUMPDEST		function enter() {...
    POP			function enter() {...
    POP			function enter() {...
    JUMP	[out]		function enter() {...
  tag28: 
    JUMPDEST		function collectFees() onlyowner {...
    PUSH 4		owner
    PUSH 0		owner
    SWAP1			owner
    SLOAD			owner
    SWAP1			owner
    PUSH 100		owner
    EXP			owner
    SWAP1			owner
    DIV			owner
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		owner
    AND			owner
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		msg.sender == owner
    AND			msg.sender == owner
    CALLER			msg.sender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		msg.sender == owner
    AND			msg.sender == owner
    EQ			msg.sender == owner
    ISZERO			if (msg.sender == owner) _
    PUSH [tag48]		if (msg.sender == owner) _
    JUMPI			if (msg.sender == owner) _
    PUSH 0		0
    PUSH 2		collectedFees
    PUSH 0		collectedFees
    POP			collectedFees
    SLOAD			collectedFees
    EQ			collectedFees == 0
    ISZERO			if (collectedFees == 0) return;
    PUSH [tag49]		if (collectedFees == 0) return;
    JUMPI			if (collectedFees == 0) return;
    PUSH [tag47]		return;
    JUMP			return;
  tag49: 
    JUMPDEST		if (collectedFees == 0) return;
    PUSH 4		owner
    PUSH 0		owner
    SWAP1			owner
    SLOAD			owner
    SWAP1			owner
    PUSH 100		owner
    EXP			owner
    SWAP1			owner
    DIV			owner
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		owner
    AND			owner
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		owner.send
    AND			owner.send
    PUSH 0		owner.send(collectedFees)
    PUSH 2		collectedFees
    PUSH 0		collectedFees
    POP			collectedFees
    SLOAD			collectedFees
    PUSH 40		owner.send(collectedFees)
    MLOAD			owner.send(collectedFees)
    DUP1			owner.send(collectedFees)
    SWAP1			owner.send(collectedFees)
    POP			owner.send(collectedFees)
    PUSH 0		owner.send(collectedFees)
    PUSH 40		owner.send(collectedFees)
    MLOAD			owner.send(collectedFees)
    DUP1			owner.send(collectedFees)
    DUP4			owner.send(collectedFees)
    SUB			owner.send(collectedFees)
    DUP2			owner.send(collectedFees)
    DUP6			owner.send(collectedFees)
    DUP9			owner.send(collectedFees)
    DUP9			owner.send(collectedFees)
    CALL			owner.send(collectedFees)
    SWAP4			owner.send(collectedFees)
    POP			owner.send(collectedFees)
    POP			owner.send(collectedFees)
    POP			owner.send(collectedFees)
    POP			owner.send(collectedFees)
    POP			owner.send(collectedFees)
    PUSH 0		0
    PUSH 2		collectedFees
    PUSH 0		collectedFees
    POP			collectedFees = 0
    DUP2			collectedFees = 0
    SWAP1			collectedFees = 0
    SSTORE			collectedFees = 0
    POP			collectedFees = 0
  tag48: 
    JUMPDEST		if (msg.sender == owner) _
  tag47: 
    JUMPDEST		function collectFees() onlyowner {...
    JUMP	[out]		function collectFees() onlyowner {...
  tag16: 
    JUMPDEST		function setOwner(address _owner) onlyowner {...
    PUSH 4		owner
    PUSH 0		owner
    SWAP1			owner
    SLOAD			owner
    SWAP1			owner
    PUSH 100		owner
    EXP			owner
    SWAP1			owner
    DIV			owner
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		owner
    AND			owner
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		msg.sender == owner
    AND			msg.sender == owner
    CALLER			msg.sender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		msg.sender == owner
    AND			msg.sender == owner
    EQ			msg.sender == owner
    ISZERO			if (msg.sender == owner) _
    PUSH [tag51]		if (msg.sender == owner) _
    JUMPI			if (msg.sender == owner) _
    DUP1			_owner
    PUSH 4		owner
    PUSH 0		owner
    PUSH 100		owner = _owner
    EXP			owner = _owner
    DUP2			owner = _owner
    SLOAD			owner = _owner
    DUP2			owner = _owner
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		owner = _owner
    MUL			owner = _owner
    NOT			owner = _owner
    AND			owner = _owner
    SWAP1			owner = _owner
    DUP4			owner = _owner
    MUL			owner = _owner
    OR			owner = _owner
    SWAP1			owner = _owner
    SSTORE			owner = _owner
    POP			owner = _owner
  tag51: 
    JUMPDEST		if (msg.sender == owner) _
  tag50: 
    JUMPDEST		function setOwner(address _owner) onlyowner {...
    POP			function setOwner(address _owner) onlyowner {...
    JUMP	[out]		function setOwner(address _owner) onlyowner {...
