.code:
  PUSH 60		contract Puzzle{...
  PUSH 40		contract Puzzle{...
  MSTORE			contract Puzzle{...
  PUSH 0		owner
  DUP1			owner = msg.sender
  SLOAD			owner = msg.sender
  PUSH A0		
  PUSH 2		
  EXP			
  PUSH FF		
  MUL			
  NOT			
  PUSH 1		
  PUSH A0		
  PUSH 2		
  EXP			
  SUB			
  NOT			
  SWAP1			owner = msg.sender
  SWAP2			owner = msg.sender
  AND			owner = msg.sender
  CALLER			msg.sender
  OR			owner = msg.sender
  AND			locked = false
  DUP2			locked = false
  SSTORE			locked = false
  PUSH 1		owner = msg.sender
  SSTORE			reward = 0
  PUSH 2B67		11111
  PUSH 2		diff
  SSTORE			diff = bytes32(11111)
  PUSH #[$00000000…00000000]		contract Puzzle{...
  DUP1			contract Puzzle{...
  PUSH [$00000000…00000000]		contract Puzzle{...
  PUSH 0		contract Puzzle{...
  CODECOPY			contract Puzzle{...
  PUSH 0		contract Puzzle{...
  RETURN			contract Puzzle{...
.data:
  0: 
  .code:
    PUSH 60		contract Puzzle{...
    PUSH 40		contract Puzzle{...
    MSTORE			contract Puzzle{...
    CALLDATASIZE			contract Puzzle{...
    ISZERO			contract Puzzle{...
    PUSH [tag1]		contract Puzzle{...
    JUMPI			contract Puzzle{...
    PUSH E0		
    PUSH 2		
    EXP			
    PUSH 0		contract Puzzle{...
    CALLDATALOAD			contract Puzzle{...
    DIV			contract Puzzle{...
    PUSH 228CB733		contract Puzzle{...
    DUP2			contract Puzzle{...
    EQ			contract Puzzle{...
    PUSH [tag2]		contract Puzzle{...
    JUMPI			contract Puzzle{...
    DUP1			contract Puzzle{...
    PUSH 41C0E1B5		contract Puzzle{...
    EQ			contract Puzzle{...
    PUSH [tag3]		contract Puzzle{...
    JUMPI			contract Puzzle{...
    DUP1			contract Puzzle{...
    PUSH 4FB60251		contract Puzzle{...
    EQ			contract Puzzle{...
    PUSH [tag4]		contract Puzzle{...
    JUMPI			contract Puzzle{...
    DUP1			contract Puzzle{...
    PUSH 8DA5CB5B		contract Puzzle{...
    EQ			contract Puzzle{...
    PUSH [tag5]		contract Puzzle{...
    JUMPI			contract Puzzle{...
    DUP1			contract Puzzle{...
    PUSH A0D7AFB7		contract Puzzle{...
    EQ			contract Puzzle{...
    PUSH [tag6]		contract Puzzle{...
    JUMPI			contract Puzzle{...
    DUP1			contract Puzzle{...
    PUSH CF309012		contract Puzzle{...
    EQ			contract Puzzle{...
    PUSH [tag7]		contract Puzzle{...
    JUMPI			contract Puzzle{...
  tag1: 
    JUMPDEST		contract Puzzle{...
    PUSH [tag8]		contract Puzzle{...
    PUSH 0		contract Puzzle{...
    SLOAD			owner
    CALLER			msg.sender
    PUSH 1		
    PUSH A0		
    PUSH 2		
    EXP			
    SUB			
    SWAP1			msg.sender == owner
    DUP2			msg.sender == owner
    AND			msg.sender == owner
    SWAP2			owner
    AND			owner
    EQ			msg.sender == owner
    ISZERO			if (msg.sender == owner) //update reward...
    PUSH [tag11]		if (msg.sender == owner) //update reward...
    JUMPI			if (msg.sender == owner) //update reward...
    PUSH 0		contract Puzzle{...
    SLOAD			owner
    PUSH A0		
    PUSH 2		
    EXP			
    SWAP1			locked
    DIV			locked
    PUSH FF		locked
    AND			locked
    ISZERO			if (locked)...
    PUSH [tag12]		if (locked)...
    JUMPI			if (locked)...
    PUSH [ErrorTag]		throw
    JUMP			throw
  tag2: 
    JUMPDEST		uint public reward
    PUSH [tag24]		bool public locked
    PUSH 1		owner
    SLOAD			reward
    DUP2			bool public locked
    JUMP	[out]		uint public reward
  tag3: 
    JUMPDEST		function kill() onlyowner...
    PUSH [tag8]		contract Puzzle{...
    PUSH 0		contract Puzzle{...
    SLOAD			owner
    CALLER			msg.sender
    PUSH 1		
    PUSH A0		
    PUSH 2		
    EXP			
    SUB			
    SWAP1			msg.sender == owner
    DUP2			msg.sender == owner
    AND			msg.sender == owner
    SWAP2			owner
    AND			owner
    EQ			msg.sender == owner
    ISZERO			if (msg.sender == owner) //update reward...
    PUSH [tag16]		if (msg.sender == owner) //update reward...
    JUMPI			if (msg.sender == owner) _
    PUSH 0		contract Puzzle{...
    SLOAD			owner
    PUSH 1		
    PUSH A0		
    PUSH 2		
    EXP			
    SUB			
    AND			owner
    SUICIDE			suicide(owner)
  tag4: 
    JUMPDEST		bytes public solution
    PUSH [tag28]		bytes public solution
    PUSH 3		solution
    DUP1			solution = msg.data
    SLOAD			solution = msg.data
    PUSH 20		sha256(msg.data)
    PUSH 1F		solution = msg.data
    PUSH 2		diff
    PUSH 0		
    NOT			
    PUSH 1		owner
    DUP6			solution = msg.data
    AND			solution = msg.data
    ISZERO			solution = msg.data
    PUSH 100		owner
    MUL			solution = msg.data
    ADD			solution = msg.data
    SWAP1			solution = msg.data
    SWAP4			solution = msg.data
    AND			solution = msg.data
    SWAP3			solution = msg.data
    SWAP1			solution = msg.data
    SWAP3			solution = msg.data
    DIV			solution = msg.data
    SWAP2			solution = msg.data
    DUP3			solution = msg.data
    ADD			solution = msg.data
    DUP2			solution = msg.data
    SWAP1			solution = msg.data
    DIV			solution = msg.data
    MUL			bytes public solution
    PUSH 80		uint public reward
    SWAP1			bytes public solution
    DUP2			bytes public solution
    ADD			bytes public solution
    PUSH 40		contract Puzzle{...
    MSTORE			bytes public solution
    PUSH 60		contract Puzzle{...
    DUP3			bytes public solution
    DUP2			bytes public solution
    MSTORE			bytes public solution
    SWAP3			contract Puzzle{...
    SWAP2			solution
    SWAP1			solution = msg.data
    DUP3			solution
    DUP3			solution = msg.data
    DUP1			bytes public solution
    ISZERO			bytes public solution
    PUSH [tag37]		bytes public solution
    JUMPI			bytes public solution
    DUP1			bytes public solution
    PUSH 1F		bytes public solution
    LT			bytes public solution
    PUSH [tag38]		bytes public solution
    JUMPI			bytes public solution
    PUSH 100		bytes public solution
    DUP1			bytes public solution
    DUP4			bytes public solution
    SLOAD			bytes public solution
    DIV			bytes public solution
    MUL			bytes public solution
    DUP4			bytes public solution
    MSTORE			bytes public solution
    SWAP2			bytes public solution
    PUSH 20		bytes public solution
    ADD			bytes public solution
    SWAP2			bytes public solution
    PUSH [tag37]		bytes public solution
    JUMP			bytes public solution
  tag5: 
    JUMPDEST		address public owner
    PUSH [tag24]		address public owner
    PUSH 0		contract Puzzle{...
    SLOAD			owner
    PUSH 1		
    PUSH A0		
    PUSH 2		
    EXP			
    SUB			
    AND			owner
    DUP2			address public owner
    JUMP	[out]		address public owner
  tag6: 
    JUMPDEST		bytes32 public diff
    PUSH [tag24]		bool public locked
    PUSH 2		diff
    SLOAD			diff
    DUP2			bool public locked
    JUMP	[out]		bytes32 public diff
  tag7: 
    JUMPDEST		bool public locked
    PUSH [tag24]		bool public locked
    PUSH 0		contract Puzzle{...
    SLOAD			owner
    PUSH FF		locked
    PUSH A0		
    PUSH 2		
    EXP			
    SWAP1			locked
    SWAP2			locked
    DIV			locked
    AND			locked
    DUP2			bool public locked
    JUMP	[out]		bool public locked
  tag8: 
    JUMPDEST		contract Puzzle{...
    STOP			contract Puzzle{...
  tag11: 
    JUMPDEST		if (msg.sender == owner) //update reward...
    PUSH 0		contract Puzzle{...
    CALLDATASIZE			contract Puzzle{...
    GT			msg.data.length > 0
    ISZERO			if (msg.data.length > 0) //submit a solution...
    PUSH [tag16]		if (msg.sender == owner) //update reward...
    JUMPI			if (msg.data.length > 0) //submit a solution...
    PUSH 0		contract Puzzle{...
    SLOAD			owner
    PUSH A0		
    PUSH 2		
    EXP			
    SWAP1			locked
    DIV			locked
    PUSH FF		locked
    AND			locked
    ISZERO			if (locked)...
    PUSH [tag15]		if (locked)...
    JUMPI			if (locked)...
    PUSH [ErrorTag]		throw
    JUMP			throw
  tag12: 
    JUMPDEST		if (locked)...
    PUSH 0		contract Puzzle{...
    DUP1			owner
    SLOAD			owner
    PUSH 1		owner
    SLOAD			reward
    PUSH 1		
    PUSH A0		
    PUSH 2		
    EXP			
    SUB			
    SWAP1			owner
    SWAP2			owner
    AND			owner
    SWAP2			owner
    SWAP1			contract Puzzle{...
    PUSH 60		contract Puzzle{...
    DUP3			contract Puzzle{...
    DUP2			contract Puzzle{...
    DUP2			contract Puzzle{...
    DUP2			contract Puzzle{...
    DUP6			reward
    DUP9			owner
    DUP4			contract Puzzle{...
    CALL			owner.send(reward)
    POP			
    POP			
    CALLVALUE			msg.value
    PUSH 1		owner
    SSTORE			reward = msg.value
    POP			
    PUSH [tag16]		if (msg.sender == owner) //update reward...
    SWAP2			if (msg.sender == owner) //update reward...
    POP			
    POP			
    JUMP			if (msg.sender == owner) //update reward...
  tag15: 
    JUMPDEST		if (locked)...
    PUSH 2		diff
    DUP1			diff
    SLOAD			diff
    SWAP1			diff
    PUSH 0		contract Puzzle{...
    CALLDATASIZE			contract Puzzle{...
    PUSH 60		contract Puzzle{...
    DUP1			contract Puzzle{...
    DUP4			contract Puzzle{...
    DUP4			contract Puzzle{...
    DUP1			contract Puzzle{...
    DUP3			contract Puzzle{...
    DUP5			contract Puzzle{...
    CALLDATACOPY			sha256(msg.data)
    DUP3			sha256(msg.data)
    ADD			sha256(msg.data)
    SWAP2			sha256(msg.data)
    POP			sha256(msg.data)
    POP			sha256(msg.data)
    SWAP3			sha256(msg.data)
    POP			sha256(msg.data)
    POP			sha256(msg.data)
    POP			sha256(msg.data)
    PUSH 20		sha256(msg.data)
    PUSH 40		sha256(msg.data)
    MLOAD			sha256(msg.data)
    DUP1			sha256(msg.data)
    DUP4			sha256(msg.data)
    SUB			sha256(msg.data)
    DUP2			sha256(msg.data)
    PUSH 0		sha256(msg.data)
    DUP7			sha256(msg.data)
    PUSH 61DA		sha256(msg.data)
    GAS			sha256(msg.data)
    SUB			sha256(msg.data)
    CALL			sha256(msg.data)
    ISZERO			sha256(msg.data)
    PUSH [ErrorTag]		sha256(msg.data)
    JUMPI			sha256(msg.data)
    POP			
    POP			
    PUSH 40		contract Puzzle{...
    MLOAD			sha256(msg.data)
    MLOAD			sha256(msg.data)
    LT			sha256(msg.data) < diff
    ISZERO			if (sha256(msg.data) < diff)...
    PUSH [tag16]		if (msg.sender == owner) //update reward...
    JUMPI			if (sha256(msg.data) < diff)...
    PUSH 1		owner
    SLOAD			reward
    PUSH 40		contract Puzzle{...
    MLOAD			sha256(msg.data)
    CALLER			msg.sender
    PUSH 1		
    PUSH A0		
    PUSH 2		
    EXP			
    SUB			
    AND			msg.sender == owner
    SWAP2			msg.sender == owner
    PUSH 0		contract Puzzle{...
    SWAP2			contract Puzzle{...
    DUP3			contract Puzzle{...
    DUP2			sha256(msg.data)
    DUP2			contract Puzzle{...
    DUP2			sha256(msg.data)
    DUP6			reward
    DUP9			msg.sender == owner
    DUP4			contract Puzzle{...
    CALL			msg.sender.send(reward)
    POP			
    POP			
    PUSH 3		solution
    DUP1			solution = msg.data
    SLOAD			solution = msg.data
    DUP2			solution = msg.data
    DUP5			solution = msg.data
    MSTORE			solution = msg.data
    SWAP1			solution
    SWAP4			solution
    POP			
    PUSH 20		sha256(msg.data)
    PUSH 1F		solution = msg.data
    PUSH 2		diff
    PUSH 0		
    NOT			
    PUSH 1		owner
    DUP6			solution = msg.data
    AND			solution = msg.data
    ISZERO			solution = msg.data
    PUSH 100		owner
    MUL			solution = msg.data
    ADD			solution = msg.data
    SWAP1			solution = msg.data
    SWAP4			solution = msg.data
    AND			solution = msg.data
    SWAP3			solution = msg.data
    SWAP1			solution = msg.data
    SWAP3			solution = msg.data
    DIV			solution = msg.data
    DUP3			solution = msg.data
    ADD			solution = msg.data
    DIV			solution = msg.data
    PUSH C2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B		solution = msg.data
    SWAP1			solution = msg.data
    DUP2			solution = msg.data
    ADD			solution = msg.data
    SWAP4			solution = msg.data
    CALLDATASIZE			contract Puzzle{...
    SWAP4			contract Puzzle{...
    POP			
    SWAP1			solution = msg.data
    SWAP2			solution = msg.data
    DUP4			solution = msg.data
    SWAP1			solution = msg.data
    LT			solution = msg.data
    PUSH [tag18]		solution = msg.data
    JUMPI			solution = msg.data
    DUP3			solution = msg.data
    DUP1			solution = msg.data
    ADD			solution = msg.data
    PUSH FF		
    NOT			
    DUP3			contract Puzzle{...
    CALLDATALOAD			contract Puzzle{...
    AND			solution = msg.data
    OR			solution = msg.data
    DUP6			solution = msg.data
    SSTORE			solution = msg.data
  tag20: 
    JUMPDEST		solution = msg.data
    POP			
    PUSH [tag21]		solution = msg.data
    SWAP3			solution = msg.data
    SWAP2			solution = msg.data
    POP			
  tag22: 
    JUMPDEST		solution = msg.data
    DUP1			solution = msg.data
    DUP3			solution = msg.data
    GT			solution = msg.data
    ISZERO			solution = msg.data
    PUSH [tag23]		solution = msg.data
    JUMPI			solution = msg.data
    PUSH 0		contract Puzzle{...
    DUP2			solution = msg.data
    SSTORE			solution = msg.data
    PUSH 1		owner
    ADD			solution = msg.data
    PUSH [tag22]		solution = msg.data
    JUMP			solution = msg.data
  tag21: 
    JUMPDEST		solution = msg.data
    POP			
    POP			
    PUSH 0		contract Puzzle{...
    DUP1			locked = true
    SLOAD			locked = true
    PUSH FF0000000000000000000000000000000000000000		
    NOT			
    AND			locked = true
    PUSH A0		
    PUSH 2		
    EXP			
    OR			locked = true
    SWAP1			locked = true
    SSTORE			locked = true
  tag16: 
    JUMPDEST		if (sha256(msg.data) < diff)...
    JUMP	[out]		function()...
  tag18: 
    JUMPDEST		solution = msg.data
    DUP3			solution = msg.data
    DUP1			solution = msg.data
    ADD			solution = msg.data
    PUSH 1		solution = msg.data
    ADD			solution = msg.data
    DUP6			solution = msg.data
    SSTORE			solution = msg.data
    DUP3			solution = msg.data
    ISZERO			solution = msg.data
    PUSH [tag20]		solution = msg.data
    JUMPI			solution = msg.data
    SWAP2			contract Puzzle{...
  tag19: 
    JUMPDEST		solution = msg.data
    DUP3			solution = msg.data
    DUP2			solution = msg.data
    GT			solution = msg.data
    ISZERO			solution = msg.data
    PUSH [tag20]		solution = msg.data
    JUMPI			solution = msg.data
    DUP3			solution = msg.data
    CALLDATALOAD			solution = msg.data
    DUP3			solution = msg.data
    PUSH 0		solution = msg.data
    POP			solution = msg.data
    SSTORE			solution = msg.data
    SWAP2			solution = msg.data
    PUSH 20		solution = msg.data
    ADD			solution = msg.data
    SWAP2			solution = msg.data
    SWAP1			solution = msg.data
    PUSH 1		solution = msg.data
    ADD			solution = msg.data
    SWAP1			solution = msg.data
    PUSH [tag19]		solution = msg.data
    JUMP			solution = msg.data
  tag23: 
    JUMPDEST		solution = msg.data
    POP			solution = msg.data
    SWAP1			solution = msg.data
    JUMP			solution = msg.data
  tag24: 
    JUMPDEST		uint public reward
    PUSH 60		contract Puzzle{...
    SWAP1			uint public reward
    DUP2			uint public reward
    MSTORE			uint public reward
    PUSH 20		sha256(msg.data)
    SWAP1			sha256(msg.data)
    RETURN			uint public reward
  tag28: 
    JUMPDEST		bytes public solution
    PUSH 40		bytes public solution
    MLOAD			bytes public solution
    DUP1			bytes public solution
    DUP1			bytes public solution
    PUSH 20		bytes public solution
    ADD			bytes public solution
    DUP3			bytes public solution
    DUP2			bytes public solution
    SUB			bytes public solution
    DUP3			bytes public solution
    MSTORE			bytes public solution
    DUP4			bytes public solution
    DUP2			bytes public solution
    DUP2			bytes public solution
    MLOAD			bytes public solution
    DUP2			bytes public solution
    MSTORE			bytes public solution
    PUSH 20		bytes public solution
    ADD			bytes public solution
    SWAP2			bytes public solution
    POP			bytes public solution
    DUP1			bytes public solution
    MLOAD			bytes public solution
    SWAP1			bytes public solution
    PUSH 20		bytes public solution
    ADD			bytes public solution
    SWAP1			bytes public solution
    DUP1			bytes public solution
    DUP4			bytes public solution
    DUP4			bytes public solution
    DUP3			bytes public solution
    SWAP1			bytes public solution
    PUSH 0		bytes public solution
    PUSH 4		bytes public solution
    PUSH 20		bytes public solution
    DUP5			bytes public solution
    PUSH 1F		bytes public solution
    ADD			bytes public solution
    DIV			bytes public solution
    PUSH F		bytes public solution
    MUL			bytes public solution
    PUSH 3		bytes public solution
    ADD			bytes public solution
    CALL			bytes public solution
    POP			bytes public solution
    SWAP1			bytes public solution
    POP			bytes public solution
    SWAP1			bytes public solution
    DUP2			bytes public solution
    ADD			bytes public solution
    SWAP1			bytes public solution
    PUSH 1F		bytes public solution
    AND			bytes public solution
    DUP1			bytes public solution
    ISZERO			bytes public solution
    PUSH [tag30]		bytes public solution
    JUMPI			bytes public solution
    DUP1			bytes public solution
    DUP3			bytes public solution
    SUB			bytes public solution
    DUP1			bytes public solution
    MLOAD			bytes public solution
    PUSH 1		bytes public solution
    DUP4			bytes public solution
    PUSH 20		bytes public solution
    SUB			bytes public solution
    PUSH 100		bytes public solution
    EXP			bytes public solution
    SUB			bytes public solution
    NOT			bytes public solution
    AND			bytes public solution
    DUP2			bytes public solution
    MSTORE			bytes public solution
    PUSH 20		bytes public solution
    ADD			bytes public solution
    SWAP2			bytes public solution
    POP			bytes public solution
  tag30: 
    JUMPDEST		bytes public solution
    POP			bytes public solution
    SWAP3			bytes public solution
    POP			bytes public solution
    POP			bytes public solution
    POP			bytes public solution
    PUSH 40		bytes public solution
    MLOAD			bytes public solution
    DUP1			bytes public solution
    SWAP2			bytes public solution
    SUB			bytes public solution
    SWAP1			bytes public solution
    RETURN			bytes public solution
  tag38: 
    JUMPDEST		bytes public solution
    DUP3			bytes public solution
    ADD			bytes public solution
    SWAP2			bytes public solution
    SWAP1			bytes public solution
    PUSH 0		bytes public solution
    MSTORE			bytes public solution
    PUSH 20		bytes public solution
    PUSH 0		bytes public solution
    SHA3			bytes public solution
    SWAP1			bytes public solution
  tag39: 
    JUMPDEST		bytes public solution
    DUP2			bytes public solution
    SLOAD			bytes public solution
    DUP2			bytes public solution
    MSTORE			bytes public solution
    SWAP1			bytes public solution
    PUSH 1		bytes public solution
    ADD			bytes public solution
    SWAP1			bytes public solution
    PUSH 20		bytes public solution
    ADD			bytes public solution
    DUP1			bytes public solution
    DUP4			bytes public solution
    GT			bytes public solution
    PUSH [tag39]		bytes public solution
    JUMPI			bytes public solution
    DUP3			bytes public solution
    SWAP1			bytes public solution
    SUB			bytes public solution
    PUSH 1F		bytes public solution
    AND			bytes public solution
    DUP3			bytes public solution
    ADD			bytes public solution
    SWAP2			bytes public solution
  tag37: 
    JUMPDEST		bytes public solution
    POP			bytes public solution
    POP			bytes public solution
    POP			bytes public solution
    POP			bytes public solution
    POP			bytes public solution
    DUP2			bytes public solution
    JUMP	[out]		bytes public solution
