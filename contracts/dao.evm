
======= DAO =======
EVM assembly:
.code:
  PUSH 60		contract DAO is DAOInterface, Token, TokenCreation {...
  PUSH 40		contract DAO is DAOInterface, Token, TokenCreation {...
  MSTORE			contract DAO is DAOInterface, Token, TokenCreation {...
  PUSH 40		function DAO(...
  MLOAD			function DAO(...
  PUSH C0		function DAO(...
  DUP1			function DAO(...
  PUSHSIZE		function DAO(...
  DUP4			function DAO(...
  CODECOPY			function DAO(...
  DUP2			function DAO(...
  ADD			function DAO(...
  PUSH 40		function DAO(...
  MSTORE			function DAO(...
  DUP1			function DAO(...
  DUP1			function DAO(...
  MLOAD			function DAO(...
  SWAP1			function DAO(...
  PUSH 20		function DAO(...
  ADD			function DAO(...
  SWAP1			function DAO(...
  SWAP2			function DAO(...
  SWAP1			function DAO(...
  DUP1			function DAO(...
  MLOAD			function DAO(...
  SWAP1			function DAO(...
  PUSH 20		function DAO(...
  ADD			function DAO(...
  SWAP1			function DAO(...
  SWAP2			function DAO(...
  SWAP1			function DAO(...
  DUP1			function DAO(...
  MLOAD			function DAO(...
  SWAP1			function DAO(...
  PUSH 20		function DAO(...
  ADD			function DAO(...
  SWAP1			function DAO(...
  SWAP2			function DAO(...
  SWAP1			function DAO(...
  DUP1			function DAO(...
  MLOAD			function DAO(...
  SWAP1			function DAO(...
  PUSH 20		function DAO(...
  ADD			function DAO(...
  SWAP1			function DAO(...
  SWAP2			function DAO(...
  SWAP1			function DAO(...
  DUP1			function DAO(...
  MLOAD			function DAO(...
  SWAP1			function DAO(...
  PUSH 20		function DAO(...
  ADD			function DAO(...
  SWAP1			function DAO(...
  SWAP2			function DAO(...
  SWAP1			function DAO(...
  DUP1			function DAO(...
  MLOAD			function DAO(...
  SWAP1			function DAO(...
  PUSH 20		function DAO(...
  ADD			function DAO(...
  SWAP1			function DAO(...
  SWAP2			function DAO(...
  SWAP1			function DAO(...
  POP			function DAO(...
  POP			function DAO(...
tag1: 
  JUMPDEST		function DAO(...
  DUP3			_minTokensToCreate
  DUP3			_closingTime
  DUP3			_privateCreation
tag2: 
  JUMPDEST		function TokenCreation(...
  DUP2			_closingTime
  PUSH F		closingTime
  PUSH 0		closingTime
  POP			closingTime = _closingTime
  DUP2			closingTime = _closingTime
  SWAP1			closingTime = _closingTime
  SSTORE			closingTime = _closingTime
  POP			closingTime = _closingTime
  DUP3			_minTokensToCreate
  PUSH 10		minTokensToCreate
  PUSH 0		minTokensToCreate
  POP			minTokensToCreate = _minTokensToCreate
  DUP2			minTokensToCreate = _minTokensToCreate
  SWAP1			minTokensToCreate = _minTokensToCreate
  SSTORE			minTokensToCreate = _minTokensToCreate
  POP			minTokensToCreate = _minTokensToCreate
  DUP1			_privateCreation
  PUSH 11		privateCreation
  PUSH 1		privateCreation
  PUSH 100		privateCreation = _privateCreation
  EXP			privateCreation = _privateCreation
  DUP2			privateCreation = _privateCreation
  SLOAD			privateCreation = _privateCreation
  DUP2			privateCreation = _privateCreation
  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		privateCreation = _privateCreation
  MUL			privateCreation = _privateCreation
  NOT			privateCreation = _privateCreation
  AND			privateCreation = _privateCreation
  SWAP1			privateCreation = _privateCreation
  DUP4			privateCreation = _privateCreation
  MUL			privateCreation = _privateCreation
  OR			privateCreation = _privateCreation
  SWAP1			privateCreation = _privateCreation
  SSTORE			privateCreation = _privateCreation
  POP			privateCreation = _privateCreation
  ADDRESS			this
  PUSH 1		true
  PUSH 40		new ManagedAccount(address(this), true)
  MLOAD			new ManagedAccount(address(this), true)
  PUSH #[$00000000…00000000]		new ManagedAccount(address(this), true)
  DUP1			new ManagedAccount(address(this), true)
  PUSH [$00000000…00000000]		new ManagedAccount(address(this), true)
  DUP4			new ManagedAccount(address(this), true)
  CODECOPY			new ManagedAccount(address(this), true)
  ADD			new ManagedAccount(address(this), true)
  DUP1			new ManagedAccount(address(this), true)
  DUP4			new ManagedAccount(address(this), true)
  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		new ManagedAccount(address(this), true)
  AND			new ManagedAccount(address(this), true)
  DUP2			new ManagedAccount(address(this), true)
  MSTORE			new ManagedAccount(address(this), true)
  PUSH 20		new ManagedAccount(address(this), true)
  ADD			new ManagedAccount(address(this), true)
  DUP3			new ManagedAccount(address(this), true)
  DUP2			new ManagedAccount(address(this), true)
  MSTORE			new ManagedAccount(address(this), true)
  PUSH 20		new ManagedAccount(address(this), true)
  ADD			new ManagedAccount(address(this), true)
  SWAP3			new ManagedAccount(address(this), true)
  POP			new ManagedAccount(address(this), true)
  POP			new ManagedAccount(address(this), true)
  POP			new ManagedAccount(address(this), true)
  PUSH 40		new ManagedAccount(address(this), true)
  MLOAD			new ManagedAccount(address(this), true)
  DUP1			new ManagedAccount(address(this), true)
  SWAP2			new ManagedAccount(address(this), true)
  SUB			new ManagedAccount(address(this), true)
  SWAP1			new ManagedAccount(address(this), true)
  PUSH 0		new ManagedAccount(address(this), true)
  CREATE			new ManagedAccount(address(this), true)
  PUSH 12		extraBalance
  PUSH 0		extraBalance
  PUSH 100		extraBalance = new ManagedAccount(address(this), true)
  EXP			extraBalance = new ManagedAccount(address(this), true)
  DUP2			extraBalance = new ManagedAccount(address(this), true)
  SLOAD			extraBalance = new ManagedAccount(address(this), true)
  DUP2			extraBalance = new ManagedAccount(address(this), true)
  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		extraBalance = new ManagedAccount(address(this), true)
  MUL			extraBalance = new ManagedAccount(address(this), true)
  NOT			extraBalance = new ManagedAccount(address(this), true)
  AND			extraBalance = new ManagedAccount(address(this), true)
  SWAP1			extraBalance = new ManagedAccount(address(this), true)
  DUP4			extraBalance = new ManagedAccount(address(this), true)
  MUL			extraBalance = new ManagedAccount(address(this), true)
  OR			extraBalance = new ManagedAccount(address(this), true)
  SWAP1			extraBalance = new ManagedAccount(address(this), true)
  SSTORE			extraBalance = new ManagedAccount(address(this), true)
  POP			extraBalance = new ManagedAccount(address(this), true)
tag3: 
  JUMPDEST		function TokenCreation(...
  POP			function TokenCreation(...
  POP			function TokenCreation(...
  POP			function TokenCreation(...
  DUP6			_curator
  PUSH 3		curator
  PUSH 0		curator
  PUSH 100		curator = _curator
  EXP			curator = _curator
  DUP2			curator = _curator
  SLOAD			curator = _curator
  DUP2			curator = _curator
  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		curator = _curator
  MUL			curator = _curator
  NOT			curator = _curator
  AND			curator = _curator
  SWAP1			curator = _curator
  DUP4			curator = _curator
  MUL			curator = _curator
  OR			curator = _curator
  SWAP1			curator = _curator
  SSTORE			curator = _curator
  POP			curator = _curator
  DUP5			_daoCreator
  PUSH E		daoCreator
  PUSH 0		daoCreator
  PUSH 100		daoCreator = _daoCreator
  EXP			daoCreator = _daoCreator
  DUP2			daoCreator = _daoCreator
  SLOAD			daoCreator = _daoCreator
  DUP2			daoCreator = _daoCreator
  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		daoCreator = _daoCreator
  MUL			daoCreator = _daoCreator
  NOT			daoCreator = _daoCreator
  AND			daoCreator = _daoCreator
  SWAP1			daoCreator = _daoCreator
  DUP4			daoCreator = _daoCreator
  MUL			daoCreator = _daoCreator
  OR			daoCreator = _daoCreator
  SWAP1			daoCreator = _daoCreator
  SSTORE			daoCreator = _daoCreator
  POP			daoCreator = _daoCreator
  DUP4			_proposalDeposit
  PUSH C		proposalDeposit
  PUSH 0		proposalDeposit
  POP			proposalDeposit = _proposalDeposit
  DUP2			proposalDeposit = _proposalDeposit
  SWAP1			proposalDeposit = _proposalDeposit
  SSTORE			proposalDeposit = _proposalDeposit
  POP			proposalDeposit = _proposalDeposit
  ADDRESS			this
  PUSH 0		false
  PUSH 40		new ManagedAccount(address(this), false)
  MLOAD			new ManagedAccount(address(this), false)
  PUSH #[$00000000…00000001]		new ManagedAccount(address(this), false)
  DUP1			new ManagedAccount(address(this), false)
  PUSH [$00000000…00000001]		new ManagedAccount(address(this), false)
  DUP4			new ManagedAccount(address(this), false)
  CODECOPY			new ManagedAccount(address(this), false)
  ADD			new ManagedAccount(address(this), false)
  DUP1			new ManagedAccount(address(this), false)
  DUP4			new ManagedAccount(address(this), false)
  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		new ManagedAccount(address(this), false)
  AND			new ManagedAccount(address(this), false)
  DUP2			new ManagedAccount(address(this), false)
  MSTORE			new ManagedAccount(address(this), false)
  PUSH 20		new ManagedAccount(address(this), false)
  ADD			new ManagedAccount(address(this), false)
  DUP3			new ManagedAccount(address(this), false)
  DUP2			new ManagedAccount(address(this), false)
  MSTORE			new ManagedAccount(address(this), false)
  PUSH 20		new ManagedAccount(address(this), false)
  ADD			new ManagedAccount(address(this), false)
  SWAP3			new ManagedAccount(address(this), false)
  POP			new ManagedAccount(address(this), false)
  POP			new ManagedAccount(address(this), false)
  POP			new ManagedAccount(address(this), false)
  PUSH 40		new ManagedAccount(address(this), false)
  MLOAD			new ManagedAccount(address(this), false)
  DUP1			new ManagedAccount(address(this), false)
  SWAP2			new ManagedAccount(address(this), false)
  SUB			new ManagedAccount(address(this), false)
  SWAP1			new ManagedAccount(address(this), false)
  PUSH 0		new ManagedAccount(address(this), false)
  CREATE			new ManagedAccount(address(this), false)
  PUSH 7		rewardAccount
  PUSH 0		rewardAccount
  PUSH 100		rewardAccount = new ManagedAccount(address(this), false)
  EXP			rewardAccount = new ManagedAccount(address(this), false)
  DUP2			rewardAccount = new ManagedAccount(address(this), false)
  SLOAD			rewardAccount = new ManagedAccount(address(this), false)
  DUP2			rewardAccount = new ManagedAccount(address(this), false)
  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		rewardAccount = new ManagedAccount(address(this), false)
  MUL			rewardAccount = new ManagedAccount(address(this), false)
  NOT			rewardAccount = new ManagedAccount(address(this), false)
  AND			rewardAccount = new ManagedAccount(address(this), false)
  SWAP1			rewardAccount = new ManagedAccount(address(this), false)
  DUP4			rewardAccount = new ManagedAccount(address(this), false)
  MUL			rewardAccount = new ManagedAccount(address(this), false)
  OR			rewardAccount = new ManagedAccount(address(this), false)
  SWAP1			rewardAccount = new ManagedAccount(address(this), false)
  SSTORE			rewardAccount = new ManagedAccount(address(this), false)
  POP			rewardAccount = new ManagedAccount(address(this), false)
  ADDRESS			this
  PUSH 0		false
  PUSH 40		new ManagedAccount(address(this), false)
  MLOAD			new ManagedAccount(address(this), false)
  PUSH #[$00000000…00000002]		new ManagedAccount(address(this), false)
  DUP1			new ManagedAccount(address(this), false)
  PUSH [$00000000…00000002]		new ManagedAccount(address(this), false)
  DUP4			new ManagedAccount(address(this), false)
  CODECOPY			new ManagedAccount(address(this), false)
  ADD			new ManagedAccount(address(this), false)
  DUP1			new ManagedAccount(address(this), false)
  DUP4			new ManagedAccount(address(this), false)
  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		new ManagedAccount(address(this), false)
  AND			new ManagedAccount(address(this), false)
  DUP2			new ManagedAccount(address(this), false)
  MSTORE			new ManagedAccount(address(this), false)
  PUSH 20		new ManagedAccount(address(this), false)
  ADD			new ManagedAccount(address(this), false)
  DUP3			new ManagedAccount(address(this), false)
  DUP2			new ManagedAccount(address(this), false)
  MSTORE			new ManagedAccount(address(this), false)
  PUSH 20		new ManagedAccount(address(this), false)
  ADD			new ManagedAccount(address(this), false)
  SWAP3			new ManagedAccount(address(this), false)
  POP			new ManagedAccount(address(this), false)
  POP			new ManagedAccount(address(this), false)
  POP			new ManagedAccount(address(this), false)
  PUSH 40		new ManagedAccount(address(this), false)
  MLOAD			new ManagedAccount(address(this), false)
  DUP1			new ManagedAccount(address(this), false)
  SWAP2			new ManagedAccount(address(this), false)
  SUB			new ManagedAccount(address(this), false)
  SWAP1			new ManagedAccount(address(this), false)
  PUSH 0		new ManagedAccount(address(this), false)
  CREATE			new ManagedAccount(address(this), false)
  PUSH 8		DAOrewardAccount
  PUSH 0		DAOrewardAccount
  PUSH 100		DAOrewardAccount = new ManagedAccount(address(this), false)
  EXP			DAOrewardAccount = new ManagedAccount(address(this), false)
  DUP2			DAOrewardAccount = new ManagedAccount(address(this), false)
  SLOAD			DAOrewardAccount = new ManagedAccount(address(this), false)
  DUP2			DAOrewardAccount = new ManagedAccount(address(this), false)
  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		DAOrewardAccount = new ManagedAccount(address(this), false)
  MUL			DAOrewardAccount = new ManagedAccount(address(this), false)
  NOT			DAOrewardAccount = new ManagedAccount(address(this), false)
  AND			DAOrewardAccount = new ManagedAccount(address(this), false)
  SWAP1			DAOrewardAccount = new ManagedAccount(address(this), false)
  DUP4			DAOrewardAccount = new ManagedAccount(address(this), false)
  MUL			DAOrewardAccount = new ManagedAccount(address(this), false)
  OR			DAOrewardAccount = new ManagedAccount(address(this), false)
  SWAP1			DAOrewardAccount = new ManagedAccount(address(this), false)
  SSTORE			DAOrewardAccount = new ManagedAccount(address(this), false)
  POP			DAOrewardAccount = new ManagedAccount(address(this), false)
  PUSH 0		0
  PUSH 7		rewardAccount
  PUSH 0		rewardAccount
  SWAP1			rewardAccount
  SLOAD			rewardAccount
  SWAP1			rewardAccount
  PUSH 100		rewardAccount
  EXP			rewardAccount
  SWAP1			rewardAccount
  DIV			rewardAccount
  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		rewardAccount
  AND			rewardAccount
  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		address(rewardAccount) == 0
  AND			address(rewardAccount) == 0
  EQ			address(rewardAccount) == 0
  ISZERO			if (address(rewardAccount) == 0)...
  PUSH [tag5]		if (address(rewardAccount) == 0)...
  JUMPI			if (address(rewardAccount) == 0)...
  PUSH [ErrorTag]		throw
  JUMP			throw
tag5: 
  JUMPDEST		if (address(rewardAccount) == 0)...
  PUSH 0		0
  PUSH 8		DAOrewardAccount
  PUSH 0		DAOrewardAccount
  SWAP1			DAOrewardAccount
  SLOAD			DAOrewardAccount
  SWAP1			DAOrewardAccount
  PUSH 100		DAOrewardAccount
  EXP			DAOrewardAccount
  SWAP1			DAOrewardAccount
  DIV			DAOrewardAccount
  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		DAOrewardAccount
  AND			DAOrewardAccount
  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		address(DAOrewardAccount) == 0
  AND			address(DAOrewardAccount) == 0
  EQ			address(DAOrewardAccount) == 0
  ISZERO			if (address(DAOrewardAccount) == 0)...
  PUSH [tag6]		if (address(DAOrewardAccount) == 0)...
  JUMPI			if (address(DAOrewardAccount) == 0)...
  PUSH [ErrorTag]		throw
  JUMP			throw
tag6: 
  JUMPDEST		if (address(DAOrewardAccount) == 0)...
  TIMESTAMP			now
  PUSH 2		lastTimeMinQuorumMet
  PUSH 0		lastTimeMinQuorumMet
  POP			lastTimeMinQuorumMet = now
  DUP2			lastTimeMinQuorumMet = now
  SWAP1			lastTimeMinQuorumMet = now
  SSTORE			lastTimeMinQuorumMet = now
  POP			lastTimeMinQuorumMet = now
  PUSH 5		5
  PUSH 1		minQuorumDivisor
  PUSH 0		minQuorumDivisor
  POP			minQuorumDivisor = 5
  DUP2			minQuorumDivisor = 5
  SWAP1			minQuorumDivisor = 5
  SSTORE			minQuorumDivisor = 5
  POP			minQuorumDivisor = 5
  PUSH 1		1
  PUSH 0		proposals
  PUSH 0		proposals
  POP			proposals
  DUP2			proposals.length = 1
  DUP2			proposals.length = 1
  SLOAD			proposals.length = 1
  DUP2			proposals.length = 1
  DUP4			proposals.length = 1
  SSTORE			proposals.length = 1
  DUP2			proposals.length = 1
  DUP2			proposals.length = 1
  ISZERO			proposals.length = 1
  GT			proposals.length = 1
  PUSH [tag7]		proposals.length = 1
  JUMPI			proposals.length = 1
  PUSH E		proposals.length = 1
  MUL			proposals.length = 1
  DUP2			proposals.length = 1
  PUSH E		proposals.length = 1
  MUL			proposals.length = 1
  DUP4			proposals.length = 1
  PUSH 0		proposals.length = 1
  MSTORE			proposals.length = 1
  PUSH 20		proposals.length = 1
  PUSH 0		proposals.length = 1
  SHA3			proposals.length = 1
  SWAP2			proposals.length = 1
  DUP3			proposals.length = 1
  ADD			proposals.length = 1
  SWAP2			proposals.length = 1
  ADD			proposals.length = 1
  PUSH [tag8]		proposals.length = 1
  SWAP2			proposals.length = 1
  SWAP1			proposals.length = 1
  PUSH [tag9]		proposals.length = 1
  JUMP			proposals.length = 1
tag9: 
  JUMPDEST		proposals.length = 1
  DUP1			proposals.length = 1
  DUP3			proposals.length = 1
  GT			proposals.length = 1
  ISZERO			proposals.length = 1
  PUSH [tag10]		proposals.length = 1
  JUMPI			proposals.length = 1
  PUSH 0		proposals.length = 1
  PUSH 0		proposals.length = 1
  DUP3			proposals.length = 1
  ADD			proposals.length = 1
  PUSH 0		proposals.length = 1
  PUSH 100		proposals.length = 1
  EXP			proposals.length = 1
  DUP2			proposals.length = 1
  SLOAD			proposals.length = 1
  SWAP1			proposals.length = 1
  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		proposals.length = 1
  MUL			proposals.length = 1
  NOT			proposals.length = 1
  AND			proposals.length = 1
  SWAP1			proposals.length = 1
  SSTORE			proposals.length = 1
  PUSH 1		proposals.length = 1
  DUP3			proposals.length = 1
  ADD			proposals.length = 1
  PUSH 0		proposals.length = 1
  POP			proposals.length = 1
  PUSH 0		proposals.length = 1
  SWAP1			proposals.length = 1
  SSTORE			proposals.length = 1
  PUSH 2		proposals.length = 1
  DUP3			proposals.length = 1
  ADD			proposals.length = 1
  PUSH 0		proposals.length = 1
  POP			proposals.length = 1
  DUP1			proposals.length = 1
  SLOAD			proposals.length = 1
  PUSH 1		proposals.length = 1
  DUP2			proposals.length = 1
  PUSH 1		proposals.length = 1
  AND			proposals.length = 1
  ISZERO			proposals.length = 1
  PUSH 100		proposals.length = 1
  MUL			proposals.length = 1
  SUB			proposals.length = 1
  AND			proposals.length = 1
  PUSH 2		proposals.length = 1
  SWAP1			proposals.length = 1
  DIV			proposals.length = 1
  PUSH 0		proposals.length = 1
  DUP3			proposals.length = 1
  SSTORE			proposals.length = 1
  DUP1			proposals.length = 1
  PUSH 1F		proposals.length = 1
  LT			proposals.length = 1
  PUSH [tag12]		proposals.length = 1
  JUMPI			proposals.length = 1
  POP			proposals.length = 1
  PUSH [tag11]		proposals.length = 1
  JUMP			proposals.length = 1
tag12: 
  JUMPDEST		proposals.length = 1
  PUSH 1F		proposals.length = 1
  ADD			proposals.length = 1
  PUSH 20		proposals.length = 1
  SWAP1			proposals.length = 1
  DIV			proposals.length = 1
  SWAP1			proposals.length = 1
  PUSH 0		proposals.length = 1
  MSTORE			proposals.length = 1
  PUSH 20		proposals.length = 1
  PUSH 0		proposals.length = 1
  SHA3			proposals.length = 1
  SWAP1			proposals.length = 1
  DUP2			proposals.length = 1
  ADD			proposals.length = 1
  SWAP1			proposals.length = 1
  PUSH [tag13]		proposals.length = 1
  SWAP2			proposals.length = 1
  SWAP1			proposals.length = 1
  PUSH [tag14]		proposals.length = 1
  JUMP			proposals.length = 1
tag14: 
  JUMPDEST		proposals.length = 1
  DUP1			proposals.length = 1
  DUP3			proposals.length = 1
  GT			proposals.length = 1
  ISZERO			proposals.length = 1
  PUSH [tag15]		proposals.length = 1
  JUMPI			proposals.length = 1
  PUSH 0		proposals.length = 1
  DUP2			proposals.length = 1
  DUP2			proposals.length = 1
  POP			proposals.length = 1
  PUSH 0		proposals.length = 1
  SWAP1			proposals.length = 1
  SSTORE			proposals.length = 1
  POP			proposals.length = 1
  PUSH 1		proposals.length = 1
  ADD			proposals.length = 1
  PUSH [tag14]		proposals.length = 1
  JUMP			proposals.length = 1
tag15: 
  JUMPDEST		proposals.length = 1
  POP			proposals.length = 1
  SWAP1			proposals.length = 1
  JUMP			proposals.length = 1
tag13: 
  JUMPDEST		proposals.length = 1
tag11: 
  JUMPDEST		proposals.length = 1
  POP			proposals.length = 1
  PUSH 3		proposals.length = 1
  DUP3			proposals.length = 1
  ADD			proposals.length = 1
  PUSH 0		proposals.length = 1
  POP			proposals.length = 1
  PUSH 0		proposals.length = 1
  SWAP1			proposals.length = 1
  SSTORE			proposals.length = 1
  PUSH 4		proposals.length = 1
  DUP3			proposals.length = 1
  ADD			proposals.length = 1
  PUSH 0		proposals.length = 1
  PUSH 100		proposals.length = 1
  EXP			proposals.length = 1
  DUP2			proposals.length = 1
  SLOAD			proposals.length = 1
  SWAP1			proposals.length = 1
  PUSH FF		proposals.length = 1
  MUL			proposals.length = 1
  NOT			proposals.length = 1
  AND			proposals.length = 1
  SWAP1			proposals.length = 1
  SSTORE			proposals.length = 1
  PUSH 4		proposals.length = 1
  DUP3			proposals.length = 1
  ADD			proposals.length = 1
  PUSH 1		proposals.length = 1
  PUSH 100		proposals.length = 1
  EXP			proposals.length = 1
  DUP2			proposals.length = 1
  SLOAD			proposals.length = 1
  SWAP1			proposals.length = 1
  PUSH FF		proposals.length = 1
  MUL			proposals.length = 1
  NOT			proposals.length = 1
  AND			proposals.length = 1
  SWAP1			proposals.length = 1
  SSTORE			proposals.length = 1
  PUSH 5		proposals.length = 1
  DUP3			proposals.length = 1
  ADD			proposals.length = 1
  PUSH 0		proposals.length = 1
  POP			proposals.length = 1
  PUSH 0		proposals.length = 1
  SWAP1			proposals.length = 1
  SSTORE			proposals.length = 1
  PUSH 6		proposals.length = 1
  DUP3			proposals.length = 1
  ADD			proposals.length = 1
  PUSH 0		proposals.length = 1
  POP			proposals.length = 1
  PUSH 0		proposals.length = 1
  SWAP1			proposals.length = 1
  SSTORE			proposals.length = 1
  PUSH 7		proposals.length = 1
  DUP3			proposals.length = 1
  ADD			proposals.length = 1
  PUSH 0		proposals.length = 1
  PUSH 100		proposals.length = 1
  EXP			proposals.length = 1
  DUP2			proposals.length = 1
  SLOAD			proposals.length = 1
  SWAP1			proposals.length = 1
  PUSH FF		proposals.length = 1
  MUL			proposals.length = 1
  NOT			proposals.length = 1
  AND			proposals.length = 1
  SWAP1			proposals.length = 1
  SSTORE			proposals.length = 1
  PUSH 8		proposals.length = 1
  DUP3			proposals.length = 1
  ADD			proposals.length = 1
  PUSH 0		proposals.length = 1
  POP			proposals.length = 1
  DUP1			proposals.length = 1
  SLOAD			proposals.length = 1
  PUSH 0		proposals.length = 1
  DUP3			proposals.length = 1
  SSTORE			proposals.length = 1
  PUSH 4		proposals.length = 1
  MUL			proposals.length = 1
  SWAP1			proposals.length = 1
  PUSH 0		proposals.length = 1
  MSTORE			proposals.length = 1
  PUSH 20		proposals.length = 1
  PUSH 0		proposals.length = 1
  SHA3			proposals.length = 1
  SWAP1			proposals.length = 1
  DUP2			proposals.length = 1
  ADD			proposals.length = 1
  SWAP1			proposals.length = 1
  PUSH [tag17]		proposals.length = 1
  SWAP2			proposals.length = 1
  SWAP1			proposals.length = 1
  PUSH [tag18]		proposals.length = 1
  JUMP			proposals.length = 1
tag18: 
  JUMPDEST		proposals.length = 1
  DUP1			proposals.length = 1
  DUP3			proposals.length = 1
  GT			proposals.length = 1
  ISZERO			proposals.length = 1
  PUSH [tag19]		proposals.length = 1
  JUMPI			proposals.length = 1
  PUSH 0		proposals.length = 1
  PUSH 0		proposals.length = 1
  DUP3			proposals.length = 1
  ADD			proposals.length = 1
  PUSH 0		proposals.length = 1
  POP			proposals.length = 1
  PUSH 0		proposals.length = 1
  SWAP1			proposals.length = 1
  SSTORE			proposals.length = 1
  PUSH 1		proposals.length = 1
  DUP3			proposals.length = 1
  ADD			proposals.length = 1
  PUSH 0		proposals.length = 1
  POP			proposals.length = 1
  PUSH 0		proposals.length = 1
  SWAP1			proposals.length = 1
  SSTORE			proposals.length = 1
  PUSH 2		proposals.length = 1
  DUP3			proposals.length = 1
  ADD			proposals.length = 1
  PUSH 0		proposals.length = 1
  POP			proposals.length = 1
  PUSH 0		proposals.length = 1
  SWAP1			proposals.length = 1
  SSTORE			proposals.length = 1
  PUSH 3		proposals.length = 1
  DUP3			proposals.length = 1
  ADD			proposals.length = 1
  PUSH 0		proposals.length = 1
  PUSH 100		proposals.length = 1
  EXP			proposals.length = 1
  DUP2			proposals.length = 1
  SLOAD			proposals.length = 1
  SWAP1			proposals.length = 1
  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		proposals.length = 1
  MUL			proposals.length = 1
  NOT			proposals.length = 1
  AND			proposals.length = 1
  SWAP1			proposals.length = 1
  SSTORE			proposals.length = 1
  POP			proposals.length = 1
  PUSH 1		proposals.length = 1
  ADD			proposals.length = 1
  PUSH [tag18]		proposals.length = 1
  JUMP			proposals.length = 1
tag19: 
  JUMPDEST		proposals.length = 1
  POP			proposals.length = 1
  SWAP1			proposals.length = 1
  JUMP			proposals.length = 1
tag17: 
  JUMPDEST		proposals.length = 1
tag16: 
  JUMPDEST		proposals.length = 1
  POP			proposals.length = 1
  PUSH 9		proposals.length = 1
  DUP3			proposals.length = 1
  ADD			proposals.length = 1
  PUSH 0		proposals.length = 1
  POP			proposals.length = 1
  PUSH 0		proposals.length = 1
  SWAP1			proposals.length = 1
  SSTORE			proposals.length = 1
  PUSH A		proposals.length = 1
  DUP3			proposals.length = 1
  ADD			proposals.length = 1
  PUSH 0		proposals.length = 1
  POP			proposals.length = 1
  PUSH 0		proposals.length = 1
  SWAP1			proposals.length = 1
  SSTORE			proposals.length = 1
  PUSH D		proposals.length = 1
  DUP3			proposals.length = 1
  ADD			proposals.length = 1
  PUSH 0		proposals.length = 1
  PUSH 100		proposals.length = 1
  EXP			proposals.length = 1
  DUP2			proposals.length = 1
  SLOAD			proposals.length = 1
  SWAP1			proposals.length = 1
  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		proposals.length = 1
  MUL			proposals.length = 1
  NOT			proposals.length = 1
  AND			proposals.length = 1
  SWAP1			proposals.length = 1
  SSTORE			proposals.length = 1
  POP			proposals.length = 1
  PUSH 1		proposals.length = 1
  ADD			proposals.length = 1
  PUSH [tag9]		proposals.length = 1
  JUMP			proposals.length = 1
tag10: 
  JUMPDEST		proposals.length = 1
  POP			proposals.length = 1
  SWAP1			proposals.length = 1
  JUMP			proposals.length = 1
tag8: 
  JUMPDEST		proposals.length = 1
tag7: 
  JUMPDEST		proposals.length = 1
  POP			proposals.length = 1
  POP			proposals.length = 1
  POP			proposals.length = 1
  POP			proposals.length = 1
  PUSH 1		true
  PUSH 4		allowedRecipients
  PUSH 0		allowedRecipients
  POP			allowedRecipients
  PUSH 0		allowedRecipients[address(this)]
  ADDRESS			this
  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		allowedRecipients[address(this)]
  AND			allowedRecipients[address(this)]
  DUP2			allowedRecipients[address(this)]
  MSTORE			allowedRecipients[address(this)]
  PUSH 20		allowedRecipients[address(this)]
  ADD			allowedRecipients[address(this)]
  SWAP1			allowedRecipients[address(this)]
  DUP2			allowedRecipients[address(this)]
  MSTORE			allowedRecipients[address(this)]
  PUSH 20		allowedRecipients[address(this)]
  ADD			allowedRecipients[address(this)]
  PUSH 0		allowedRecipients[address(this)]
  SHA3			allowedRecipients[address(this)]
  PUSH 0		allowedRecipients[address(this)]
  PUSH 100		allowedRecipients[address(this)] = true
  EXP			allowedRecipients[address(this)] = true
  DUP2			allowedRecipients[address(this)] = true
  SLOAD			allowedRecipients[address(this)] = true
  DUP2			allowedRecipients[address(this)] = true
  PUSH FF		allowedRecipients[address(this)] = true
  MUL			allowedRecipients[address(this)] = true
  NOT			allowedRecipients[address(this)] = true
  AND			allowedRecipients[address(this)] = true
  SWAP1			allowedRecipients[address(this)] = true
  DUP4			allowedRecipients[address(this)] = true
  MUL			allowedRecipients[address(this)] = true
  OR			allowedRecipients[address(this)] = true
  SWAP1			allowedRecipients[address(this)] = true
  SSTORE			allowedRecipients[address(this)] = true
  POP			allowedRecipients[address(this)] = true
  PUSH 1		true
  PUSH 4		allowedRecipients
  PUSH 0		allowedRecipients
  POP			allowedRecipients
  PUSH 0		allowedRecipients[curator]
  PUSH 3		curator
  PUSH 0		curator
  SWAP1			curator
  SLOAD			curator
  SWAP1			curator
  PUSH 100		curator
  EXP			curator
  SWAP1			curator
  DIV			curator
  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		curator
  AND			curator
  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		allowedRecipients[curator]
  AND			allowedRecipients[curator]
  DUP2			allowedRecipients[curator]
  MSTORE			allowedRecipients[curator]
  PUSH 20		allowedRecipients[curator]
  ADD			allowedRecipients[curator]
  SWAP1			allowedRecipients[curator]
  DUP2			allowedRecipients[curator]
  MSTORE			allowedRecipients[curator]
  PUSH 20		allowedRecipients[curator]
  ADD			allowedRecipients[curator]
  PUSH 0		allowedRecipients[curator]
  SHA3			allowedRecipients[curator]
  PUSH 0		allowedRecipients[curator]
  PUSH 100		allowedRecipients[curator] = true
  EXP			allowedRecipients[curator] = true
  DUP2			allowedRecipients[curator] = true
  SLOAD			allowedRecipients[curator] = true
  DUP2			allowedRecipients[curator] = true
  PUSH FF		allowedRecipients[curator] = true
  MUL			allowedRecipients[curator] = true
  NOT			allowedRecipients[curator] = true
  AND			allowedRecipients[curator] = true
  SWAP1			allowedRecipients[curator] = true
  DUP4			allowedRecipients[curator] = true
  MUL			allowedRecipients[curator] = true
  OR			allowedRecipients[curator] = true
  SWAP1			allowedRecipients[curator] = true
  SSTORE			allowedRecipients[curator] = true
  POP			allowedRecipients[curator] = true
tag4: 
  JUMPDEST		function DAO(...
  POP			function DAO(...
  POP			function DAO(...
  POP			function DAO(...
  POP			function DAO(...
  POP			function DAO(...
  POP			function DAO(...
  PUSH #[$00000000…00000003]		contract DAO is DAOInterface, Token, TokenCreation {...
  DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
  PUSH [$00000000…00000003]		contract DAO is DAOInterface, Token, TokenCreation {...
  PUSH 0		contract DAO is DAOInterface, Token, TokenCreation {...
  CODECOPY			contract DAO is DAOInterface, Token, TokenCreation {...
  PUSH 0		contract DAO is DAOInterface, Token, TokenCreation {...
  RETURN			contract DAO is DAOInterface, Token, TokenCreation {...
.data:
  0: 
  .code:
    PUSH 60		contract ManagedAccount is ManagedAccountInterface{...
    PUSH 40		contract ManagedAccount is ManagedAccountInterface{...
    MSTORE			contract ManagedAccount is ManagedAccountInterface{...
    PUSH 40		function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    MLOAD			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    PUSH 40		function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    DUP1			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    PUSHSIZE		function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    DUP4			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    CODECOPY			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    DUP2			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    ADD			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    PUSH 40		function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    MSTORE			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    DUP1			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    DUP1			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    MLOAD			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    SWAP1			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    PUSH 20		function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    ADD			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    SWAP1			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    SWAP2			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    SWAP1			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    DUP1			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    MLOAD			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    SWAP1			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    PUSH 20		function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    ADD			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    SWAP1			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    SWAP2			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    SWAP1			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    POP			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    POP			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
  tag1: 
    JUMPDEST		function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    DUP2			_owner
    PUSH 0		owner
    PUSH 0		owner
    PUSH 100		owner = _owner
    EXP			owner = _owner
    DUP2			owner = _owner
    SLOAD			owner = _owner
    DUP2			owner = _owner
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		owner = _owner
    MUL			owner = _owner
    NOT			owner = _owner
    AND			owner = _owner
    SWAP1			owner = _owner
    DUP4			owner = _owner
    MUL			owner = _owner
    OR			owner = _owner
    SWAP1			owner = _owner
    SSTORE			owner = _owner
    POP			owner = _owner
    DUP1			_payOwnerOnly
    PUSH 0		payOwnerOnly
    PUSH 14		payOwnerOnly
    PUSH 100		payOwnerOnly = _payOwnerOnly
    EXP			payOwnerOnly = _payOwnerOnly
    DUP2			payOwnerOnly = _payOwnerOnly
    SLOAD			payOwnerOnly = _payOwnerOnly
    DUP2			payOwnerOnly = _payOwnerOnly
    PUSH FF		payOwnerOnly = _payOwnerOnly
    MUL			payOwnerOnly = _payOwnerOnly
    NOT			payOwnerOnly = _payOwnerOnly
    AND			payOwnerOnly = _payOwnerOnly
    SWAP1			payOwnerOnly = _payOwnerOnly
    DUP4			payOwnerOnly = _payOwnerOnly
    MUL			payOwnerOnly = _payOwnerOnly
    OR			payOwnerOnly = _payOwnerOnly
    SWAP1			payOwnerOnly = _payOwnerOnly
    SSTORE			payOwnerOnly = _payOwnerOnly
    POP			payOwnerOnly = _payOwnerOnly
  tag2: 
    JUMPDEST		function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    POP			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    POP			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    PUSH #[$00000000…00000000]		contract ManagedAccount is ManagedAccountInterface{...
    DUP1			contract ManagedAccount is ManagedAccountInterface{...
    PUSH [$00000000…00000000]		contract ManagedAccount is ManagedAccountInterface{...
    PUSH 0		contract ManagedAccount is ManagedAccountInterface{...
    CODECOPY			contract ManagedAccount is ManagedAccountInterface{...
    PUSH 0		contract ManagedAccount is ManagedAccountInterface{...
    RETURN			contract ManagedAccount is ManagedAccountInterface{...
  .data:
    0: 
    .code:
      PUSH 60		contract ManagedAccount is ManagedAccountInterface{...
      PUSH 40		contract ManagedAccount is ManagedAccountInterface{...
      MSTORE			contract ManagedAccount is ManagedAccountInterface{...
      CALLDATASIZE			contract ManagedAccount is ManagedAccountInterface{...
      ISZERO			contract ManagedAccount is ManagedAccountInterface{...
      PUSH [tag1]		contract ManagedAccount is ManagedAccountInterface{...
      JUMPI			contract ManagedAccount is ManagedAccountInterface{...
      PUSH 0		contract ManagedAccount is ManagedAccountInterface{...
      CALLDATALOAD			contract ManagedAccount is ManagedAccountInterface{...
      PUSH 100000000000000000000000000000000000000000000000000000000		contract ManagedAccount is ManagedAccountInterface{...
      SWAP1			contract ManagedAccount is ManagedAccountInterface{...
      DIV			contract ManagedAccount is ManagedAccountInterface{...
      DUP1			contract ManagedAccount is ManagedAccountInterface{...
      PUSH 221038A		contract ManagedAccount is ManagedAccountInterface{...
      EQ			contract ManagedAccount is ManagedAccountInterface{...
      PUSH [tag2]		contract ManagedAccount is ManagedAccountInterface{...
      JUMPI			contract ManagedAccount is ManagedAccountInterface{...
      DUP1			contract ManagedAccount is ManagedAccountInterface{...
      PUSH 18BDC79A		contract ManagedAccount is ManagedAccountInterface{...
      EQ			contract ManagedAccount is ManagedAccountInterface{...
      PUSH [tag3]		contract ManagedAccount is ManagedAccountInterface{...
      JUMPI			contract ManagedAccount is ManagedAccountInterface{...
      DUP1			contract ManagedAccount is ManagedAccountInterface{...
      PUSH 8DA5CB5B		contract ManagedAccount is ManagedAccountInterface{...
      EQ			contract ManagedAccount is ManagedAccountInterface{...
      PUSH [tag4]		contract ManagedAccount is ManagedAccountInterface{...
      JUMPI			contract ManagedAccount is ManagedAccountInterface{...
      DUP1			contract ManagedAccount is ManagedAccountInterface{...
      PUSH D2CC718F		contract ManagedAccount is ManagedAccountInterface{...
      EQ			contract ManagedAccount is ManagedAccountInterface{...
      PUSH [tag5]		contract ManagedAccount is ManagedAccountInterface{...
      JUMPI			contract ManagedAccount is ManagedAccountInterface{...
      PUSH [tag1]		contract ManagedAccount is ManagedAccountInterface{...
      JUMP			contract ManagedAccount is ManagedAccountInterface{...
    tag1: 
      JUMPDEST		contract ManagedAccount is ManagedAccountInterface{...
      PUSH [tag6]		contract ManagedAccount is ManagedAccountInterface{...
    tag7: 
      JUMPDEST		function() {...
      CALLVALUE			msg.value
      PUSH 1		accumulatedInput
      PUSH 0		accumulatedInput
      DUP3			accumulatedInput += msg.value
      DUP3			accumulatedInput += msg.value
      DUP3			accumulatedInput += msg.value
      POP			accumulatedInput += msg.value
      SLOAD			accumulatedInput += msg.value
      ADD			accumulatedInput += msg.value
      SWAP3			accumulatedInput += msg.value
      POP			accumulatedInput += msg.value
      POP			accumulatedInput += msg.value
      DUP2			accumulatedInput += msg.value
      SWAP1			accumulatedInput += msg.value
      SSTORE			accumulatedInput += msg.value
      POP			accumulatedInput += msg.value
    tag8: 
      JUMPDEST		function() {...
      JUMP	[out]		function() {...
    tag6: 
      JUMPDEST		contract ManagedAccount is ManagedAccountInterface{...
      STOP			contract ManagedAccount is ManagedAccountInterface{...
    tag2: 
      JUMPDEST		function payOut(address _recipient, uint _amount) returns (bool) {...
      PUSH [tag9]		function payOut(address _recipient, uint _amount) returns (bool) {...
      PUSH 4		function payOut(address _recipient, uint _amount) returns (bool) {...
      DUP1			function payOut(address _recipient, uint _amount) returns (bool) {...
      DUP1			function payOut(address _recipient, uint _amount) returns (bool) {...
      CALLDATALOAD			function payOut(address _recipient, uint _amount) returns (bool) {...
      SWAP1			function payOut(address _recipient, uint _amount) returns (bool) {...
      PUSH 20		function payOut(address _recipient, uint _amount) returns (bool) {...
      ADD			function payOut(address _recipient, uint _amount) returns (bool) {...
      SWAP1			function payOut(address _recipient, uint _amount) returns (bool) {...
      SWAP2			function payOut(address _recipient, uint _amount) returns (bool) {...
      SWAP1			function payOut(address _recipient, uint _amount) returns (bool) {...
      DUP1			function payOut(address _recipient, uint _amount) returns (bool) {...
      CALLDATALOAD			function payOut(address _recipient, uint _amount) returns (bool) {...
      SWAP1			function payOut(address _recipient, uint _amount) returns (bool) {...
      PUSH 20		function payOut(address _recipient, uint _amount) returns (bool) {...
      ADD			function payOut(address _recipient, uint _amount) returns (bool) {...
      SWAP1			function payOut(address _recipient, uint _amount) returns (bool) {...
      SWAP2			function payOut(address _recipient, uint _amount) returns (bool) {...
      SWAP1			function payOut(address _recipient, uint _amount) returns (bool) {...
      POP			function payOut(address _recipient, uint _amount) returns (bool) {...
      POP			function payOut(address _recipient, uint _amount) returns (bool) {...
      PUSH [tag10]		function payOut(address _recipient, uint _amount) returns (bool) {...
      JUMP			function payOut(address _recipient, uint _amount) returns (bool) {...
    tag9: 
      JUMPDEST		function payOut(address _recipient, uint _amount) returns (bool) {...
      PUSH 40		function payOut(address _recipient, uint _amount) returns (bool) {...
      MLOAD			function payOut(address _recipient, uint _amount) returns (bool) {...
      DUP1			function payOut(address _recipient, uint _amount) returns (bool) {...
      DUP3			function payOut(address _recipient, uint _amount) returns (bool) {...
      DUP2			function payOut(address _recipient, uint _amount) returns (bool) {...
      MSTORE			function payOut(address _recipient, uint _amount) returns (bool) {...
      PUSH 20		function payOut(address _recipient, uint _amount) returns (bool) {...
      ADD			function payOut(address _recipient, uint _amount) returns (bool) {...
      SWAP2			function payOut(address _recipient, uint _amount) returns (bool) {...
      POP			function payOut(address _recipient, uint _amount) returns (bool) {...
      POP			function payOut(address _recipient, uint _amount) returns (bool) {...
      PUSH 40		function payOut(address _recipient, uint _amount) returns (bool) {...
      MLOAD			function payOut(address _recipient, uint _amount) returns (bool) {...
      DUP1			function payOut(address _recipient, uint _amount) returns (bool) {...
      SWAP2			function payOut(address _recipient, uint _amount) returns (bool) {...
      SUB			function payOut(address _recipient, uint _amount) returns (bool) {...
      SWAP1			function payOut(address _recipient, uint _amount) returns (bool) {...
      RETURN			function payOut(address _recipient, uint _amount) returns (bool) {...
    tag3: 
      JUMPDEST		bool public payOwnerOnly
      PUSH [tag11]		bool public payOwnerOnly
      PUSH 4		bool public payOwnerOnly
      DUP1			bool public payOwnerOnly
      POP			bool public payOwnerOnly
      POP			bool public payOwnerOnly
      PUSH [tag12]		bool public payOwnerOnly
      JUMP			bool public payOwnerOnly
    tag11: 
      JUMPDEST		bool public payOwnerOnly
      PUSH 40		bool public payOwnerOnly
      MLOAD			bool public payOwnerOnly
      DUP1			bool public payOwnerOnly
      DUP3			bool public payOwnerOnly
      DUP2			bool public payOwnerOnly
      MSTORE			bool public payOwnerOnly
      PUSH 20		bool public payOwnerOnly
      ADD			bool public payOwnerOnly
      SWAP2			bool public payOwnerOnly
      POP			bool public payOwnerOnly
      POP			bool public payOwnerOnly
      PUSH 40		bool public payOwnerOnly
      MLOAD			bool public payOwnerOnly
      DUP1			bool public payOwnerOnly
      SWAP2			bool public payOwnerOnly
      SUB			bool public payOwnerOnly
      SWAP1			bool public payOwnerOnly
      RETURN			bool public payOwnerOnly
    tag4: 
      JUMPDEST		address public owner
      PUSH [tag13]		address public owner
      PUSH 4		address public owner
      DUP1			address public owner
      POP			address public owner
      POP			address public owner
      PUSH [tag14]		address public owner
      JUMP			address public owner
    tag13: 
      JUMPDEST		address public owner
      PUSH 40		address public owner
      MLOAD			address public owner
      DUP1			address public owner
      DUP3			address public owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		address public owner
      AND			address public owner
      DUP2			address public owner
      MSTORE			address public owner
      PUSH 20		address public owner
      ADD			address public owner
      SWAP2			address public owner
      POP			address public owner
      POP			address public owner
      PUSH 40		address public owner
      MLOAD			address public owner
      DUP1			address public owner
      SWAP2			address public owner
      SUB			address public owner
      SWAP1			address public owner
      RETURN			address public owner
    tag5: 
      JUMPDEST		uint public accumulatedInput
      PUSH [tag15]		uint public accumulatedInput
      PUSH 4		uint public accumulatedInput
      DUP1			uint public accumulatedInput
      POP			uint public accumulatedInput
      POP			uint public accumulatedInput
      PUSH [tag16]		uint public accumulatedInput
      JUMP			uint public accumulatedInput
    tag15: 
      JUMPDEST		uint public accumulatedInput
      PUSH 40		uint public accumulatedInput
      MLOAD			uint public accumulatedInput
      DUP1			uint public accumulatedInput
      DUP3			uint public accumulatedInput
      DUP2			uint public accumulatedInput
      MSTORE			uint public accumulatedInput
      PUSH 20		uint public accumulatedInput
      ADD			uint public accumulatedInput
      SWAP2			uint public accumulatedInput
      POP			uint public accumulatedInput
      POP			uint public accumulatedInput
      PUSH 40		uint public accumulatedInput
      MLOAD			uint public accumulatedInput
      DUP1			uint public accumulatedInput
      SWAP2			uint public accumulatedInput
      SUB			uint public accumulatedInput
      SWAP1			uint public accumulatedInput
      RETURN			uint public accumulatedInput
    tag14: 
      JUMPDEST		address public owner
      PUSH 0		address public owner
      PUSH 0		address public owner
      SWAP1			address public owner
      SLOAD			address public owner
      SWAP1			address public owner
      PUSH 100		address public owner
      EXP			address public owner
      SWAP1			address public owner
      DIV			address public owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		address public owner
      AND			address public owner
      DUP2			address public owner
      JUMP	[out]		address public owner
    tag12: 
      JUMPDEST		bool public payOwnerOnly
      PUSH 0		bool public payOwnerOnly
      PUSH 14		bool public payOwnerOnly
      SWAP1			bool public payOwnerOnly
      SLOAD			bool public payOwnerOnly
      SWAP1			bool public payOwnerOnly
      PUSH 100		bool public payOwnerOnly
      EXP			bool public payOwnerOnly
      SWAP1			bool public payOwnerOnly
      DIV			bool public payOwnerOnly
      PUSH FF		bool public payOwnerOnly
      AND			bool public payOwnerOnly
      DUP2			bool public payOwnerOnly
      JUMP	[out]		bool public payOwnerOnly
    tag16: 
      JUMPDEST		uint public accumulatedInput
      PUSH 1		uint public accumulatedInput
      PUSH 0		uint public accumulatedInput
      POP			uint public accumulatedInput
      SLOAD			uint public accumulatedInput
      DUP2			uint public accumulatedInput
      JUMP	[out]		uint public accumulatedInput
    tag10: 
      JUMPDEST		function payOut(address _recipient, uint _amount) returns (bool) {...
      PUSH 0		bool
      PUSH 0		owner
      PUSH 0		owner
      SWAP1			owner
      SLOAD			owner
      SWAP1			owner
      PUSH 100		owner
      EXP			owner
      SWAP1			owner
      DIV			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		owner
      AND			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		msg.sender != owner
      AND			msg.sender != owner
      CALLER			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		msg.sender != owner
      AND			msg.sender != owner
      EQ			msg.sender != owner
      ISZERO			msg.sender != owner
      DUP1			msg.sender != owner || msg.value > 0
      PUSH [tag18]		msg.sender != owner || msg.value > 0
      JUMPI			msg.sender != owner || msg.value > 0
      POP			msg.sender != owner || msg.value > 0
      PUSH 0		0
      CALLVALUE			msg.value
      GT			msg.value > 0
    tag18: 
      JUMPDEST		msg.sender != owner || msg.value > 0
      DUP1			msg.sender != owner || msg.value > 0 || (payOwnerOnly && _recipient != owner)
      PUSH [tag19]		msg.sender != owner || msg.value > 0 || (payOwnerOnly && _recipient != owner)
      JUMPI			msg.sender != owner || msg.value > 0 || (payOwnerOnly && _recipient != owner)
      POP			msg.sender != owner || msg.value > 0 || (payOwnerOnly && _recipient != owner)
      PUSH 0		payOwnerOnly
      PUSH 14		payOwnerOnly
      SWAP1			payOwnerOnly
      SLOAD			payOwnerOnly
      SWAP1			payOwnerOnly
      PUSH 100		payOwnerOnly
      EXP			payOwnerOnly
      SWAP1			payOwnerOnly
      DIV			payOwnerOnly
      PUSH FF		payOwnerOnly
      AND			payOwnerOnly
      DUP1			payOwnerOnly && _recipient != owner
      ISZERO			payOwnerOnly && _recipient != owner
      PUSH [tag20]		payOwnerOnly && _recipient != owner
      JUMPI			payOwnerOnly && _recipient != owner
      POP			payOwnerOnly && _recipient != owner
      PUSH 0		owner
      PUSH 0		owner
      SWAP1			owner
      SLOAD			owner
      SWAP1			owner
      PUSH 100		owner
      EXP			owner
      SWAP1			owner
      DIV			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		owner
      AND			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		_recipient != owner
      AND			_recipient != owner
      DUP4			_recipient
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		_recipient != owner
      AND			_recipient != owner
      EQ			_recipient != owner
      ISZERO			_recipient != owner
    tag20: 
      JUMPDEST		payOwnerOnly && _recipient != owner
    tag19: 
      JUMPDEST		msg.sender != owner || msg.value > 0 || (payOwnerOnly && _recipient != owner)
      ISZERO			if (msg.sender != owner || msg.value > 0 || (payOwnerOnly && _recipient != owner))...
      PUSH [tag21]		if (msg.sender != owner || msg.value > 0 || (payOwnerOnly && _recipient != owner))...
      JUMPI			if (msg.sender != owner || msg.value > 0 || (payOwnerOnly && _recipient != owner))...
      PUSH [ErrorTag]		throw
      JUMP			throw
    tag21: 
      JUMPDEST		if (msg.sender != owner || msg.value > 0 || (payOwnerOnly && _recipient != owner))...
      DUP3			_recipient
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		_recipient.call
      AND			_recipient.call
      DUP3			_amount
      PUSH 40		_recipient.call.value(_amount)()
      MLOAD			_recipient.call.value(_amount)()
      DUP1			_recipient.call.value(_amount)()
      SWAP1			_recipient.call.value(_amount)()
      POP			_recipient.call.value(_amount)()
      PUSH 0		_recipient.call.value(_amount)()
      PUSH 40		_recipient.call.value(_amount)()
      MLOAD			_recipient.call.value(_amount)()
      DUP1			_recipient.call.value(_amount)()
      DUP4			_recipient.call.value(_amount)()
      SUB			_recipient.call.value(_amount)()
      DUP2			_recipient.call.value(_amount)()
      DUP6			_recipient.call.value(_amount)()
      DUP8			_recipient.call.value(_amount)()
      PUSH 8502		_recipient.call.value(_amount)()
      GAS			_recipient.call.value(_amount)()
      SUB			_recipient.call.value(_amount)()
      CALL			_recipient.call.value(_amount)()
      SWAP3			_recipient.call.value(_amount)()
      POP			_recipient.call.value(_amount)()
      POP			_recipient.call.value(_amount)()
      POP			_recipient.call.value(_amount)()
      ISZERO			if (_recipient.call.value(_amount)()) {...
      PUSH [tag22]		if (_recipient.call.value(_amount)()) {...
      JUMPI			if (_recipient.call.value(_amount)()) {...
      DUP3			_recipient
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		PayOut(_recipient, _amount)
      AND			PayOut(_recipient, _amount)
      PUSH 9735B0CB909F3D21D5C16BBCCCD272D85FA11446F6D679F6ECB170D2DABFECFC		PayOut(_recipient, _amount)
      DUP4			_amount
      PUSH 40		PayOut(_recipient, _amount)
      MLOAD			PayOut(_recipient, _amount)
      DUP1			PayOut(_recipient, _amount)
      DUP3			PayOut(_recipient, _amount)
      DUP2			PayOut(_recipient, _amount)
      MSTORE			PayOut(_recipient, _amount)
      PUSH 20		PayOut(_recipient, _amount)
      ADD			PayOut(_recipient, _amount)
      SWAP2			PayOut(_recipient, _amount)
      POP			PayOut(_recipient, _amount)
      POP			PayOut(_recipient, _amount)
      PUSH 40		PayOut(_recipient, _amount)
      MLOAD			PayOut(_recipient, _amount)
      DUP1			PayOut(_recipient, _amount)
      SWAP2			PayOut(_recipient, _amount)
      SUB			PayOut(_recipient, _amount)
      SWAP1			PayOut(_recipient, _amount)
      LOG2			PayOut(_recipient, _amount)
      PUSH 1		true
      SWAP1			return true
      POP			return true
      PUSH [tag17]		return true
      JUMP			return true
      PUSH [tag23]		if (_recipient.call.value(_amount)()) {...
      JUMP			if (_recipient.call.value(_amount)()) {...
    tag22: 
      JUMPDEST		if (_recipient.call.value(_amount)()) {...
      PUSH 0		false
      SWAP1			return false
      POP			return false
      PUSH [tag17]		return false
      JUMP			return false
    tag23: 
      JUMPDEST		if (_recipient.call.value(_amount)()) {...
    tag17: 
      JUMPDEST		function payOut(address _recipient, uint _amount) returns (bool) {...
      SWAP3			function payOut(address _recipient, uint _amount) returns (bool) {...
      SWAP2			function payOut(address _recipient, uint _amount) returns (bool) {...
      POP			function payOut(address _recipient, uint _amount) returns (bool) {...
      POP			function payOut(address _recipient, uint _amount) returns (bool) {...
      JUMP	[out]		function payOut(address _recipient, uint _amount) returns (bool) {...
  1: 
  .code:
    PUSH 60		contract ManagedAccount is ManagedAccountInterface{...
    PUSH 40		contract ManagedAccount is ManagedAccountInterface{...
    MSTORE			contract ManagedAccount is ManagedAccountInterface{...
    PUSH 40		function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    MLOAD			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    PUSH 40		function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    DUP1			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    PUSHSIZE		function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    DUP4			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    CODECOPY			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    DUP2			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    ADD			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    PUSH 40		function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    MSTORE			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    DUP1			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    DUP1			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    MLOAD			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    SWAP1			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    PUSH 20		function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    ADD			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    SWAP1			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    SWAP2			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    SWAP1			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    DUP1			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    MLOAD			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    SWAP1			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    PUSH 20		function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    ADD			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    SWAP1			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    SWAP2			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    SWAP1			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    POP			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    POP			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
  tag1: 
    JUMPDEST		function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    DUP2			_owner
    PUSH 0		owner
    PUSH 0		owner
    PUSH 100		owner = _owner
    EXP			owner = _owner
    DUP2			owner = _owner
    SLOAD			owner = _owner
    DUP2			owner = _owner
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		owner = _owner
    MUL			owner = _owner
    NOT			owner = _owner
    AND			owner = _owner
    SWAP1			owner = _owner
    DUP4			owner = _owner
    MUL			owner = _owner
    OR			owner = _owner
    SWAP1			owner = _owner
    SSTORE			owner = _owner
    POP			owner = _owner
    DUP1			_payOwnerOnly
    PUSH 0		payOwnerOnly
    PUSH 14		payOwnerOnly
    PUSH 100		payOwnerOnly = _payOwnerOnly
    EXP			payOwnerOnly = _payOwnerOnly
    DUP2			payOwnerOnly = _payOwnerOnly
    SLOAD			payOwnerOnly = _payOwnerOnly
    DUP2			payOwnerOnly = _payOwnerOnly
    PUSH FF		payOwnerOnly = _payOwnerOnly
    MUL			payOwnerOnly = _payOwnerOnly
    NOT			payOwnerOnly = _payOwnerOnly
    AND			payOwnerOnly = _payOwnerOnly
    SWAP1			payOwnerOnly = _payOwnerOnly
    DUP4			payOwnerOnly = _payOwnerOnly
    MUL			payOwnerOnly = _payOwnerOnly
    OR			payOwnerOnly = _payOwnerOnly
    SWAP1			payOwnerOnly = _payOwnerOnly
    SSTORE			payOwnerOnly = _payOwnerOnly
    POP			payOwnerOnly = _payOwnerOnly
  tag2: 
    JUMPDEST		function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    POP			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    POP			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    PUSH #[$00000000…00000000]		contract ManagedAccount is ManagedAccountInterface{...
    DUP1			contract ManagedAccount is ManagedAccountInterface{...
    PUSH [$00000000…00000000]		contract ManagedAccount is ManagedAccountInterface{...
    PUSH 0		contract ManagedAccount is ManagedAccountInterface{...
    CODECOPY			contract ManagedAccount is ManagedAccountInterface{...
    PUSH 0		contract ManagedAccount is ManagedAccountInterface{...
    RETURN			contract ManagedAccount is ManagedAccountInterface{...
  .data:
    0: 
    .code:
      PUSH 60		contract ManagedAccount is ManagedAccountInterface{...
      PUSH 40		contract ManagedAccount is ManagedAccountInterface{...
      MSTORE			contract ManagedAccount is ManagedAccountInterface{...
      CALLDATASIZE			contract ManagedAccount is ManagedAccountInterface{...
      ISZERO			contract ManagedAccount is ManagedAccountInterface{...
      PUSH [tag1]		contract ManagedAccount is ManagedAccountInterface{...
      JUMPI			contract ManagedAccount is ManagedAccountInterface{...
      PUSH 0		contract ManagedAccount is ManagedAccountInterface{...
      CALLDATALOAD			contract ManagedAccount is ManagedAccountInterface{...
      PUSH 100000000000000000000000000000000000000000000000000000000		contract ManagedAccount is ManagedAccountInterface{...
      SWAP1			contract ManagedAccount is ManagedAccountInterface{...
      DIV			contract ManagedAccount is ManagedAccountInterface{...
      DUP1			contract ManagedAccount is ManagedAccountInterface{...
      PUSH 221038A		contract ManagedAccount is ManagedAccountInterface{...
      EQ			contract ManagedAccount is ManagedAccountInterface{...
      PUSH [tag2]		contract ManagedAccount is ManagedAccountInterface{...
      JUMPI			contract ManagedAccount is ManagedAccountInterface{...
      DUP1			contract ManagedAccount is ManagedAccountInterface{...
      PUSH 18BDC79A		contract ManagedAccount is ManagedAccountInterface{...
      EQ			contract ManagedAccount is ManagedAccountInterface{...
      PUSH [tag3]		contract ManagedAccount is ManagedAccountInterface{...
      JUMPI			contract ManagedAccount is ManagedAccountInterface{...
      DUP1			contract ManagedAccount is ManagedAccountInterface{...
      PUSH 8DA5CB5B		contract ManagedAccount is ManagedAccountInterface{...
      EQ			contract ManagedAccount is ManagedAccountInterface{...
      PUSH [tag4]		contract ManagedAccount is ManagedAccountInterface{...
      JUMPI			contract ManagedAccount is ManagedAccountInterface{...
      DUP1			contract ManagedAccount is ManagedAccountInterface{...
      PUSH D2CC718F		contract ManagedAccount is ManagedAccountInterface{...
      EQ			contract ManagedAccount is ManagedAccountInterface{...
      PUSH [tag5]		contract ManagedAccount is ManagedAccountInterface{...
      JUMPI			contract ManagedAccount is ManagedAccountInterface{...
      PUSH [tag1]		contract ManagedAccount is ManagedAccountInterface{...
      JUMP			contract ManagedAccount is ManagedAccountInterface{...
    tag1: 
      JUMPDEST		contract ManagedAccount is ManagedAccountInterface{...
      PUSH [tag6]		contract ManagedAccount is ManagedAccountInterface{...
    tag7: 
      JUMPDEST		function() {...
      CALLVALUE			msg.value
      PUSH 1		accumulatedInput
      PUSH 0		accumulatedInput
      DUP3			accumulatedInput += msg.value
      DUP3			accumulatedInput += msg.value
      DUP3			accumulatedInput += msg.value
      POP			accumulatedInput += msg.value
      SLOAD			accumulatedInput += msg.value
      ADD			accumulatedInput += msg.value
      SWAP3			accumulatedInput += msg.value
      POP			accumulatedInput += msg.value
      POP			accumulatedInput += msg.value
      DUP2			accumulatedInput += msg.value
      SWAP1			accumulatedInput += msg.value
      SSTORE			accumulatedInput += msg.value
      POP			accumulatedInput += msg.value
    tag8: 
      JUMPDEST		function() {...
      JUMP	[out]		function() {...
    tag6: 
      JUMPDEST		contract ManagedAccount is ManagedAccountInterface{...
      STOP			contract ManagedAccount is ManagedAccountInterface{...
    tag2: 
      JUMPDEST		function payOut(address _recipient, uint _amount) returns (bool) {...
      PUSH [tag9]		function payOut(address _recipient, uint _amount) returns (bool) {...
      PUSH 4		function payOut(address _recipient, uint _amount) returns (bool) {...
      DUP1			function payOut(address _recipient, uint _amount) returns (bool) {...
      DUP1			function payOut(address _recipient, uint _amount) returns (bool) {...
      CALLDATALOAD			function payOut(address _recipient, uint _amount) returns (bool) {...
      SWAP1			function payOut(address _recipient, uint _amount) returns (bool) {...
      PUSH 20		function payOut(address _recipient, uint _amount) returns (bool) {...
      ADD			function payOut(address _recipient, uint _amount) returns (bool) {...
      SWAP1			function payOut(address _recipient, uint _amount) returns (bool) {...
      SWAP2			function payOut(address _recipient, uint _amount) returns (bool) {...
      SWAP1			function payOut(address _recipient, uint _amount) returns (bool) {...
      DUP1			function payOut(address _recipient, uint _amount) returns (bool) {...
      CALLDATALOAD			function payOut(address _recipient, uint _amount) returns (bool) {...
      SWAP1			function payOut(address _recipient, uint _amount) returns (bool) {...
      PUSH 20		function payOut(address _recipient, uint _amount) returns (bool) {...
      ADD			function payOut(address _recipient, uint _amount) returns (bool) {...
      SWAP1			function payOut(address _recipient, uint _amount) returns (bool) {...
      SWAP2			function payOut(address _recipient, uint _amount) returns (bool) {...
      SWAP1			function payOut(address _recipient, uint _amount) returns (bool) {...
      POP			function payOut(address _recipient, uint _amount) returns (bool) {...
      POP			function payOut(address _recipient, uint _amount) returns (bool) {...
      PUSH [tag10]		function payOut(address _recipient, uint _amount) returns (bool) {...
      JUMP			function payOut(address _recipient, uint _amount) returns (bool) {...
    tag9: 
      JUMPDEST		function payOut(address _recipient, uint _amount) returns (bool) {...
      PUSH 40		function payOut(address _recipient, uint _amount) returns (bool) {...
      MLOAD			function payOut(address _recipient, uint _amount) returns (bool) {...
      DUP1			function payOut(address _recipient, uint _amount) returns (bool) {...
      DUP3			function payOut(address _recipient, uint _amount) returns (bool) {...
      DUP2			function payOut(address _recipient, uint _amount) returns (bool) {...
      MSTORE			function payOut(address _recipient, uint _amount) returns (bool) {...
      PUSH 20		function payOut(address _recipient, uint _amount) returns (bool) {...
      ADD			function payOut(address _recipient, uint _amount) returns (bool) {...
      SWAP2			function payOut(address _recipient, uint _amount) returns (bool) {...
      POP			function payOut(address _recipient, uint _amount) returns (bool) {...
      POP			function payOut(address _recipient, uint _amount) returns (bool) {...
      PUSH 40		function payOut(address _recipient, uint _amount) returns (bool) {...
      MLOAD			function payOut(address _recipient, uint _amount) returns (bool) {...
      DUP1			function payOut(address _recipient, uint _amount) returns (bool) {...
      SWAP2			function payOut(address _recipient, uint _amount) returns (bool) {...
      SUB			function payOut(address _recipient, uint _amount) returns (bool) {...
      SWAP1			function payOut(address _recipient, uint _amount) returns (bool) {...
      RETURN			function payOut(address _recipient, uint _amount) returns (bool) {...
    tag3: 
      JUMPDEST		bool public payOwnerOnly
      PUSH [tag11]		bool public payOwnerOnly
      PUSH 4		bool public payOwnerOnly
      DUP1			bool public payOwnerOnly
      POP			bool public payOwnerOnly
      POP			bool public payOwnerOnly
      PUSH [tag12]		bool public payOwnerOnly
      JUMP			bool public payOwnerOnly
    tag11: 
      JUMPDEST		bool public payOwnerOnly
      PUSH 40		bool public payOwnerOnly
      MLOAD			bool public payOwnerOnly
      DUP1			bool public payOwnerOnly
      DUP3			bool public payOwnerOnly
      DUP2			bool public payOwnerOnly
      MSTORE			bool public payOwnerOnly
      PUSH 20		bool public payOwnerOnly
      ADD			bool public payOwnerOnly
      SWAP2			bool public payOwnerOnly
      POP			bool public payOwnerOnly
      POP			bool public payOwnerOnly
      PUSH 40		bool public payOwnerOnly
      MLOAD			bool public payOwnerOnly
      DUP1			bool public payOwnerOnly
      SWAP2			bool public payOwnerOnly
      SUB			bool public payOwnerOnly
      SWAP1			bool public payOwnerOnly
      RETURN			bool public payOwnerOnly
    tag4: 
      JUMPDEST		address public owner
      PUSH [tag13]		address public owner
      PUSH 4		address public owner
      DUP1			address public owner
      POP			address public owner
      POP			address public owner
      PUSH [tag14]		address public owner
      JUMP			address public owner
    tag13: 
      JUMPDEST		address public owner
      PUSH 40		address public owner
      MLOAD			address public owner
      DUP1			address public owner
      DUP3			address public owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		address public owner
      AND			address public owner
      DUP2			address public owner
      MSTORE			address public owner
      PUSH 20		address public owner
      ADD			address public owner
      SWAP2			address public owner
      POP			address public owner
      POP			address public owner
      PUSH 40		address public owner
      MLOAD			address public owner
      DUP1			address public owner
      SWAP2			address public owner
      SUB			address public owner
      SWAP1			address public owner
      RETURN			address public owner
    tag5: 
      JUMPDEST		uint public accumulatedInput
      PUSH [tag15]		uint public accumulatedInput
      PUSH 4		uint public accumulatedInput
      DUP1			uint public accumulatedInput
      POP			uint public accumulatedInput
      POP			uint public accumulatedInput
      PUSH [tag16]		uint public accumulatedInput
      JUMP			uint public accumulatedInput
    tag15: 
      JUMPDEST		uint public accumulatedInput
      PUSH 40		uint public accumulatedInput
      MLOAD			uint public accumulatedInput
      DUP1			uint public accumulatedInput
      DUP3			uint public accumulatedInput
      DUP2			uint public accumulatedInput
      MSTORE			uint public accumulatedInput
      PUSH 20		uint public accumulatedInput
      ADD			uint public accumulatedInput
      SWAP2			uint public accumulatedInput
      POP			uint public accumulatedInput
      POP			uint public accumulatedInput
      PUSH 40		uint public accumulatedInput
      MLOAD			uint public accumulatedInput
      DUP1			uint public accumulatedInput
      SWAP2			uint public accumulatedInput
      SUB			uint public accumulatedInput
      SWAP1			uint public accumulatedInput
      RETURN			uint public accumulatedInput
    tag14: 
      JUMPDEST		address public owner
      PUSH 0		address public owner
      PUSH 0		address public owner
      SWAP1			address public owner
      SLOAD			address public owner
      SWAP1			address public owner
      PUSH 100		address public owner
      EXP			address public owner
      SWAP1			address public owner
      DIV			address public owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		address public owner
      AND			address public owner
      DUP2			address public owner
      JUMP	[out]		address public owner
    tag12: 
      JUMPDEST		bool public payOwnerOnly
      PUSH 0		bool public payOwnerOnly
      PUSH 14		bool public payOwnerOnly
      SWAP1			bool public payOwnerOnly
      SLOAD			bool public payOwnerOnly
      SWAP1			bool public payOwnerOnly
      PUSH 100		bool public payOwnerOnly
      EXP			bool public payOwnerOnly
      SWAP1			bool public payOwnerOnly
      DIV			bool public payOwnerOnly
      PUSH FF		bool public payOwnerOnly
      AND			bool public payOwnerOnly
      DUP2			bool public payOwnerOnly
      JUMP	[out]		bool public payOwnerOnly
    tag16: 
      JUMPDEST		uint public accumulatedInput
      PUSH 1		uint public accumulatedInput
      PUSH 0		uint public accumulatedInput
      POP			uint public accumulatedInput
      SLOAD			uint public accumulatedInput
      DUP2			uint public accumulatedInput
      JUMP	[out]		uint public accumulatedInput
    tag10: 
      JUMPDEST		function payOut(address _recipient, uint _amount) returns (bool) {...
      PUSH 0		bool
      PUSH 0		owner
      PUSH 0		owner
      SWAP1			owner
      SLOAD			owner
      SWAP1			owner
      PUSH 100		owner
      EXP			owner
      SWAP1			owner
      DIV			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		owner
      AND			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		msg.sender != owner
      AND			msg.sender != owner
      CALLER			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		msg.sender != owner
      AND			msg.sender != owner
      EQ			msg.sender != owner
      ISZERO			msg.sender != owner
      DUP1			msg.sender != owner || msg.value > 0
      PUSH [tag18]		msg.sender != owner || msg.value > 0
      JUMPI			msg.sender != owner || msg.value > 0
      POP			msg.sender != owner || msg.value > 0
      PUSH 0		0
      CALLVALUE			msg.value
      GT			msg.value > 0
    tag18: 
      JUMPDEST		msg.sender != owner || msg.value > 0
      DUP1			msg.sender != owner || msg.value > 0 || (payOwnerOnly && _recipient != owner)
      PUSH [tag19]		msg.sender != owner || msg.value > 0 || (payOwnerOnly && _recipient != owner)
      JUMPI			msg.sender != owner || msg.value > 0 || (payOwnerOnly && _recipient != owner)
      POP			msg.sender != owner || msg.value > 0 || (payOwnerOnly && _recipient != owner)
      PUSH 0		payOwnerOnly
      PUSH 14		payOwnerOnly
      SWAP1			payOwnerOnly
      SLOAD			payOwnerOnly
      SWAP1			payOwnerOnly
      PUSH 100		payOwnerOnly
      EXP			payOwnerOnly
      SWAP1			payOwnerOnly
      DIV			payOwnerOnly
      PUSH FF		payOwnerOnly
      AND			payOwnerOnly
      DUP1			payOwnerOnly && _recipient != owner
      ISZERO			payOwnerOnly && _recipient != owner
      PUSH [tag20]		payOwnerOnly && _recipient != owner
      JUMPI			payOwnerOnly && _recipient != owner
      POP			payOwnerOnly && _recipient != owner
      PUSH 0		owner
      PUSH 0		owner
      SWAP1			owner
      SLOAD			owner
      SWAP1			owner
      PUSH 100		owner
      EXP			owner
      SWAP1			owner
      DIV			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		owner
      AND			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		_recipient != owner
      AND			_recipient != owner
      DUP4			_recipient
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		_recipient != owner
      AND			_recipient != owner
      EQ			_recipient != owner
      ISZERO			_recipient != owner
    tag20: 
      JUMPDEST		payOwnerOnly && _recipient != owner
    tag19: 
      JUMPDEST		msg.sender != owner || msg.value > 0 || (payOwnerOnly && _recipient != owner)
      ISZERO			if (msg.sender != owner || msg.value > 0 || (payOwnerOnly && _recipient != owner))...
      PUSH [tag21]		if (msg.sender != owner || msg.value > 0 || (payOwnerOnly && _recipient != owner))...
      JUMPI			if (msg.sender != owner || msg.value > 0 || (payOwnerOnly && _recipient != owner))...
      PUSH [ErrorTag]		throw
      JUMP			throw
    tag21: 
      JUMPDEST		if (msg.sender != owner || msg.value > 0 || (payOwnerOnly && _recipient != owner))...
      DUP3			_recipient
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		_recipient.call
      AND			_recipient.call
      DUP3			_amount
      PUSH 40		_recipient.call.value(_amount)()
      MLOAD			_recipient.call.value(_amount)()
      DUP1			_recipient.call.value(_amount)()
      SWAP1			_recipient.call.value(_amount)()
      POP			_recipient.call.value(_amount)()
      PUSH 0		_recipient.call.value(_amount)()
      PUSH 40		_recipient.call.value(_amount)()
      MLOAD			_recipient.call.value(_amount)()
      DUP1			_recipient.call.value(_amount)()
      DUP4			_recipient.call.value(_amount)()
      SUB			_recipient.call.value(_amount)()
      DUP2			_recipient.call.value(_amount)()
      DUP6			_recipient.call.value(_amount)()
      DUP8			_recipient.call.value(_amount)()
      PUSH 8502		_recipient.call.value(_amount)()
      GAS			_recipient.call.value(_amount)()
      SUB			_recipient.call.value(_amount)()
      CALL			_recipient.call.value(_amount)()
      SWAP3			_recipient.call.value(_amount)()
      POP			_recipient.call.value(_amount)()
      POP			_recipient.call.value(_amount)()
      POP			_recipient.call.value(_amount)()
      ISZERO			if (_recipient.call.value(_amount)()) {...
      PUSH [tag22]		if (_recipient.call.value(_amount)()) {...
      JUMPI			if (_recipient.call.value(_amount)()) {...
      DUP3			_recipient
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		PayOut(_recipient, _amount)
      AND			PayOut(_recipient, _amount)
      PUSH 9735B0CB909F3D21D5C16BBCCCD272D85FA11446F6D679F6ECB170D2DABFECFC		PayOut(_recipient, _amount)
      DUP4			_amount
      PUSH 40		PayOut(_recipient, _amount)
      MLOAD			PayOut(_recipient, _amount)
      DUP1			PayOut(_recipient, _amount)
      DUP3			PayOut(_recipient, _amount)
      DUP2			PayOut(_recipient, _amount)
      MSTORE			PayOut(_recipient, _amount)
      PUSH 20		PayOut(_recipient, _amount)
      ADD			PayOut(_recipient, _amount)
      SWAP2			PayOut(_recipient, _amount)
      POP			PayOut(_recipient, _amount)
      POP			PayOut(_recipient, _amount)
      PUSH 40		PayOut(_recipient, _amount)
      MLOAD			PayOut(_recipient, _amount)
      DUP1			PayOut(_recipient, _amount)
      SWAP2			PayOut(_recipient, _amount)
      SUB			PayOut(_recipient, _amount)
      SWAP1			PayOut(_recipient, _amount)
      LOG2			PayOut(_recipient, _amount)
      PUSH 1		true
      SWAP1			return true
      POP			return true
      PUSH [tag17]		return true
      JUMP			return true
      PUSH [tag23]		if (_recipient.call.value(_amount)()) {...
      JUMP			if (_recipient.call.value(_amount)()) {...
    tag22: 
      JUMPDEST		if (_recipient.call.value(_amount)()) {...
      PUSH 0		false
      SWAP1			return false
      POP			return false
      PUSH [tag17]		return false
      JUMP			return false
    tag23: 
      JUMPDEST		if (_recipient.call.value(_amount)()) {...
    tag17: 
      JUMPDEST		function payOut(address _recipient, uint _amount) returns (bool) {...
      SWAP3			function payOut(address _recipient, uint _amount) returns (bool) {...
      SWAP2			function payOut(address _recipient, uint _amount) returns (bool) {...
      POP			function payOut(address _recipient, uint _amount) returns (bool) {...
      POP			function payOut(address _recipient, uint _amount) returns (bool) {...
      JUMP	[out]		function payOut(address _recipient, uint _amount) returns (bool) {...
  2: 
  .code:
    PUSH 60		contract ManagedAccount is ManagedAccountInterface{...
    PUSH 40		contract ManagedAccount is ManagedAccountInterface{...
    MSTORE			contract ManagedAccount is ManagedAccountInterface{...
    PUSH 40		function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    MLOAD			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    PUSH 40		function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    DUP1			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    PUSHSIZE		function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    DUP4			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    CODECOPY			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    DUP2			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    ADD			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    PUSH 40		function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    MSTORE			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    DUP1			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    DUP1			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    MLOAD			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    SWAP1			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    PUSH 20		function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    ADD			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    SWAP1			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    SWAP2			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    SWAP1			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    DUP1			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    MLOAD			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    SWAP1			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    PUSH 20		function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    ADD			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    SWAP1			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    SWAP2			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    SWAP1			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    POP			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    POP			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
  tag1: 
    JUMPDEST		function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    DUP2			_owner
    PUSH 0		owner
    PUSH 0		owner
    PUSH 100		owner = _owner
    EXP			owner = _owner
    DUP2			owner = _owner
    SLOAD			owner = _owner
    DUP2			owner = _owner
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		owner = _owner
    MUL			owner = _owner
    NOT			owner = _owner
    AND			owner = _owner
    SWAP1			owner = _owner
    DUP4			owner = _owner
    MUL			owner = _owner
    OR			owner = _owner
    SWAP1			owner = _owner
    SSTORE			owner = _owner
    POP			owner = _owner
    DUP1			_payOwnerOnly
    PUSH 0		payOwnerOnly
    PUSH 14		payOwnerOnly
    PUSH 100		payOwnerOnly = _payOwnerOnly
    EXP			payOwnerOnly = _payOwnerOnly
    DUP2			payOwnerOnly = _payOwnerOnly
    SLOAD			payOwnerOnly = _payOwnerOnly
    DUP2			payOwnerOnly = _payOwnerOnly
    PUSH FF		payOwnerOnly = _payOwnerOnly
    MUL			payOwnerOnly = _payOwnerOnly
    NOT			payOwnerOnly = _payOwnerOnly
    AND			payOwnerOnly = _payOwnerOnly
    SWAP1			payOwnerOnly = _payOwnerOnly
    DUP4			payOwnerOnly = _payOwnerOnly
    MUL			payOwnerOnly = _payOwnerOnly
    OR			payOwnerOnly = _payOwnerOnly
    SWAP1			payOwnerOnly = _payOwnerOnly
    SSTORE			payOwnerOnly = _payOwnerOnly
    POP			payOwnerOnly = _payOwnerOnly
  tag2: 
    JUMPDEST		function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    POP			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    POP			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    PUSH #[$00000000…00000000]		contract ManagedAccount is ManagedAccountInterface{...
    DUP1			contract ManagedAccount is ManagedAccountInterface{...
    PUSH [$00000000…00000000]		contract ManagedAccount is ManagedAccountInterface{...
    PUSH 0		contract ManagedAccount is ManagedAccountInterface{...
    CODECOPY			contract ManagedAccount is ManagedAccountInterface{...
    PUSH 0		contract ManagedAccount is ManagedAccountInterface{...
    RETURN			contract ManagedAccount is ManagedAccountInterface{...
  .data:
    0: 
    .code:
      PUSH 60		contract ManagedAccount is ManagedAccountInterface{...
      PUSH 40		contract ManagedAccount is ManagedAccountInterface{...
      MSTORE			contract ManagedAccount is ManagedAccountInterface{...
      CALLDATASIZE			contract ManagedAccount is ManagedAccountInterface{...
      ISZERO			contract ManagedAccount is ManagedAccountInterface{...
      PUSH [tag1]		contract ManagedAccount is ManagedAccountInterface{...
      JUMPI			contract ManagedAccount is ManagedAccountInterface{...
      PUSH 0		contract ManagedAccount is ManagedAccountInterface{...
      CALLDATALOAD			contract ManagedAccount is ManagedAccountInterface{...
      PUSH 100000000000000000000000000000000000000000000000000000000		contract ManagedAccount is ManagedAccountInterface{...
      SWAP1			contract ManagedAccount is ManagedAccountInterface{...
      DIV			contract ManagedAccount is ManagedAccountInterface{...
      DUP1			contract ManagedAccount is ManagedAccountInterface{...
      PUSH 221038A		contract ManagedAccount is ManagedAccountInterface{...
      EQ			contract ManagedAccount is ManagedAccountInterface{...
      PUSH [tag2]		contract ManagedAccount is ManagedAccountInterface{...
      JUMPI			contract ManagedAccount is ManagedAccountInterface{...
      DUP1			contract ManagedAccount is ManagedAccountInterface{...
      PUSH 18BDC79A		contract ManagedAccount is ManagedAccountInterface{...
      EQ			contract ManagedAccount is ManagedAccountInterface{...
      PUSH [tag3]		contract ManagedAccount is ManagedAccountInterface{...
      JUMPI			contract ManagedAccount is ManagedAccountInterface{...
      DUP1			contract ManagedAccount is ManagedAccountInterface{...
      PUSH 8DA5CB5B		contract ManagedAccount is ManagedAccountInterface{...
      EQ			contract ManagedAccount is ManagedAccountInterface{...
      PUSH [tag4]		contract ManagedAccount is ManagedAccountInterface{...
      JUMPI			contract ManagedAccount is ManagedAccountInterface{...
      DUP1			contract ManagedAccount is ManagedAccountInterface{...
      PUSH D2CC718F		contract ManagedAccount is ManagedAccountInterface{...
      EQ			contract ManagedAccount is ManagedAccountInterface{...
      PUSH [tag5]		contract ManagedAccount is ManagedAccountInterface{...
      JUMPI			contract ManagedAccount is ManagedAccountInterface{...
      PUSH [tag1]		contract ManagedAccount is ManagedAccountInterface{...
      JUMP			contract ManagedAccount is ManagedAccountInterface{...
    tag1: 
      JUMPDEST		contract ManagedAccount is ManagedAccountInterface{...
      PUSH [tag6]		contract ManagedAccount is ManagedAccountInterface{...
    tag7: 
      JUMPDEST		function() {...
      CALLVALUE			msg.value
      PUSH 1		accumulatedInput
      PUSH 0		accumulatedInput
      DUP3			accumulatedInput += msg.value
      DUP3			accumulatedInput += msg.value
      DUP3			accumulatedInput += msg.value
      POP			accumulatedInput += msg.value
      SLOAD			accumulatedInput += msg.value
      ADD			accumulatedInput += msg.value
      SWAP3			accumulatedInput += msg.value
      POP			accumulatedInput += msg.value
      POP			accumulatedInput += msg.value
      DUP2			accumulatedInput += msg.value
      SWAP1			accumulatedInput += msg.value
      SSTORE			accumulatedInput += msg.value
      POP			accumulatedInput += msg.value
    tag8: 
      JUMPDEST		function() {...
      JUMP	[out]		function() {...
    tag6: 
      JUMPDEST		contract ManagedAccount is ManagedAccountInterface{...
      STOP			contract ManagedAccount is ManagedAccountInterface{...
    tag2: 
      JUMPDEST		function payOut(address _recipient, uint _amount) returns (bool) {...
      PUSH [tag9]		function payOut(address _recipient, uint _amount) returns (bool) {...
      PUSH 4		function payOut(address _recipient, uint _amount) returns (bool) {...
      DUP1			function payOut(address _recipient, uint _amount) returns (bool) {...
      DUP1			function payOut(address _recipient, uint _amount) returns (bool) {...
      CALLDATALOAD			function payOut(address _recipient, uint _amount) returns (bool) {...
      SWAP1			function payOut(address _recipient, uint _amount) returns (bool) {...
      PUSH 20		function payOut(address _recipient, uint _amount) returns (bool) {...
      ADD			function payOut(address _recipient, uint _amount) returns (bool) {...
      SWAP1			function payOut(address _recipient, uint _amount) returns (bool) {...
      SWAP2			function payOut(address _recipient, uint _amount) returns (bool) {...
      SWAP1			function payOut(address _recipient, uint _amount) returns (bool) {...
      DUP1			function payOut(address _recipient, uint _amount) returns (bool) {...
      CALLDATALOAD			function payOut(address _recipient, uint _amount) returns (bool) {...
      SWAP1			function payOut(address _recipient, uint _amount) returns (bool) {...
      PUSH 20		function payOut(address _recipient, uint _amount) returns (bool) {...
      ADD			function payOut(address _recipient, uint _amount) returns (bool) {...
      SWAP1			function payOut(address _recipient, uint _amount) returns (bool) {...
      SWAP2			function payOut(address _recipient, uint _amount) returns (bool) {...
      SWAP1			function payOut(address _recipient, uint _amount) returns (bool) {...
      POP			function payOut(address _recipient, uint _amount) returns (bool) {...
      POP			function payOut(address _recipient, uint _amount) returns (bool) {...
      PUSH [tag10]		function payOut(address _recipient, uint _amount) returns (bool) {...
      JUMP			function payOut(address _recipient, uint _amount) returns (bool) {...
    tag9: 
      JUMPDEST		function payOut(address _recipient, uint _amount) returns (bool) {...
      PUSH 40		function payOut(address _recipient, uint _amount) returns (bool) {...
      MLOAD			function payOut(address _recipient, uint _amount) returns (bool) {...
      DUP1			function payOut(address _recipient, uint _amount) returns (bool) {...
      DUP3			function payOut(address _recipient, uint _amount) returns (bool) {...
      DUP2			function payOut(address _recipient, uint _amount) returns (bool) {...
      MSTORE			function payOut(address _recipient, uint _amount) returns (bool) {...
      PUSH 20		function payOut(address _recipient, uint _amount) returns (bool) {...
      ADD			function payOut(address _recipient, uint _amount) returns (bool) {...
      SWAP2			function payOut(address _recipient, uint _amount) returns (bool) {...
      POP			function payOut(address _recipient, uint _amount) returns (bool) {...
      POP			function payOut(address _recipient, uint _amount) returns (bool) {...
      PUSH 40		function payOut(address _recipient, uint _amount) returns (bool) {...
      MLOAD			function payOut(address _recipient, uint _amount) returns (bool) {...
      DUP1			function payOut(address _recipient, uint _amount) returns (bool) {...
      SWAP2			function payOut(address _recipient, uint _amount) returns (bool) {...
      SUB			function payOut(address _recipient, uint _amount) returns (bool) {...
      SWAP1			function payOut(address _recipient, uint _amount) returns (bool) {...
      RETURN			function payOut(address _recipient, uint _amount) returns (bool) {...
    tag3: 
      JUMPDEST		bool public payOwnerOnly
      PUSH [tag11]		bool public payOwnerOnly
      PUSH 4		bool public payOwnerOnly
      DUP1			bool public payOwnerOnly
      POP			bool public payOwnerOnly
      POP			bool public payOwnerOnly
      PUSH [tag12]		bool public payOwnerOnly
      JUMP			bool public payOwnerOnly
    tag11: 
      JUMPDEST		bool public payOwnerOnly
      PUSH 40		bool public payOwnerOnly
      MLOAD			bool public payOwnerOnly
      DUP1			bool public payOwnerOnly
      DUP3			bool public payOwnerOnly
      DUP2			bool public payOwnerOnly
      MSTORE			bool public payOwnerOnly
      PUSH 20		bool public payOwnerOnly
      ADD			bool public payOwnerOnly
      SWAP2			bool public payOwnerOnly
      POP			bool public payOwnerOnly
      POP			bool public payOwnerOnly
      PUSH 40		bool public payOwnerOnly
      MLOAD			bool public payOwnerOnly
      DUP1			bool public payOwnerOnly
      SWAP2			bool public payOwnerOnly
      SUB			bool public payOwnerOnly
      SWAP1			bool public payOwnerOnly
      RETURN			bool public payOwnerOnly
    tag4: 
      JUMPDEST		address public owner
      PUSH [tag13]		address public owner
      PUSH 4		address public owner
      DUP1			address public owner
      POP			address public owner
      POP			address public owner
      PUSH [tag14]		address public owner
      JUMP			address public owner
    tag13: 
      JUMPDEST		address public owner
      PUSH 40		address public owner
      MLOAD			address public owner
      DUP1			address public owner
      DUP3			address public owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		address public owner
      AND			address public owner
      DUP2			address public owner
      MSTORE			address public owner
      PUSH 20		address public owner
      ADD			address public owner
      SWAP2			address public owner
      POP			address public owner
      POP			address public owner
      PUSH 40		address public owner
      MLOAD			address public owner
      DUP1			address public owner
      SWAP2			address public owner
      SUB			address public owner
      SWAP1			address public owner
      RETURN			address public owner
    tag5: 
      JUMPDEST		uint public accumulatedInput
      PUSH [tag15]		uint public accumulatedInput
      PUSH 4		uint public accumulatedInput
      DUP1			uint public accumulatedInput
      POP			uint public accumulatedInput
      POP			uint public accumulatedInput
      PUSH [tag16]		uint public accumulatedInput
      JUMP			uint public accumulatedInput
    tag15: 
      JUMPDEST		uint public accumulatedInput
      PUSH 40		uint public accumulatedInput
      MLOAD			uint public accumulatedInput
      DUP1			uint public accumulatedInput
      DUP3			uint public accumulatedInput
      DUP2			uint public accumulatedInput
      MSTORE			uint public accumulatedInput
      PUSH 20		uint public accumulatedInput
      ADD			uint public accumulatedInput
      SWAP2			uint public accumulatedInput
      POP			uint public accumulatedInput
      POP			uint public accumulatedInput
      PUSH 40		uint public accumulatedInput
      MLOAD			uint public accumulatedInput
      DUP1			uint public accumulatedInput
      SWAP2			uint public accumulatedInput
      SUB			uint public accumulatedInput
      SWAP1			uint public accumulatedInput
      RETURN			uint public accumulatedInput
    tag14: 
      JUMPDEST		address public owner
      PUSH 0		address public owner
      PUSH 0		address public owner
      SWAP1			address public owner
      SLOAD			address public owner
      SWAP1			address public owner
      PUSH 100		address public owner
      EXP			address public owner
      SWAP1			address public owner
      DIV			address public owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		address public owner
      AND			address public owner
      DUP2			address public owner
      JUMP	[out]		address public owner
    tag12: 
      JUMPDEST		bool public payOwnerOnly
      PUSH 0		bool public payOwnerOnly
      PUSH 14		bool public payOwnerOnly
      SWAP1			bool public payOwnerOnly
      SLOAD			bool public payOwnerOnly
      SWAP1			bool public payOwnerOnly
      PUSH 100		bool public payOwnerOnly
      EXP			bool public payOwnerOnly
      SWAP1			bool public payOwnerOnly
      DIV			bool public payOwnerOnly
      PUSH FF		bool public payOwnerOnly
      AND			bool public payOwnerOnly
      DUP2			bool public payOwnerOnly
      JUMP	[out]		bool public payOwnerOnly
    tag16: 
      JUMPDEST		uint public accumulatedInput
      PUSH 1		uint public accumulatedInput
      PUSH 0		uint public accumulatedInput
      POP			uint public accumulatedInput
      SLOAD			uint public accumulatedInput
      DUP2			uint public accumulatedInput
      JUMP	[out]		uint public accumulatedInput
    tag10: 
      JUMPDEST		function payOut(address _recipient, uint _amount) returns (bool) {...
      PUSH 0		bool
      PUSH 0		owner
      PUSH 0		owner
      SWAP1			owner
      SLOAD			owner
      SWAP1			owner
      PUSH 100		owner
      EXP			owner
      SWAP1			owner
      DIV			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		owner
      AND			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		msg.sender != owner
      AND			msg.sender != owner
      CALLER			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		msg.sender != owner
      AND			msg.sender != owner
      EQ			msg.sender != owner
      ISZERO			msg.sender != owner
      DUP1			msg.sender != owner || msg.value > 0
      PUSH [tag18]		msg.sender != owner || msg.value > 0
      JUMPI			msg.sender != owner || msg.value > 0
      POP			msg.sender != owner || msg.value > 0
      PUSH 0		0
      CALLVALUE			msg.value
      GT			msg.value > 0
    tag18: 
      JUMPDEST		msg.sender != owner || msg.value > 0
      DUP1			msg.sender != owner || msg.value > 0 || (payOwnerOnly && _recipient != owner)
      PUSH [tag19]		msg.sender != owner || msg.value > 0 || (payOwnerOnly && _recipient != owner)
      JUMPI			msg.sender != owner || msg.value > 0 || (payOwnerOnly && _recipient != owner)
      POP			msg.sender != owner || msg.value > 0 || (payOwnerOnly && _recipient != owner)
      PUSH 0		payOwnerOnly
      PUSH 14		payOwnerOnly
      SWAP1			payOwnerOnly
      SLOAD			payOwnerOnly
      SWAP1			payOwnerOnly
      PUSH 100		payOwnerOnly
      EXP			payOwnerOnly
      SWAP1			payOwnerOnly
      DIV			payOwnerOnly
      PUSH FF		payOwnerOnly
      AND			payOwnerOnly
      DUP1			payOwnerOnly && _recipient != owner
      ISZERO			payOwnerOnly && _recipient != owner
      PUSH [tag20]		payOwnerOnly && _recipient != owner
      JUMPI			payOwnerOnly && _recipient != owner
      POP			payOwnerOnly && _recipient != owner
      PUSH 0		owner
      PUSH 0		owner
      SWAP1			owner
      SLOAD			owner
      SWAP1			owner
      PUSH 100		owner
      EXP			owner
      SWAP1			owner
      DIV			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		owner
      AND			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		_recipient != owner
      AND			_recipient != owner
      DUP4			_recipient
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		_recipient != owner
      AND			_recipient != owner
      EQ			_recipient != owner
      ISZERO			_recipient != owner
    tag20: 
      JUMPDEST		payOwnerOnly && _recipient != owner
    tag19: 
      JUMPDEST		msg.sender != owner || msg.value > 0 || (payOwnerOnly && _recipient != owner)
      ISZERO			if (msg.sender != owner || msg.value > 0 || (payOwnerOnly && _recipient != owner))...
      PUSH [tag21]		if (msg.sender != owner || msg.value > 0 || (payOwnerOnly && _recipient != owner))...
      JUMPI			if (msg.sender != owner || msg.value > 0 || (payOwnerOnly && _recipient != owner))...
      PUSH [ErrorTag]		throw
      JUMP			throw
    tag21: 
      JUMPDEST		if (msg.sender != owner || msg.value > 0 || (payOwnerOnly && _recipient != owner))...
      DUP3			_recipient
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		_recipient.call
      AND			_recipient.call
      DUP3			_amount
      PUSH 40		_recipient.call.value(_amount)()
      MLOAD			_recipient.call.value(_amount)()
      DUP1			_recipient.call.value(_amount)()
      SWAP1			_recipient.call.value(_amount)()
      POP			_recipient.call.value(_amount)()
      PUSH 0		_recipient.call.value(_amount)()
      PUSH 40		_recipient.call.value(_amount)()
      MLOAD			_recipient.call.value(_amount)()
      DUP1			_recipient.call.value(_amount)()
      DUP4			_recipient.call.value(_amount)()
      SUB			_recipient.call.value(_amount)()
      DUP2			_recipient.call.value(_amount)()
      DUP6			_recipient.call.value(_amount)()
      DUP8			_recipient.call.value(_amount)()
      PUSH 8502		_recipient.call.value(_amount)()
      GAS			_recipient.call.value(_amount)()
      SUB			_recipient.call.value(_amount)()
      CALL			_recipient.call.value(_amount)()
      SWAP3			_recipient.call.value(_amount)()
      POP			_recipient.call.value(_amount)()
      POP			_recipient.call.value(_amount)()
      POP			_recipient.call.value(_amount)()
      ISZERO			if (_recipient.call.value(_amount)()) {...
      PUSH [tag22]		if (_recipient.call.value(_amount)()) {...
      JUMPI			if (_recipient.call.value(_amount)()) {...
      DUP3			_recipient
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		PayOut(_recipient, _amount)
      AND			PayOut(_recipient, _amount)
      PUSH 9735B0CB909F3D21D5C16BBCCCD272D85FA11446F6D679F6ECB170D2DABFECFC		PayOut(_recipient, _amount)
      DUP4			_amount
      PUSH 40		PayOut(_recipient, _amount)
      MLOAD			PayOut(_recipient, _amount)
      DUP1			PayOut(_recipient, _amount)
      DUP3			PayOut(_recipient, _amount)
      DUP2			PayOut(_recipient, _amount)
      MSTORE			PayOut(_recipient, _amount)
      PUSH 20		PayOut(_recipient, _amount)
      ADD			PayOut(_recipient, _amount)
      SWAP2			PayOut(_recipient, _amount)
      POP			PayOut(_recipient, _amount)
      POP			PayOut(_recipient, _amount)
      PUSH 40		PayOut(_recipient, _amount)
      MLOAD			PayOut(_recipient, _amount)
      DUP1			PayOut(_recipient, _amount)
      SWAP2			PayOut(_recipient, _amount)
      SUB			PayOut(_recipient, _amount)
      SWAP1			PayOut(_recipient, _amount)
      LOG2			PayOut(_recipient, _amount)
      PUSH 1		true
      SWAP1			return true
      POP			return true
      PUSH [tag17]		return true
      JUMP			return true
      PUSH [tag23]		if (_recipient.call.value(_amount)()) {...
      JUMP			if (_recipient.call.value(_amount)()) {...
    tag22: 
      JUMPDEST		if (_recipient.call.value(_amount)()) {...
      PUSH 0		false
      SWAP1			return false
      POP			return false
      PUSH [tag17]		return false
      JUMP			return false
    tag23: 
      JUMPDEST		if (_recipient.call.value(_amount)()) {...
    tag17: 
      JUMPDEST		function payOut(address _recipient, uint _amount) returns (bool) {...
      SWAP3			function payOut(address _recipient, uint _amount) returns (bool) {...
      SWAP2			function payOut(address _recipient, uint _amount) returns (bool) {...
      POP			function payOut(address _recipient, uint _amount) returns (bool) {...
      POP			function payOut(address _recipient, uint _amount) returns (bool) {...
      JUMP	[out]		function payOut(address _recipient, uint _amount) returns (bool) {...
  3: 
  .code:
    PUSH 60		contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH 40		contract DAO is DAOInterface, Token, TokenCreation {...
    MSTORE			contract DAO is DAOInterface, Token, TokenCreation {...
    CALLDATASIZE			contract DAO is DAOInterface, Token, TokenCreation {...
    ISZERO			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH [tag1]		contract DAO is DAOInterface, Token, TokenCreation {...
    JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH 0		contract DAO is DAOInterface, Token, TokenCreation {...
    CALLDATALOAD			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH 100000000000000000000000000000000000000000000000000000000		contract DAO is DAOInterface, Token, TokenCreation {...
    SWAP1			contract DAO is DAOInterface, Token, TokenCreation {...
    DIV			contract DAO is DAOInterface, Token, TokenCreation {...
    DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH 13CF08B		contract DAO is DAOInterface, Token, TokenCreation {...
    EQ			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH [tag2]		contract DAO is DAOInterface, Token, TokenCreation {...
    JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
    DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH 95EA7B3		contract DAO is DAOInterface, Token, TokenCreation {...
    EQ			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH [tag3]		contract DAO is DAOInterface, Token, TokenCreation {...
    JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
    DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH C3B7B96		contract DAO is DAOInterface, Token, TokenCreation {...
    EQ			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH [tag4]		contract DAO is DAOInterface, Token, TokenCreation {...
    JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
    DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH E708203		contract DAO is DAOInterface, Token, TokenCreation {...
    EQ			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH [tag5]		contract DAO is DAOInterface, Token, TokenCreation {...
    JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
    DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH 149ACF9A		contract DAO is DAOInterface, Token, TokenCreation {...
    EQ			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH [tag6]		contract DAO is DAOInterface, Token, TokenCreation {...
    JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
    DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH 18160DDD		contract DAO is DAOInterface, Token, TokenCreation {...
    EQ			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH [tag7]		contract DAO is DAOInterface, Token, TokenCreation {...
    JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
    DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH 1F2DC5EF		contract DAO is DAOInterface, Token, TokenCreation {...
    EQ			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH [tag8]		contract DAO is DAOInterface, Token, TokenCreation {...
    JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
    DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH 21B5B8DD		contract DAO is DAOInterface, Token, TokenCreation {...
    EQ			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH [tag9]		contract DAO is DAOInterface, Token, TokenCreation {...
    JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
    DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH 237E9492		contract DAO is DAOInterface, Token, TokenCreation {...
    EQ			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH [tag10]		contract DAO is DAOInterface, Token, TokenCreation {...
    JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
    DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH 23B872DD		contract DAO is DAOInterface, Token, TokenCreation {...
    EQ			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH [tag11]		contract DAO is DAOInterface, Token, TokenCreation {...
    JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
    DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH 2632BF20		contract DAO is DAOInterface, Token, TokenCreation {...
    EQ			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH [tag12]		contract DAO is DAOInterface, Token, TokenCreation {...
    JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
    DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH 34145808		contract DAO is DAOInterface, Token, TokenCreation {...
    EQ			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH [tag13]		contract DAO is DAOInterface, Token, TokenCreation {...
    JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
    DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH 39D1F908		contract DAO is DAOInterface, Token, TokenCreation {...
    EQ			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH [tag14]		contract DAO is DAOInterface, Token, TokenCreation {...
    JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
    DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH 4B6753BC		contract DAO is DAOInterface, Token, TokenCreation {...
    EQ			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH [tag15]		contract DAO is DAOInterface, Token, TokenCreation {...
    JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
    DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH 4DF6D6CC		contract DAO is DAOInterface, Token, TokenCreation {...
    EQ			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH [tag16]		contract DAO is DAOInterface, Token, TokenCreation {...
    JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
    DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH 4E10C3EE		contract DAO is DAOInterface, Token, TokenCreation {...
    EQ			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH [tag17]		contract DAO is DAOInterface, Token, TokenCreation {...
    JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
    DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH 590E1AE3		contract DAO is DAOInterface, Token, TokenCreation {...
    EQ			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH [tag18]		contract DAO is DAOInterface, Token, TokenCreation {...
    JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
    DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH 612E45A3		contract DAO is DAOInterface, Token, TokenCreation {...
    EQ			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH [tag19]		contract DAO is DAOInterface, Token, TokenCreation {...
    JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
    DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH 643F7CDD		contract DAO is DAOInterface, Token, TokenCreation {...
    EQ			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH [tag20]		contract DAO is DAOInterface, Token, TokenCreation {...
    JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
    DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH 674ED066		contract DAO is DAOInterface, Token, TokenCreation {...
    EQ			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH [tag21]		contract DAO is DAOInterface, Token, TokenCreation {...
    JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
    DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH 6837FF1E		contract DAO is DAOInterface, Token, TokenCreation {...
    EQ			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH [tag22]		contract DAO is DAOInterface, Token, TokenCreation {...
    JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
    DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH 70A08231		contract DAO is DAOInterface, Token, TokenCreation {...
    EQ			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH [tag23]		contract DAO is DAOInterface, Token, TokenCreation {...
    JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
    DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH 749F9889		contract DAO is DAOInterface, Token, TokenCreation {...
    EQ			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH [tag24]		contract DAO is DAOInterface, Token, TokenCreation {...
    JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
    DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH 78524B2E		contract DAO is DAOInterface, Token, TokenCreation {...
    EQ			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH [tag25]		contract DAO is DAOInterface, Token, TokenCreation {...
    JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
    DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH 81F03FCB		contract DAO is DAOInterface, Token, TokenCreation {...
    EQ			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH [tag26]		contract DAO is DAOInterface, Token, TokenCreation {...
    JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
    DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH 82661DC4		contract DAO is DAOInterface, Token, TokenCreation {...
    EQ			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH [tag27]		contract DAO is DAOInterface, Token, TokenCreation {...
    JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
    DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH 82BF6464		contract DAO is DAOInterface, Token, TokenCreation {...
    EQ			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH [tag28]		contract DAO is DAOInterface, Token, TokenCreation {...
    JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
    DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH 8B15A605		contract DAO is DAOInterface, Token, TokenCreation {...
    EQ			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH [tag29]		contract DAO is DAOInterface, Token, TokenCreation {...
    JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
    DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH 8D7AF473		contract DAO is DAOInterface, Token, TokenCreation {...
    EQ			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH [tag30]		contract DAO is DAOInterface, Token, TokenCreation {...
    JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
    DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH 96D7F3F5		contract DAO is DAOInterface, Token, TokenCreation {...
    EQ			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH [tag31]		contract DAO is DAOInterface, Token, TokenCreation {...
    JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
    DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH A1DA2FB9		contract DAO is DAOInterface, Token, TokenCreation {...
    EQ			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH [tag32]		contract DAO is DAOInterface, Token, TokenCreation {...
    JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
    DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH A3912EC8		contract DAO is DAOInterface, Token, TokenCreation {...
    EQ			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH [tag33]		contract DAO is DAOInterface, Token, TokenCreation {...
    JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
    DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH A9059CBB		contract DAO is DAOInterface, Token, TokenCreation {...
    EQ			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH [tag34]		contract DAO is DAOInterface, Token, TokenCreation {...
    JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
    DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH B7BC2C84		contract DAO is DAOInterface, Token, TokenCreation {...
    EQ			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH [tag35]		contract DAO is DAOInterface, Token, TokenCreation {...
    JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
    DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH BAAC5300		contract DAO is DAOInterface, Token, TokenCreation {...
    EQ			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH [tag36]		contract DAO is DAOInterface, Token, TokenCreation {...
    JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
    DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH BE7C29C1		contract DAO is DAOInterface, Token, TokenCreation {...
    EQ			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH [tag37]		contract DAO is DAOInterface, Token, TokenCreation {...
    JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
    DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH C9D27AFE		contract DAO is DAOInterface, Token, TokenCreation {...
    EQ			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH [tag38]		contract DAO is DAOInterface, Token, TokenCreation {...
    JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
    DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH CC9AE3F6		contract DAO is DAOInterface, Token, TokenCreation {...
    EQ			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH [tag39]		contract DAO is DAOInterface, Token, TokenCreation {...
    JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
    DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH CDEF91D0		contract DAO is DAOInterface, Token, TokenCreation {...
    EQ			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH [tag40]		contract DAO is DAOInterface, Token, TokenCreation {...
    JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
    DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH DBDE1988		contract DAO is DAOInterface, Token, TokenCreation {...
    EQ			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH [tag41]		contract DAO is DAOInterface, Token, TokenCreation {...
    JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
    DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH DD62ED3E		contract DAO is DAOInterface, Token, TokenCreation {...
    EQ			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH [tag42]		contract DAO is DAOInterface, Token, TokenCreation {...
    JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
    DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH E33734FD		contract DAO is DAOInterface, Token, TokenCreation {...
    EQ			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH [tag43]		contract DAO is DAOInterface, Token, TokenCreation {...
    JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
    DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH E5962195		contract DAO is DAOInterface, Token, TokenCreation {...
    EQ			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH [tag44]		contract DAO is DAOInterface, Token, TokenCreation {...
    JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
    DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH E66F53B7		contract DAO is DAOInterface, Token, TokenCreation {...
    EQ			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH [tag45]		contract DAO is DAOInterface, Token, TokenCreation {...
    JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
    DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH ECEB2945		contract DAO is DAOInterface, Token, TokenCreation {...
    EQ			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH [tag46]		contract DAO is DAOInterface, Token, TokenCreation {...
    JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
    DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH F8C80D26		contract DAO is DAOInterface, Token, TokenCreation {...
    EQ			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH [tag47]		contract DAO is DAOInterface, Token, TokenCreation {...
    JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH [tag1]		contract DAO is DAOInterface, Token, TokenCreation {...
    JUMP			contract DAO is DAOInterface, Token, TokenCreation {...
  tag1: 
    JUMPDEST		contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH [tag48]		contract DAO is DAOInterface, Token, TokenCreation {...
  tag49: 
    JUMPDEST		function () returns (bool success) {...
    PUSH 0		bool success
    PUSH 34BC00		40 days
    PUSH F		closingTime
    PUSH 0		closingTime
    POP			closingTime
    SLOAD			closingTime
    ADD			closingTime + creationGracePeriod
    TIMESTAMP			now
    LT			now < closingTime + creationGracePeriod
    DUP1			now < closingTime + creationGracePeriod && msg.sender != address(extraBalance)
    ISZERO			now < closingTime + creationGracePeriod && msg.sender != address(extraBalance)
    PUSH [tag51]		now < closingTime + creationGracePeriod && msg.sender != address(extraBalance)
    JUMPI			now < closingTime + creationGracePeriod && msg.sender != address(extraBalance)
    POP			now < closingTime + creationGracePeriod && msg.sender != address(extraBalance)
    PUSH 12		extraBalance
    PUSH 0		extraBalance
    SWAP1			extraBalance
    SLOAD			extraBalance
    SWAP1			extraBalance
    PUSH 100		extraBalance
    EXP			extraBalance
    SWAP1			extraBalance
    DIV			extraBalance
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		extraBalance
    AND			extraBalance
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		msg.sender != address(extraBalance)
    AND			msg.sender != address(extraBalance)
    CALLER			msg.sender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		msg.sender != address(extraBalance)
    AND			msg.sender != address(extraBalance)
    EQ			msg.sender != address(extraBalance)
    ISZERO			msg.sender != address(extraBalance)
  tag51: 
    JUMPDEST		now < closingTime + creationGracePeriod && msg.sender != address(extraBalance)
    ISZERO			if (now < closingTime + creationGracePeriod && msg.sender != address(extraBalance))...
    PUSH [tag52]		if (now < closingTime + creationGracePeriod && msg.sender != address(extraBalance))...
    JUMPI			if (now < closingTime + creationGracePeriod && msg.sender != address(extraBalance))...
    PUSH [tag53]		createTokenProxy(msg.sender)
    CALLER			msg.sender
    PUSH [tag54]		createTokenProxy
    JUMP	[in]		createTokenProxy(msg.sender)
  tag53: 
    JUMPDEST		createTokenProxy(msg.sender)
    SWAP1			return createTokenProxy(msg.sender)
    POP			return createTokenProxy(msg.sender)
    PUSH [tag50]		return createTokenProxy(msg.sender)
    JUMP			return createTokenProxy(msg.sender)
    PUSH [tag55]		if (now < closingTime + creationGracePeriod && msg.sender != address(extraBalance))...
    JUMP			if (now < closingTime + creationGracePeriod && msg.sender != address(extraBalance))...
  tag52: 
    JUMPDEST		if (now < closingTime + creationGracePeriod && msg.sender != address(extraBalance))...
    PUSH [tag56]		receiveEther()
    PUSH [tag57]		receiveEther
    JUMP	[in]		receiveEther()
  tag56: 
    JUMPDEST		receiveEther()
    SWAP1			return receiveEther()
    POP			return receiveEther()
    PUSH [tag50]		return receiveEther()
    JUMP			return receiveEther()
  tag55: 
    JUMPDEST		if (now < closingTime + creationGracePeriod && msg.sender != address(extraBalance))...
  tag50: 
    JUMPDEST		function () returns (bool success) {...
    SWAP1			function () returns (bool success) {...
    JUMP	[out]		function () returns (bool success) {...
  tag48: 
    JUMPDEST		contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH 40		contract DAO is DAOInterface, Token, TokenCreation {...
    MLOAD			contract DAO is DAOInterface, Token, TokenCreation {...
    DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
    DUP3			contract DAO is DAOInterface, Token, TokenCreation {...
    DUP2			contract DAO is DAOInterface, Token, TokenCreation {...
    MSTORE			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH 20		contract DAO is DAOInterface, Token, TokenCreation {...
    ADD			contract DAO is DAOInterface, Token, TokenCreation {...
    SWAP2			contract DAO is DAOInterface, Token, TokenCreation {...
    POP			contract DAO is DAOInterface, Token, TokenCreation {...
    POP			contract DAO is DAOInterface, Token, TokenCreation {...
    PUSH 40		contract DAO is DAOInterface, Token, TokenCreation {...
    MLOAD			contract DAO is DAOInterface, Token, TokenCreation {...
    DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
    SWAP2			contract DAO is DAOInterface, Token, TokenCreation {...
    SUB			contract DAO is DAOInterface, Token, TokenCreation {...
    SWAP1			contract DAO is DAOInterface, Token, TokenCreation {...
    RETURN			contract DAO is DAOInterface, Token, TokenCreation {...
  tag2: 
    JUMPDEST		Proposal[] public proposals
    PUSH [tag58]		Proposal[] public proposals
    PUSH 4		Proposal[] public proposals
    DUP1			Proposal[] public proposals
    DUP1			Proposal[] public proposals
    CALLDATALOAD			Proposal[] public proposals
    SWAP1			Proposal[] public proposals
    PUSH 20		Proposal[] public proposals
    ADD			Proposal[] public proposals
    SWAP1			Proposal[] public proposals
    SWAP2			Proposal[] public proposals
    SWAP1			Proposal[] public proposals
    POP			Proposal[] public proposals
    POP			Proposal[] public proposals
    PUSH [tag59]		Proposal[] public proposals
    JUMP			Proposal[] public proposals
  tag58: 
    JUMPDEST		Proposal[] public proposals
    PUSH 40		Proposal[] public proposals
    MLOAD			Proposal[] public proposals
    DUP1			Proposal[] public proposals
    DUP14			Proposal[] public proposals
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		Proposal[] public proposals
    AND			Proposal[] public proposals
    DUP2			Proposal[] public proposals
    MSTORE			Proposal[] public proposals
    PUSH 20		Proposal[] public proposals
    ADD			Proposal[] public proposals
    DUP13			Proposal[] public proposals
    DUP2			Proposal[] public proposals
    MSTORE			Proposal[] public proposals
    PUSH 20		Proposal[] public proposals
    ADD			Proposal[] public proposals
    DUP1			Proposal[] public proposals
    PUSH 20		Proposal[] public proposals
    ADD			Proposal[] public proposals
    DUP12			Proposal[] public proposals
    DUP2			Proposal[] public proposals
    MSTORE			Proposal[] public proposals
    PUSH 20		Proposal[] public proposals
    ADD			Proposal[] public proposals
    DUP11			Proposal[] public proposals
    DUP2			Proposal[] public proposals
    MSTORE			Proposal[] public proposals
    PUSH 20		Proposal[] public proposals
    ADD			Proposal[] public proposals
    DUP10			Proposal[] public proposals
    DUP2			Proposal[] public proposals
    MSTORE			Proposal[] public proposals
    PUSH 20		Proposal[] public proposals
    ADD			Proposal[] public proposals
    DUP9			Proposal[] public proposals
    DUP2			Proposal[] public proposals
    MSTORE			Proposal[] public proposals
    PUSH 20		Proposal[] public proposals
    ADD			Proposal[] public proposals
    DUP8			Proposal[] public proposals
    DUP2			Proposal[] public proposals
    MSTORE			Proposal[] public proposals
    PUSH 20		Proposal[] public proposals
    ADD			Proposal[] public proposals
    DUP7			Proposal[] public proposals
    DUP2			Proposal[] public proposals
    MSTORE			Proposal[] public proposals
    PUSH 20		Proposal[] public proposals
    ADD			Proposal[] public proposals
    DUP6			Proposal[] public proposals
    DUP2			Proposal[] public proposals
    MSTORE			Proposal[] public proposals
    PUSH 20		Proposal[] public proposals
    ADD			Proposal[] public proposals
    DUP5			Proposal[] public proposals
    DUP2			Proposal[] public proposals
    MSTORE			Proposal[] public proposals
    PUSH 20		Proposal[] public proposals
    ADD			Proposal[] public proposals
    DUP4			Proposal[] public proposals
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		Proposal[] public proposals
    AND			Proposal[] public proposals
    DUP2			Proposal[] public proposals
    MSTORE			Proposal[] public proposals
    PUSH 20		Proposal[] public proposals
    ADD			Proposal[] public proposals
    DUP3			Proposal[] public proposals
    DUP2			Proposal[] public proposals
    SUB			Proposal[] public proposals
    DUP3			Proposal[] public proposals
    MSTORE			Proposal[] public proposals
    DUP13			Proposal[] public proposals
    DUP2			Proposal[] public proposals
    DUP2			Proposal[] public proposals
    SLOAD			Proposal[] public proposals
    PUSH 1		Proposal[] public proposals
    DUP2			Proposal[] public proposals
    PUSH 1		Proposal[] public proposals
    AND			Proposal[] public proposals
    ISZERO			Proposal[] public proposals
    PUSH 100		Proposal[] public proposals
    MUL			Proposal[] public proposals
    SUB			Proposal[] public proposals
    AND			Proposal[] public proposals
    PUSH 2		Proposal[] public proposals
    SWAP1			Proposal[] public proposals
    DIV			Proposal[] public proposals
    DUP2			Proposal[] public proposals
    MSTORE			Proposal[] public proposals
    PUSH 20		Proposal[] public proposals
    ADD			Proposal[] public proposals
    SWAP2			Proposal[] public proposals
    POP			Proposal[] public proposals
    DUP1			Proposal[] public proposals
    SLOAD			Proposal[] public proposals
    PUSH 1		Proposal[] public proposals
    DUP2			Proposal[] public proposals
    PUSH 1		Proposal[] public proposals
    AND			Proposal[] public proposals
    ISZERO			Proposal[] public proposals
    PUSH 100		Proposal[] public proposals
    MUL			Proposal[] public proposals
    SUB			Proposal[] public proposals
    AND			Proposal[] public proposals
    PUSH 2		Proposal[] public proposals
    SWAP1			Proposal[] public proposals
    DIV			Proposal[] public proposals
    DUP1			Proposal[] public proposals
    ISZERO			Proposal[] public proposals
    PUSH [tag60]		Proposal[] public proposals
    JUMPI			Proposal[] public proposals
    DUP1			Proposal[] public proposals
    PUSH 1F		Proposal[] public proposals
    LT			Proposal[] public proposals
    PUSH [tag61]		Proposal[] public proposals
    JUMPI			Proposal[] public proposals
    PUSH 100		Proposal[] public proposals
    DUP1			Proposal[] public proposals
    DUP4			Proposal[] public proposals
    SLOAD			Proposal[] public proposals
    DIV			Proposal[] public proposals
    MUL			Proposal[] public proposals
    DUP4			Proposal[] public proposals
    MSTORE			Proposal[] public proposals
    SWAP2			Proposal[] public proposals
    PUSH 20		Proposal[] public proposals
    ADD			Proposal[] public proposals
    SWAP2			Proposal[] public proposals
    PUSH [tag60]		Proposal[] public proposals
    JUMP			Proposal[] public proposals
  tag61: 
    JUMPDEST		Proposal[] public proposals
    DUP3			Proposal[] public proposals
    ADD			Proposal[] public proposals
    SWAP2			Proposal[] public proposals
    SWAP1			Proposal[] public proposals
    PUSH 0		Proposal[] public proposals
    MSTORE			Proposal[] public proposals
    PUSH 20		Proposal[] public proposals
    PUSH 0		Proposal[] public proposals
    SHA3			Proposal[] public proposals
    SWAP1			Proposal[] public proposals
  tag62: 
    JUMPDEST		Proposal[] public proposals
    DUP2			Proposal[] public proposals
    SLOAD			Proposal[] public proposals
    DUP2			Proposal[] public proposals
    MSTORE			Proposal[] public proposals
    SWAP1			Proposal[] public proposals
    PUSH 1		Proposal[] public proposals
    ADD			Proposal[] public proposals
    SWAP1			Proposal[] public proposals
    PUSH 20		Proposal[] public proposals
    ADD			Proposal[] public proposals
    DUP1			Proposal[] public proposals
    DUP4			Proposal[] public proposals
    GT			Proposal[] public proposals
    PUSH [tag62]		Proposal[] public proposals
    JUMPI			Proposal[] public proposals
    DUP3			Proposal[] public proposals
    SWAP1			Proposal[] public proposals
    SUB			Proposal[] public proposals
    PUSH 1F		Proposal[] public proposals
    AND			Proposal[] public proposals
    DUP3			Proposal[] public proposals
    ADD			Proposal[] public proposals
    SWAP2			Proposal[] public proposals
  tag60: 
    JUMPDEST		Proposal[] public proposals
    POP			Proposal[] public proposals
    POP			Proposal[] public proposals
    SWAP14			Proposal[] public proposals
    POP			Proposal[] public proposals
    POP			Proposal[] public proposals
    POP			Proposal[] public proposals
    POP			Proposal[] public proposals
    POP			Proposal[] public proposals
    POP			Proposal[] public proposals
    POP			Proposal[] public proposals
    POP			Proposal[] public proposals
    POP			Proposal[] public proposals
    POP			Proposal[] public proposals
    POP			Proposal[] public proposals
    POP			Proposal[] public proposals
    POP			Proposal[] public proposals
    POP			Proposal[] public proposals
    PUSH 40		Proposal[] public proposals
    MLOAD			Proposal[] public proposals
    DUP1			Proposal[] public proposals
    SWAP2			Proposal[] public proposals
    SUB			Proposal[] public proposals
    SWAP1			Proposal[] public proposals
    RETURN			Proposal[] public proposals
  tag3: 
    JUMPDEST		function approve(address _spender, uint256 _amount) returns (bool success) {...
    PUSH [tag63]		function approve(address _spender, uint256 _amount) returns (bool success) {...
    PUSH 4		function approve(address _spender, uint256 _amount) returns (bool success) {...
    DUP1			function approve(address _spender, uint256 _amount) returns (bool success) {...
    DUP1			function approve(address _spender, uint256 _amount) returns (bool success) {...
    CALLDATALOAD			function approve(address _spender, uint256 _amount) returns (bool success) {...
    SWAP1			function approve(address _spender, uint256 _amount) returns (bool success) {...
    PUSH 20		function approve(address _spender, uint256 _amount) returns (bool success) {...
    ADD			function approve(address _spender, uint256 _amount) returns (bool success) {...
    SWAP1			function approve(address _spender, uint256 _amount) returns (bool success) {...
    SWAP2			function approve(address _spender, uint256 _amount) returns (bool success) {...
    SWAP1			function approve(address _spender, uint256 _amount) returns (bool success) {...
    DUP1			function approve(address _spender, uint256 _amount) returns (bool success) {...
    CALLDATALOAD			function approve(address _spender, uint256 _amount) returns (bool success) {...
    SWAP1			function approve(address _spender, uint256 _amount) returns (bool success) {...
    PUSH 20		function approve(address _spender, uint256 _amount) returns (bool success) {...
    ADD			function approve(address _spender, uint256 _amount) returns (bool success) {...
    SWAP1			function approve(address _spender, uint256 _amount) returns (bool success) {...
    SWAP2			function approve(address _spender, uint256 _amount) returns (bool success) {...
    SWAP1			function approve(address _spender, uint256 _amount) returns (bool success) {...
    POP			function approve(address _spender, uint256 _amount) returns (bool success) {...
    POP			function approve(address _spender, uint256 _amount) returns (bool success) {...
    PUSH [tag64]		function approve(address _spender, uint256 _amount) returns (bool success) {...
    JUMP			function approve(address _spender, uint256 _amount) returns (bool success) {...
  tag63: 
    JUMPDEST		function approve(address _spender, uint256 _amount) returns (bool success) {...
    PUSH 40		function approve(address _spender, uint256 _amount) returns (bool success) {...
    MLOAD			function approve(address _spender, uint256 _amount) returns (bool success) {...
    DUP1			function approve(address _spender, uint256 _amount) returns (bool success) {...
    DUP3			function approve(address _spender, uint256 _amount) returns (bool success) {...
    DUP2			function approve(address _spender, uint256 _amount) returns (bool success) {...
    MSTORE			function approve(address _spender, uint256 _amount) returns (bool success) {...
    PUSH 20		function approve(address _spender, uint256 _amount) returns (bool success) {...
    ADD			function approve(address _spender, uint256 _amount) returns (bool success) {...
    SWAP2			function approve(address _spender, uint256 _amount) returns (bool success) {...
    POP			function approve(address _spender, uint256 _amount) returns (bool success) {...
    POP			function approve(address _spender, uint256 _amount) returns (bool success) {...
    PUSH 40		function approve(address _spender, uint256 _amount) returns (bool success) {...
    MLOAD			function approve(address _spender, uint256 _amount) returns (bool success) {...
    DUP1			function approve(address _spender, uint256 _amount) returns (bool success) {...
    SWAP2			function approve(address _spender, uint256 _amount) returns (bool success) {...
    SUB			function approve(address _spender, uint256 _amount) returns (bool success) {...
    SWAP1			function approve(address _spender, uint256 _amount) returns (bool success) {...
    RETURN			function approve(address _spender, uint256 _amount) returns (bool success) {...
  tag4: 
    JUMPDEST		uint public minTokensToCreate
    PUSH [tag65]		uint public minTokensToCreate
    PUSH 4		uint public minTokensToCreate
    DUP1			uint public minTokensToCreate
    POP			uint public minTokensToCreate
    POP			uint public minTokensToCreate
    PUSH [tag66]		uint public minTokensToCreate
    JUMP			uint public minTokensToCreate
  tag65: 
    JUMPDEST		uint public minTokensToCreate
    PUSH 40		uint public minTokensToCreate
    MLOAD			uint public minTokensToCreate
    DUP1			uint public minTokensToCreate
    DUP3			uint public minTokensToCreate
    DUP2			uint public minTokensToCreate
    MSTORE			uint public minTokensToCreate
    PUSH 20		uint public minTokensToCreate
    ADD			uint public minTokensToCreate
    SWAP2			uint public minTokensToCreate
    POP			uint public minTokensToCreate
    POP			uint public minTokensToCreate
    PUSH 40		uint public minTokensToCreate
    MLOAD			uint public minTokensToCreate
    DUP1			uint public minTokensToCreate
    SWAP2			uint public minTokensToCreate
    SUB			uint public minTokensToCreate
    SWAP1			uint public minTokensToCreate
    RETURN			uint public minTokensToCreate
  tag5: 
    JUMPDEST		ManagedAccount public rewardAccount
    PUSH [tag67]		ManagedAccount public rewardAccount
    PUSH 4		ManagedAccount public rewardAccount
    DUP1			ManagedAccount public rewardAccount
    POP			ManagedAccount public rewardAccount
    POP			ManagedAccount public rewardAccount
    PUSH [tag68]		ManagedAccount public rewardAccount
    JUMP			ManagedAccount public rewardAccount
  tag67: 
    JUMPDEST		ManagedAccount public rewardAccount
    PUSH 40		ManagedAccount public rewardAccount
    MLOAD			ManagedAccount public rewardAccount
    DUP1			ManagedAccount public rewardAccount
    DUP3			ManagedAccount public rewardAccount
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		ManagedAccount public rewardAccount
    AND			ManagedAccount public rewardAccount
    DUP2			ManagedAccount public rewardAccount
    MSTORE			ManagedAccount public rewardAccount
    PUSH 20		ManagedAccount public rewardAccount
    ADD			ManagedAccount public rewardAccount
    SWAP2			ManagedAccount public rewardAccount
    POP			ManagedAccount public rewardAccount
    POP			ManagedAccount public rewardAccount
    PUSH 40		ManagedAccount public rewardAccount
    MLOAD			ManagedAccount public rewardAccount
    DUP1			ManagedAccount public rewardAccount
    SWAP2			ManagedAccount public rewardAccount
    SUB			ManagedAccount public rewardAccount
    SWAP1			ManagedAccount public rewardAccount
    RETURN			ManagedAccount public rewardAccount
  tag6: 
    JUMPDEST		DAO_Creator public daoCreator
    PUSH [tag69]		DAO_Creator public daoCreator
    PUSH 4		DAO_Creator public daoCreator
    DUP1			DAO_Creator public daoCreator
    POP			DAO_Creator public daoCreator
    POP			DAO_Creator public daoCreator
    PUSH [tag70]		DAO_Creator public daoCreator
    JUMP			DAO_Creator public daoCreator
  tag69: 
    JUMPDEST		DAO_Creator public daoCreator
    PUSH 40		DAO_Creator public daoCreator
    MLOAD			DAO_Creator public daoCreator
    DUP1			DAO_Creator public daoCreator
    DUP3			DAO_Creator public daoCreator
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		DAO_Creator public daoCreator
    AND			DAO_Creator public daoCreator
    DUP2			DAO_Creator public daoCreator
    MSTORE			DAO_Creator public daoCreator
    PUSH 20		DAO_Creator public daoCreator
    ADD			DAO_Creator public daoCreator
    SWAP2			DAO_Creator public daoCreator
    POP			DAO_Creator public daoCreator
    POP			DAO_Creator public daoCreator
    PUSH 40		DAO_Creator public daoCreator
    MLOAD			DAO_Creator public daoCreator
    DUP1			DAO_Creator public daoCreator
    SWAP2			DAO_Creator public daoCreator
    SUB			DAO_Creator public daoCreator
    SWAP1			DAO_Creator public daoCreator
    RETURN			DAO_Creator public daoCreator
  tag7: 
    JUMPDEST		uint256 public totalSupply
    PUSH [tag71]		uint256 public totalSupply
    PUSH 4		uint256 public totalSupply
    DUP1			uint256 public totalSupply
    POP			uint256 public totalSupply
    POP			uint256 public totalSupply
    PUSH [tag72]		uint256 public totalSupply
    JUMP			uint256 public totalSupply
  tag71: 
    JUMPDEST		uint256 public totalSupply
    PUSH 40		uint256 public totalSupply
    MLOAD			uint256 public totalSupply
    DUP1			uint256 public totalSupply
    DUP3			uint256 public totalSupply
    DUP2			uint256 public totalSupply
    MSTORE			uint256 public totalSupply
    PUSH 20		uint256 public totalSupply
    ADD			uint256 public totalSupply
    SWAP2			uint256 public totalSupply
    POP			uint256 public totalSupply
    POP			uint256 public totalSupply
    PUSH 40		uint256 public totalSupply
    MLOAD			uint256 public totalSupply
    DUP1			uint256 public totalSupply
    SWAP2			uint256 public totalSupply
    SUB			uint256 public totalSupply
    SWAP1			uint256 public totalSupply
    RETURN			uint256 public totalSupply
  tag8: 
    JUMPDEST		function divisor() constant returns (uint divisor) {...
    PUSH [tag73]		function divisor() constant returns (uint divisor) {...
    PUSH 4		function divisor() constant returns (uint divisor) {...
    DUP1			function divisor() constant returns (uint divisor) {...
    POP			function divisor() constant returns (uint divisor) {...
    POP			function divisor() constant returns (uint divisor) {...
    PUSH [tag74]		function divisor() constant returns (uint divisor) {...
    JUMP			function divisor() constant returns (uint divisor) {...
  tag73: 
    JUMPDEST		function divisor() constant returns (uint divisor) {...
    PUSH 40		function divisor() constant returns (uint divisor) {...
    MLOAD			function divisor() constant returns (uint divisor) {...
    DUP1			function divisor() constant returns (uint divisor) {...
    DUP3			function divisor() constant returns (uint divisor) {...
    DUP2			function divisor() constant returns (uint divisor) {...
    MSTORE			function divisor() constant returns (uint divisor) {...
    PUSH 20		function divisor() constant returns (uint divisor) {...
    ADD			function divisor() constant returns (uint divisor) {...
    SWAP2			function divisor() constant returns (uint divisor) {...
    POP			function divisor() constant returns (uint divisor) {...
    POP			function divisor() constant returns (uint divisor) {...
    PUSH 40		function divisor() constant returns (uint divisor) {...
    MLOAD			function divisor() constant returns (uint divisor) {...
    DUP1			function divisor() constant returns (uint divisor) {...
    SWAP2			function divisor() constant returns (uint divisor) {...
    SUB			function divisor() constant returns (uint divisor) {...
    SWAP1			function divisor() constant returns (uint divisor) {...
    RETURN			function divisor() constant returns (uint divisor) {...
  tag9: 
    JUMPDEST		ManagedAccount public extraBalance
    PUSH [tag75]		ManagedAccount public extraBalance
    PUSH 4		ManagedAccount public extraBalance
    DUP1			ManagedAccount public extraBalance
    POP			ManagedAccount public extraBalance
    POP			ManagedAccount public extraBalance
    PUSH [tag76]		ManagedAccount public extraBalance
    JUMP			ManagedAccount public extraBalance
  tag75: 
    JUMPDEST		ManagedAccount public extraBalance
    PUSH 40		ManagedAccount public extraBalance
    MLOAD			ManagedAccount public extraBalance
    DUP1			ManagedAccount public extraBalance
    DUP3			ManagedAccount public extraBalance
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		ManagedAccount public extraBalance
    AND			ManagedAccount public extraBalance
    DUP2			ManagedAccount public extraBalance
    MSTORE			ManagedAccount public extraBalance
    PUSH 20		ManagedAccount public extraBalance
    ADD			ManagedAccount public extraBalance
    SWAP2			ManagedAccount public extraBalance
    POP			ManagedAccount public extraBalance
    POP			ManagedAccount public extraBalance
    PUSH 40		ManagedAccount public extraBalance
    MLOAD			ManagedAccount public extraBalance
    DUP1			ManagedAccount public extraBalance
    SWAP2			ManagedAccount public extraBalance
    SUB			ManagedAccount public extraBalance
    SWAP1			ManagedAccount public extraBalance
    RETURN			ManagedAccount public extraBalance
  tag10: 
    JUMPDEST		function executeProposal(...
    PUSH [tag77]		function executeProposal(...
    PUSH 4		function executeProposal(...
    DUP1			function executeProposal(...
    DUP1			function executeProposal(...
    CALLDATALOAD			function executeProposal(...
    SWAP1			function executeProposal(...
    PUSH 20		function executeProposal(...
    ADD			function executeProposal(...
    SWAP1			function executeProposal(...
    SWAP2			function executeProposal(...
    SWAP1			function executeProposal(...
    DUP1			function executeProposal(...
    CALLDATALOAD			function executeProposal(...
    SWAP1			function executeProposal(...
    PUSH 20		function executeProposal(...
    ADD			function executeProposal(...
    SWAP1			function executeProposal(...
    DUP3			function executeProposal(...
    ADD			function executeProposal(...
    DUP1			function executeProposal(...
    CALLDATALOAD			function executeProposal(...
    SWAP1			function executeProposal(...
    PUSH 20		function executeProposal(...
    ADD			function executeProposal(...
    SWAP2			function executeProposal(...
    SWAP2			function executeProposal(...
    SWAP1			function executeProposal(...
    DUP1			function executeProposal(...
    DUP1			function executeProposal(...
    PUSH 1F		function executeProposal(...
    ADD			function executeProposal(...
    PUSH 20		function executeProposal(...
    DUP1			function executeProposal(...
    SWAP2			function executeProposal(...
    DIV			function executeProposal(...
    MUL			function executeProposal(...
    PUSH 20		function executeProposal(...
    ADD			function executeProposal(...
    PUSH 40		function executeProposal(...
    MLOAD			function executeProposal(...
    SWAP1			function executeProposal(...
    DUP2			function executeProposal(...
    ADD			function executeProposal(...
    PUSH 40		function executeProposal(...
    MSTORE			function executeProposal(...
    DUP1			function executeProposal(...
    SWAP4			function executeProposal(...
    SWAP3			function executeProposal(...
    SWAP2			function executeProposal(...
    SWAP1			function executeProposal(...
    DUP2			function executeProposal(...
    DUP2			function executeProposal(...
    MSTORE			function executeProposal(...
    PUSH 20		function executeProposal(...
    ADD			function executeProposal(...
    DUP4			function executeProposal(...
    DUP4			function executeProposal(...
    DUP1			function executeProposal(...
    DUP3			function executeProposal(...
    DUP5			function executeProposal(...
    CALLDATACOPY			function executeProposal(...
    DUP3			function executeProposal(...
    ADD			function executeProposal(...
    SWAP2			function executeProposal(...
    POP			function executeProposal(...
    POP			function executeProposal(...
    POP			function executeProposal(...
    POP			function executeProposal(...
    POP			function executeProposal(...
    POP			function executeProposal(...
    SWAP1			function executeProposal(...
    SWAP1			function executeProposal(...
    SWAP2			function executeProposal(...
    SWAP1			function executeProposal(...
    POP			function executeProposal(...
    POP			function executeProposal(...
    PUSH [tag78]		function executeProposal(...
    JUMP			function executeProposal(...
  tag77: 
    JUMPDEST		function executeProposal(...
    PUSH 40		function executeProposal(...
    MLOAD			function executeProposal(...
    DUP1			function executeProposal(...
    DUP3			function executeProposal(...
    DUP2			function executeProposal(...
    MSTORE			function executeProposal(...
    PUSH 20		function executeProposal(...
    ADD			function executeProposal(...
    SWAP2			function executeProposal(...
    POP			function executeProposal(...
    POP			function executeProposal(...
    PUSH 40		function executeProposal(...
    MLOAD			function executeProposal(...
    DUP1			function executeProposal(...
    SWAP2			function executeProposal(...
    SUB			function executeProposal(...
    SWAP1			function executeProposal(...
    RETURN			function executeProposal(...
  tag11: 
    JUMPDEST		function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
    PUSH [tag79]		function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
    PUSH 4		function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
    DUP1			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
    DUP1			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
    CALLDATALOAD			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
    SWAP1			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
    PUSH 20		function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
    ADD			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
    SWAP1			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
    SWAP2			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
    SWAP1			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
    DUP1			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
    CALLDATALOAD			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
    SWAP1			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
    PUSH 20		function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
    ADD			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
    SWAP1			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
    SWAP2			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
    SWAP1			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
    DUP1			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
    CALLDATALOAD			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
    SWAP1			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
    PUSH 20		function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
    ADD			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
    SWAP1			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
    SWAP2			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
    SWAP1			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
    POP			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
    POP			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
    PUSH [tag80]		function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
    JUMP			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
  tag79: 
    JUMPDEST		function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
    PUSH 40		function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
    MLOAD			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
    DUP1			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
    DUP3			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
    DUP2			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
    MSTORE			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
    PUSH 20		function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
    ADD			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
    SWAP2			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
    POP			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
    POP			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
    PUSH 40		function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
    MLOAD			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
    DUP1			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
    SWAP2			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
    SUB			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
    SWAP1			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
    RETURN			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
  tag12: 
    JUMPDEST		function unblockMe() returns (bool) {...
    PUSH [tag81]		function unblockMe() returns (bool) {...
    PUSH 4		function unblockMe() returns (bool) {...
    DUP1			function unblockMe() returns (bool) {...
    POP			function unblockMe() returns (bool) {...
    POP			function unblockMe() returns (bool) {...
    PUSH [tag82]		function unblockMe() returns (bool) {...
    JUMP			function unblockMe() returns (bool) {...
  tag81: 
    JUMPDEST		function unblockMe() returns (bool) {...
    PUSH 40		function unblockMe() returns (bool) {...
    MLOAD			function unblockMe() returns (bool) {...
    DUP1			function unblockMe() returns (bool) {...
    DUP3			function unblockMe() returns (bool) {...
    DUP2			function unblockMe() returns (bool) {...
    MSTORE			function unblockMe() returns (bool) {...
    PUSH 20		function unblockMe() returns (bool) {...
    ADD			function unblockMe() returns (bool) {...
    SWAP2			function unblockMe() returns (bool) {...
    POP			function unblockMe() returns (bool) {...
    POP			function unblockMe() returns (bool) {...
    PUSH 40		function unblockMe() returns (bool) {...
    MLOAD			function unblockMe() returns (bool) {...
    DUP1			function unblockMe() returns (bool) {...
    SWAP2			function unblockMe() returns (bool) {...
    SUB			function unblockMe() returns (bool) {...
    SWAP1			function unblockMe() returns (bool) {...
    RETURN			function unblockMe() returns (bool) {...
  tag13: 
    JUMPDEST		uint public totalRewardToken
    PUSH [tag83]		uint public totalRewardToken
    PUSH 4		uint public totalRewardToken
    DUP1			uint public totalRewardToken
    POP			uint public totalRewardToken
    POP			uint public totalRewardToken
    PUSH [tag84]		uint public totalRewardToken
    JUMP			uint public totalRewardToken
  tag83: 
    JUMPDEST		uint public totalRewardToken
    PUSH 40		uint public totalRewardToken
    MLOAD			uint public totalRewardToken
    DUP1			uint public totalRewardToken
    DUP3			uint public totalRewardToken
    DUP2			uint public totalRewardToken
    MSTORE			uint public totalRewardToken
    PUSH 20		uint public totalRewardToken
    ADD			uint public totalRewardToken
    SWAP2			uint public totalRewardToken
    POP			uint public totalRewardToken
    POP			uint public totalRewardToken
    PUSH 40		uint public totalRewardToken
    MLOAD			uint public totalRewardToken
    DUP1			uint public totalRewardToken
    SWAP2			uint public totalRewardToken
    SUB			uint public totalRewardToken
    SWAP1			uint public totalRewardToken
    RETURN			uint public totalRewardToken
  tag14: 
    JUMPDEST		function actualBalance() constant returns (uint _actualBalance) {...
    PUSH [tag85]		function actualBalance() constant returns (uint _actualBalance) {...
    PUSH 4		function actualBalance() constant returns (uint _actualBalance) {...
    DUP1			function actualBalance() constant returns (uint _actualBalance) {...
    POP			function actualBalance() constant returns (uint _actualBalance) {...
    POP			function actualBalance() constant returns (uint _actualBalance) {...
    PUSH [tag86]		function actualBalance() constant returns (uint _actualBalance) {...
    JUMP			function actualBalance() constant returns (uint _actualBalance) {...
  tag85: 
    JUMPDEST		function actualBalance() constant returns (uint _actualBalance) {...
    PUSH 40		function actualBalance() constant returns (uint _actualBalance) {...
    MLOAD			function actualBalance() constant returns (uint _actualBalance) {...
    DUP1			function actualBalance() constant returns (uint _actualBalance) {...
    DUP3			function actualBalance() constant returns (uint _actualBalance) {...
    DUP2			function actualBalance() constant returns (uint _actualBalance) {...
    MSTORE			function actualBalance() constant returns (uint _actualBalance) {...
    PUSH 20		function actualBalance() constant returns (uint _actualBalance) {...
    ADD			function actualBalance() constant returns (uint _actualBalance) {...
    SWAP2			function actualBalance() constant returns (uint _actualBalance) {...
    POP			function actualBalance() constant returns (uint _actualBalance) {...
    POP			function actualBalance() constant returns (uint _actualBalance) {...
    PUSH 40		function actualBalance() constant returns (uint _actualBalance) {...
    MLOAD			function actualBalance() constant returns (uint _actualBalance) {...
    DUP1			function actualBalance() constant returns (uint _actualBalance) {...
    SWAP2			function actualBalance() constant returns (uint _actualBalance) {...
    SUB			function actualBalance() constant returns (uint _actualBalance) {...
    SWAP1			function actualBalance() constant returns (uint _actualBalance) {...
    RETURN			function actualBalance() constant returns (uint _actualBalance) {...
  tag15: 
    JUMPDEST		uint public closingTime
    PUSH [tag87]		uint public closingTime
    PUSH 4		uint public closingTime
    DUP1			uint public closingTime
    POP			uint public closingTime
    POP			uint public closingTime
    PUSH [tag88]		uint public closingTime
    JUMP			uint public closingTime
  tag87: 
    JUMPDEST		uint public closingTime
    PUSH 40		uint public closingTime
    MLOAD			uint public closingTime
    DUP1			uint public closingTime
    DUP3			uint public closingTime
    DUP2			uint public closingTime
    MSTORE			uint public closingTime
    PUSH 20		uint public closingTime
    ADD			uint public closingTime
    SWAP2			uint public closingTime
    POP			uint public closingTime
    POP			uint public closingTime
    PUSH 40		uint public closingTime
    MLOAD			uint public closingTime
    DUP1			uint public closingTime
    SWAP2			uint public closingTime
    SUB			uint public closingTime
    SWAP1			uint public closingTime
    RETURN			uint public closingTime
  tag16: 
    JUMPDEST		mapping (address => bool) public allowedRecipients
    PUSH [tag89]		mapping (address => bool) public allowedRecipients
    PUSH 4		mapping (address => bool) public allowedRecipients
    DUP1			mapping (address => bool) public allowedRecipients
    DUP1			mapping (address => bool) public allowedRecipients
    CALLDATALOAD			mapping (address => bool) public allowedRecipients
    SWAP1			mapping (address => bool) public allowedRecipients
    PUSH 20		mapping (address => bool) public allowedRecipients
    ADD			mapping (address => bool) public allowedRecipients
    SWAP1			mapping (address => bool) public allowedRecipients
    SWAP2			mapping (address => bool) public allowedRecipients
    SWAP1			mapping (address => bool) public allowedRecipients
    POP			mapping (address => bool) public allowedRecipients
    POP			mapping (address => bool) public allowedRecipients
    PUSH [tag90]		mapping (address => bool) public allowedRecipients
    JUMP			mapping (address => bool) public allowedRecipients
  tag89: 
    JUMPDEST		mapping (address => bool) public allowedRecipients
    PUSH 40		mapping (address => bool) public allowedRecipients
    MLOAD			mapping (address => bool) public allowedRecipients
    DUP1			mapping (address => bool) public allowedRecipients
    DUP3			mapping (address => bool) public allowedRecipients
    DUP2			mapping (address => bool) public allowedRecipients
    MSTORE			mapping (address => bool) public allowedRecipients
    PUSH 20		mapping (address => bool) public allowedRecipients
    ADD			mapping (address => bool) public allowedRecipients
    SWAP2			mapping (address => bool) public allowedRecipients
    POP			mapping (address => bool) public allowedRecipients
    POP			mapping (address => bool) public allowedRecipients
    PUSH 40		mapping (address => bool) public allowedRecipients
    MLOAD			mapping (address => bool) public allowedRecipients
    DUP1			mapping (address => bool) public allowedRecipients
    SWAP2			mapping (address => bool) public allowedRecipients
    SUB			mapping (address => bool) public allowedRecipients
    SWAP1			mapping (address => bool) public allowedRecipients
    RETURN			mapping (address => bool) public allowedRecipients
  tag17: 
    JUMPDEST		function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
    PUSH [tag91]		function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
    PUSH 4		function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
    DUP1			function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
    DUP1			function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
    CALLDATALOAD			function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
    SWAP1			function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
    PUSH 20		function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
    ADD			function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
    SWAP1			function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
    SWAP2			function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
    SWAP1			function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
    DUP1			function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
    CALLDATALOAD			function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
    SWAP1			function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
    PUSH 20		function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
    ADD			function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
    SWAP1			function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
    SWAP2			function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
    SWAP1			function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
    POP			function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
    POP			function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
    PUSH [tag92]		function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
    JUMP			function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
  tag91: 
    JUMPDEST		function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
    PUSH 40		function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
    MLOAD			function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
    DUP1			function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
    DUP3			function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
    DUP2			function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
    MSTORE			function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
    PUSH 20		function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
    ADD			function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
    SWAP2			function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
    POP			function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
    POP			function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
    PUSH 40		function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
    MLOAD			function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
    DUP1			function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
    SWAP2			function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
    SUB			function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
    SWAP1			function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
    RETURN			function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
  tag18: 
    JUMPDEST		function refund() noEther {...
    PUSH [tag93]		function refund() noEther {...
    PUSH 4		function refund() noEther {...
    DUP1			function refund() noEther {...
    POP			function refund() noEther {...
    POP			function refund() noEther {...
    PUSH [tag94]		function refund() noEther {...
    JUMP			function refund() noEther {...
  tag93: 
    JUMPDEST		function refund() noEther {...
    STOP			function refund() noEther {...
  tag19: 
    JUMPDEST		function newProposal(...
    PUSH [tag95]		function newProposal(...
    PUSH 4		function newProposal(...
    DUP1			function newProposal(...
    DUP1			function newProposal(...
    CALLDATALOAD			function newProposal(...
    SWAP1			function newProposal(...
    PUSH 20		function newProposal(...
    ADD			function newProposal(...
    SWAP1			function newProposal(...
    SWAP2			function newProposal(...
    SWAP1			function newProposal(...
    DUP1			function newProposal(...
    CALLDATALOAD			function newProposal(...
    SWAP1			function newProposal(...
    PUSH 20		function newProposal(...
    ADD			function newProposal(...
    SWAP1			function newProposal(...
    SWAP2			function newProposal(...
    SWAP1			function newProposal(...
    DUP1			function newProposal(...
    CALLDATALOAD			function newProposal(...
    SWAP1			function newProposal(...
    PUSH 20		function newProposal(...
    ADD			function newProposal(...
    SWAP1			function newProposal(...
    DUP3			function newProposal(...
    ADD			function newProposal(...
    DUP1			function newProposal(...
    CALLDATALOAD			function newProposal(...
    SWAP1			function newProposal(...
    PUSH 20		function newProposal(...
    ADD			function newProposal(...
    SWAP2			function newProposal(...
    SWAP2			function newProposal(...
    SWAP1			function newProposal(...
    DUP1			function newProposal(...
    DUP1			function newProposal(...
    PUSH 1F		function newProposal(...
    ADD			function newProposal(...
    PUSH 20		function newProposal(...
    DUP1			function newProposal(...
    SWAP2			function newProposal(...
    DIV			function newProposal(...
    MUL			function newProposal(...
    PUSH 20		function newProposal(...
    ADD			function newProposal(...
    PUSH 40		function newProposal(...
    MLOAD			function newProposal(...
    SWAP1			function newProposal(...
    DUP2			function newProposal(...
    ADD			function newProposal(...
    PUSH 40		function newProposal(...
    MSTORE			function newProposal(...
    DUP1			function newProposal(...
    SWAP4			function newProposal(...
    SWAP3			function newProposal(...
    SWAP2			function newProposal(...
    SWAP1			function newProposal(...
    DUP2			function newProposal(...
    DUP2			function newProposal(...
    MSTORE			function newProposal(...
    PUSH 20		function newProposal(...
    ADD			function newProposal(...
    DUP4			function newProposal(...
    DUP4			function newProposal(...
    DUP1			function newProposal(...
    DUP3			function newProposal(...
    DUP5			function newProposal(...
    CALLDATACOPY			function newProposal(...
    DUP3			function newProposal(...
    ADD			function newProposal(...
    SWAP2			function newProposal(...
    POP			function newProposal(...
    POP			function newProposal(...
    POP			function newProposal(...
    POP			function newProposal(...
    POP			function newProposal(...
    POP			function newProposal(...
    SWAP1			function newProposal(...
    SWAP1			function newProposal(...
    SWAP2			function newProposal(...
    SWAP1			function newProposal(...
    DUP1			function newProposal(...
    CALLDATALOAD			function newProposal(...
    SWAP1			function newProposal(...
    PUSH 20		function newProposal(...
    ADD			function newProposal(...
    SWAP1			function newProposal(...
    DUP3			function newProposal(...
    ADD			function newProposal(...
    DUP1			function newProposal(...
    CALLDATALOAD			function newProposal(...
    SWAP1			function newProposal(...
    PUSH 20		function newProposal(...
    ADD			function newProposal(...
    SWAP2			function newProposal(...
    SWAP2			function newProposal(...
    SWAP1			function newProposal(...
    DUP1			function newProposal(...
    DUP1			function newProposal(...
    PUSH 1F		function newProposal(...
    ADD			function newProposal(...
    PUSH 20		function newProposal(...
    DUP1			function newProposal(...
    SWAP2			function newProposal(...
    DIV			function newProposal(...
    MUL			function newProposal(...
    PUSH 20		function newProposal(...
    ADD			function newProposal(...
    PUSH 40		function newProposal(...
    MLOAD			function newProposal(...
    SWAP1			function newProposal(...
    DUP2			function newProposal(...
    ADD			function newProposal(...
    PUSH 40		function newProposal(...
    MSTORE			function newProposal(...
    DUP1			function newProposal(...
    SWAP4			function newProposal(...
    SWAP3			function newProposal(...
    SWAP2			function newProposal(...
    SWAP1			function newProposal(...
    DUP2			function newProposal(...
    DUP2			function newProposal(...
    MSTORE			function newProposal(...
    PUSH 20		function newProposal(...
    ADD			function newProposal(...
    DUP4			function newProposal(...
    DUP4			function newProposal(...
    DUP1			function newProposal(...
    DUP3			function newProposal(...
    DUP5			function newProposal(...
    CALLDATACOPY			function newProposal(...
    DUP3			function newProposal(...
    ADD			function newProposal(...
    SWAP2			function newProposal(...
    POP			function newProposal(...
    POP			function newProposal(...
    POP			function newProposal(...
    POP			function newProposal(...
    POP			function newProposal(...
    POP			function newProposal(...
    SWAP1			function newProposal(...
    SWAP1			function newProposal(...
    SWAP2			function newProposal(...
    SWAP1			function newProposal(...
    DUP1			function newProposal(...
    CALLDATALOAD			function newProposal(...
    SWAP1			function newProposal(...
    PUSH 20		function newProposal(...
    ADD			function newProposal(...
    SWAP1			function newProposal(...
    SWAP2			function newProposal(...
    SWAP1			function newProposal(...
    DUP1			function newProposal(...
    CALLDATALOAD			function newProposal(...
    SWAP1			function newProposal(...
    PUSH 20		function newProposal(...
    ADD			function newProposal(...
    SWAP1			function newProposal(...
    SWAP2			function newProposal(...
    SWAP1			function newProposal(...
    POP			function newProposal(...
    POP			function newProposal(...
    PUSH [tag96]		function newProposal(...
    JUMP			function newProposal(...
  tag95: 
    JUMPDEST		function newProposal(...
    PUSH 40		function newProposal(...
    MLOAD			function newProposal(...
    DUP1			function newProposal(...
    DUP3			function newProposal(...
    DUP2			function newProposal(...
    MSTORE			function newProposal(...
    PUSH 20		function newProposal(...
    ADD			function newProposal(...
    SWAP2			function newProposal(...
    POP			function newProposal(...
    POP			function newProposal(...
    PUSH 40		function newProposal(...
    MLOAD			function newProposal(...
    DUP1			function newProposal(...
    SWAP2			function newProposal(...
    SUB			function newProposal(...
    SWAP1			function newProposal(...
    RETURN			function newProposal(...
  tag20: 
    JUMPDEST		mapping (address => uint) public DAOpaidOut
    PUSH [tag97]		mapping (address => uint) public DAOpaidOut
    PUSH 4		mapping (address => uint) public DAOpaidOut
    DUP1			mapping (address => uint) public DAOpaidOut
    DUP1			mapping (address => uint) public DAOpaidOut
    CALLDATALOAD			mapping (address => uint) public DAOpaidOut
    SWAP1			mapping (address => uint) public DAOpaidOut
    PUSH 20		mapping (address => uint) public DAOpaidOut
    ADD			mapping (address => uint) public DAOpaidOut
    SWAP1			mapping (address => uint) public DAOpaidOut
    SWAP2			mapping (address => uint) public DAOpaidOut
    SWAP1			mapping (address => uint) public DAOpaidOut
    POP			mapping (address => uint) public DAOpaidOut
    POP			mapping (address => uint) public DAOpaidOut
    PUSH [tag98]		mapping (address => uint) public DAOpaidOut
    JUMP			mapping (address => uint) public DAOpaidOut
  tag97: 
    JUMPDEST		mapping (address => uint) public DAOpaidOut
    PUSH 40		mapping (address => uint) public DAOpaidOut
    MLOAD			mapping (address => uint) public DAOpaidOut
    DUP1			mapping (address => uint) public DAOpaidOut
    DUP3			mapping (address => uint) public DAOpaidOut
    DUP2			mapping (address => uint) public DAOpaidOut
    MSTORE			mapping (address => uint) public DAOpaidOut
    PUSH 20		mapping (address => uint) public DAOpaidOut
    ADD			mapping (address => uint) public DAOpaidOut
    SWAP2			mapping (address => uint) public DAOpaidOut
    POP			mapping (address => uint) public DAOpaidOut
    POP			mapping (address => uint) public DAOpaidOut
    PUSH 40		mapping (address => uint) public DAOpaidOut
    MLOAD			mapping (address => uint) public DAOpaidOut
    DUP1			mapping (address => uint) public DAOpaidOut
    SWAP2			mapping (address => uint) public DAOpaidOut
    SUB			mapping (address => uint) public DAOpaidOut
    SWAP1			mapping (address => uint) public DAOpaidOut
    RETURN			mapping (address => uint) public DAOpaidOut
  tag21: 
    JUMPDEST		uint public minQuorumDivisor
    PUSH [tag99]		uint public minQuorumDivisor
    PUSH 4		uint public minQuorumDivisor
    DUP1			uint public minQuorumDivisor
    POP			uint public minQuorumDivisor
    POP			uint public minQuorumDivisor
    PUSH [tag100]		uint public minQuorumDivisor
    JUMP			uint public minQuorumDivisor
  tag99: 
    JUMPDEST		uint public minQuorumDivisor
    PUSH 40		uint public minQuorumDivisor
    MLOAD			uint public minQuorumDivisor
    DUP1			uint public minQuorumDivisor
    DUP3			uint public minQuorumDivisor
    DUP2			uint public minQuorumDivisor
    MSTORE			uint public minQuorumDivisor
    PUSH 20		uint public minQuorumDivisor
    ADD			uint public minQuorumDivisor
    SWAP2			uint public minQuorumDivisor
    POP			uint public minQuorumDivisor
    POP			uint public minQuorumDivisor
    PUSH 40		uint public minQuorumDivisor
    MLOAD			uint public minQuorumDivisor
    DUP1			uint public minQuorumDivisor
    SWAP2			uint public minQuorumDivisor
    SUB			uint public minQuorumDivisor
    SWAP1			uint public minQuorumDivisor
    RETURN			uint public minQuorumDivisor
  tag22: 
    JUMPDEST		function newContract(address _newContract){...
    PUSH [tag101]		function newContract(address _newContract){...
    PUSH 4		function newContract(address _newContract){...
    DUP1			function newContract(address _newContract){...
    DUP1			function newContract(address _newContract){...
    CALLDATALOAD			function newContract(address _newContract){...
    SWAP1			function newContract(address _newContract){...
    PUSH 20		function newContract(address _newContract){...
    ADD			function newContract(address _newContract){...
    SWAP1			function newContract(address _newContract){...
    SWAP2			function newContract(address _newContract){...
    SWAP1			function newContract(address _newContract){...
    POP			function newContract(address _newContract){...
    POP			function newContract(address _newContract){...
    PUSH [tag102]		function newContract(address _newContract){...
    JUMP			function newContract(address _newContract){...
  tag101: 
    JUMPDEST		function newContract(address _newContract){...
    STOP			function newContract(address _newContract){...
  tag23: 
    JUMPDEST		function balanceOf(address _owner) constant returns (uint256 balance) {...
    PUSH [tag103]		function balanceOf(address _owner) constant returns (uint256 balance) {...
    PUSH 4		function balanceOf(address _owner) constant returns (uint256 balance) {...
    DUP1			function balanceOf(address _owner) constant returns (uint256 balance) {...
    DUP1			function balanceOf(address _owner) constant returns (uint256 balance) {...
    CALLDATALOAD			function balanceOf(address _owner) constant returns (uint256 balance) {...
    SWAP1			function balanceOf(address _owner) constant returns (uint256 balance) {...
    PUSH 20		function balanceOf(address _owner) constant returns (uint256 balance) {...
    ADD			function balanceOf(address _owner) constant returns (uint256 balance) {...
    SWAP1			function balanceOf(address _owner) constant returns (uint256 balance) {...
    SWAP2			function balanceOf(address _owner) constant returns (uint256 balance) {...
    SWAP1			function balanceOf(address _owner) constant returns (uint256 balance) {...
    POP			function balanceOf(address _owner) constant returns (uint256 balance) {...
    POP			function balanceOf(address _owner) constant returns (uint256 balance) {...
    PUSH [tag104]		function balanceOf(address _owner) constant returns (uint256 balance) {...
    JUMP			function balanceOf(address _owner) constant returns (uint256 balance) {...
  tag103: 
    JUMPDEST		function balanceOf(address _owner) constant returns (uint256 balance) {...
    PUSH 40		function balanceOf(address _owner) constant returns (uint256 balance) {...
    MLOAD			function balanceOf(address _owner) constant returns (uint256 balance) {...
    DUP1			function balanceOf(address _owner) constant returns (uint256 balance) {...
    DUP3			function balanceOf(address _owner) constant returns (uint256 balance) {...
    DUP2			function balanceOf(address _owner) constant returns (uint256 balance) {...
    MSTORE			function balanceOf(address _owner) constant returns (uint256 balance) {...
    PUSH 20		function balanceOf(address _owner) constant returns (uint256 balance) {...
    ADD			function balanceOf(address _owner) constant returns (uint256 balance) {...
    SWAP2			function balanceOf(address _owner) constant returns (uint256 balance) {...
    POP			function balanceOf(address _owner) constant returns (uint256 balance) {...
    POP			function balanceOf(address _owner) constant returns (uint256 balance) {...
    PUSH 40		function balanceOf(address _owner) constant returns (uint256 balance) {...
    MLOAD			function balanceOf(address _owner) constant returns (uint256 balance) {...
    DUP1			function balanceOf(address _owner) constant returns (uint256 balance) {...
    SWAP2			function balanceOf(address _owner) constant returns (uint256 balance) {...
    SUB			function balanceOf(address _owner) constant returns (uint256 balance) {...
    SWAP1			function balanceOf(address _owner) constant returns (uint256 balance) {...
    RETURN			function balanceOf(address _owner) constant returns (uint256 balance) {...
  tag24: 
    JUMPDEST		function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
    PUSH [tag105]		function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
    PUSH 4		function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
    DUP1			function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
    DUP1			function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
    CALLDATALOAD			function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
    SWAP1			function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
    PUSH 20		function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
    ADD			function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
    SWAP1			function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
    SWAP2			function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
    SWAP1			function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
    DUP1			function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
    CALLDATALOAD			function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
    SWAP1			function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
    PUSH 20		function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
    ADD			function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
    SWAP1			function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
    SWAP2			function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
    SWAP1			function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
    POP			function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
    POP			function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
    PUSH [tag106]		function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
    JUMP			function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
  tag105: 
    JUMPDEST		function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
    PUSH 40		function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
    MLOAD			function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
    DUP1			function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
    DUP3			function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
    DUP2			function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
    MSTORE			function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
    PUSH 20		function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
    ADD			function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
    SWAP2			function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
    POP			function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
    POP			function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
    PUSH 40		function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
    MLOAD			function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
    DUP1			function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
    SWAP2			function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
    SUB			function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
    SWAP1			function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
    RETURN			function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
  tag25: 
    JUMPDEST		function halveMinQuorum() returns (bool _success) {...
    PUSH [tag107]		function halveMinQuorum() returns (bool _success) {...
    PUSH 4		function halveMinQuorum() returns (bool _success) {...
    DUP1			function halveMinQuorum() returns (bool _success) {...
    POP			function halveMinQuorum() returns (bool _success) {...
    POP			function halveMinQuorum() returns (bool _success) {...
    PUSH [tag108]		function halveMinQuorum() returns (bool _success) {...
    JUMP			function halveMinQuorum() returns (bool _success) {...
  tag107: 
    JUMPDEST		function halveMinQuorum() returns (bool _success) {...
    PUSH 40		function halveMinQuorum() returns (bool _success) {...
    MLOAD			function halveMinQuorum() returns (bool _success) {...
    DUP1			function halveMinQuorum() returns (bool _success) {...
    DUP3			function halveMinQuorum() returns (bool _success) {...
    DUP2			function halveMinQuorum() returns (bool _success) {...
    MSTORE			function halveMinQuorum() returns (bool _success) {...
    PUSH 20		function halveMinQuorum() returns (bool _success) {...
    ADD			function halveMinQuorum() returns (bool _success) {...
    SWAP2			function halveMinQuorum() returns (bool _success) {...
    POP			function halveMinQuorum() returns (bool _success) {...
    POP			function halveMinQuorum() returns (bool _success) {...
    PUSH 40		function halveMinQuorum() returns (bool _success) {...
    MLOAD			function halveMinQuorum() returns (bool _success) {...
    DUP1			function halveMinQuorum() returns (bool _success) {...
    SWAP2			function halveMinQuorum() returns (bool _success) {...
    SUB			function halveMinQuorum() returns (bool _success) {...
    SWAP1			function halveMinQuorum() returns (bool _success) {...
    RETURN			function halveMinQuorum() returns (bool _success) {...
  tag26: 
    JUMPDEST		mapping (address => uint) public paidOut
    PUSH [tag109]		mapping (address => uint) public paidOut
    PUSH 4		mapping (address => uint) public paidOut
    DUP1			mapping (address => uint) public paidOut
    DUP1			mapping (address => uint) public paidOut
    CALLDATALOAD			mapping (address => uint) public paidOut
    SWAP1			mapping (address => uint) public paidOut
    PUSH 20		mapping (address => uint) public paidOut
    ADD			mapping (address => uint) public paidOut
    SWAP1			mapping (address => uint) public paidOut
    SWAP2			mapping (address => uint) public paidOut
    SWAP1			mapping (address => uint) public paidOut
    POP			mapping (address => uint) public paidOut
    POP			mapping (address => uint) public paidOut
    PUSH [tag110]		mapping (address => uint) public paidOut
    JUMP			mapping (address => uint) public paidOut
  tag109: 
    JUMPDEST		mapping (address => uint) public paidOut
    PUSH 40		mapping (address => uint) public paidOut
    MLOAD			mapping (address => uint) public paidOut
    DUP1			mapping (address => uint) public paidOut
    DUP3			mapping (address => uint) public paidOut
    DUP2			mapping (address => uint) public paidOut
    MSTORE			mapping (address => uint) public paidOut
    PUSH 20		mapping (address => uint) public paidOut
    ADD			mapping (address => uint) public paidOut
    SWAP2			mapping (address => uint) public paidOut
    POP			mapping (address => uint) public paidOut
    POP			mapping (address => uint) public paidOut
    PUSH 40		mapping (address => uint) public paidOut
    MLOAD			mapping (address => uint) public paidOut
    DUP1			mapping (address => uint) public paidOut
    SWAP2			mapping (address => uint) public paidOut
    SUB			mapping (address => uint) public paidOut
    SWAP1			mapping (address => uint) public paidOut
    RETURN			mapping (address => uint) public paidOut
  tag27: 
    JUMPDEST		function splitDAO(...
    PUSH [tag111]		function splitDAO(...
    PUSH 4		function splitDAO(...
    DUP1			function splitDAO(...
    DUP1			function splitDAO(...
    CALLDATALOAD			function splitDAO(...
    SWAP1			function splitDAO(...
    PUSH 20		function splitDAO(...
    ADD			function splitDAO(...
    SWAP1			function splitDAO(...
    SWAP2			function splitDAO(...
    SWAP1			function splitDAO(...
    DUP1			function splitDAO(...
    CALLDATALOAD			function splitDAO(...
    SWAP1			function splitDAO(...
    PUSH 20		function splitDAO(...
    ADD			function splitDAO(...
    SWAP1			function splitDAO(...
    SWAP2			function splitDAO(...
    SWAP1			function splitDAO(...
    POP			function splitDAO(...
    POP			function splitDAO(...
    PUSH [tag112]		function splitDAO(...
    JUMP			function splitDAO(...
  tag111: 
    JUMPDEST		function splitDAO(...
    PUSH 40		function splitDAO(...
    MLOAD			function splitDAO(...
    DUP1			function splitDAO(...
    DUP3			function splitDAO(...
    DUP2			function splitDAO(...
    MSTORE			function splitDAO(...
    PUSH 20		function splitDAO(...
    ADD			function splitDAO(...
    SWAP2			function splitDAO(...
    POP			function splitDAO(...
    POP			function splitDAO(...
    PUSH 40		function splitDAO(...
    MLOAD			function splitDAO(...
    DUP1			function splitDAO(...
    SWAP2			function splitDAO(...
    SUB			function splitDAO(...
    SWAP1			function splitDAO(...
    RETURN			function splitDAO(...
  tag28: 
    JUMPDEST		ManagedAccount public DAOrewardAccount
    PUSH [tag113]		ManagedAccount public DAOrewardAccount
    PUSH 4		ManagedAccount public DAOrewardAccount
    DUP1			ManagedAccount public DAOrewardAccount
    POP			ManagedAccount public DAOrewardAccount
    POP			ManagedAccount public DAOrewardAccount
    PUSH [tag114]		ManagedAccount public DAOrewardAccount
    JUMP			ManagedAccount public DAOrewardAccount
  tag113: 
    JUMPDEST		ManagedAccount public DAOrewardAccount
    PUSH 40		ManagedAccount public DAOrewardAccount
    MLOAD			ManagedAccount public DAOrewardAccount
    DUP1			ManagedAccount public DAOrewardAccount
    DUP3			ManagedAccount public DAOrewardAccount
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		ManagedAccount public DAOrewardAccount
    AND			ManagedAccount public DAOrewardAccount
    DUP2			ManagedAccount public DAOrewardAccount
    MSTORE			ManagedAccount public DAOrewardAccount
    PUSH 20		ManagedAccount public DAOrewardAccount
    ADD			ManagedAccount public DAOrewardAccount
    SWAP2			ManagedAccount public DAOrewardAccount
    POP			ManagedAccount public DAOrewardAccount
    POP			ManagedAccount public DAOrewardAccount
    PUSH 40		ManagedAccount public DAOrewardAccount
    MLOAD			ManagedAccount public DAOrewardAccount
    DUP1			ManagedAccount public DAOrewardAccount
    SWAP2			ManagedAccount public DAOrewardAccount
    SUB			ManagedAccount public DAOrewardAccount
    SWAP1			ManagedAccount public DAOrewardAccount
    RETURN			ManagedAccount public DAOrewardAccount
  tag29: 
    JUMPDEST		uint public proposalDeposit
    PUSH [tag115]		uint public proposalDeposit
    PUSH 4		uint public proposalDeposit
    DUP1			uint public proposalDeposit
    POP			uint public proposalDeposit
    POP			uint public proposalDeposit
    PUSH [tag116]		uint public proposalDeposit
    JUMP			uint public proposalDeposit
  tag115: 
    JUMPDEST		uint public proposalDeposit
    PUSH 40		uint public proposalDeposit
    MLOAD			uint public proposalDeposit
    DUP1			uint public proposalDeposit
    DUP3			uint public proposalDeposit
    DUP2			uint public proposalDeposit
    MSTORE			uint public proposalDeposit
    PUSH 20		uint public proposalDeposit
    ADD			uint public proposalDeposit
    SWAP2			uint public proposalDeposit
    POP			uint public proposalDeposit
    POP			uint public proposalDeposit
    PUSH 40		uint public proposalDeposit
    MLOAD			uint public proposalDeposit
    DUP1			uint public proposalDeposit
    SWAP2			uint public proposalDeposit
    SUB			uint public proposalDeposit
    SWAP1			uint public proposalDeposit
    RETURN			uint public proposalDeposit
  tag30: 
    JUMPDEST		function numberOfProposals() constant returns (uint _numberOfProposals) {...
    PUSH [tag117]		function numberOfProposals() constant returns (uint _numberOfProposals) {...
    PUSH 4		function numberOfProposals() constant returns (uint _numberOfProposals) {...
    DUP1			function numberOfProposals() constant returns (uint _numberOfProposals) {...
    POP			function numberOfProposals() constant returns (uint _numberOfProposals) {...
    POP			function numberOfProposals() constant returns (uint _numberOfProposals) {...
    PUSH [tag118]		function numberOfProposals() constant returns (uint _numberOfProposals) {...
    JUMP			function numberOfProposals() constant returns (uint _numberOfProposals) {...
  tag117: 
    JUMPDEST		function numberOfProposals() constant returns (uint _numberOfProposals) {...
    PUSH 40		function numberOfProposals() constant returns (uint _numberOfProposals) {...
    MLOAD			function numberOfProposals() constant returns (uint _numberOfProposals) {...
    DUP1			function numberOfProposals() constant returns (uint _numberOfProposals) {...
    DUP3			function numberOfProposals() constant returns (uint _numberOfProposals) {...
    DUP2			function numberOfProposals() constant returns (uint _numberOfProposals) {...
    MSTORE			function numberOfProposals() constant returns (uint _numberOfProposals) {...
    PUSH 20		function numberOfProposals() constant returns (uint _numberOfProposals) {...
    ADD			function numberOfProposals() constant returns (uint _numberOfProposals) {...
    SWAP2			function numberOfProposals() constant returns (uint _numberOfProposals) {...
    POP			function numberOfProposals() constant returns (uint _numberOfProposals) {...
    POP			function numberOfProposals() constant returns (uint _numberOfProposals) {...
    PUSH 40		function numberOfProposals() constant returns (uint _numberOfProposals) {...
    MLOAD			function numberOfProposals() constant returns (uint _numberOfProposals) {...
    DUP1			function numberOfProposals() constant returns (uint _numberOfProposals) {...
    SWAP2			function numberOfProposals() constant returns (uint _numberOfProposals) {...
    SUB			function numberOfProposals() constant returns (uint _numberOfProposals) {...
    SWAP1			function numberOfProposals() constant returns (uint _numberOfProposals) {...
    RETURN			function numberOfProposals() constant returns (uint _numberOfProposals) {...
  tag31: 
    JUMPDEST		uint  public lastTimeMinQuorumMet
    PUSH [tag119]		uint  public lastTimeMinQuorumMet
    PUSH 4		uint  public lastTimeMinQuorumMet
    DUP1			uint  public lastTimeMinQuorumMet
    POP			uint  public lastTimeMinQuorumMet
    POP			uint  public lastTimeMinQuorumMet
    PUSH [tag120]		uint  public lastTimeMinQuorumMet
    JUMP			uint  public lastTimeMinQuorumMet
  tag119: 
    JUMPDEST		uint  public lastTimeMinQuorumMet
    PUSH 40		uint  public lastTimeMinQuorumMet
    MLOAD			uint  public lastTimeMinQuorumMet
    DUP1			uint  public lastTimeMinQuorumMet
    DUP3			uint  public lastTimeMinQuorumMet
    DUP2			uint  public lastTimeMinQuorumMet
    MSTORE			uint  public lastTimeMinQuorumMet
    PUSH 20		uint  public lastTimeMinQuorumMet
    ADD			uint  public lastTimeMinQuorumMet
    SWAP2			uint  public lastTimeMinQuorumMet
    POP			uint  public lastTimeMinQuorumMet
    POP			uint  public lastTimeMinQuorumMet
    PUSH 40		uint  public lastTimeMinQuorumMet
    MLOAD			uint  public lastTimeMinQuorumMet
    DUP1			uint  public lastTimeMinQuorumMet
    SWAP2			uint  public lastTimeMinQuorumMet
    SUB			uint  public lastTimeMinQuorumMet
    SWAP1			uint  public lastTimeMinQuorumMet
    RETURN			uint  public lastTimeMinQuorumMet
  tag32: 
    JUMPDEST		function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
    PUSH [tag121]		function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
    PUSH 4		function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
    DUP1			function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
    DUP1			function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
    CALLDATALOAD			function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
    SWAP1			function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
    PUSH 20		function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
    ADD			function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
    SWAP1			function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
    SWAP2			function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
    SWAP1			function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
    POP			function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
    POP			function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
    PUSH [tag122]		function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
    JUMP			function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
  tag121: 
    JUMPDEST		function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
    PUSH 40		function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
    MLOAD			function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
    DUP1			function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
    DUP3			function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
    DUP2			function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
    MSTORE			function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
    PUSH 20		function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
    ADD			function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
    SWAP2			function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
    POP			function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
    POP			function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
    PUSH 40		function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
    MLOAD			function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
    DUP1			function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
    SWAP2			function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
    SUB			function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
    SWAP1			function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
    RETURN			function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
  tag33: 
    JUMPDEST		function receiveEther() returns (bool) {...
    PUSH [tag123]		function receiveEther() returns (bool) {...
    PUSH 4		function receiveEther() returns (bool) {...
    DUP1			function receiveEther() returns (bool) {...
    POP			function receiveEther() returns (bool) {...
    POP			function receiveEther() returns (bool) {...
    PUSH [tag57]		function receiveEther() returns (bool) {...
    JUMP			function receiveEther() returns (bool) {...
  tag123: 
    JUMPDEST		function receiveEther() returns (bool) {...
    PUSH 40		function receiveEther() returns (bool) {...
    MLOAD			function receiveEther() returns (bool) {...
    DUP1			function receiveEther() returns (bool) {...
    DUP3			function receiveEther() returns (bool) {...
    DUP2			function receiveEther() returns (bool) {...
    MSTORE			function receiveEther() returns (bool) {...
    PUSH 20		function receiveEther() returns (bool) {...
    ADD			function receiveEther() returns (bool) {...
    SWAP2			function receiveEther() returns (bool) {...
    POP			function receiveEther() returns (bool) {...
    POP			function receiveEther() returns (bool) {...
    PUSH 40		function receiveEther() returns (bool) {...
    MLOAD			function receiveEther() returns (bool) {...
    DUP1			function receiveEther() returns (bool) {...
    SWAP2			function receiveEther() returns (bool) {...
    SUB			function receiveEther() returns (bool) {...
    SWAP1			function receiveEther() returns (bool) {...
    RETURN			function receiveEther() returns (bool) {...
  tag34: 
    JUMPDEST		function transfer(address _to, uint256 _value) returns (bool success) {...
    PUSH [tag124]		function transfer(address _to, uint256 _value) returns (bool success) {...
    PUSH 4		function transfer(address _to, uint256 _value) returns (bool success) {...
    DUP1			function transfer(address _to, uint256 _value) returns (bool success) {...
    DUP1			function transfer(address _to, uint256 _value) returns (bool success) {...
    CALLDATALOAD			function transfer(address _to, uint256 _value) returns (bool success) {...
    SWAP1			function transfer(address _to, uint256 _value) returns (bool success) {...
    PUSH 20		function transfer(address _to, uint256 _value) returns (bool success) {...
    ADD			function transfer(address _to, uint256 _value) returns (bool success) {...
    SWAP1			function transfer(address _to, uint256 _value) returns (bool success) {...
    SWAP2			function transfer(address _to, uint256 _value) returns (bool success) {...
    SWAP1			function transfer(address _to, uint256 _value) returns (bool success) {...
    DUP1			function transfer(address _to, uint256 _value) returns (bool success) {...
    CALLDATALOAD			function transfer(address _to, uint256 _value) returns (bool success) {...
    SWAP1			function transfer(address _to, uint256 _value) returns (bool success) {...
    PUSH 20		function transfer(address _to, uint256 _value) returns (bool success) {...
    ADD			function transfer(address _to, uint256 _value) returns (bool success) {...
    SWAP1			function transfer(address _to, uint256 _value) returns (bool success) {...
    SWAP2			function transfer(address _to, uint256 _value) returns (bool success) {...
    SWAP1			function transfer(address _to, uint256 _value) returns (bool success) {...
    POP			function transfer(address _to, uint256 _value) returns (bool success) {...
    POP			function transfer(address _to, uint256 _value) returns (bool success) {...
    PUSH [tag125]		function transfer(address _to, uint256 _value) returns (bool success) {...
    JUMP			function transfer(address _to, uint256 _value) returns (bool success) {...
  tag124: 
    JUMPDEST		function transfer(address _to, uint256 _value) returns (bool success) {...
    PUSH 40		function transfer(address _to, uint256 _value) returns (bool success) {...
    MLOAD			function transfer(address _to, uint256 _value) returns (bool success) {...
    DUP1			function transfer(address _to, uint256 _value) returns (bool success) {...
    DUP3			function transfer(address _to, uint256 _value) returns (bool success) {...
    DUP2			function transfer(address _to, uint256 _value) returns (bool success) {...
    MSTORE			function transfer(address _to, uint256 _value) returns (bool success) {...
    PUSH 20		function transfer(address _to, uint256 _value) returns (bool success) {...
    ADD			function transfer(address _to, uint256 _value) returns (bool success) {...
    SWAP2			function transfer(address _to, uint256 _value) returns (bool success) {...
    POP			function transfer(address _to, uint256 _value) returns (bool success) {...
    POP			function transfer(address _to, uint256 _value) returns (bool success) {...
    PUSH 40		function transfer(address _to, uint256 _value) returns (bool success) {...
    MLOAD			function transfer(address _to, uint256 _value) returns (bool success) {...
    DUP1			function transfer(address _to, uint256 _value) returns (bool success) {...
    SWAP2			function transfer(address _to, uint256 _value) returns (bool success) {...
    SUB			function transfer(address _to, uint256 _value) returns (bool success) {...
    SWAP1			function transfer(address _to, uint256 _value) returns (bool success) {...
    RETURN			function transfer(address _to, uint256 _value) returns (bool success) {...
  tag35: 
    JUMPDEST		bool public isFueled
    PUSH [tag126]		bool public isFueled
    PUSH 4		bool public isFueled
    DUP1			bool public isFueled
    POP			bool public isFueled
    POP			bool public isFueled
    PUSH [tag127]		bool public isFueled
    JUMP			bool public isFueled
  tag126: 
    JUMPDEST		bool public isFueled
    PUSH 40		bool public isFueled
    MLOAD			bool public isFueled
    DUP1			bool public isFueled
    DUP3			bool public isFueled
    DUP2			bool public isFueled
    MSTORE			bool public isFueled
    PUSH 20		bool public isFueled
    ADD			bool public isFueled
    SWAP2			bool public isFueled
    POP			bool public isFueled
    POP			bool public isFueled
    PUSH 40		bool public isFueled
    MLOAD			bool public isFueled
    DUP1			bool public isFueled
    SWAP2			bool public isFueled
    SUB			bool public isFueled
    SWAP1			bool public isFueled
    RETURN			bool public isFueled
  tag36: 
    JUMPDEST		function createTokenProxy(address _tokenHolder) returns (bool success) {...
    PUSH [tag128]		function createTokenProxy(address _tokenHolder) returns (bool success) {...
    PUSH 4		function createTokenProxy(address _tokenHolder) returns (bool success) {...
    DUP1			function createTokenProxy(address _tokenHolder) returns (bool success) {...
    DUP1			function createTokenProxy(address _tokenHolder) returns (bool success) {...
    CALLDATALOAD			function createTokenProxy(address _tokenHolder) returns (bool success) {...
    SWAP1			function createTokenProxy(address _tokenHolder) returns (bool success) {...
    PUSH 20		function createTokenProxy(address _tokenHolder) returns (bool success) {...
    ADD			function createTokenProxy(address _tokenHolder) returns (bool success) {...
    SWAP1			function createTokenProxy(address _tokenHolder) returns (bool success) {...
    SWAP2			function createTokenProxy(address _tokenHolder) returns (bool success) {...
    SWAP1			function createTokenProxy(address _tokenHolder) returns (bool success) {...
    POP			function createTokenProxy(address _tokenHolder) returns (bool success) {...
    POP			function createTokenProxy(address _tokenHolder) returns (bool success) {...
    PUSH [tag54]		function createTokenProxy(address _tokenHolder) returns (bool success) {...
    JUMP			function createTokenProxy(address _tokenHolder) returns (bool success) {...
  tag128: 
    JUMPDEST		function createTokenProxy(address _tokenHolder) returns (bool success) {...
    PUSH 40		function createTokenProxy(address _tokenHolder) returns (bool success) {...
    MLOAD			function createTokenProxy(address _tokenHolder) returns (bool success) {...
    DUP1			function createTokenProxy(address _tokenHolder) returns (bool success) {...
    DUP3			function createTokenProxy(address _tokenHolder) returns (bool success) {...
    DUP2			function createTokenProxy(address _tokenHolder) returns (bool success) {...
    MSTORE			function createTokenProxy(address _tokenHolder) returns (bool success) {...
    PUSH 20		function createTokenProxy(address _tokenHolder) returns (bool success) {...
    ADD			function createTokenProxy(address _tokenHolder) returns (bool success) {...
    SWAP2			function createTokenProxy(address _tokenHolder) returns (bool success) {...
    POP			function createTokenProxy(address _tokenHolder) returns (bool success) {...
    POP			function createTokenProxy(address _tokenHolder) returns (bool success) {...
    PUSH 40		function createTokenProxy(address _tokenHolder) returns (bool success) {...
    MLOAD			function createTokenProxy(address _tokenHolder) returns (bool success) {...
    DUP1			function createTokenProxy(address _tokenHolder) returns (bool success) {...
    SWAP2			function createTokenProxy(address _tokenHolder) returns (bool success) {...
    SUB			function createTokenProxy(address _tokenHolder) returns (bool success) {...
    SWAP1			function createTokenProxy(address _tokenHolder) returns (bool success) {...
    RETURN			function createTokenProxy(address _tokenHolder) returns (bool success) {...
  tag37: 
    JUMPDEST		function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
    PUSH [tag129]		function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
    PUSH 4		function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
    DUP1			function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
    DUP1			function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
    CALLDATALOAD			function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
    SWAP1			function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
    PUSH 20		function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
    ADD			function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
    SWAP1			function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
    SWAP2			function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
    SWAP1			function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
    POP			function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
    POP			function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
    PUSH [tag130]		function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
    JUMP			function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
  tag129: 
    JUMPDEST		function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
    PUSH 40		function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
    MLOAD			function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
    DUP1			function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
    DUP3			function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
    AND			function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
    DUP2			function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
    MSTORE			function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
    PUSH 20		function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
    ADD			function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
    SWAP2			function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
    POP			function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
    POP			function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
    PUSH 40		function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
    MLOAD			function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
    DUP1			function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
    SWAP2			function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
    SUB			function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
    SWAP1			function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
    RETURN			function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
  tag38: 
    JUMPDEST		function vote(...
    PUSH [tag131]		function vote(...
    PUSH 4		function vote(...
    DUP1			function vote(...
    DUP1			function vote(...
    CALLDATALOAD			function vote(...
    SWAP1			function vote(...
    PUSH 20		function vote(...
    ADD			function vote(...
    SWAP1			function vote(...
    SWAP2			function vote(...
    SWAP1			function vote(...
    DUP1			function vote(...
    CALLDATALOAD			function vote(...
    SWAP1			function vote(...
    PUSH 20		function vote(...
    ADD			function vote(...
    SWAP1			function vote(...
    SWAP2			function vote(...
    SWAP1			function vote(...
    POP			function vote(...
    POP			function vote(...
    PUSH [tag132]		function vote(...
    JUMP			function vote(...
  tag131: 
    JUMPDEST		function vote(...
    PUSH 40		function vote(...
    MLOAD			function vote(...
    DUP1			function vote(...
    DUP3			function vote(...
    DUP2			function vote(...
    MSTORE			function vote(...
    PUSH 20		function vote(...
    ADD			function vote(...
    SWAP2			function vote(...
    POP			function vote(...
    POP			function vote(...
    PUSH 40		function vote(...
    MLOAD			function vote(...
    DUP1			function vote(...
    SWAP2			function vote(...
    SUB			function vote(...
    SWAP1			function vote(...
    RETURN			function vote(...
  tag39: 
    JUMPDEST		function getMyReward() noEther returns (bool _success) {...
    PUSH [tag133]		function getMyReward() noEther returns (bool _success) {...
    PUSH 4		function getMyReward() noEther returns (bool _success) {...
    DUP1			function getMyReward() noEther returns (bool _success) {...
    POP			function getMyReward() noEther returns (bool _success) {...
    POP			function getMyReward() noEther returns (bool _success) {...
    PUSH [tag134]		function getMyReward() noEther returns (bool _success) {...
    JUMP			function getMyReward() noEther returns (bool _success) {...
  tag133: 
    JUMPDEST		function getMyReward() noEther returns (bool _success) {...
    PUSH 40		function getMyReward() noEther returns (bool _success) {...
    MLOAD			function getMyReward() noEther returns (bool _success) {...
    DUP1			function getMyReward() noEther returns (bool _success) {...
    DUP3			function getMyReward() noEther returns (bool _success) {...
    DUP2			function getMyReward() noEther returns (bool _success) {...
    MSTORE			function getMyReward() noEther returns (bool _success) {...
    PUSH 20		function getMyReward() noEther returns (bool _success) {...
    ADD			function getMyReward() noEther returns (bool _success) {...
    SWAP2			function getMyReward() noEther returns (bool _success) {...
    POP			function getMyReward() noEther returns (bool _success) {...
    POP			function getMyReward() noEther returns (bool _success) {...
    PUSH 40		function getMyReward() noEther returns (bool _success) {...
    MLOAD			function getMyReward() noEther returns (bool _success) {...
    DUP1			function getMyReward() noEther returns (bool _success) {...
    SWAP2			function getMyReward() noEther returns (bool _success) {...
    SUB			function getMyReward() noEther returns (bool _success) {...
    SWAP1			function getMyReward() noEther returns (bool _success) {...
    RETURN			function getMyReward() noEther returns (bool _success) {...
  tag40: 
    JUMPDEST		mapping (address => uint) public rewardToken
    PUSH [tag135]		mapping (address => uint) public rewardToken
    PUSH 4		mapping (address => uint) public rewardToken
    DUP1			mapping (address => uint) public rewardToken
    DUP1			mapping (address => uint) public rewardToken
    CALLDATALOAD			mapping (address => uint) public rewardToken
    SWAP1			mapping (address => uint) public rewardToken
    PUSH 20		mapping (address => uint) public rewardToken
    ADD			mapping (address => uint) public rewardToken
    SWAP1			mapping (address => uint) public rewardToken
    SWAP2			mapping (address => uint) public rewardToken
    SWAP1			mapping (address => uint) public rewardToken
    POP			mapping (address => uint) public rewardToken
    POP			mapping (address => uint) public rewardToken
    PUSH [tag136]		mapping (address => uint) public rewardToken
    JUMP			mapping (address => uint) public rewardToken
  tag135: 
    JUMPDEST		mapping (address => uint) public rewardToken
    PUSH 40		mapping (address => uint) public rewardToken
    MLOAD			mapping (address => uint) public rewardToken
    DUP1			mapping (address => uint) public rewardToken
    DUP3			mapping (address => uint) public rewardToken
    DUP2			mapping (address => uint) public rewardToken
    MSTORE			mapping (address => uint) public rewardToken
    PUSH 20		mapping (address => uint) public rewardToken
    ADD			mapping (address => uint) public rewardToken
    SWAP2			mapping (address => uint) public rewardToken
    POP			mapping (address => uint) public rewardToken
    POP			mapping (address => uint) public rewardToken
    PUSH 40		mapping (address => uint) public rewardToken
    MLOAD			mapping (address => uint) public rewardToken
    DUP1			mapping (address => uint) public rewardToken
    SWAP2			mapping (address => uint) public rewardToken
    SUB			mapping (address => uint) public rewardToken
    SWAP1			mapping (address => uint) public rewardToken
    RETURN			mapping (address => uint) public rewardToken
  tag41: 
    JUMPDEST		function transferFromWithoutReward(...
    PUSH [tag137]		function transferFromWithoutReward(...
    PUSH 4		function transferFromWithoutReward(...
    DUP1			function transferFromWithoutReward(...
    DUP1			function transferFromWithoutReward(...
    CALLDATALOAD			function transferFromWithoutReward(...
    SWAP1			function transferFromWithoutReward(...
    PUSH 20		function transferFromWithoutReward(...
    ADD			function transferFromWithoutReward(...
    SWAP1			function transferFromWithoutReward(...
    SWAP2			function transferFromWithoutReward(...
    SWAP1			function transferFromWithoutReward(...
    DUP1			function transferFromWithoutReward(...
    CALLDATALOAD			function transferFromWithoutReward(...
    SWAP1			function transferFromWithoutReward(...
    PUSH 20		function transferFromWithoutReward(...
    ADD			function transferFromWithoutReward(...
    SWAP1			function transferFromWithoutReward(...
    SWAP2			function transferFromWithoutReward(...
    SWAP1			function transferFromWithoutReward(...
    DUP1			function transferFromWithoutReward(...
    CALLDATALOAD			function transferFromWithoutReward(...
    SWAP1			function transferFromWithoutReward(...
    PUSH 20		function transferFromWithoutReward(...
    ADD			function transferFromWithoutReward(...
    SWAP1			function transferFromWithoutReward(...
    SWAP2			function transferFromWithoutReward(...
    SWAP1			function transferFromWithoutReward(...
    POP			function transferFromWithoutReward(...
    POP			function transferFromWithoutReward(...
    PUSH [tag138]		function transferFromWithoutReward(...
    JUMP			function transferFromWithoutReward(...
  tag137: 
    JUMPDEST		function transferFromWithoutReward(...
    PUSH 40		function transferFromWithoutReward(...
    MLOAD			function transferFromWithoutReward(...
    DUP1			function transferFromWithoutReward(...
    DUP3			function transferFromWithoutReward(...
    DUP2			function transferFromWithoutReward(...
    MSTORE			function transferFromWithoutReward(...
    PUSH 20		function transferFromWithoutReward(...
    ADD			function transferFromWithoutReward(...
    SWAP2			function transferFromWithoutReward(...
    POP			function transferFromWithoutReward(...
    POP			function transferFromWithoutReward(...
    PUSH 40		function transferFromWithoutReward(...
    MLOAD			function transferFromWithoutReward(...
    DUP1			function transferFromWithoutReward(...
    SWAP2			function transferFromWithoutReward(...
    SUB			function transferFromWithoutReward(...
    SWAP1			function transferFromWithoutReward(...
    RETURN			function transferFromWithoutReward(...
  tag42: 
    JUMPDEST		function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    PUSH [tag139]		function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    PUSH 4		function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    DUP1			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    DUP1			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    CALLDATALOAD			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    SWAP1			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    PUSH 20		function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    ADD			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    SWAP1			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    SWAP2			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    SWAP1			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    DUP1			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    CALLDATALOAD			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    SWAP1			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    PUSH 20		function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    ADD			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    SWAP1			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    SWAP2			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    SWAP1			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    POP			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    POP			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    PUSH [tag140]		function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    JUMP			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
  tag139: 
    JUMPDEST		function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    PUSH 40		function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    MLOAD			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    DUP1			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    DUP3			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    DUP2			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    MSTORE			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    PUSH 20		function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    ADD			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    SWAP2			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    POP			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    POP			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    PUSH 40		function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    MLOAD			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    DUP1			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    SWAP2			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    SUB			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    SWAP1			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    RETURN			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
  tag43: 
    JUMPDEST		function changeProposalDeposit(uint _proposalDeposit) noEther external {...
    PUSH [tag141]		function changeProposalDeposit(uint _proposalDeposit) noEther external {...
    PUSH 4		function changeProposalDeposit(uint _proposalDeposit) noEther external {...
    DUP1			function changeProposalDeposit(uint _proposalDeposit) noEther external {...
    DUP1			function changeProposalDeposit(uint _proposalDeposit) noEther external {...
    CALLDATALOAD			function changeProposalDeposit(uint _proposalDeposit) noEther external {...
    SWAP1			function changeProposalDeposit(uint _proposalDeposit) noEther external {...
    PUSH 20		function changeProposalDeposit(uint _proposalDeposit) noEther external {...
    ADD			function changeProposalDeposit(uint _proposalDeposit) noEther external {...
    SWAP1			function changeProposalDeposit(uint _proposalDeposit) noEther external {...
    SWAP2			function changeProposalDeposit(uint _proposalDeposit) noEther external {...
    SWAP1			function changeProposalDeposit(uint _proposalDeposit) noEther external {...
    POP			function changeProposalDeposit(uint _proposalDeposit) noEther external {...
    POP			function changeProposalDeposit(uint _proposalDeposit) noEther external {...
    PUSH [tag142]		function changeProposalDeposit(uint _proposalDeposit) noEther external {...
    JUMP			function changeProposalDeposit(uint _proposalDeposit) noEther external {...
  tag141: 
    JUMPDEST		function changeProposalDeposit(uint _proposalDeposit) noEther external {...
    STOP			function changeProposalDeposit(uint _proposalDeposit) noEther external {...
  tag44: 
    JUMPDEST		mapping (address => uint) public blocked
    PUSH [tag143]		mapping (address => uint) public blocked
    PUSH 4		mapping (address => uint) public blocked
    DUP1			mapping (address => uint) public blocked
    DUP1			mapping (address => uint) public blocked
    CALLDATALOAD			mapping (address => uint) public blocked
    SWAP1			mapping (address => uint) public blocked
    PUSH 20		mapping (address => uint) public blocked
    ADD			mapping (address => uint) public blocked
    SWAP1			mapping (address => uint) public blocked
    SWAP2			mapping (address => uint) public blocked
    SWAP1			mapping (address => uint) public blocked
    POP			mapping (address => uint) public blocked
    POP			mapping (address => uint) public blocked
    PUSH [tag144]		mapping (address => uint) public blocked
    JUMP			mapping (address => uint) public blocked
  tag143: 
    JUMPDEST		mapping (address => uint) public blocked
    PUSH 40		mapping (address => uint) public blocked
    MLOAD			mapping (address => uint) public blocked
    DUP1			mapping (address => uint) public blocked
    DUP3			mapping (address => uint) public blocked
    DUP2			mapping (address => uint) public blocked
    MSTORE			mapping (address => uint) public blocked
    PUSH 20		mapping (address => uint) public blocked
    ADD			mapping (address => uint) public blocked
    SWAP2			mapping (address => uint) public blocked
    POP			mapping (address => uint) public blocked
    POP			mapping (address => uint) public blocked
    PUSH 40		mapping (address => uint) public blocked
    MLOAD			mapping (address => uint) public blocked
    DUP1			mapping (address => uint) public blocked
    SWAP2			mapping (address => uint) public blocked
    SUB			mapping (address => uint) public blocked
    SWAP1			mapping (address => uint) public blocked
    RETURN			mapping (address => uint) public blocked
  tag45: 
    JUMPDEST		address public curator
    PUSH [tag145]		address public curator
    PUSH 4		address public curator
    DUP1			address public curator
    POP			address public curator
    POP			address public curator
    PUSH [tag146]		address public curator
    JUMP			address public curator
  tag145: 
    JUMPDEST		address public curator
    PUSH 40		address public curator
    MLOAD			address public curator
    DUP1			address public curator
    DUP3			address public curator
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		address public curator
    AND			address public curator
    DUP2			address public curator
    MSTORE			address public curator
    PUSH 20		address public curator
    ADD			address public curator
    SWAP2			address public curator
    POP			address public curator
    POP			address public curator
    PUSH 40		address public curator
    MLOAD			address public curator
    DUP1			address public curator
    SWAP2			address public curator
    SUB			address public curator
    SWAP1			address public curator
    RETURN			address public curator
  tag46: 
    JUMPDEST		function checkProposalCode(...
    PUSH [tag147]		function checkProposalCode(...
    PUSH 4		function checkProposalCode(...
    DUP1			function checkProposalCode(...
    DUP1			function checkProposalCode(...
    CALLDATALOAD			function checkProposalCode(...
    SWAP1			function checkProposalCode(...
    PUSH 20		function checkProposalCode(...
    ADD			function checkProposalCode(...
    SWAP1			function checkProposalCode(...
    SWAP2			function checkProposalCode(...
    SWAP1			function checkProposalCode(...
    DUP1			function checkProposalCode(...
    CALLDATALOAD			function checkProposalCode(...
    SWAP1			function checkProposalCode(...
    PUSH 20		function checkProposalCode(...
    ADD			function checkProposalCode(...
    SWAP1			function checkProposalCode(...
    SWAP2			function checkProposalCode(...
    SWAP1			function checkProposalCode(...
    DUP1			function checkProposalCode(...
    CALLDATALOAD			function checkProposalCode(...
    SWAP1			function checkProposalCode(...
    PUSH 20		function checkProposalCode(...
    ADD			function checkProposalCode(...
    SWAP1			function checkProposalCode(...
    SWAP2			function checkProposalCode(...
    SWAP1			function checkProposalCode(...
    DUP1			function checkProposalCode(...
    CALLDATALOAD			function checkProposalCode(...
    SWAP1			function checkProposalCode(...
    PUSH 20		function checkProposalCode(...
    ADD			function checkProposalCode(...
    SWAP1			function checkProposalCode(...
    DUP3			function checkProposalCode(...
    ADD			function checkProposalCode(...
    DUP1			function checkProposalCode(...
    CALLDATALOAD			function checkProposalCode(...
    SWAP1			function checkProposalCode(...
    PUSH 20		function checkProposalCode(...
    ADD			function checkProposalCode(...
    SWAP2			function checkProposalCode(...
    SWAP2			function checkProposalCode(...
    SWAP1			function checkProposalCode(...
    DUP1			function checkProposalCode(...
    DUP1			function checkProposalCode(...
    PUSH 1F		function checkProposalCode(...
    ADD			function checkProposalCode(...
    PUSH 20		function checkProposalCode(...
    DUP1			function checkProposalCode(...
    SWAP2			function checkProposalCode(...
    DIV			function checkProposalCode(...
    MUL			function checkProposalCode(...
    PUSH 20		function checkProposalCode(...
    ADD			function checkProposalCode(...
    PUSH 40		function checkProposalCode(...
    MLOAD			function checkProposalCode(...
    SWAP1			function checkProposalCode(...
    DUP2			function checkProposalCode(...
    ADD			function checkProposalCode(...
    PUSH 40		function checkProposalCode(...
    MSTORE			function checkProposalCode(...
    DUP1			function checkProposalCode(...
    SWAP4			function checkProposalCode(...
    SWAP3			function checkProposalCode(...
    SWAP2			function checkProposalCode(...
    SWAP1			function checkProposalCode(...
    DUP2			function checkProposalCode(...
    DUP2			function checkProposalCode(...
    MSTORE			function checkProposalCode(...
    PUSH 20		function checkProposalCode(...
    ADD			function checkProposalCode(...
    DUP4			function checkProposalCode(...
    DUP4			function checkProposalCode(...
    DUP1			function checkProposalCode(...
    DUP3			function checkProposalCode(...
    DUP5			function checkProposalCode(...
    CALLDATACOPY			function checkProposalCode(...
    DUP3			function checkProposalCode(...
    ADD			function checkProposalCode(...
    SWAP2			function checkProposalCode(...
    POP			function checkProposalCode(...
    POP			function checkProposalCode(...
    POP			function checkProposalCode(...
    POP			function checkProposalCode(...
    POP			function checkProposalCode(...
    POP			function checkProposalCode(...
    SWAP1			function checkProposalCode(...
    SWAP1			function checkProposalCode(...
    SWAP2			function checkProposalCode(...
    SWAP1			function checkProposalCode(...
    POP			function checkProposalCode(...
    POP			function checkProposalCode(...
    PUSH [tag148]		function checkProposalCode(...
    JUMP			function checkProposalCode(...
  tag147: 
    JUMPDEST		function checkProposalCode(...
    PUSH 40		function checkProposalCode(...
    MLOAD			function checkProposalCode(...
    DUP1			function checkProposalCode(...
    DUP3			function checkProposalCode(...
    DUP2			function checkProposalCode(...
    MSTORE			function checkProposalCode(...
    PUSH 20		function checkProposalCode(...
    ADD			function checkProposalCode(...
    SWAP2			function checkProposalCode(...
    POP			function checkProposalCode(...
    POP			function checkProposalCode(...
    PUSH 40		function checkProposalCode(...
    MLOAD			function checkProposalCode(...
    DUP1			function checkProposalCode(...
    SWAP2			function checkProposalCode(...
    SUB			function checkProposalCode(...
    SWAP1			function checkProposalCode(...
    RETURN			function checkProposalCode(...
  tag47: 
    JUMPDEST		address public privateCreation
    PUSH [tag149]		address public privateCreation
    PUSH 4		address public privateCreation
    DUP1			address public privateCreation
    POP			address public privateCreation
    POP			address public privateCreation
    PUSH [tag150]		address public privateCreation
    JUMP			address public privateCreation
  tag149: 
    JUMPDEST		address public privateCreation
    PUSH 40		address public privateCreation
    MLOAD			address public privateCreation
    DUP1			address public privateCreation
    DUP3			address public privateCreation
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		address public privateCreation
    AND			address public privateCreation
    DUP2			address public privateCreation
    MSTORE			address public privateCreation
    PUSH 20		address public privateCreation
    ADD			address public privateCreation
    SWAP2			address public privateCreation
    POP			address public privateCreation
    POP			address public privateCreation
    PUSH 40		address public privateCreation
    MLOAD			address public privateCreation
    DUP1			address public privateCreation
    SWAP2			address public privateCreation
    SUB			address public privateCreation
    SWAP1			address public privateCreation
    RETURN			address public privateCreation
  tag64: 
    JUMPDEST		function approve(address _spender, uint256 _amount) returns (bool success) {...
    PUSH 0		bool success
    DUP2			_amount
    PUSH 15		allowed
    PUSH 0		allowed
    POP			allowed
    PUSH 0		allowed[msg.sender]
    CALLER			msg.sender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		allowed[msg.sender]
    AND			allowed[msg.sender]
    DUP2			allowed[msg.sender]
    MSTORE			allowed[msg.sender]
    PUSH 20		allowed[msg.sender]
    ADD			allowed[msg.sender]
    SWAP1			allowed[msg.sender]
    DUP2			allowed[msg.sender]
    MSTORE			allowed[msg.sender]
    PUSH 20		allowed[msg.sender]
    ADD			allowed[msg.sender]
    PUSH 0		allowed[msg.sender]
    SHA3			allowed[msg.sender]
    PUSH 0		allowed[msg.sender]
    POP			allowed[msg.sender]
    PUSH 0		allowed[msg.sender][_spender]
    DUP6			_spender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		allowed[msg.sender][_spender]
    AND			allowed[msg.sender][_spender]
    DUP2			allowed[msg.sender][_spender]
    MSTORE			allowed[msg.sender][_spender]
    PUSH 20		allowed[msg.sender][_spender]
    ADD			allowed[msg.sender][_spender]
    SWAP1			allowed[msg.sender][_spender]
    DUP2			allowed[msg.sender][_spender]
    MSTORE			allowed[msg.sender][_spender]
    PUSH 20		allowed[msg.sender][_spender]
    ADD			allowed[msg.sender][_spender]
    PUSH 0		allowed[msg.sender][_spender]
    SHA3			allowed[msg.sender][_spender]
    PUSH 0		allowed[msg.sender][_spender]
    POP			allowed[msg.sender][_spender] = _amount
    DUP2			allowed[msg.sender][_spender] = _amount
    SWAP1			allowed[msg.sender][_spender] = _amount
    SSTORE			allowed[msg.sender][_spender] = _amount
    POP			allowed[msg.sender][_spender] = _amount
    DUP3			_spender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		Approval(msg.sender, _spender, _amount)
    AND			Approval(msg.sender, _spender, _amount)
    CALLER			msg.sender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		Approval(msg.sender, _spender, _amount)
    AND			Approval(msg.sender, _spender, _amount)
    PUSH 8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925		Approval(msg.sender, _spender, _amount)
    DUP5			_amount
    PUSH 40		Approval(msg.sender, _spender, _amount)
    MLOAD			Approval(msg.sender, _spender, _amount)
    DUP1			Approval(msg.sender, _spender, _amount)
    DUP3			Approval(msg.sender, _spender, _amount)
    DUP2			Approval(msg.sender, _spender, _amount)
    MSTORE			Approval(msg.sender, _spender, _amount)
    PUSH 20		Approval(msg.sender, _spender, _amount)
    ADD			Approval(msg.sender, _spender, _amount)
    SWAP2			Approval(msg.sender, _spender, _amount)
    POP			Approval(msg.sender, _spender, _amount)
    POP			Approval(msg.sender, _spender, _amount)
    PUSH 40		Approval(msg.sender, _spender, _amount)
    MLOAD			Approval(msg.sender, _spender, _amount)
    DUP1			Approval(msg.sender, _spender, _amount)
    SWAP2			Approval(msg.sender, _spender, _amount)
    SUB			Approval(msg.sender, _spender, _amount)
    SWAP1			Approval(msg.sender, _spender, _amount)
    LOG3			Approval(msg.sender, _spender, _amount)
    PUSH 1		true
    SWAP1			return true
    POP			return true
    PUSH [tag151]		return true
    JUMP			return true
  tag151: 
    JUMPDEST		function approve(address _spender, uint256 _amount) returns (bool success) {...
    SWAP3			function approve(address _spender, uint256 _amount) returns (bool success) {...
    SWAP2			function approve(address _spender, uint256 _amount) returns (bool success) {...
    POP			function approve(address _spender, uint256 _amount) returns (bool success) {...
    POP			function approve(address _spender, uint256 _amount) returns (bool success) {...
    JUMP	[out]		function approve(address _spender, uint256 _amount) returns (bool success) {...
  tag140: 
    JUMPDEST		function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    PUSH 0		uint256 remaining
    PUSH 15		allowed
    PUSH 0		allowed
    POP			allowed
    PUSH 0		allowed[_owner]
    DUP5			_owner
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		allowed[_owner]
    AND			allowed[_owner]
    DUP2			allowed[_owner]
    MSTORE			allowed[_owner]
    PUSH 20		allowed[_owner]
    ADD			allowed[_owner]
    SWAP1			allowed[_owner]
    DUP2			allowed[_owner]
    MSTORE			allowed[_owner]
    PUSH 20		allowed[_owner]
    ADD			allowed[_owner]
    PUSH 0		allowed[_owner]
    SHA3			allowed[_owner]
    PUSH 0		allowed[_owner]
    POP			allowed[_owner]
    PUSH 0		allowed[_owner][_spender]
    DUP4			_spender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		allowed[_owner][_spender]
    AND			allowed[_owner][_spender]
    DUP2			allowed[_owner][_spender]
    MSTORE			allowed[_owner][_spender]
    PUSH 20		allowed[_owner][_spender]
    ADD			allowed[_owner][_spender]
    SWAP1			allowed[_owner][_spender]
    DUP2			allowed[_owner][_spender]
    MSTORE			allowed[_owner][_spender]
    PUSH 20		allowed[_owner][_spender]
    ADD			allowed[_owner][_spender]
    PUSH 0		allowed[_owner][_spender]
    SHA3			allowed[_owner][_spender]
    PUSH 0		allowed[_owner][_spender]
    POP			allowed[_owner][_spender]
    SLOAD			allowed[_owner][_spender]
    SWAP1			return allowed[_owner][_spender]
    POP			return allowed[_owner][_spender]
    PUSH [tag152]		return allowed[_owner][_spender]
    JUMP			return allowed[_owner][_spender]
  tag152: 
    JUMPDEST		function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    SWAP3			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    SWAP2			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    POP			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    POP			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    JUMP	[out]		function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
  tag88: 
    JUMPDEST		uint public closingTime
    PUSH F		uint public closingTime
    PUSH 0		uint public closingTime
    POP			uint public closingTime
    SLOAD			uint public closingTime
    DUP2			uint public closingTime
    JUMP	[out]		uint public closingTime
  tag66: 
    JUMPDEST		uint public minTokensToCreate
    PUSH 10		uint public minTokensToCreate
    PUSH 0		uint public minTokensToCreate
    POP			uint public minTokensToCreate
    SLOAD			uint public minTokensToCreate
    DUP2			uint public minTokensToCreate
    JUMP	[out]		uint public minTokensToCreate
  tag127: 
    JUMPDEST		bool public isFueled
    PUSH 11		bool public isFueled
    PUSH 0		bool public isFueled
    SWAP1			bool public isFueled
    SLOAD			bool public isFueled
    SWAP1			bool public isFueled
    PUSH 100		bool public isFueled
    EXP			bool public isFueled
    SWAP1			bool public isFueled
    DIV			bool public isFueled
    PUSH FF		bool public isFueled
    AND			bool public isFueled
    DUP2			bool public isFueled
    JUMP	[out]		bool public isFueled
  tag150: 
    JUMPDEST		address public privateCreation
    PUSH 11		address public privateCreation
    PUSH 1		address public privateCreation
    SWAP1			address public privateCreation
    SLOAD			address public privateCreation
    SWAP1			address public privateCreation
    PUSH 100		address public privateCreation
    EXP			address public privateCreation
    SWAP1			address public privateCreation
    DIV			address public privateCreation
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		address public privateCreation
    AND			address public privateCreation
    DUP2			address public privateCreation
    JUMP	[out]		address public privateCreation
  tag76: 
    JUMPDEST		ManagedAccount public extraBalance
    PUSH 12		ManagedAccount public extraBalance
    PUSH 0		ManagedAccount public extraBalance
    SWAP1			ManagedAccount public extraBalance
    SLOAD			ManagedAccount public extraBalance
    SWAP1			ManagedAccount public extraBalance
    PUSH 100		ManagedAccount public extraBalance
    EXP			ManagedAccount public extraBalance
    SWAP1			ManagedAccount public extraBalance
    DIV			ManagedAccount public extraBalance
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		ManagedAccount public extraBalance
    AND			ManagedAccount public extraBalance
    DUP2			ManagedAccount public extraBalance
    JUMP	[out]		ManagedAccount public extraBalance
  tag54: 
    JUMPDEST		function createTokenProxy(address _tokenHolder) returns (bool success) {...
    PUSH 0		bool success
    PUSH 0		uint token
    PUSH F		closingTime
    PUSH 0		closingTime
    POP			closingTime
    SLOAD			closingTime
    TIMESTAMP			now
    LT			now < closingTime
    DUP1			now < closingTime && msg.value > 0
    ISZERO			now < closingTime && msg.value > 0
    PUSH [tag154]		now < closingTime && msg.value > 0
    JUMPI			now < closingTime && msg.value > 0
    POP			now < closingTime && msg.value > 0
    PUSH 0		0
    CALLVALUE			msg.value
    GT			msg.value > 0
  tag154: 
    JUMPDEST		now < closingTime && msg.value > 0
    DUP1			now < closingTime && msg.value > 0...
    ISZERO			now < closingTime && msg.value > 0...
    PUSH [tag155]		now < closingTime && msg.value > 0...
    JUMPI			now < closingTime && msg.value > 0...
    POP			now < closingTime && msg.value > 0...
    PUSH 0		0
    PUSH 11		privateCreation
    PUSH 1		privateCreation
    SWAP1			privateCreation
    SLOAD			privateCreation
    SWAP1			privateCreation
    PUSH 100		privateCreation
    EXP			privateCreation
    SWAP1			privateCreation
    DIV			privateCreation
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		privateCreation
    AND			privateCreation
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		privateCreation == 0
    AND			privateCreation == 0
    EQ			privateCreation == 0
    DUP1			privateCreation == 0 || privateCreation == msg.sender
    PUSH [tag156]		privateCreation == 0 || privateCreation == msg.sender
    JUMPI			privateCreation == 0 || privateCreation == msg.sender
    POP			privateCreation == 0 || privateCreation == msg.sender
    CALLER			msg.sender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		privateCreation == msg.sender
    AND			privateCreation == msg.sender
    PUSH 11		privateCreation
    PUSH 1		privateCreation
    SWAP1			privateCreation
    SLOAD			privateCreation
    SWAP1			privateCreation
    PUSH 100		privateCreation
    EXP			privateCreation
    SWAP1			privateCreation
    DIV			privateCreation
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		privateCreation
    AND			privateCreation
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		privateCreation == msg.sender
    AND			privateCreation == msg.sender
    EQ			privateCreation == msg.sender
  tag156: 
    JUMPDEST		privateCreation == 0 || privateCreation == msg.sender
  tag155: 
    JUMPDEST		now < closingTime && msg.value > 0...
    ISZERO			if (now < closingTime && msg.value > 0...
    PUSH [tag157]		if (now < closingTime && msg.value > 0...
    JUMPI			if (now < closingTime && msg.value > 0...
    PUSH [tag158]		divisor()
    PUSH [tag74]		divisor
    JUMP	[in]		divisor()
  tag158: 
    JUMPDEST		divisor()
    PUSH 14		20
    CALLVALUE			msg.value
    MUL			msg.value * 20
    DIV			(msg.value * 20) / divisor()
    SWAP1			uint token = (msg.value * 20) / divisor()
    POP			uint token = (msg.value * 20) / divisor()
    PUSH 12		extraBalance
    PUSH 0		extraBalance
    SWAP1			extraBalance
    SLOAD			extraBalance
    SWAP1			extraBalance
    PUSH 100		extraBalance
    EXP			extraBalance
    SWAP1			extraBalance
    DIV			extraBalance
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		extraBalance
    AND			extraBalance
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		extraBalance.call
    AND			extraBalance.call
    DUP2			token
    CALLVALUE			msg.value
    SUB			msg.value - token
    PUSH 40		extraBalance.call.value(msg.value - token)()
    MLOAD			extraBalance.call.value(msg.value - token)()
    DUP1			extraBalance.call.value(msg.value - token)()
    SWAP1			extraBalance.call.value(msg.value - token)()
    POP			extraBalance.call.value(msg.value - token)()
    PUSH 0		extraBalance.call.value(msg.value - token)()
    PUSH 40		extraBalance.call.value(msg.value - token)()
    MLOAD			extraBalance.call.value(msg.value - token)()
    DUP1			extraBalance.call.value(msg.value - token)()
    DUP4			extraBalance.call.value(msg.value - token)()
    SUB			extraBalance.call.value(msg.value - token)()
    DUP2			extraBalance.call.value(msg.value - token)()
    DUP6			extraBalance.call.value(msg.value - token)()
    DUP8			extraBalance.call.value(msg.value - token)()
    PUSH 8502		extraBalance.call.value(msg.value - token)()
    GAS			extraBalance.call.value(msg.value - token)()
    SUB			extraBalance.call.value(msg.value - token)()
    CALL			extraBalance.call.value(msg.value - token)()
    SWAP3			extraBalance.call.value(msg.value - token)()
    POP			extraBalance.call.value(msg.value - token)()
    POP			extraBalance.call.value(msg.value - token)()
    POP			extraBalance.call.value(msg.value - token)()
    POP			extraBalance.call.value(msg.value - token)()
    DUP1			token
    PUSH 14		balances
    PUSH 0		balances
    POP			balances
    PUSH 0		balances[_tokenHolder]
    DUP6			_tokenHolder
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		balances[_tokenHolder]
    AND			balances[_tokenHolder]
    DUP2			balances[_tokenHolder]
    MSTORE			balances[_tokenHolder]
    PUSH 20		balances[_tokenHolder]
    ADD			balances[_tokenHolder]
    SWAP1			balances[_tokenHolder]
    DUP2			balances[_tokenHolder]
    MSTORE			balances[_tokenHolder]
    PUSH 20		balances[_tokenHolder]
    ADD			balances[_tokenHolder]
    PUSH 0		balances[_tokenHolder]
    SHA3			balances[_tokenHolder]
    PUSH 0		balances[_tokenHolder]
    DUP3			balances[_tokenHolder] += token
    DUP3			balances[_tokenHolder] += token
    DUP3			balances[_tokenHolder] += token
    POP			balances[_tokenHolder] += token
    SLOAD			balances[_tokenHolder] += token
    ADD			balances[_tokenHolder] += token
    SWAP3			balances[_tokenHolder] += token
    POP			balances[_tokenHolder] += token
    POP			balances[_tokenHolder] += token
    DUP2			balances[_tokenHolder] += token
    SWAP1			balances[_tokenHolder] += token
    SSTORE			balances[_tokenHolder] += token
    POP			balances[_tokenHolder] += token
    DUP1			token
    PUSH 16		totalSupply
    PUSH 0		totalSupply
    DUP3			totalSupply += token
    DUP3			totalSupply += token
    DUP3			totalSupply += token
    POP			totalSupply += token
    SLOAD			totalSupply += token
    ADD			totalSupply += token
    SWAP3			totalSupply += token
    POP			totalSupply += token
    POP			totalSupply += token
    DUP2			totalSupply += token
    SWAP1			totalSupply += token
    SSTORE			totalSupply += token
    POP			totalSupply += token
    CALLVALUE			msg.value
    PUSH 13		weiGiven
    PUSH 0		weiGiven
    POP			weiGiven
    PUSH 0		weiGiven[_tokenHolder]
    DUP6			_tokenHolder
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		weiGiven[_tokenHolder]
    AND			weiGiven[_tokenHolder]
    DUP2			weiGiven[_tokenHolder]
    MSTORE			weiGiven[_tokenHolder]
    PUSH 20		weiGiven[_tokenHolder]
    ADD			weiGiven[_tokenHolder]
    SWAP1			weiGiven[_tokenHolder]
    DUP2			weiGiven[_tokenHolder]
    MSTORE			weiGiven[_tokenHolder]
    PUSH 20		weiGiven[_tokenHolder]
    ADD			weiGiven[_tokenHolder]
    PUSH 0		weiGiven[_tokenHolder]
    SHA3			weiGiven[_tokenHolder]
    PUSH 0		weiGiven[_tokenHolder]
    DUP3			weiGiven[_tokenHolder] += msg.value
    DUP3			weiGiven[_tokenHolder] += msg.value
    DUP3			weiGiven[_tokenHolder] += msg.value
    POP			weiGiven[_tokenHolder] += msg.value
    SLOAD			weiGiven[_tokenHolder] += msg.value
    ADD			weiGiven[_tokenHolder] += msg.value
    SWAP3			weiGiven[_tokenHolder] += msg.value
    POP			weiGiven[_tokenHolder] += msg.value
    POP			weiGiven[_tokenHolder] += msg.value
    DUP2			weiGiven[_tokenHolder] += msg.value
    SWAP1			weiGiven[_tokenHolder] += msg.value
    SSTORE			weiGiven[_tokenHolder] += msg.value
    POP			weiGiven[_tokenHolder] += msg.value
    DUP3			_tokenHolder
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		CreatedToken(_tokenHolder, token)
    AND			CreatedToken(_tokenHolder, token)
    PUSH DBCCB92686EFCEAFB9BB7E0394DF7F58F71B954061B81AFB57109BF247D3D75A		CreatedToken(_tokenHolder, token)
    DUP3			token
    PUSH 40		CreatedToken(_tokenHolder, token)
    MLOAD			CreatedToken(_tokenHolder, token)
    DUP1			CreatedToken(_tokenHolder, token)
    DUP3			CreatedToken(_tokenHolder, token)
    DUP2			CreatedToken(_tokenHolder, token)
    MSTORE			CreatedToken(_tokenHolder, token)
    PUSH 20		CreatedToken(_tokenHolder, token)
    ADD			CreatedToken(_tokenHolder, token)
    SWAP2			CreatedToken(_tokenHolder, token)
    POP			CreatedToken(_tokenHolder, token)
    POP			CreatedToken(_tokenHolder, token)
    PUSH 40		CreatedToken(_tokenHolder, token)
    MLOAD			CreatedToken(_tokenHolder, token)
    DUP1			CreatedToken(_tokenHolder, token)
    SWAP2			CreatedToken(_tokenHolder, token)
    SUB			CreatedToken(_tokenHolder, token)
    SWAP1			CreatedToken(_tokenHolder, token)
    LOG2			CreatedToken(_tokenHolder, token)
    PUSH 10		minTokensToCreate
    PUSH 0		minTokensToCreate
    POP			minTokensToCreate
    SLOAD			minTokensToCreate
    PUSH 16		totalSupply
    PUSH 0		totalSupply
    POP			totalSupply
    SLOAD			totalSupply
    LT			totalSupply >= minTokensToCreate
    ISZERO			totalSupply >= minTokensToCreate
    DUP1			totalSupply >= minTokensToCreate && !isFueled
    ISZERO			totalSupply >= minTokensToCreate && !isFueled
    PUSH [tag159]		totalSupply >= minTokensToCreate && !isFueled
    JUMPI			totalSupply >= minTokensToCreate && !isFueled
    POP			totalSupply >= minTokensToCreate && !isFueled
    PUSH 11		isFueled
    PUSH 0		isFueled
    SWAP1			isFueled
    SLOAD			isFueled
    SWAP1			isFueled
    PUSH 100		isFueled
    EXP			isFueled
    SWAP1			isFueled
    DIV			isFueled
    PUSH FF		isFueled
    AND			isFueled
    ISZERO			!isFueled
  tag159: 
    JUMPDEST		totalSupply >= minTokensToCreate && !isFueled
    ISZERO			if (totalSupply >= minTokensToCreate && !isFueled) {...
    PUSH [tag160]		if (totalSupply >= minTokensToCreate && !isFueled) {...
    JUMPI			if (totalSupply >= minTokensToCreate && !isFueled) {...
    PUSH 1		true
    PUSH 11		isFueled
    PUSH 0		isFueled
    PUSH 100		isFueled = true
    EXP			isFueled = true
    DUP2			isFueled = true
    SLOAD			isFueled = true
    DUP2			isFueled = true
    PUSH FF		isFueled = true
    MUL			isFueled = true
    NOT			isFueled = true
    AND			isFueled = true
    SWAP1			isFueled = true
    DUP4			isFueled = true
    MUL			isFueled = true
    OR			isFueled = true
    SWAP1			isFueled = true
    SSTORE			isFueled = true
    POP			isFueled = true
    PUSH F381A3E2428FDDA36615919E8D9C35878D9EB0CF85AC6EDF575088E80E4C147E		FuelingToDate(totalSupply)
    PUSH 16		totalSupply
    PUSH 0		totalSupply
    POP			totalSupply
    SLOAD			totalSupply
    PUSH 40		FuelingToDate(totalSupply)
    MLOAD			FuelingToDate(totalSupply)
    DUP1			FuelingToDate(totalSupply)
    DUP3			FuelingToDate(totalSupply)
    DUP2			FuelingToDate(totalSupply)
    MSTORE			FuelingToDate(totalSupply)
    PUSH 20		FuelingToDate(totalSupply)
    ADD			FuelingToDate(totalSupply)
    SWAP2			FuelingToDate(totalSupply)
    POP			FuelingToDate(totalSupply)
    POP			FuelingToDate(totalSupply)
    PUSH 40		FuelingToDate(totalSupply)
    MLOAD			FuelingToDate(totalSupply)
    DUP1			FuelingToDate(totalSupply)
    SWAP2			FuelingToDate(totalSupply)
    SUB			FuelingToDate(totalSupply)
    SWAP1			FuelingToDate(totalSupply)
    LOG1			FuelingToDate(totalSupply)
  tag160: 
    JUMPDEST		if (totalSupply >= minTokensToCreate && !isFueled) {...
    PUSH 1		true
    SWAP2			return true
    POP			return true
    PUSH [tag153]		return true
    JUMP			return true
  tag157: 
    JUMPDEST		if (now < closingTime && msg.value > 0...
    PUSH [ErrorTag]		throw
    JUMP			throw
  tag153: 
    JUMPDEST		function createTokenProxy(address _tokenHolder) returns (bool success) {...
    POP			function createTokenProxy(address _tokenHolder) returns (bool success) {...
    SWAP2			function createTokenProxy(address _tokenHolder) returns (bool success) {...
    SWAP1			function createTokenProxy(address _tokenHolder) returns (bool success) {...
    POP			function createTokenProxy(address _tokenHolder) returns (bool success) {...
    JUMP	[out]		function createTokenProxy(address _tokenHolder) returns (bool success) {...
  tag94: 
    JUMPDEST		function refund() noEther {...
    PUSH 0		0
    CALLVALUE			msg.value
    GT			msg.value > 0
    ISZERO			if (msg.value > 0) throw
    PUSH [tag162]		if (msg.value > 0) throw
    JUMPI			if (msg.value > 0) throw
    PUSH [ErrorTag]		throw
    JUMP			throw
  tag162: 
    JUMPDEST		if (msg.value > 0) throw
    PUSH F		closingTime
    PUSH 0		closingTime
    POP			closingTime
    SLOAD			closingTime
    TIMESTAMP			now
    GT			now > closingTime
    DUP1			now > closingTime && !isFueled
    ISZERO			now > closingTime && !isFueled
    PUSH [tag163]		now > closingTime && !isFueled
    JUMPI			now > closingTime && !isFueled
    POP			now > closingTime && !isFueled
    PUSH 11		isFueled
    PUSH 0		isFueled
    SWAP1			isFueled
    SLOAD			isFueled
    SWAP1			isFueled
    PUSH 100		isFueled
    EXP			isFueled
    SWAP1			isFueled
    DIV			isFueled
    PUSH FF		isFueled
    AND			isFueled
    ISZERO			!isFueled
  tag163: 
    JUMPDEST		now > closingTime && !isFueled
    ISZERO			if (now > closingTime && !isFueled) {...
    PUSH [tag164]		if (now > closingTime && !isFueled) {...
    JUMPI			if (now > closingTime && !isFueled) {...
    PUSH 12		extraBalance
    PUSH 0		extraBalance
    SWAP1			extraBalance
    SLOAD			extraBalance
    SWAP1			extraBalance
    PUSH 100		extraBalance
    EXP			extraBalance
    SWAP1			extraBalance
    DIV			extraBalance
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		extraBalance
    AND			extraBalance
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		extraBalance.accumulatedInput
    AND			extraBalance.accumulatedInput
    PUSH D2CC718F		extraBalance.accumulatedInput
    PUSH 40		extraBalance.accumulatedInput()
    MLOAD			extraBalance.accumulatedInput()
    DUP2			extraBalance.accumulatedInput()
    PUSH 100000000000000000000000000000000000000000000000000000000		extraBalance.accumulatedInput()
    MUL			extraBalance.accumulatedInput()
    DUP2			extraBalance.accumulatedInput()
    MSTORE			extraBalance.accumulatedInput()
    PUSH 4		extraBalance.accumulatedInput()
    ADD			extraBalance.accumulatedInput()
    DUP1			extraBalance.accumulatedInput()
    SWAP1			extraBalance.accumulatedInput()
    POP			extraBalance.accumulatedInput()
    PUSH 20		extraBalance.accumulatedInput()
    PUSH 40		extraBalance.accumulatedInput()
    MLOAD			extraBalance.accumulatedInput()
    DUP1			extraBalance.accumulatedInput()
    DUP4			extraBalance.accumulatedInput()
    SUB			extraBalance.accumulatedInput()
    DUP2			extraBalance.accumulatedInput()
    PUSH 0		extraBalance.accumulatedInput()
    DUP8			extraBalance.accumulatedInput()
    PUSH 61DA		extraBalance.accumulatedInput()
    GAS			extraBalance.accumulatedInput()
    SUB			extraBalance.accumulatedInput()
    CALL			extraBalance.accumulatedInput()
    ISZERO			extraBalance.accumulatedInput()
    PUSH [ErrorTag]		extraBalance.accumulatedInput()
    JUMPI			extraBalance.accumulatedInput()
    POP			extraBalance.accumulatedInput()
    POP			extraBalance.accumulatedInput()
    POP			extraBalance.accumulatedInput()
    PUSH 40		extraBalance.accumulatedInput()
    MLOAD			extraBalance.accumulatedInput()
    DUP1			extraBalance.accumulatedInput()
    MLOAD			extraBalance.accumulatedInput()
    SWAP1			extraBalance.accumulatedInput()
    PUSH 20		extraBalance.accumulatedInput()
    ADD			extraBalance.accumulatedInput()
    POP			extraBalance.accumulatedInput()
    PUSH 12		extraBalance
    PUSH 0		extraBalance
    SWAP1			extraBalance
    SLOAD			extraBalance
    SWAP1			extraBalance
    PUSH 100		extraBalance
    EXP			extraBalance
    SWAP1			extraBalance
    DIV			extraBalance
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		extraBalance
    AND			extraBalance
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		extraBalance.balance
    AND			extraBalance.balance
    BALANCE			extraBalance.balance
    LT			extraBalance.balance >= extraBalance.accumulatedInput()
    ISZERO			extraBalance.balance >= extraBalance.accumulatedInput()
    ISZERO			if (extraBalance.balance >= extraBalance.accumulatedInput())...
    PUSH [tag165]		if (extraBalance.balance >= extraBalance.accumulatedInput())...
    JUMPI			if (extraBalance.balance >= extraBalance.accumulatedInput())...
    PUSH 12		extraBalance
    PUSH 0		extraBalance
    SWAP1			extraBalance
    SLOAD			extraBalance
    SWAP1			extraBalance
    PUSH 100		extraBalance
    EXP			extraBalance
    SWAP1			extraBalance
    DIV			extraBalance
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		extraBalance
    AND			extraBalance
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		extraBalance.payOut
    AND			extraBalance.payOut
    PUSH 221038A		extraBalance.payOut
    ADDRESS			this
    PUSH 12		extraBalance
    PUSH 0		extraBalance
    SWAP1			extraBalance
    SLOAD			extraBalance
    SWAP1			extraBalance
    PUSH 100		extraBalance
    EXP			extraBalance
    SWAP1			extraBalance
    DIV			extraBalance
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		extraBalance
    AND			extraBalance
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		extraBalance.accumulatedInput
    AND			extraBalance.accumulatedInput
    PUSH D2CC718F		extraBalance.accumulatedInput
    PUSH 40		extraBalance.accumulatedInput()
    MLOAD			extraBalance.accumulatedInput()
    DUP2			extraBalance.accumulatedInput()
    PUSH 100000000000000000000000000000000000000000000000000000000		extraBalance.accumulatedInput()
    MUL			extraBalance.accumulatedInput()
    DUP2			extraBalance.accumulatedInput()
    MSTORE			extraBalance.accumulatedInput()
    PUSH 4		extraBalance.accumulatedInput()
    ADD			extraBalance.accumulatedInput()
    DUP1			extraBalance.accumulatedInput()
    SWAP1			extraBalance.accumulatedInput()
    POP			extraBalance.accumulatedInput()
    PUSH 20		extraBalance.accumulatedInput()
    PUSH 40		extraBalance.accumulatedInput()
    MLOAD			extraBalance.accumulatedInput()
    DUP1			extraBalance.accumulatedInput()
    DUP4			extraBalance.accumulatedInput()
    SUB			extraBalance.accumulatedInput()
    DUP2			extraBalance.accumulatedInput()
    PUSH 0		extraBalance.accumulatedInput()
    DUP8			extraBalance.accumulatedInput()
    PUSH 61DA		extraBalance.accumulatedInput()
    GAS			extraBalance.accumulatedInput()
    SUB			extraBalance.accumulatedInput()
    CALL			extraBalance.accumulatedInput()
    ISZERO			extraBalance.accumulatedInput()
    PUSH [ErrorTag]		extraBalance.accumulatedInput()
    JUMPI			extraBalance.accumulatedInput()
    POP			extraBalance.accumulatedInput()
    POP			extraBalance.accumulatedInput()
    POP			extraBalance.accumulatedInput()
    PUSH 40		extraBalance.accumulatedInput()
    MLOAD			extraBalance.accumulatedInput()
    DUP1			extraBalance.accumulatedInput()
    MLOAD			extraBalance.accumulatedInput()
    SWAP1			extraBalance.accumulatedInput()
    PUSH 20		extraBalance.accumulatedInput()
    ADD			extraBalance.accumulatedInput()
    POP			extraBalance.accumulatedInput()
    PUSH 40		extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    MLOAD			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    DUP4			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    PUSH 100000000000000000000000000000000000000000000000000000000		extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    MUL			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    DUP2			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    MSTORE			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    PUSH 4		extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    ADD			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    DUP1			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    DUP4			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    AND			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    DUP2			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    MSTORE			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    PUSH 20		extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    ADD			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    DUP3			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    DUP2			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    MSTORE			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    PUSH 20		extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    ADD			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    SWAP3			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    POP			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    POP			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    POP			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    PUSH 20		extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    PUSH 40		extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    MLOAD			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    DUP1			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    DUP4			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    SUB			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    DUP2			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    PUSH 0		extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    DUP8			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    PUSH 61DA		extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    GAS			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    SUB			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    CALL			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    ISZERO			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    PUSH [ErrorTag]		extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    JUMPI			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    POP			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    POP			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    POP			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    PUSH 40		extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    MLOAD			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    DUP1			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    MLOAD			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    SWAP1			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    PUSH 20		extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    ADD			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    POP			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    POP			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
  tag165: 
    JUMPDEST		if (extraBalance.balance >= extraBalance.accumulatedInput())...
    CALLER			msg.sender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		msg.sender.call
    AND			msg.sender.call
    PUSH 13		weiGiven
    PUSH 0		weiGiven
    POP			weiGiven
    PUSH 0		weiGiven[msg.sender]
    CALLER			msg.sender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		weiGiven[msg.sender]
    AND			weiGiven[msg.sender]
    DUP2			weiGiven[msg.sender]
    MSTORE			weiGiven[msg.sender]
    PUSH 20		weiGiven[msg.sender]
    ADD			weiGiven[msg.sender]
    SWAP1			weiGiven[msg.sender]
    DUP2			weiGiven[msg.sender]
    MSTORE			weiGiven[msg.sender]
    PUSH 20		weiGiven[msg.sender]
    ADD			weiGiven[msg.sender]
    PUSH 0		weiGiven[msg.sender]
    SHA3			weiGiven[msg.sender]
    PUSH 0		weiGiven[msg.sender]
    POP			weiGiven[msg.sender]
    SLOAD			weiGiven[msg.sender]
    PUSH 40		msg.sender.call.value(weiGiven[msg.sender])()
    MLOAD			msg.sender.call.value(weiGiven[msg.sender])()
    DUP1			msg.sender.call.value(weiGiven[msg.sender])()
    SWAP1			msg.sender.call.value(weiGiven[msg.sender])()
    POP			msg.sender.call.value(weiGiven[msg.sender])()
    PUSH 0		msg.sender.call.value(weiGiven[msg.sender])()
    PUSH 40		msg.sender.call.value(weiGiven[msg.sender])()
    MLOAD			msg.sender.call.value(weiGiven[msg.sender])()
    DUP1			msg.sender.call.value(weiGiven[msg.sender])()
    DUP4			msg.sender.call.value(weiGiven[msg.sender])()
    SUB			msg.sender.call.value(weiGiven[msg.sender])()
    DUP2			msg.sender.call.value(weiGiven[msg.sender])()
    DUP6			msg.sender.call.value(weiGiven[msg.sender])()
    DUP8			msg.sender.call.value(weiGiven[msg.sender])()
    PUSH 8502		msg.sender.call.value(weiGiven[msg.sender])()
    GAS			msg.sender.call.value(weiGiven[msg.sender])()
    SUB			msg.sender.call.value(weiGiven[msg.sender])()
    CALL			msg.sender.call.value(weiGiven[msg.sender])()
    SWAP3			msg.sender.call.value(weiGiven[msg.sender])()
    POP			msg.sender.call.value(weiGiven[msg.sender])()
    POP			msg.sender.call.value(weiGiven[msg.sender])()
    POP			msg.sender.call.value(weiGiven[msg.sender])()
    ISZERO			if (msg.sender.call.value(weiGiven[msg.sender])()) {...
    PUSH [tag166]		if (msg.sender.call.value(weiGiven[msg.sender])()) {...
    JUMPI			if (msg.sender.call.value(weiGiven[msg.sender])()) {...
    CALLER			msg.sender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		Refund(msg.sender, weiGiven[msg.sender])
    AND			Refund(msg.sender, weiGiven[msg.sender])
    PUSH BB28353E4598C3B9199101A66E0989549B659A59A54D2C27FBB183F1932C8E6D		Refund(msg.sender, weiGiven[msg.sender])
    PUSH 13		weiGiven
    PUSH 0		weiGiven
    POP			weiGiven
    PUSH 0		weiGiven[msg.sender]
    CALLER			msg.sender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		weiGiven[msg.sender]
    AND			weiGiven[msg.sender]
    DUP2			weiGiven[msg.sender]
    MSTORE			weiGiven[msg.sender]
    PUSH 20		weiGiven[msg.sender]
    ADD			weiGiven[msg.sender]
    SWAP1			weiGiven[msg.sender]
    DUP2			weiGiven[msg.sender]
    MSTORE			weiGiven[msg.sender]
    PUSH 20		weiGiven[msg.sender]
    ADD			weiGiven[msg.sender]
    PUSH 0		weiGiven[msg.sender]
    SHA3			weiGiven[msg.sender]
    PUSH 0		weiGiven[msg.sender]
    POP			weiGiven[msg.sender]
    SLOAD			weiGiven[msg.sender]
    PUSH 40		Refund(msg.sender, weiGiven[msg.sender])
    MLOAD			Refund(msg.sender, weiGiven[msg.sender])
    DUP1			Refund(msg.sender, weiGiven[msg.sender])
    DUP3			Refund(msg.sender, weiGiven[msg.sender])
    DUP2			Refund(msg.sender, weiGiven[msg.sender])
    MSTORE			Refund(msg.sender, weiGiven[msg.sender])
    PUSH 20		Refund(msg.sender, weiGiven[msg.sender])
    ADD			Refund(msg.sender, weiGiven[msg.sender])
    SWAP2			Refund(msg.sender, weiGiven[msg.sender])
    POP			Refund(msg.sender, weiGiven[msg.sender])
    POP			Refund(msg.sender, weiGiven[msg.sender])
    PUSH 40		Refund(msg.sender, weiGiven[msg.sender])
    MLOAD			Refund(msg.sender, weiGiven[msg.sender])
    DUP1			Refund(msg.sender, weiGiven[msg.sender])
    SWAP2			Refund(msg.sender, weiGiven[msg.sender])
    SUB			Refund(msg.sender, weiGiven[msg.sender])
    SWAP1			Refund(msg.sender, weiGiven[msg.sender])
    LOG2			Refund(msg.sender, weiGiven[msg.sender])
    PUSH 14		balances
    PUSH 0		balances
    POP			balances
    PUSH 0		balances[msg.sender]
    CALLER			msg.sender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		balances[msg.sender]
    AND			balances[msg.sender]
    DUP2			balances[msg.sender]
    MSTORE			balances[msg.sender]
    PUSH 20		balances[msg.sender]
    ADD			balances[msg.sender]
    SWAP1			balances[msg.sender]
    DUP2			balances[msg.sender]
    MSTORE			balances[msg.sender]
    PUSH 20		balances[msg.sender]
    ADD			balances[msg.sender]
    PUSH 0		balances[msg.sender]
    SHA3			balances[msg.sender]
    PUSH 0		balances[msg.sender]
    POP			balances[msg.sender]
    SLOAD			balances[msg.sender]
    PUSH 16		totalSupply
    PUSH 0		totalSupply
    DUP3			totalSupply -= balances[msg.sender]
    DUP3			totalSupply -= balances[msg.sender]
    DUP3			totalSupply -= balances[msg.sender]
    POP			totalSupply -= balances[msg.sender]
    SLOAD			totalSupply -= balances[msg.sender]
    SUB			totalSupply -= balances[msg.sender]
    SWAP3			totalSupply -= balances[msg.sender]
    POP			totalSupply -= balances[msg.sender]
    POP			totalSupply -= balances[msg.sender]
    DUP2			totalSupply -= balances[msg.sender]
    SWAP1			totalSupply -= balances[msg.sender]
    SSTORE			totalSupply -= balances[msg.sender]
    POP			totalSupply -= balances[msg.sender]
    PUSH 0		0
    PUSH 14		balances
    PUSH 0		balances
    POP			balances
    PUSH 0		balances[msg.sender]
    CALLER			msg.sender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		balances[msg.sender]
    AND			balances[msg.sender]
    DUP2			balances[msg.sender]
    MSTORE			balances[msg.sender]
    PUSH 20		balances[msg.sender]
    ADD			balances[msg.sender]
    SWAP1			balances[msg.sender]
    DUP2			balances[msg.sender]
    MSTORE			balances[msg.sender]
    PUSH 20		balances[msg.sender]
    ADD			balances[msg.sender]
    PUSH 0		balances[msg.sender]
    SHA3			balances[msg.sender]
    PUSH 0		balances[msg.sender]
    POP			balances[msg.sender] = 0
    DUP2			balances[msg.sender] = 0
    SWAP1			balances[msg.sender] = 0
    SSTORE			balances[msg.sender] = 0
    POP			balances[msg.sender] = 0
    PUSH 0		0
    PUSH 13		weiGiven
    PUSH 0		weiGiven
    POP			weiGiven
    PUSH 0		weiGiven[msg.sender]
    CALLER			msg.sender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		weiGiven[msg.sender]
    AND			weiGiven[msg.sender]
    DUP2			weiGiven[msg.sender]
    MSTORE			weiGiven[msg.sender]
    PUSH 20		weiGiven[msg.sender]
    ADD			weiGiven[msg.sender]
    SWAP1			weiGiven[msg.sender]
    DUP2			weiGiven[msg.sender]
    MSTORE			weiGiven[msg.sender]
    PUSH 20		weiGiven[msg.sender]
    ADD			weiGiven[msg.sender]
    PUSH 0		weiGiven[msg.sender]
    SHA3			weiGiven[msg.sender]
    PUSH 0		weiGiven[msg.sender]
    POP			weiGiven[msg.sender] = 0
    DUP2			weiGiven[msg.sender] = 0
    SWAP1			weiGiven[msg.sender] = 0
    SSTORE			weiGiven[msg.sender] = 0
    POP			weiGiven[msg.sender] = 0
  tag166: 
    JUMPDEST		if (msg.sender.call.value(weiGiven[msg.sender])()) {...
  tag164: 
    JUMPDEST		if (now > closingTime && !isFueled) {...
  tag161: 
    JUMPDEST		function refund() noEther {...
    JUMP	[out]		function refund() noEther {...
  tag74: 
    JUMPDEST		function divisor() constant returns (uint divisor) {...
    PUSH 0		uint divisor
    TIMESTAMP			now
    PUSH 127500		2 weeks
    PUSH F		closingTime
    PUSH 0		closingTime
    POP			closingTime
    SLOAD			closingTime
    SUB			closingTime - 2 weeks
    GT			closingTime - 2 weeks > now
    ISZERO			if (closingTime - 2 weeks > now) {...
    PUSH [tag168]		if (closingTime - 2 weeks > now) {...
    JUMPI			if (closingTime - 2 weeks > now) {...
    PUSH 14		20
    SWAP1			return 20
    POP			return 20
    PUSH [tag167]		return 20
    JUMP			return 20
    PUSH [tag169]		if (closingTime - 2 weeks > now) {...
    JUMP			if (closingTime - 2 weeks > now) {...
  tag168: 
    JUMPDEST		if (closingTime - 2 weeks > now) {...
    TIMESTAMP			now
    PUSH 54600		4 days
    PUSH F		closingTime
    PUSH 0		closingTime
    POP			closingTime
    SLOAD			closingTime
    SUB			closingTime - 4 days
    GT			closingTime - 4 days > now
    ISZERO			if (closingTime - 4 days > now) {...
    PUSH [tag170]		if (closingTime - 4 days > now) {...
    JUMPI			if (closingTime - 4 days > now) {...
    PUSH 15180		1 days
    PUSH 127500		2 weeks
    PUSH F		closingTime
    PUSH 0		closingTime
    POP			closingTime
    SLOAD			closingTime
    SUB			closingTime - 2 weeks
    TIMESTAMP			now
    SUB			now - (closingTime - 2 weeks)
    DIV			(now - (closingTime - 2 weeks)) / (1 days)
    PUSH 14		20
    ADD			20 + (now - (closingTime - 2 weeks)) / (1 days)
    SWAP1			return (20 + (now - (closingTime - 2 weeks)) / (1 days))
    POP			return (20 + (now - (closingTime - 2 weeks)) / (1 days))
    PUSH [tag167]		return (20 + (now - (closingTime - 2 weeks)) / (1 days))
    JUMP			return (20 + (now - (closingTime - 2 weeks)) / (1 days))
    PUSH [tag171]		if (closingTime - 4 days > now) {...
    JUMP			if (closingTime - 4 days > now) {...
  tag170: 
    JUMPDEST		if (closingTime - 4 days > now) {...
    PUSH 1E		30
    SWAP1			return 30
    POP			return 30
    PUSH [tag167]		return 30
    JUMP			return 30
  tag171: 
    JUMPDEST		if (closingTime - 4 days > now) {...
  tag169: 
    JUMPDEST		if (closingTime - 2 weeks > now) {...
  tag167: 
    JUMPDEST		function divisor() constant returns (uint divisor) {...
    SWAP1			function divisor() constant returns (uint divisor) {...
    JUMP	[out]		function divisor() constant returns (uint divisor) {...
  tag59: 
    JUMPDEST		Proposal[] public proposals
    PUSH 0		Proposal[] public proposals
    PUSH 0		Proposal[] public proposals
    POP			Proposal[] public proposals
    DUP2			Proposal[] public proposals
    DUP2			Proposal[] public proposals
    SLOAD			Proposal[] public proposals
    DUP2			Proposal[] public proposals
    LT			Proposal[] public proposals
    ISZERO			Proposal[] public proposals
    PUSH [ErrorTag]		Proposal[] public proposals
    JUMPI			Proposal[] public proposals
    SWAP1			Proposal[] public proposals
    PUSH 0		Proposal[] public proposals
    MSTORE			Proposal[] public proposals
    PUSH 20		Proposal[] public proposals
    PUSH 0		Proposal[] public proposals
    SHA3			Proposal[] public proposals
    SWAP1			Proposal[] public proposals
    PUSH E		Proposal[] public proposals
    MUL			Proposal[] public proposals
    ADD			Proposal[] public proposals
    PUSH 0		Proposal[] public proposals
  tag172: 
    JUMPDEST		Proposal[] public proposals
    SWAP2			Proposal[] public proposals
    POP			Proposal[] public proposals
    SWAP1			Proposal[] public proposals
    POP			Proposal[] public proposals
    DUP1			Proposal[] public proposals
    PUSH 0		Proposal[] public proposals
    ADD			Proposal[] public proposals
    PUSH 0		Proposal[] public proposals
    SWAP1			Proposal[] public proposals
    SLOAD			Proposal[] public proposals
    SWAP1			Proposal[] public proposals
    PUSH 100		Proposal[] public proposals
    EXP			Proposal[] public proposals
    SWAP1			Proposal[] public proposals
    DIV			Proposal[] public proposals
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		Proposal[] public proposals
    AND			Proposal[] public proposals
    SWAP1			Proposal[] public proposals
    DUP1			Proposal[] public proposals
    PUSH 1		Proposal[] public proposals
    ADD			Proposal[] public proposals
    PUSH 0		Proposal[] public proposals
    POP			Proposal[] public proposals
    SLOAD			Proposal[] public proposals
    SWAP1			Proposal[] public proposals
    DUP1			Proposal[] public proposals
    PUSH 2		Proposal[] public proposals
    ADD			Proposal[] public proposals
    PUSH 0		Proposal[] public proposals
    POP			Proposal[] public proposals
    SWAP1			Proposal[] public proposals
    DUP1			Proposal[] public proposals
    PUSH 3		Proposal[] public proposals
    ADD			Proposal[] public proposals
    PUSH 0		Proposal[] public proposals
    POP			Proposal[] public proposals
    SLOAD			Proposal[] public proposals
    SWAP1			Proposal[] public proposals
    DUP1			Proposal[] public proposals
    PUSH 4		Proposal[] public proposals
    ADD			Proposal[] public proposals
    PUSH 0		Proposal[] public proposals
    SWAP1			Proposal[] public proposals
    SLOAD			Proposal[] public proposals
    SWAP1			Proposal[] public proposals
    PUSH 100		Proposal[] public proposals
    EXP			Proposal[] public proposals
    SWAP1			Proposal[] public proposals
    DIV			Proposal[] public proposals
    PUSH FF		Proposal[] public proposals
    AND			Proposal[] public proposals
    SWAP1			Proposal[] public proposals
    DUP1			Proposal[] public proposals
    PUSH 4		Proposal[] public proposals
    ADD			Proposal[] public proposals
    PUSH 1		Proposal[] public proposals
    SWAP1			Proposal[] public proposals
    SLOAD			Proposal[] public proposals
    SWAP1			Proposal[] public proposals
    PUSH 100		Proposal[] public proposals
    EXP			Proposal[] public proposals
    SWAP1			Proposal[] public proposals
    DIV			Proposal[] public proposals
    PUSH FF		Proposal[] public proposals
    AND			Proposal[] public proposals
    SWAP1			Proposal[] public proposals
    DUP1			Proposal[] public proposals
    PUSH 5		Proposal[] public proposals
    ADD			Proposal[] public proposals
    PUSH 0		Proposal[] public proposals
    POP			Proposal[] public proposals
    SLOAD			Proposal[] public proposals
    SWAP1			Proposal[] public proposals
    DUP1			Proposal[] public proposals
    PUSH 6		Proposal[] public proposals
    ADD			Proposal[] public proposals
    PUSH 0		Proposal[] public proposals
    POP			Proposal[] public proposals
    SLOAD			Proposal[] public proposals
    SWAP1			Proposal[] public proposals
    DUP1			Proposal[] public proposals
    PUSH 7		Proposal[] public proposals
    ADD			Proposal[] public proposals
    PUSH 0		Proposal[] public proposals
    SWAP1			Proposal[] public proposals
    SLOAD			Proposal[] public proposals
    SWAP1			Proposal[] public proposals
    PUSH 100		Proposal[] public proposals
    EXP			Proposal[] public proposals
    SWAP1			Proposal[] public proposals
    DIV			Proposal[] public proposals
    PUSH FF		Proposal[] public proposals
    AND			Proposal[] public proposals
    SWAP1			Proposal[] public proposals
    DUP1			Proposal[] public proposals
    PUSH 9		Proposal[] public proposals
    ADD			Proposal[] public proposals
    PUSH 0		Proposal[] public proposals
    POP			Proposal[] public proposals
    SLOAD			Proposal[] public proposals
    SWAP1			Proposal[] public proposals
    DUP1			Proposal[] public proposals
    PUSH A		Proposal[] public proposals
    ADD			Proposal[] public proposals
    PUSH 0		Proposal[] public proposals
    POP			Proposal[] public proposals
    SLOAD			Proposal[] public proposals
    SWAP1			Proposal[] public proposals
    DUP1			Proposal[] public proposals
    PUSH D		Proposal[] public proposals
    ADD			Proposal[] public proposals
    PUSH 0		Proposal[] public proposals
    SWAP1			Proposal[] public proposals
    SLOAD			Proposal[] public proposals
    SWAP1			Proposal[] public proposals
    PUSH 100		Proposal[] public proposals
    EXP			Proposal[] public proposals
    SWAP1			Proposal[] public proposals
    DIV			Proposal[] public proposals
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		Proposal[] public proposals
    AND			Proposal[] public proposals
    SWAP1			Proposal[] public proposals
    POP			Proposal[] public proposals
    DUP13			Proposal[] public proposals
    JUMP	[out]		Proposal[] public proposals
  tag100: 
    JUMPDEST		uint public minQuorumDivisor
    PUSH 1		uint public minQuorumDivisor
    PUSH 0		uint public minQuorumDivisor
    POP			uint public minQuorumDivisor
    SLOAD			uint public minQuorumDivisor
    DUP2			uint public minQuorumDivisor
    JUMP	[out]		uint public minQuorumDivisor
  tag120: 
    JUMPDEST		uint  public lastTimeMinQuorumMet
    PUSH 2		uint  public lastTimeMinQuorumMet
    PUSH 0		uint  public lastTimeMinQuorumMet
    POP			uint  public lastTimeMinQuorumMet
    SLOAD			uint  public lastTimeMinQuorumMet
    DUP2			uint  public lastTimeMinQuorumMet
    JUMP	[out]		uint  public lastTimeMinQuorumMet
  tag146: 
    JUMPDEST		address public curator
    PUSH 3		address public curator
    PUSH 0		address public curator
    SWAP1			address public curator
    SLOAD			address public curator
    SWAP1			address public curator
    PUSH 100		address public curator
    EXP			address public curator
    SWAP1			address public curator
    DIV			address public curator
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		address public curator
    AND			address public curator
    DUP2			address public curator
    JUMP	[out]		address public curator
  tag90: 
    JUMPDEST		mapping (address => bool) public allowedRecipients
    PUSH 4		mapping (address => bool) public allowedRecipients
    PUSH 0		mapping (address => bool) public allowedRecipients
    POP			mapping (address => bool) public allowedRecipients
    PUSH 20		mapping (address => bool) public allowedRecipients
    MSTORE			mapping (address => bool) public allowedRecipients
    DUP1			mapping (address => bool) public allowedRecipients
    PUSH 0		mapping (address => bool) public allowedRecipients
    MSTORE			mapping (address => bool) public allowedRecipients
    PUSH 40		mapping (address => bool) public allowedRecipients
    PUSH 0		mapping (address => bool) public allowedRecipients
    SHA3			mapping (address => bool) public allowedRecipients
    PUSH 0		mapping (address => bool) public allowedRecipients
    SWAP2			mapping (address => bool) public allowedRecipients
    POP			mapping (address => bool) public allowedRecipients
    SWAP1			mapping (address => bool) public allowedRecipients
    SWAP1			mapping (address => bool) public allowedRecipients
    SLOAD			mapping (address => bool) public allowedRecipients
    SWAP1			mapping (address => bool) public allowedRecipients
    PUSH 100		mapping (address => bool) public allowedRecipients
    EXP			mapping (address => bool) public allowedRecipients
    SWAP1			mapping (address => bool) public allowedRecipients
    DIV			mapping (address => bool) public allowedRecipients
    PUSH FF		mapping (address => bool) public allowedRecipients
    AND			mapping (address => bool) public allowedRecipients
    DUP2			mapping (address => bool) public allowedRecipients
    JUMP	[out]		mapping (address => bool) public allowedRecipients
  tag136: 
    JUMPDEST		mapping (address => uint) public rewardToken
    PUSH 5		mapping (address => uint) public rewardToken
    PUSH 0		mapping (address => uint) public rewardToken
    POP			mapping (address => uint) public rewardToken
    PUSH 20		mapping (address => uint) public rewardToken
    MSTORE			mapping (address => uint) public rewardToken
    DUP1			mapping (address => uint) public rewardToken
    PUSH 0		mapping (address => uint) public rewardToken
    MSTORE			mapping (address => uint) public rewardToken
    PUSH 40		mapping (address => uint) public rewardToken
    PUSH 0		mapping (address => uint) public rewardToken
    SHA3			mapping (address => uint) public rewardToken
    PUSH 0		mapping (address => uint) public rewardToken
    SWAP2			mapping (address => uint) public rewardToken
    POP			mapping (address => uint) public rewardToken
    SWAP1			mapping (address => uint) public rewardToken
    POP			mapping (address => uint) public rewardToken
    SLOAD			mapping (address => uint) public rewardToken
    DUP2			mapping (address => uint) public rewardToken
    JUMP	[out]		mapping (address => uint) public rewardToken
  tag84: 
    JUMPDEST		uint public totalRewardToken
    PUSH 6		uint public totalRewardToken
    PUSH 0		uint public totalRewardToken
    POP			uint public totalRewardToken
    SLOAD			uint public totalRewardToken
    DUP2			uint public totalRewardToken
    JUMP	[out]		uint public totalRewardToken
  tag68: 
    JUMPDEST		ManagedAccount public rewardAccount
    PUSH 7		ManagedAccount public rewardAccount
    PUSH 0		ManagedAccount public rewardAccount
    SWAP1			ManagedAccount public rewardAccount
    SLOAD			ManagedAccount public rewardAccount
    SWAP1			ManagedAccount public rewardAccount
    PUSH 100		ManagedAccount public rewardAccount
    EXP			ManagedAccount public rewardAccount
    SWAP1			ManagedAccount public rewardAccount
    DIV			ManagedAccount public rewardAccount
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		ManagedAccount public rewardAccount
    AND			ManagedAccount public rewardAccount
    DUP2			ManagedAccount public rewardAccount
    JUMP	[out]		ManagedAccount public rewardAccount
  tag114: 
    JUMPDEST		ManagedAccount public DAOrewardAccount
    PUSH 8		ManagedAccount public DAOrewardAccount
    PUSH 0		ManagedAccount public DAOrewardAccount
    SWAP1			ManagedAccount public DAOrewardAccount
    SLOAD			ManagedAccount public DAOrewardAccount
    SWAP1			ManagedAccount public DAOrewardAccount
    PUSH 100		ManagedAccount public DAOrewardAccount
    EXP			ManagedAccount public DAOrewardAccount
    SWAP1			ManagedAccount public DAOrewardAccount
    DIV			ManagedAccount public DAOrewardAccount
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		ManagedAccount public DAOrewardAccount
    AND			ManagedAccount public DAOrewardAccount
    DUP2			ManagedAccount public DAOrewardAccount
    JUMP	[out]		ManagedAccount public DAOrewardAccount
  tag98: 
    JUMPDEST		mapping (address => uint) public DAOpaidOut
    PUSH 9		mapping (address => uint) public DAOpaidOut
    PUSH 0		mapping (address => uint) public DAOpaidOut
    POP			mapping (address => uint) public DAOpaidOut
    PUSH 20		mapping (address => uint) public DAOpaidOut
    MSTORE			mapping (address => uint) public DAOpaidOut
    DUP1			mapping (address => uint) public DAOpaidOut
    PUSH 0		mapping (address => uint) public DAOpaidOut
    MSTORE			mapping (address => uint) public DAOpaidOut
    PUSH 40		mapping (address => uint) public DAOpaidOut
    PUSH 0		mapping (address => uint) public DAOpaidOut
    SHA3			mapping (address => uint) public DAOpaidOut
    PUSH 0		mapping (address => uint) public DAOpaidOut
    SWAP2			mapping (address => uint) public DAOpaidOut
    POP			mapping (address => uint) public DAOpaidOut
    SWAP1			mapping (address => uint) public DAOpaidOut
    POP			mapping (address => uint) public DAOpaidOut
    SLOAD			mapping (address => uint) public DAOpaidOut
    DUP2			mapping (address => uint) public DAOpaidOut
    JUMP	[out]		mapping (address => uint) public DAOpaidOut
  tag110: 
    JUMPDEST		mapping (address => uint) public paidOut
    PUSH A		mapping (address => uint) public paidOut
    PUSH 0		mapping (address => uint) public paidOut
    POP			mapping (address => uint) public paidOut
    PUSH 20		mapping (address => uint) public paidOut
    MSTORE			mapping (address => uint) public paidOut
    DUP1			mapping (address => uint) public paidOut
    PUSH 0		mapping (address => uint) public paidOut
    MSTORE			mapping (address => uint) public paidOut
    PUSH 40		mapping (address => uint) public paidOut
    PUSH 0		mapping (address => uint) public paidOut
    SHA3			mapping (address => uint) public paidOut
    PUSH 0		mapping (address => uint) public paidOut
    SWAP2			mapping (address => uint) public paidOut
    POP			mapping (address => uint) public paidOut
    SWAP1			mapping (address => uint) public paidOut
    POP			mapping (address => uint) public paidOut
    SLOAD			mapping (address => uint) public paidOut
    DUP2			mapping (address => uint) public paidOut
    JUMP	[out]		mapping (address => uint) public paidOut
  tag144: 
    JUMPDEST		mapping (address => uint) public blocked
    PUSH B		mapping (address => uint) public blocked
    PUSH 0		mapping (address => uint) public blocked
    POP			mapping (address => uint) public blocked
    PUSH 20		mapping (address => uint) public blocked
    MSTORE			mapping (address => uint) public blocked
    DUP1			mapping (address => uint) public blocked
    PUSH 0		mapping (address => uint) public blocked
    MSTORE			mapping (address => uint) public blocked
    PUSH 40		mapping (address => uint) public blocked
    PUSH 0		mapping (address => uint) public blocked
    SHA3			mapping (address => uint) public blocked
    PUSH 0		mapping (address => uint) public blocked
    SWAP2			mapping (address => uint) public blocked
    POP			mapping (address => uint) public blocked
    SWAP1			mapping (address => uint) public blocked
    POP			mapping (address => uint) public blocked
    SLOAD			mapping (address => uint) public blocked
    DUP2			mapping (address => uint) public blocked
    JUMP	[out]		mapping (address => uint) public blocked
  tag116: 
    JUMPDEST		uint public proposalDeposit
    PUSH C		uint public proposalDeposit
    PUSH 0		uint public proposalDeposit
    POP			uint public proposalDeposit
    SLOAD			uint public proposalDeposit
    DUP2			uint public proposalDeposit
    JUMP	[out]		uint public proposalDeposit
  tag70: 
    JUMPDEST		DAO_Creator public daoCreator
    PUSH E		DAO_Creator public daoCreator
    PUSH 0		DAO_Creator public daoCreator
    SWAP1			DAO_Creator public daoCreator
    SLOAD			DAO_Creator public daoCreator
    SWAP1			DAO_Creator public daoCreator
    PUSH 100		DAO_Creator public daoCreator
    EXP			DAO_Creator public daoCreator
    SWAP1			DAO_Creator public daoCreator
    DIV			DAO_Creator public daoCreator
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		DAO_Creator public daoCreator
    AND			DAO_Creator public daoCreator
    DUP2			DAO_Creator public daoCreator
    JUMP	[out]		DAO_Creator public daoCreator
  tag57: 
    JUMPDEST		function receiveEther() returns (bool) {...
    PUSH 0		bool
    PUSH 1		true
    SWAP1			return true
    POP			return true
    PUSH [tag173]		return true
    JUMP			return true
  tag173: 
    JUMPDEST		function receiveEther() returns (bool) {...
    SWAP1			function receiveEther() returns (bool) {...
    JUMP	[out]		function receiveEther() returns (bool) {...
  tag96: 
    JUMPDEST		function newProposal(...
    PUSH 0		uint _proposalID
    PUSH 0		Proposal p
    PUSH 0		0
    PUSH [tag175]		balanceOf(msg.sender)
    CALLER			msg.sender
    PUSH [tag104]		balanceOf
    JUMP	[in]		balanceOf(msg.sender)
  tag175: 
    JUMPDEST		balanceOf(msg.sender)
    EQ			balanceOf(msg.sender) == 0
    ISZERO			if (balanceOf(msg.sender) == 0) throw
    PUSH [tag176]		if (balanceOf(msg.sender) == 0) throw
    JUMPI			if (balanceOf(msg.sender) == 0) throw
    PUSH [ErrorTag]		throw
    JUMP			throw
  tag176: 
    JUMPDEST		if (balanceOf(msg.sender) == 0) throw
    DUP3			_newCurator
    DUP1			_newCurator && (...
    ISZERO			_newCurator && (...
    PUSH [tag177]		_newCurator && (...
    JUMPI			_newCurator && (...
    POP			_newCurator && (...
    PUSH 0		0
    DUP8			_amount
    EQ			_amount != 0
    ISZERO			_amount != 0
    DUP1			_amount != 0...
    PUSH [tag178]		_amount != 0...
    JUMPI			_amount != 0...
    POP			_amount != 0...
    PUSH 0		0
    DUP6			_transactionData
    MLOAD			_transactionData.length
    EQ			_transactionData.length != 0
    ISZERO			_transactionData.length != 0
  tag178: 
    JUMPDEST		_amount != 0...
    DUP1			_amount != 0...
    PUSH [tag179]		_amount != 0...
    JUMPI			_amount != 0...
    POP			_amount != 0...
    PUSH 3		curator
    PUSH 0		curator
    SWAP1			curator
    SLOAD			curator
    SWAP1			curator
    PUSH 100		curator
    EXP			curator
    SWAP1			curator
    DIV			curator
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		curator
    AND			curator
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		_recipient == curator
    AND			_recipient == curator
    DUP9			_recipient
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		_recipient == curator
    AND			_recipient == curator
    EQ			_recipient == curator
  tag179: 
    JUMPDEST		_amount != 0...
    DUP1			_amount != 0...
    PUSH [tag180]		_amount != 0...
    JUMPI			_amount != 0...
    POP			_amount != 0...
    PUSH 0		0
    CALLVALUE			msg.value
    GT			msg.value > 0
  tag180: 
    JUMPDEST		_amount != 0...
    DUP1			_amount != 0...
    PUSH [tag181]		_amount != 0...
    JUMPI			_amount != 0...
    POP			_amount != 0...
    PUSH 93A80		1 weeks
    DUP5			_debatingPeriod
    LT			_debatingPeriod < minSplitDebatePeriod
  tag181: 
    JUMPDEST		_amount != 0...
  tag177: 
    JUMPDEST		_newCurator && (...
    ISZERO			if (_newCurator && (...
    PUSH [tag182]		if (_newCurator && (...
    JUMPI			if (_newCurator && (...
    PUSH [ErrorTag]		throw
    JUMP			throw
    PUSH [tag183]		if (_newCurator && (...
    JUMP			if (_newCurator && (...
  tag182: 
    JUMPDEST		if (_newCurator && (...
    DUP3			_newCurator
    ISZERO			!_newCurator
    DUP1			!_newCurator...
    ISZERO			!_newCurator...
    PUSH [tag184]		!_newCurator...
    JUMPI			!_newCurator...
    POP			!_newCurator...
    PUSH [tag185]		isRecipientAllowed(_recipient)
    DUP9			_recipient
    PUSH [tag186]		isRecipientAllowed
    JUMP	[in]		isRecipientAllowed(_recipient)
  tag185: 
    JUMPDEST		isRecipientAllowed(_recipient)
    ISZERO			!isRecipientAllowed(_recipient)
    DUP1			!isRecipientAllowed(_recipient) || (_debatingPeriod <  minProposalDebatePeriod)
    PUSH [tag187]		!isRecipientAllowed(_recipient) || (_debatingPeriod <  minProposalDebatePeriod)
    JUMPI			!isRecipientAllowed(_recipient) || (_debatingPeriod <  minProposalDebatePeriod)
    POP			!isRecipientAllowed(_recipient) || (_debatingPeriod <  minProposalDebatePeriod)
    PUSH 127500		2 weeks
    DUP5			_debatingPeriod
    LT			_debatingPeriod <  minProposalDebatePeriod
  tag187: 
    JUMPDEST		!isRecipientAllowed(_recipient) || (_debatingPeriod <  minProposalDebatePeriod)
  tag184: 
    JUMPDEST		!_newCurator...
    ISZERO			if (...
    PUSH [tag188]		if (...
    JUMPI			if (...
    PUSH [ErrorTag]		throw
    JUMP			throw
  tag188: 
    JUMPDEST		if (...
  tag183: 
    JUMPDEST		if (_newCurator && (...
    PUSH 49D400		8 weeks
    DUP5			_debatingPeriod
    GT			_debatingPeriod > 8 weeks
    ISZERO			if (_debatingPeriod > 8 weeks)...
    PUSH [tag189]		if (_debatingPeriod > 8 weeks)...
    JUMPI			if (_debatingPeriod > 8 weeks)...
    PUSH [ErrorTag]		throw
    JUMP			throw
  tag189: 
    JUMPDEST		if (_debatingPeriod > 8 weeks)...
    PUSH 11		isFueled
    PUSH 0		isFueled
    SWAP1			isFueled
    SLOAD			isFueled
    SWAP1			isFueled
    PUSH 100		isFueled
    EXP			isFueled
    SWAP1			isFueled
    DIV			isFueled
    PUSH FF		isFueled
    AND			isFueled
    ISZERO			!isFueled
    DUP1			!isFueled...
    PUSH [tag190]		!isFueled...
    JUMPI			!isFueled...
    POP			!isFueled...
    PUSH F		closingTime
    PUSH 0		closingTime
    POP			closingTime
    SLOAD			closingTime
    TIMESTAMP			now
    LT			now < closingTime
  tag190: 
    JUMPDEST		!isFueled...
    DUP1			!isFueled...
    PUSH [tag191]		!isFueled...
    JUMPI			!isFueled...
    POP			!isFueled...
    PUSH C		proposalDeposit
    PUSH 0		proposalDeposit
    POP			proposalDeposit
    SLOAD			proposalDeposit
    CALLVALUE			msg.value
    LT			msg.value < proposalDeposit
    DUP1			msg.value < proposalDeposit && !_newCurator
    ISZERO			msg.value < proposalDeposit && !_newCurator
    PUSH [tag192]		msg.value < proposalDeposit && !_newCurator
    JUMPI			msg.value < proposalDeposit && !_newCurator
    POP			msg.value < proposalDeposit && !_newCurator
    DUP3			_newCurator
    ISZERO			!_newCurator
  tag192: 
    JUMPDEST		msg.value < proposalDeposit && !_newCurator
  tag191: 
    JUMPDEST		!isFueled...
    ISZERO			if (!isFueled...
    PUSH [tag193]		if (!isFueled...
    JUMPI			if (!isFueled...
    PUSH [ErrorTag]		throw
    JUMP			throw
  tag193: 
    JUMPDEST		if (!isFueled...
    TIMESTAMP			now
    DUP5			_debatingPeriod
    TIMESTAMP			now
    ADD			now + _debatingPeriod
    LT			now + _debatingPeriod < now
    ISZERO			if (now + _debatingPeriod < now) // prevents overflow...
    PUSH [tag194]		if (now + _debatingPeriod < now) // prevents overflow...
    JUMPI			if (now + _debatingPeriod < now) // prevents overflow...
    PUSH [ErrorTag]		throw
    JUMP			throw
  tag194: 
    JUMPDEST		if (now + _debatingPeriod < now) // prevents overflow...
    ADDRESS			this
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		msg.sender == address(this)
    AND			msg.sender == address(this)
    CALLER			msg.sender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		msg.sender == address(this)
    AND			msg.sender == address(this)
    EQ			msg.sender == address(this)
    ISZERO			if (msg.sender == address(this))...
    PUSH [tag195]		if (msg.sender == address(this))...
    JUMPI			if (msg.sender == address(this))...
    PUSH [ErrorTag]		throw
    JUMP			throw
  tag195: 
    JUMPDEST		if (msg.sender == address(this))...
    PUSH 0		proposals
    PUSH 0		proposals
    POP			proposals
    DUP1			proposals.length++
    SLOAD			proposals.length++
    DUP1			proposals.length++
    SWAP2			proposals.length++
    SWAP1			proposals.length++
    PUSH 1		proposals.length++
    ADD			proposals.length++
    SWAP1			proposals.length++
    SWAP1			proposals.length++
    DUP2			proposals.length++
    SLOAD			proposals.length++
    DUP2			proposals.length++
    DUP4			proposals.length++
    SSTORE			proposals.length++
    DUP2			proposals.length++
    DUP2			proposals.length++
    ISZERO			proposals.length++
    GT			proposals.length++
    PUSH [tag196]		proposals.length++
    JUMPI			proposals.length++
    PUSH E		proposals.length++
    MUL			proposals.length++
    DUP2			proposals.length++
    PUSH E		proposals.length++
    MUL			proposals.length++
    DUP4			proposals.length++
    PUSH 0		proposals.length++
    MSTORE			proposals.length++
    PUSH 20		proposals.length++
    PUSH 0		proposals.length++
    SHA3			proposals.length++
    SWAP2			proposals.length++
    DUP3			proposals.length++
    ADD			proposals.length++
    SWAP2			proposals.length++
    ADD			proposals.length++
    PUSH [tag197]		proposals.length++
    SWAP2			proposals.length++
    SWAP1			proposals.length++
    PUSH [tag198]		proposals.length++
    JUMP			proposals.length++
  tag198: 
    JUMPDEST		proposals.length++
    DUP1			proposals.length++
    DUP3			proposals.length++
    GT			proposals.length++
    ISZERO			proposals.length++
    PUSH [tag199]		proposals.length++
    JUMPI			proposals.length++
    PUSH 0		proposals.length++
    PUSH 0		proposals.length++
    DUP3			proposals.length++
    ADD			proposals.length++
    PUSH 0		proposals.length++
    PUSH 100		proposals.length++
    EXP			proposals.length++
    DUP2			proposals.length++
    SLOAD			proposals.length++
    SWAP1			proposals.length++
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		proposals.length++
    MUL			proposals.length++
    NOT			proposals.length++
    AND			proposals.length++
    SWAP1			proposals.length++
    SSTORE			proposals.length++
    PUSH 1		proposals.length++
    DUP3			proposals.length++
    ADD			proposals.length++
    PUSH 0		proposals.length++
    POP			proposals.length++
    PUSH 0		proposals.length++
    SWAP1			proposals.length++
    SSTORE			proposals.length++
    PUSH 2		proposals.length++
    DUP3			proposals.length++
    ADD			proposals.length++
    PUSH 0		proposals.length++
    POP			proposals.length++
    DUP1			proposals.length++
    SLOAD			proposals.length++
    PUSH 1		proposals.length++
    DUP2			proposals.length++
    PUSH 1		proposals.length++
    AND			proposals.length++
    ISZERO			proposals.length++
    PUSH 100		proposals.length++
    MUL			proposals.length++
    SUB			proposals.length++
    AND			proposals.length++
    PUSH 2		proposals.length++
    SWAP1			proposals.length++
    DIV			proposals.length++
    PUSH 0		proposals.length++
    DUP3			proposals.length++
    SSTORE			proposals.length++
    DUP1			proposals.length++
    PUSH 1F		proposals.length++
    LT			proposals.length++
    PUSH [tag201]		proposals.length++
    JUMPI			proposals.length++
    POP			proposals.length++
    PUSH [tag200]		proposals.length++
    JUMP			proposals.length++
  tag201: 
    JUMPDEST		proposals.length++
    PUSH 1F		proposals.length++
    ADD			proposals.length++
    PUSH 20		proposals.length++
    SWAP1			proposals.length++
    DIV			proposals.length++
    SWAP1			proposals.length++
    PUSH 0		proposals.length++
    MSTORE			proposals.length++
    PUSH 20		proposals.length++
    PUSH 0		proposals.length++
    SHA3			proposals.length++
    SWAP1			proposals.length++
    DUP2			proposals.length++
    ADD			proposals.length++
    SWAP1			proposals.length++
    PUSH [tag202]		proposals.length++
    SWAP2			proposals.length++
    SWAP1			proposals.length++
    PUSH [tag203]		proposals.length++
    JUMP			proposals.length++
  tag203: 
    JUMPDEST		proposals.length++
    DUP1			proposals.length++
    DUP3			proposals.length++
    GT			proposals.length++
    ISZERO			proposals.length++
    PUSH [tag204]		proposals.length++
    JUMPI			proposals.length++
    PUSH 0		proposals.length++
    DUP2			proposals.length++
    DUP2			proposals.length++
    POP			proposals.length++
    PUSH 0		proposals.length++
    SWAP1			proposals.length++
    SSTORE			proposals.length++
    POP			proposals.length++
    PUSH 1		proposals.length++
    ADD			proposals.length++
    PUSH [tag203]		proposals.length++
    JUMP			proposals.length++
  tag204: 
    JUMPDEST		proposals.length++
    POP			proposals.length++
    SWAP1			proposals.length++
    JUMP			proposals.length++
  tag202: 
    JUMPDEST		proposals.length++
  tag200: 
    JUMPDEST		proposals.length++
    POP			proposals.length++
    PUSH 3		proposals.length++
    DUP3			proposals.length++
    ADD			proposals.length++
    PUSH 0		proposals.length++
    POP			proposals.length++
    PUSH 0		proposals.length++
    SWAP1			proposals.length++
    SSTORE			proposals.length++
    PUSH 4		proposals.length++
    DUP3			proposals.length++
    ADD			proposals.length++
    PUSH 0		proposals.length++
    PUSH 100		proposals.length++
    EXP			proposals.length++
    DUP2			proposals.length++
    SLOAD			proposals.length++
    SWAP1			proposals.length++
    PUSH FF		proposals.length++
    MUL			proposals.length++
    NOT			proposals.length++
    AND			proposals.length++
    SWAP1			proposals.length++
    SSTORE			proposals.length++
    PUSH 4		proposals.length++
    DUP3			proposals.length++
    ADD			proposals.length++
    PUSH 1		proposals.length++
    PUSH 100		proposals.length++
    EXP			proposals.length++
    DUP2			proposals.length++
    SLOAD			proposals.length++
    SWAP1			proposals.length++
    PUSH FF		proposals.length++
    MUL			proposals.length++
    NOT			proposals.length++
    AND			proposals.length++
    SWAP1			proposals.length++
    SSTORE			proposals.length++
    PUSH 5		proposals.length++
    DUP3			proposals.length++
    ADD			proposals.length++
    PUSH 0		proposals.length++
    POP			proposals.length++
    PUSH 0		proposals.length++
    SWAP1			proposals.length++
    SSTORE			proposals.length++
    PUSH 6		proposals.length++
    DUP3			proposals.length++
    ADD			proposals.length++
    PUSH 0		proposals.length++
    POP			proposals.length++
    PUSH 0		proposals.length++
    SWAP1			proposals.length++
    SSTORE			proposals.length++
    PUSH 7		proposals.length++
    DUP3			proposals.length++
    ADD			proposals.length++
    PUSH 0		proposals.length++
    PUSH 100		proposals.length++
    EXP			proposals.length++
    DUP2			proposals.length++
    SLOAD			proposals.length++
    SWAP1			proposals.length++
    PUSH FF		proposals.length++
    MUL			proposals.length++
    NOT			proposals.length++
    AND			proposals.length++
    SWAP1			proposals.length++
    SSTORE			proposals.length++
    PUSH 8		proposals.length++
    DUP3			proposals.length++
    ADD			proposals.length++
    PUSH 0		proposals.length++
    POP			proposals.length++
    DUP1			proposals.length++
    SLOAD			proposals.length++
    PUSH 0		proposals.length++
    DUP3			proposals.length++
    SSTORE			proposals.length++
    PUSH 4		proposals.length++
    MUL			proposals.length++
    SWAP1			proposals.length++
    PUSH 0		proposals.length++
    MSTORE			proposals.length++
    PUSH 20		proposals.length++
    PUSH 0		proposals.length++
    SHA3			proposals.length++
    SWAP1			proposals.length++
    DUP2			proposals.length++
    ADD			proposals.length++
    SWAP1			proposals.length++
    PUSH [tag206]		proposals.length++
    SWAP2			proposals.length++
    SWAP1			proposals.length++
    PUSH [tag207]		proposals.length++
    JUMP			proposals.length++
  tag207: 
    JUMPDEST		proposals.length++
    DUP1			proposals.length++
    DUP3			proposals.length++
    GT			proposals.length++
    ISZERO			proposals.length++
    PUSH [tag208]		proposals.length++
    JUMPI			proposals.length++
    PUSH 0		proposals.length++
    PUSH 0		proposals.length++
    DUP3			proposals.length++
    ADD			proposals.length++
    PUSH 0		proposals.length++
    POP			proposals.length++
    PUSH 0		proposals.length++
    SWAP1			proposals.length++
    SSTORE			proposals.length++
    PUSH 1		proposals.length++
    DUP3			proposals.length++
    ADD			proposals.length++
    PUSH 0		proposals.length++
    POP			proposals.length++
    PUSH 0		proposals.length++
    SWAP1			proposals.length++
    SSTORE			proposals.length++
    PUSH 2		proposals.length++
    DUP3			proposals.length++
    ADD			proposals.length++
    PUSH 0		proposals.length++
    POP			proposals.length++
    PUSH 0		proposals.length++
    SWAP1			proposals.length++
    SSTORE			proposals.length++
    PUSH 3		proposals.length++
    DUP3			proposals.length++
    ADD			proposals.length++
    PUSH 0		proposals.length++
    PUSH 100		proposals.length++
    EXP			proposals.length++
    DUP2			proposals.length++
    SLOAD			proposals.length++
    SWAP1			proposals.length++
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		proposals.length++
    MUL			proposals.length++
    NOT			proposals.length++
    AND			proposals.length++
    SWAP1			proposals.length++
    SSTORE			proposals.length++
    POP			proposals.length++
    PUSH 1		proposals.length++
    ADD			proposals.length++
    PUSH [tag207]		proposals.length++
    JUMP			proposals.length++
  tag208: 
    JUMPDEST		proposals.length++
    POP			proposals.length++
    SWAP1			proposals.length++
    JUMP			proposals.length++
  tag206: 
    JUMPDEST		proposals.length++
  tag205: 
    JUMPDEST		proposals.length++
    POP			proposals.length++
    PUSH 9		proposals.length++
    DUP3			proposals.length++
    ADD			proposals.length++
    PUSH 0		proposals.length++
    POP			proposals.length++
    PUSH 0		proposals.length++
    SWAP1			proposals.length++
    SSTORE			proposals.length++
    PUSH A		proposals.length++
    DUP3			proposals.length++
    ADD			proposals.length++
    PUSH 0		proposals.length++
    POP			proposals.length++
    PUSH 0		proposals.length++
    SWAP1			proposals.length++
    SSTORE			proposals.length++
    PUSH D		proposals.length++
    DUP3			proposals.length++
    ADD			proposals.length++
    PUSH 0		proposals.length++
    PUSH 100		proposals.length++
    EXP			proposals.length++
    DUP2			proposals.length++
    SLOAD			proposals.length++
    SWAP1			proposals.length++
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		proposals.length++
    MUL			proposals.length++
    NOT			proposals.length++
    AND			proposals.length++
    SWAP1			proposals.length++
    SSTORE			proposals.length++
    POP			proposals.length++
    PUSH 1		proposals.length++
    ADD			proposals.length++
    PUSH [tag198]		proposals.length++
    JUMP			proposals.length++
  tag199: 
    JUMPDEST		proposals.length++
    POP			proposals.length++
    SWAP1			proposals.length++
    JUMP			proposals.length++
  tag197: 
    JUMPDEST		proposals.length++
  tag196: 
    JUMPDEST		proposals.length++
    POP			proposals.length++
    POP			proposals.length++
    POP			proposals.length++
    SWAP2			_proposalID = proposals.length++
    POP			_proposalID = proposals.length++
    DUP2			_proposalID = proposals.length++
    POP			_proposalID = proposals.length++
    PUSH 0		proposals
    PUSH 0		proposals
    POP			proposals
    DUP3			_proposalID
    DUP2			proposals[_proposalID]
    SLOAD			proposals[_proposalID]
    DUP2			proposals[_proposalID]
    LT			proposals[_proposalID]
    ISZERO			proposals[_proposalID]
    PUSH [ErrorTag]		proposals[_proposalID]
    JUMPI			proposals[_proposalID]
    SWAP1			proposals[_proposalID]
    PUSH 0		proposals[_proposalID]
    MSTORE			proposals[_proposalID]
    PUSH 20		proposals[_proposalID]
    PUSH 0		proposals[_proposalID]
    SHA3			proposals[_proposalID]
    SWAP1			proposals[_proposalID]
    PUSH E		proposals[_proposalID]
    MUL			proposals[_proposalID]
    ADD			proposals[_proposalID]
    PUSH 0		proposals[_proposalID]
  tag209: 
    JUMPDEST		proposals[_proposalID]
    POP			proposals[_proposalID]
    SWAP1			Proposal p = proposals[_proposalID]
    POP			Proposal p = proposals[_proposalID]
    DUP8			_recipient
    DUP2			p
    PUSH 0		p.recipient
    ADD			p.recipient
    PUSH 0		p.recipient
    PUSH 100		p.recipient = _recipient
    EXP			p.recipient = _recipient
    DUP2			p.recipient = _recipient
    SLOAD			p.recipient = _recipient
    DUP2			p.recipient = _recipient
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.recipient = _recipient
    MUL			p.recipient = _recipient
    NOT			p.recipient = _recipient
    AND			p.recipient = _recipient
    SWAP1			p.recipient = _recipient
    DUP4			p.recipient = _recipient
    MUL			p.recipient = _recipient
    OR			p.recipient = _recipient
    SWAP1			p.recipient = _recipient
    SSTORE			p.recipient = _recipient
    POP			p.recipient = _recipient
    DUP7			_amount
    DUP2			p
    PUSH 1		p.amount
    ADD			p.amount
    PUSH 0		p.amount
    POP			p.amount = _amount
    DUP2			p.amount = _amount
    SWAP1			p.amount = _amount
    SSTORE			p.amount = _amount
    POP			p.amount = _amount
    DUP6			_description
    DUP2			p
    PUSH 2		p.description
    ADD			p.description
    PUSH 0		p.description
    POP			p.description = _description
    SWAP1			p.description = _description
    DUP1			p.description = _description
    MLOAD			p.description = _description
    SWAP1			p.description = _description
    PUSH 20		p.description = _description
    ADD			p.description = _description
    SWAP1			p.description = _description
    DUP3			p.description = _description
    DUP1			p.description = _description
    SLOAD			p.description = _description
    PUSH 1		p.description = _description
    DUP2			p.description = _description
    PUSH 1		p.description = _description
    AND			p.description = _description
    ISZERO			p.description = _description
    PUSH 100		p.description = _description
    MUL			p.description = _description
    SUB			p.description = _description
    AND			p.description = _description
    PUSH 2		p.description = _description
    SWAP1			p.description = _description
    DIV			p.description = _description
    SWAP1			p.description = _description
    PUSH 0		p.description = _description
    MSTORE			p.description = _description
    PUSH 20		p.description = _description
    PUSH 0		p.description = _description
    SHA3			p.description = _description
    SWAP1			p.description = _description
    PUSH 1F		p.description = _description
    ADD			p.description = _description
    PUSH 20		p.description = _description
    SWAP1			p.description = _description
    DIV			p.description = _description
    DUP2			p.description = _description
    ADD			p.description = _description
    SWAP3			p.description = _description
    DUP3			p.description = _description
    PUSH 1F		p.description = _description
    LT			p.description = _description
    PUSH [tag211]		p.description = _description
    JUMPI			p.description = _description
    DUP1			p.description = _description
    MLOAD			p.description = _description
    PUSH FF		p.description = _description
    NOT			p.description = _description
    AND			p.description = _description
    DUP4			p.description = _description
    DUP1			p.description = _description
    ADD			p.description = _description
    OR			p.description = _description
    DUP6			p.description = _description
    SSTORE			p.description = _description
    PUSH [tag210]		p.description = _description
    JUMP			p.description = _description
  tag211: 
    JUMPDEST		p.description = _description
    DUP3			p.description = _description
    DUP1			p.description = _description
    ADD			p.description = _description
    PUSH 1		p.description = _description
    ADD			p.description = _description
    DUP6			p.description = _description
    SSTORE			p.description = _description
    DUP3			p.description = _description
    ISZERO			p.description = _description
    PUSH [tag210]		p.description = _description
    JUMPI			p.description = _description
    SWAP2			p.description = _description
    DUP3			p.description = _description
    ADD			p.description = _description
  tag212: 
    JUMPDEST		p.description = _description
    DUP3			p.description = _description
    DUP2			p.description = _description
    GT			p.description = _description
    ISZERO			p.description = _description
    PUSH [tag213]		p.description = _description
    JUMPI			p.description = _description
    DUP3			p.description = _description
    MLOAD			p.description = _description
    DUP3			p.description = _description
    PUSH 0		p.description = _description
    POP			p.description = _description
    SSTORE			p.description = _description
    SWAP2			p.description = _description
    PUSH 20		p.description = _description
    ADD			p.description = _description
    SWAP2			p.description = _description
    SWAP1			p.description = _description
    PUSH 1		p.description = _description
    ADD			p.description = _description
    SWAP1			p.description = _description
    PUSH [tag212]		p.description = _description
    JUMP			p.description = _description
  tag213: 
    JUMPDEST		p.description = _description
  tag210: 
    JUMPDEST		p.description = _description
    POP			p.description = _description
    SWAP1			p.description = _description
    POP			p.description = _description
    PUSH [tag214]		p.description = _description
    SWAP2			p.description = _description
    SWAP1			p.description = _description
    PUSH [tag215]		p.description = _description
    JUMP			p.description = _description
  tag215: 
    JUMPDEST		p.description = _description
    DUP1			p.description = _description
    DUP3			p.description = _description
    GT			p.description = _description
    ISZERO			p.description = _description
    PUSH [tag216]		p.description = _description
    JUMPI			p.description = _description
    PUSH 0		p.description = _description
    DUP2			p.description = _description
    DUP2			p.description = _description
    POP			p.description = _description
    PUSH 0		p.description = _description
    SWAP1			p.description = _description
    SSTORE			p.description = _description
    POP			p.description = _description
    PUSH 1		p.description = _description
    ADD			p.description = _description
    PUSH [tag215]		p.description = _description
    JUMP			p.description = _description
  tag216: 
    JUMPDEST		p.description = _description
    POP			p.description = _description
    SWAP1			p.description = _description
    JUMP			p.description = _description
  tag214: 
    JUMPDEST		p.description = _description
    POP			p.description = _description
    POP			p.description = _description
    DUP8			_recipient
    DUP8			_amount
    DUP7			_transactionData
    PUSH 40		sha3(_recipient, _amount, _transactionData)
    MLOAD			sha3(_recipient, _amount, _transactionData)
    DUP1			sha3(_recipient, _amount, _transactionData)
    DUP5			sha3(_recipient, _amount, _transactionData)
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		sha3(_recipient, _amount, _transactionData)
    AND			sha3(_recipient, _amount, _transactionData)
    PUSH 1000000000000000000000000		sha3(_recipient, _amount, _transactionData)
    MUL			sha3(_recipient, _amount, _transactionData)
    DUP2			sha3(_recipient, _amount, _transactionData)
    MSTORE			sha3(_recipient, _amount, _transactionData)
    PUSH 14		sha3(_recipient, _amount, _transactionData)
    ADD			sha3(_recipient, _amount, _transactionData)
    DUP4			sha3(_recipient, _amount, _transactionData)
    DUP2			sha3(_recipient, _amount, _transactionData)
    MSTORE			sha3(_recipient, _amount, _transactionData)
    PUSH 20		sha3(_recipient, _amount, _transactionData)
    ADD			sha3(_recipient, _amount, _transactionData)
    DUP3			sha3(_recipient, _amount, _transactionData)
    DUP1			sha3(_recipient, _amount, _transactionData)
    MLOAD			sha3(_recipient, _amount, _transactionData)
    SWAP1			sha3(_recipient, _amount, _transactionData)
    PUSH 20		sha3(_recipient, _amount, _transactionData)
    ADD			sha3(_recipient, _amount, _transactionData)
    SWAP1			sha3(_recipient, _amount, _transactionData)
    DUP1			sha3(_recipient, _amount, _transactionData)
    DUP4			sha3(_recipient, _amount, _transactionData)
    DUP4			sha3(_recipient, _amount, _transactionData)
    DUP3			sha3(_recipient, _amount, _transactionData)
    SWAP1			sha3(_recipient, _amount, _transactionData)
    PUSH 0		sha3(_recipient, _amount, _transactionData)
    PUSH 4		sha3(_recipient, _amount, _transactionData)
    PUSH 20		sha3(_recipient, _amount, _transactionData)
    DUP5			sha3(_recipient, _amount, _transactionData)
    PUSH 1F		sha3(_recipient, _amount, _transactionData)
    ADD			sha3(_recipient, _amount, _transactionData)
    DIV			sha3(_recipient, _amount, _transactionData)
    PUSH F		sha3(_recipient, _amount, _transactionData)
    MUL			sha3(_recipient, _amount, _transactionData)
    PUSH 3		sha3(_recipient, _amount, _transactionData)
    ADD			sha3(_recipient, _amount, _transactionData)
    CALL			sha3(_recipient, _amount, _transactionData)
    POP			sha3(_recipient, _amount, _transactionData)
    SWAP1			sha3(_recipient, _amount, _transactionData)
    POP			sha3(_recipient, _amount, _transactionData)
    ADD			sha3(_recipient, _amount, _transactionData)
    SWAP4			sha3(_recipient, _amount, _transactionData)
    POP			sha3(_recipient, _amount, _transactionData)
    POP			sha3(_recipient, _amount, _transactionData)
    POP			sha3(_recipient, _amount, _transactionData)
    POP			sha3(_recipient, _amount, _transactionData)
    PUSH 40		sha3(_recipient, _amount, _transactionData)
    MLOAD			sha3(_recipient, _amount, _transactionData)
    DUP1			sha3(_recipient, _amount, _transactionData)
    SWAP2			sha3(_recipient, _amount, _transactionData)
    SUB			sha3(_recipient, _amount, _transactionData)
    SWAP1			sha3(_recipient, _amount, _transactionData)
    SHA3			sha3(_recipient, _amount, _transactionData)
    DUP2			p
    PUSH 5		p.proposalHash
    ADD			p.proposalHash
    PUSH 0		p.proposalHash
    POP			p.proposalHash = sha3(_recipient, _amount, _transactionData)
    DUP2			p.proposalHash = sha3(_recipient, _amount, _transactionData)
    SWAP1			p.proposalHash = sha3(_recipient, _amount, _transactionData)
    SSTORE			p.proposalHash = sha3(_recipient, _amount, _transactionData)
    POP			p.proposalHash = sha3(_recipient, _amount, _transactionData)
    DUP4			_debatingPeriod
    TIMESTAMP			now
    ADD			now + _debatingPeriod
    DUP2			p
    PUSH 3		p.votingDeadline
    ADD			p.votingDeadline
    PUSH 0		p.votingDeadline
    POP			p.votingDeadline = now + _debatingPeriod
    DUP2			p.votingDeadline = now + _debatingPeriod
    SWAP1			p.votingDeadline = now + _debatingPeriod
    SSTORE			p.votingDeadline = now + _debatingPeriod
    POP			p.votingDeadline = now + _debatingPeriod
    PUSH 1		true
    DUP2			p
    PUSH 4		p.open
    ADD			p.open
    PUSH 0		p.open
    PUSH 100		p.open = true
    EXP			p.open = true
    DUP2			p.open = true
    SLOAD			p.open = true
    DUP2			p.open = true
    PUSH FF		p.open = true
    MUL			p.open = true
    NOT			p.open = true
    AND			p.open = true
    SWAP1			p.open = true
    DUP4			p.open = true
    MUL			p.open = true
    OR			p.open = true
    SWAP1			p.open = true
    SSTORE			p.open = true
    POP			p.open = true
    DUP3			_newCurator
    DUP2			p
    PUSH 7		p.newCurator
    ADD			p.newCurator
    PUSH 0		p.newCurator
    PUSH 100		p.newCurator = _newCurator
    EXP			p.newCurator = _newCurator
    DUP2			p.newCurator = _newCurator
    SLOAD			p.newCurator = _newCurator
    DUP2			p.newCurator = _newCurator
    PUSH FF		p.newCurator = _newCurator
    MUL			p.newCurator = _newCurator
    NOT			p.newCurator = _newCurator
    AND			p.newCurator = _newCurator
    SWAP1			p.newCurator = _newCurator
    DUP4			p.newCurator = _newCurator
    MUL			p.newCurator = _newCurator
    OR			p.newCurator = _newCurator
    SWAP1			p.newCurator = _newCurator
    SSTORE			p.newCurator = _newCurator
    POP			p.newCurator = _newCurator
    DUP3			_newCurator
    ISZERO			if (_newCurator)...
    PUSH [tag217]		if (_newCurator)...
    JUMPI			if (_newCurator)...
    DUP1			p
    PUSH 8		p.splitData
    ADD			p.splitData
    PUSH 0		p.splitData
    POP			p.splitData
    DUP1			p.splitData.length++
    SLOAD			p.splitData.length++
    DUP1			p.splitData.length++
    SWAP2			p.splitData.length++
    SWAP1			p.splitData.length++
    PUSH 1		p.splitData.length++
    ADD			p.splitData.length++
    SWAP1			p.splitData.length++
    SWAP1			p.splitData.length++
    DUP2			p.splitData.length++
    SLOAD			p.splitData.length++
    DUP2			p.splitData.length++
    DUP4			p.splitData.length++
    SSTORE			p.splitData.length++
    DUP2			p.splitData.length++
    DUP2			p.splitData.length++
    ISZERO			p.splitData.length++
    GT			p.splitData.length++
    PUSH [tag218]		p.splitData.length++
    JUMPI			p.splitData.length++
    PUSH 4		p.splitData.length++
    MUL			p.splitData.length++
    DUP2			p.splitData.length++
    PUSH 4		p.splitData.length++
    MUL			p.splitData.length++
    DUP4			p.splitData.length++
    PUSH 0		p.splitData.length++
    MSTORE			p.splitData.length++
    PUSH 20		p.splitData.length++
    PUSH 0		p.splitData.length++
    SHA3			p.splitData.length++
    SWAP2			p.splitData.length++
    DUP3			p.splitData.length++
    ADD			p.splitData.length++
    SWAP2			p.splitData.length++
    ADD			p.splitData.length++
    PUSH [tag219]		p.splitData.length++
    SWAP2			p.splitData.length++
    SWAP1			p.splitData.length++
    PUSH [tag220]		p.splitData.length++
    JUMP			p.splitData.length++
  tag220: 
    JUMPDEST		p.splitData.length++
    DUP1			p.splitData.length++
    DUP3			p.splitData.length++
    GT			p.splitData.length++
    ISZERO			p.splitData.length++
    PUSH [tag221]		p.splitData.length++
    JUMPI			p.splitData.length++
    PUSH 0		p.splitData.length++
    PUSH 0		p.splitData.length++
    DUP3			p.splitData.length++
    ADD			p.splitData.length++
    PUSH 0		p.splitData.length++
    POP			p.splitData.length++
    PUSH 0		p.splitData.length++
    SWAP1			p.splitData.length++
    SSTORE			p.splitData.length++
    PUSH 1		p.splitData.length++
    DUP3			p.splitData.length++
    ADD			p.splitData.length++
    PUSH 0		p.splitData.length++
    POP			p.splitData.length++
    PUSH 0		p.splitData.length++
    SWAP1			p.splitData.length++
    SSTORE			p.splitData.length++
    PUSH 2		p.splitData.length++
    DUP3			p.splitData.length++
    ADD			p.splitData.length++
    PUSH 0		p.splitData.length++
    POP			p.splitData.length++
    PUSH 0		p.splitData.length++
    SWAP1			p.splitData.length++
    SSTORE			p.splitData.length++
    PUSH 3		p.splitData.length++
    DUP3			p.splitData.length++
    ADD			p.splitData.length++
    PUSH 0		p.splitData.length++
    PUSH 100		p.splitData.length++
    EXP			p.splitData.length++
    DUP2			p.splitData.length++
    SLOAD			p.splitData.length++
    SWAP1			p.splitData.length++
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.splitData.length++
    MUL			p.splitData.length++
    NOT			p.splitData.length++
    AND			p.splitData.length++
    SWAP1			p.splitData.length++
    SSTORE			p.splitData.length++
    POP			p.splitData.length++
    PUSH 1		p.splitData.length++
    ADD			p.splitData.length++
    PUSH [tag220]		p.splitData.length++
    JUMP			p.splitData.length++
  tag221: 
    JUMPDEST		p.splitData.length++
    POP			p.splitData.length++
    SWAP1			p.splitData.length++
    JUMP			p.splitData.length++
  tag219: 
    JUMPDEST		p.splitData.length++
  tag218: 
    JUMPDEST		p.splitData.length++
    POP			p.splitData.length++
    POP			p.splitData.length++
    POP			p.splitData.length++
    POP			p.splitData.length++
  tag217: 
    JUMPDEST		if (_newCurator)...
    CALLER			msg.sender
    DUP2			p
    PUSH D		p.creator
    ADD			p.creator
    PUSH 0		p.creator
    PUSH 100		p.creator = msg.sender
    EXP			p.creator = msg.sender
    DUP2			p.creator = msg.sender
    SLOAD			p.creator = msg.sender
    DUP2			p.creator = msg.sender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.creator = msg.sender
    MUL			p.creator = msg.sender
    NOT			p.creator = msg.sender
    AND			p.creator = msg.sender
    SWAP1			p.creator = msg.sender
    DUP4			p.creator = msg.sender
    MUL			p.creator = msg.sender
    OR			p.creator = msg.sender
    SWAP1			p.creator = msg.sender
    SSTORE			p.creator = msg.sender
    POP			p.creator = msg.sender
    CALLVALUE			msg.value
    DUP2			p
    PUSH 6		p.proposalDeposit
    ADD			p.proposalDeposit
    PUSH 0		p.proposalDeposit
    POP			p.proposalDeposit = msg.value
    DUP2			p.proposalDeposit = msg.value
    SWAP1			p.proposalDeposit = msg.value
    SSTORE			p.proposalDeposit = msg.value
    POP			p.proposalDeposit = msg.value
    CALLVALUE			msg.value
    PUSH D		sumOfProposalDeposits
    PUSH 0		sumOfProposalDeposits
    DUP3			sumOfProposalDeposits += msg.value
    DUP3			sumOfProposalDeposits += msg.value
    DUP3			sumOfProposalDeposits += msg.value
    POP			sumOfProposalDeposits += msg.value
    SLOAD			sumOfProposalDeposits += msg.value
    ADD			sumOfProposalDeposits += msg.value
    SWAP3			sumOfProposalDeposits += msg.value
    POP			sumOfProposalDeposits += msg.value
    POP			sumOfProposalDeposits += msg.value
    DUP2			sumOfProposalDeposits += msg.value
    SWAP1			sumOfProposalDeposits += msg.value
    SSTORE			sumOfProposalDeposits += msg.value
    POP			sumOfProposalDeposits += msg.value
    DUP2			_proposalID
    PUSH 5790DE2C279E58269B93B12828F56FD5F2BC8AD15E61CE08572585C81A38756F		ProposalAdded(...
    DUP10			_recipient
    DUP10			_amount
    DUP7			_newCurator
    DUP11			_description
    PUSH 40		ProposalAdded(...
    MLOAD			ProposalAdded(...
    DUP1			ProposalAdded(...
    DUP6			ProposalAdded(...
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		ProposalAdded(...
    AND			ProposalAdded(...
    DUP2			ProposalAdded(...
    MSTORE			ProposalAdded(...
    PUSH 20		ProposalAdded(...
    ADD			ProposalAdded(...
    DUP5			ProposalAdded(...
    DUP2			ProposalAdded(...
    MSTORE			ProposalAdded(...
    PUSH 20		ProposalAdded(...
    ADD			ProposalAdded(...
    DUP4			ProposalAdded(...
    DUP2			ProposalAdded(...
    MSTORE			ProposalAdded(...
    PUSH 20		ProposalAdded(...
    ADD			ProposalAdded(...
    DUP1			ProposalAdded(...
    PUSH 20		ProposalAdded(...
    ADD			ProposalAdded(...
    DUP3			ProposalAdded(...
    DUP2			ProposalAdded(...
    SUB			ProposalAdded(...
    DUP3			ProposalAdded(...
    MSTORE			ProposalAdded(...
    DUP4			ProposalAdded(...
    DUP2			ProposalAdded(...
    DUP2			ProposalAdded(...
    MLOAD			ProposalAdded(...
    DUP2			ProposalAdded(...
    MSTORE			ProposalAdded(...
    PUSH 20		ProposalAdded(...
    ADD			ProposalAdded(...
    SWAP2			ProposalAdded(...
    POP			ProposalAdded(...
    DUP1			ProposalAdded(...
    MLOAD			ProposalAdded(...
    SWAP1			ProposalAdded(...
    PUSH 20		ProposalAdded(...
    ADD			ProposalAdded(...
    SWAP1			ProposalAdded(...
    DUP1			ProposalAdded(...
    DUP4			ProposalAdded(...
    DUP4			ProposalAdded(...
    DUP3			ProposalAdded(...
    SWAP1			ProposalAdded(...
    PUSH 0		ProposalAdded(...
    PUSH 4		ProposalAdded(...
    PUSH 20		ProposalAdded(...
    DUP5			ProposalAdded(...
    PUSH 1F		ProposalAdded(...
    ADD			ProposalAdded(...
    DIV			ProposalAdded(...
    PUSH F		ProposalAdded(...
    MUL			ProposalAdded(...
    PUSH 3		ProposalAdded(...
    ADD			ProposalAdded(...
    CALL			ProposalAdded(...
    POP			ProposalAdded(...
    SWAP1			ProposalAdded(...
    POP			ProposalAdded(...
    SWAP1			ProposalAdded(...
    DUP2			ProposalAdded(...
    ADD			ProposalAdded(...
    SWAP1			ProposalAdded(...
    PUSH 1F		ProposalAdded(...
    AND			ProposalAdded(...
    DUP1			ProposalAdded(...
    ISZERO			ProposalAdded(...
    PUSH [tag222]		ProposalAdded(...
    JUMPI			ProposalAdded(...
    DUP1			ProposalAdded(...
    DUP3			ProposalAdded(...
    SUB			ProposalAdded(...
    DUP1			ProposalAdded(...
    MLOAD			ProposalAdded(...
    PUSH 1		ProposalAdded(...
    DUP4			ProposalAdded(...
    PUSH 20		ProposalAdded(...
    SUB			ProposalAdded(...
    PUSH 100		ProposalAdded(...
    EXP			ProposalAdded(...
    SUB			ProposalAdded(...
    NOT			ProposalAdded(...
    AND			ProposalAdded(...
    DUP2			ProposalAdded(...
    MSTORE			ProposalAdded(...
    PUSH 20		ProposalAdded(...
    ADD			ProposalAdded(...
    SWAP2			ProposalAdded(...
    POP			ProposalAdded(...
  tag222: 
    JUMPDEST		ProposalAdded(...
    POP			ProposalAdded(...
    SWAP6			ProposalAdded(...
    POP			ProposalAdded(...
    POP			ProposalAdded(...
    POP			ProposalAdded(...
    POP			ProposalAdded(...
    POP			ProposalAdded(...
    POP			ProposalAdded(...
    PUSH 40		ProposalAdded(...
    MLOAD			ProposalAdded(...
    DUP1			ProposalAdded(...
    SWAP2			ProposalAdded(...
    SUB			ProposalAdded(...
    SWAP1			ProposalAdded(...
    LOG2			ProposalAdded(...
  tag174: 
    JUMPDEST		function newProposal(...
    POP			function newProposal(...
    SWAP7			function newProposal(...
    SWAP6			function newProposal(...
    POP			function newProposal(...
    POP			function newProposal(...
    POP			function newProposal(...
    POP			function newProposal(...
    POP			function newProposal(...
    POP			function newProposal(...
    JUMP	[out]		function newProposal(...
  tag148: 
    JUMPDEST		function checkProposalCode(...
    PUSH 0		bool _codeChecksOut
    PUSH 0		Proposal p
    PUSH 0		0
    CALLVALUE			msg.value
    GT			msg.value > 0
    ISZERO			if (msg.value > 0) throw
    PUSH [tag224]		if (msg.value > 0) throw
    JUMPI			if (msg.value > 0) throw
    PUSH [ErrorTag]		throw
    JUMP			throw
  tag224: 
    JUMPDEST		if (msg.value > 0) throw
    PUSH 0		proposals
    PUSH 0		proposals
    POP			proposals
    DUP7			_proposalID
    DUP2			proposals[_proposalID]
    SLOAD			proposals[_proposalID]
    DUP2			proposals[_proposalID]
    LT			proposals[_proposalID]
    ISZERO			proposals[_proposalID]
    PUSH [ErrorTag]		proposals[_proposalID]
    JUMPI			proposals[_proposalID]
    SWAP1			proposals[_proposalID]
    PUSH 0		proposals[_proposalID]
    MSTORE			proposals[_proposalID]
    PUSH 20		proposals[_proposalID]
    PUSH 0		proposals[_proposalID]
    SHA3			proposals[_proposalID]
    SWAP1			proposals[_proposalID]
    PUSH E		proposals[_proposalID]
    MUL			proposals[_proposalID]
    ADD			proposals[_proposalID]
    PUSH 0		proposals[_proposalID]
  tag225: 
    JUMPDEST		proposals[_proposalID]
    POP			proposals[_proposalID]
    SWAP1			Proposal p = proposals[_proposalID]
    POP			Proposal p = proposals[_proposalID]
    DUP5			_recipient
    DUP5			_amount
    DUP5			_transactionData
    PUSH 40		sha3(_recipient, _amount, _transactionData)
    MLOAD			sha3(_recipient, _amount, _transactionData)
    DUP1			sha3(_recipient, _amount, _transactionData)
    DUP5			sha3(_recipient, _amount, _transactionData)
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		sha3(_recipient, _amount, _transactionData)
    AND			sha3(_recipient, _amount, _transactionData)
    PUSH 1000000000000000000000000		sha3(_recipient, _amount, _transactionData)
    MUL			sha3(_recipient, _amount, _transactionData)
    DUP2			sha3(_recipient, _amount, _transactionData)
    MSTORE			sha3(_recipient, _amount, _transactionData)
    PUSH 14		sha3(_recipient, _amount, _transactionData)
    ADD			sha3(_recipient, _amount, _transactionData)
    DUP4			sha3(_recipient, _amount, _transactionData)
    DUP2			sha3(_recipient, _amount, _transactionData)
    MSTORE			sha3(_recipient, _amount, _transactionData)
    PUSH 20		sha3(_recipient, _amount, _transactionData)
    ADD			sha3(_recipient, _amount, _transactionData)
    DUP3			sha3(_recipient, _amount, _transactionData)
    DUP1			sha3(_recipient, _amount, _transactionData)
    MLOAD			sha3(_recipient, _amount, _transactionData)
    SWAP1			sha3(_recipient, _amount, _transactionData)
    PUSH 20		sha3(_recipient, _amount, _transactionData)
    ADD			sha3(_recipient, _amount, _transactionData)
    SWAP1			sha3(_recipient, _amount, _transactionData)
    DUP1			sha3(_recipient, _amount, _transactionData)
    DUP4			sha3(_recipient, _amount, _transactionData)
    DUP4			sha3(_recipient, _amount, _transactionData)
    DUP3			sha3(_recipient, _amount, _transactionData)
    SWAP1			sha3(_recipient, _amount, _transactionData)
    PUSH 0		sha3(_recipient, _amount, _transactionData)
    PUSH 4		sha3(_recipient, _amount, _transactionData)
    PUSH 20		sha3(_recipient, _amount, _transactionData)
    DUP5			sha3(_recipient, _amount, _transactionData)
    PUSH 1F		sha3(_recipient, _amount, _transactionData)
    ADD			sha3(_recipient, _amount, _transactionData)
    DIV			sha3(_recipient, _amount, _transactionData)
    PUSH F		sha3(_recipient, _amount, _transactionData)
    MUL			sha3(_recipient, _amount, _transactionData)
    PUSH 3		sha3(_recipient, _amount, _transactionData)
    ADD			sha3(_recipient, _amount, _transactionData)
    CALL			sha3(_recipient, _amount, _transactionData)
    POP			sha3(_recipient, _amount, _transactionData)
    SWAP1			sha3(_recipient, _amount, _transactionData)
    POP			sha3(_recipient, _amount, _transactionData)
    ADD			sha3(_recipient, _amount, _transactionData)
    SWAP4			sha3(_recipient, _amount, _transactionData)
    POP			sha3(_recipient, _amount, _transactionData)
    POP			sha3(_recipient, _amount, _transactionData)
    POP			sha3(_recipient, _amount, _transactionData)
    POP			sha3(_recipient, _amount, _transactionData)
    PUSH 40		sha3(_recipient, _amount, _transactionData)
    MLOAD			sha3(_recipient, _amount, _transactionData)
    DUP1			sha3(_recipient, _amount, _transactionData)
    SWAP2			sha3(_recipient, _amount, _transactionData)
    SUB			sha3(_recipient, _amount, _transactionData)
    SWAP1			sha3(_recipient, _amount, _transactionData)
    SHA3			sha3(_recipient, _amount, _transactionData)
    DUP2			p
    PUSH 5		p.proposalHash
    ADD			p.proposalHash
    PUSH 0		p.proposalHash
    POP			p.proposalHash
    SLOAD			p.proposalHash
    EQ			p.proposalHash == sha3(_recipient, _amount, _transactionData)
    SWAP2			return p.proposalHash == sha3(_recipient, _amount, _transactionData)
    POP			return p.proposalHash == sha3(_recipient, _amount, _transactionData)
    PUSH [tag223]		return p.proposalHash == sha3(_recipient, _amount, _transactionData)
    JUMP			return p.proposalHash == sha3(_recipient, _amount, _transactionData)
  tag223: 
    JUMPDEST		function checkProposalCode(...
    POP			function checkProposalCode(...
    SWAP5			function checkProposalCode(...
    SWAP4			function checkProposalCode(...
    POP			function checkProposalCode(...
    POP			function checkProposalCode(...
    POP			function checkProposalCode(...
    POP			function checkProposalCode(...
    JUMP	[out]		function checkProposalCode(...
  tag132: 
    JUMPDEST		function vote(...
    PUSH 0		uint _voteID
    PUSH 0		Proposal p
    PUSH 0		0
    PUSH [tag227]		balanceOf(msg.sender)
    CALLER			msg.sender
    PUSH [tag104]		balanceOf
    JUMP	[in]		balanceOf(msg.sender)
  tag227: 
    JUMPDEST		balanceOf(msg.sender)
    EQ			balanceOf(msg.sender) == 0
    ISZERO			if (balanceOf(msg.sender) == 0) throw
    PUSH [tag228]		if (balanceOf(msg.sender) == 0) throw
    JUMPI			if (balanceOf(msg.sender) == 0) throw
    PUSH [ErrorTag]		throw
    JUMP			throw
  tag228: 
    JUMPDEST		if (balanceOf(msg.sender) == 0) throw
    PUSH 0		0
    CALLVALUE			msg.value
    GT			msg.value > 0
    ISZERO			if (msg.value > 0) throw
    PUSH [tag229]		if (msg.value > 0) throw
    JUMPI			if (msg.value > 0) throw
    PUSH [ErrorTag]		throw
    JUMP			throw
  tag229: 
    JUMPDEST		if (msg.value > 0) throw
    PUSH 0		proposals
    PUSH 0		proposals
    POP			proposals
    DUP5			_proposalID
    DUP2			proposals[_proposalID]
    SLOAD			proposals[_proposalID]
    DUP2			proposals[_proposalID]
    LT			proposals[_proposalID]
    ISZERO			proposals[_proposalID]
    PUSH [ErrorTag]		proposals[_proposalID]
    JUMPI			proposals[_proposalID]
    SWAP1			proposals[_proposalID]
    PUSH 0		proposals[_proposalID]
    MSTORE			proposals[_proposalID]
    PUSH 20		proposals[_proposalID]
    PUSH 0		proposals[_proposalID]
    SHA3			proposals[_proposalID]
    SWAP1			proposals[_proposalID]
    PUSH E		proposals[_proposalID]
    MUL			proposals[_proposalID]
    ADD			proposals[_proposalID]
    PUSH 0		proposals[_proposalID]
  tag230: 
    JUMPDEST		proposals[_proposalID]
    POP			proposals[_proposalID]
    SWAP1			Proposal p = proposals[_proposalID]
    POP			Proposal p = proposals[_proposalID]
    DUP1			p
    PUSH B		p.votedYes
    ADD			p.votedYes
    PUSH 0		p.votedYes
    POP			p.votedYes
    PUSH 0		p.votedYes[msg.sender]
    CALLER			msg.sender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.votedYes[msg.sender]
    AND			p.votedYes[msg.sender]
    DUP2			p.votedYes[msg.sender]
    MSTORE			p.votedYes[msg.sender]
    PUSH 20		p.votedYes[msg.sender]
    ADD			p.votedYes[msg.sender]
    SWAP1			p.votedYes[msg.sender]
    DUP2			p.votedYes[msg.sender]
    MSTORE			p.votedYes[msg.sender]
    PUSH 20		p.votedYes[msg.sender]
    ADD			p.votedYes[msg.sender]
    PUSH 0		p.votedYes[msg.sender]
    SHA3			p.votedYes[msg.sender]
    PUSH 0		p.votedYes[msg.sender]
    SWAP1			p.votedYes[msg.sender]
    SLOAD			p.votedYes[msg.sender]
    SWAP1			p.votedYes[msg.sender]
    PUSH 100		p.votedYes[msg.sender]
    EXP			p.votedYes[msg.sender]
    SWAP1			p.votedYes[msg.sender]
    DIV			p.votedYes[msg.sender]
    PUSH FF		p.votedYes[msg.sender]
    AND			p.votedYes[msg.sender]
    DUP1			p.votedYes[msg.sender]...
    PUSH [tag231]		p.votedYes[msg.sender]...
    JUMPI			p.votedYes[msg.sender]...
    POP			p.votedYes[msg.sender]...
    DUP1			p
    PUSH C		p.votedNo
    ADD			p.votedNo
    PUSH 0		p.votedNo
    POP			p.votedNo
    PUSH 0		p.votedNo[msg.sender]
    CALLER			msg.sender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.votedNo[msg.sender]
    AND			p.votedNo[msg.sender]
    DUP2			p.votedNo[msg.sender]
    MSTORE			p.votedNo[msg.sender]
    PUSH 20		p.votedNo[msg.sender]
    ADD			p.votedNo[msg.sender]
    SWAP1			p.votedNo[msg.sender]
    DUP2			p.votedNo[msg.sender]
    MSTORE			p.votedNo[msg.sender]
    PUSH 20		p.votedNo[msg.sender]
    ADD			p.votedNo[msg.sender]
    PUSH 0		p.votedNo[msg.sender]
    SHA3			p.votedNo[msg.sender]
    PUSH 0		p.votedNo[msg.sender]
    SWAP1			p.votedNo[msg.sender]
    SLOAD			p.votedNo[msg.sender]
    SWAP1			p.votedNo[msg.sender]
    PUSH 100		p.votedNo[msg.sender]
    EXP			p.votedNo[msg.sender]
    SWAP1			p.votedNo[msg.sender]
    DIV			p.votedNo[msg.sender]
    PUSH FF		p.votedNo[msg.sender]
    AND			p.votedNo[msg.sender]
  tag231: 
    JUMPDEST		p.votedYes[msg.sender]...
    DUP1			p.votedYes[msg.sender]...
    PUSH [tag232]		p.votedYes[msg.sender]...
    JUMPI			p.votedYes[msg.sender]...
    POP			p.votedYes[msg.sender]...
    DUP1			p
    PUSH 3		p.votingDeadline
    ADD			p.votingDeadline
    PUSH 0		p.votingDeadline
    POP			p.votingDeadline
    SLOAD			p.votingDeadline
    TIMESTAMP			now
    LT			now >= p.votingDeadline
    ISZERO			now >= p.votingDeadline
  tag232: 
    JUMPDEST		p.votedYes[msg.sender]...
    ISZERO			if (p.votedYes[msg.sender]...
    PUSH [tag233]		if (p.votedYes[msg.sender]...
    JUMPI			if (p.votedYes[msg.sender]...
    PUSH [ErrorTag]		throw
    JUMP			throw
  tag233: 
    JUMPDEST		if (p.votedYes[msg.sender]...
    DUP3			_supportsProposal
    ISZERO			if (_supportsProposal) {...
    PUSH [tag234]		if (_supportsProposal) {...
    JUMPI			if (_supportsProposal) {...
    PUSH 14		balances
    PUSH 0		balances
    POP			balances
    PUSH 0		balances[msg.sender]
    CALLER			msg.sender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		balances[msg.sender]
    AND			balances[msg.sender]
    DUP2			balances[msg.sender]
    MSTORE			balances[msg.sender]
    PUSH 20		balances[msg.sender]
    ADD			balances[msg.sender]
    SWAP1			balances[msg.sender]
    DUP2			balances[msg.sender]
    MSTORE			balances[msg.sender]
    PUSH 20		balances[msg.sender]
    ADD			balances[msg.sender]
    PUSH 0		balances[msg.sender]
    SHA3			balances[msg.sender]
    PUSH 0		balances[msg.sender]
    POP			balances[msg.sender]
    SLOAD			balances[msg.sender]
    DUP2			p
    PUSH 9		p.yea
    ADD			p.yea
    PUSH 0		p.yea
    DUP3			p.yea += balances[msg.sender]
    DUP3			p.yea += balances[msg.sender]
    DUP3			p.yea += balances[msg.sender]
    POP			p.yea += balances[msg.sender]
    SLOAD			p.yea += balances[msg.sender]
    ADD			p.yea += balances[msg.sender]
    SWAP3			p.yea += balances[msg.sender]
    POP			p.yea += balances[msg.sender]
    POP			p.yea += balances[msg.sender]
    DUP2			p.yea += balances[msg.sender]
    SWAP1			p.yea += balances[msg.sender]
    SSTORE			p.yea += balances[msg.sender]
    POP			p.yea += balances[msg.sender]
    PUSH 1		true
    DUP2			p
    PUSH B		p.votedYes
    ADD			p.votedYes
    PUSH 0		p.votedYes
    POP			p.votedYes
    PUSH 0		p.votedYes[msg.sender]
    CALLER			msg.sender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.votedYes[msg.sender]
    AND			p.votedYes[msg.sender]
    DUP2			p.votedYes[msg.sender]
    MSTORE			p.votedYes[msg.sender]
    PUSH 20		p.votedYes[msg.sender]
    ADD			p.votedYes[msg.sender]
    SWAP1			p.votedYes[msg.sender]
    DUP2			p.votedYes[msg.sender]
    MSTORE			p.votedYes[msg.sender]
    PUSH 20		p.votedYes[msg.sender]
    ADD			p.votedYes[msg.sender]
    PUSH 0		p.votedYes[msg.sender]
    SHA3			p.votedYes[msg.sender]
    PUSH 0		p.votedYes[msg.sender]
    PUSH 100		p.votedYes[msg.sender] = true
    EXP			p.votedYes[msg.sender] = true
    DUP2			p.votedYes[msg.sender] = true
    SLOAD			p.votedYes[msg.sender] = true
    DUP2			p.votedYes[msg.sender] = true
    PUSH FF		p.votedYes[msg.sender] = true
    MUL			p.votedYes[msg.sender] = true
    NOT			p.votedYes[msg.sender] = true
    AND			p.votedYes[msg.sender] = true
    SWAP1			p.votedYes[msg.sender] = true
    DUP4			p.votedYes[msg.sender] = true
    MUL			p.votedYes[msg.sender] = true
    OR			p.votedYes[msg.sender] = true
    SWAP1			p.votedYes[msg.sender] = true
    SSTORE			p.votedYes[msg.sender] = true
    POP			p.votedYes[msg.sender] = true
    PUSH [tag235]		if (_supportsProposal) {...
    JUMP			if (_supportsProposal) {...
  tag234: 
    JUMPDEST		if (_supportsProposal) {...
    PUSH 14		balances
    PUSH 0		balances
    POP			balances
    PUSH 0		balances[msg.sender]
    CALLER			msg.sender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		balances[msg.sender]
    AND			balances[msg.sender]
    DUP2			balances[msg.sender]
    MSTORE			balances[msg.sender]
    PUSH 20		balances[msg.sender]
    ADD			balances[msg.sender]
    SWAP1			balances[msg.sender]
    DUP2			balances[msg.sender]
    MSTORE			balances[msg.sender]
    PUSH 20		balances[msg.sender]
    ADD			balances[msg.sender]
    PUSH 0		balances[msg.sender]
    SHA3			balances[msg.sender]
    PUSH 0		balances[msg.sender]
    POP			balances[msg.sender]
    SLOAD			balances[msg.sender]
    DUP2			p
    PUSH A		p.nay
    ADD			p.nay
    PUSH 0		p.nay
    DUP3			p.nay += balances[msg.sender]
    DUP3			p.nay += balances[msg.sender]
    DUP3			p.nay += balances[msg.sender]
    POP			p.nay += balances[msg.sender]
    SLOAD			p.nay += balances[msg.sender]
    ADD			p.nay += balances[msg.sender]
    SWAP3			p.nay += balances[msg.sender]
    POP			p.nay += balances[msg.sender]
    POP			p.nay += balances[msg.sender]
    DUP2			p.nay += balances[msg.sender]
    SWAP1			p.nay += balances[msg.sender]
    SSTORE			p.nay += balances[msg.sender]
    POP			p.nay += balances[msg.sender]
    PUSH 1		true
    DUP2			p
    PUSH C		p.votedNo
    ADD			p.votedNo
    PUSH 0		p.votedNo
    POP			p.votedNo
    PUSH 0		p.votedNo[msg.sender]
    CALLER			msg.sender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.votedNo[msg.sender]
    AND			p.votedNo[msg.sender]
    DUP2			p.votedNo[msg.sender]
    MSTORE			p.votedNo[msg.sender]
    PUSH 20		p.votedNo[msg.sender]
    ADD			p.votedNo[msg.sender]
    SWAP1			p.votedNo[msg.sender]
    DUP2			p.votedNo[msg.sender]
    MSTORE			p.votedNo[msg.sender]
    PUSH 20		p.votedNo[msg.sender]
    ADD			p.votedNo[msg.sender]
    PUSH 0		p.votedNo[msg.sender]
    SHA3			p.votedNo[msg.sender]
    PUSH 0		p.votedNo[msg.sender]
    PUSH 100		p.votedNo[msg.sender] = true
    EXP			p.votedNo[msg.sender] = true
    DUP2			p.votedNo[msg.sender] = true
    SLOAD			p.votedNo[msg.sender] = true
    DUP2			p.votedNo[msg.sender] = true
    PUSH FF		p.votedNo[msg.sender] = true
    MUL			p.votedNo[msg.sender] = true
    NOT			p.votedNo[msg.sender] = true
    AND			p.votedNo[msg.sender] = true
    SWAP1			p.votedNo[msg.sender] = true
    DUP4			p.votedNo[msg.sender] = true
    MUL			p.votedNo[msg.sender] = true
    OR			p.votedNo[msg.sender] = true
    SWAP1			p.votedNo[msg.sender] = true
    SSTORE			p.votedNo[msg.sender] = true
    POP			p.votedNo[msg.sender] = true
  tag235: 
    JUMPDEST		if (_supportsProposal) {...
    PUSH 0		0
    PUSH B		blocked
    PUSH 0		blocked
    POP			blocked
    PUSH 0		blocked[msg.sender]
    CALLER			msg.sender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		blocked[msg.sender]
    AND			blocked[msg.sender]
    DUP2			blocked[msg.sender]
    MSTORE			blocked[msg.sender]
    PUSH 20		blocked[msg.sender]
    ADD			blocked[msg.sender]
    SWAP1			blocked[msg.sender]
    DUP2			blocked[msg.sender]
    MSTORE			blocked[msg.sender]
    PUSH 20		blocked[msg.sender]
    ADD			blocked[msg.sender]
    PUSH 0		blocked[msg.sender]
    SHA3			blocked[msg.sender]
    PUSH 0		blocked[msg.sender]
    POP			blocked[msg.sender]
    SLOAD			blocked[msg.sender]
    EQ			blocked[msg.sender] == 0
    ISZERO			if (blocked[msg.sender] == 0) {...
    PUSH [tag236]		if (blocked[msg.sender] == 0) {...
    JUMPI			if (blocked[msg.sender] == 0) {...
    DUP4			_proposalID
    PUSH B		blocked
    PUSH 0		blocked
    POP			blocked
    PUSH 0		blocked[msg.sender]
    CALLER			msg.sender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		blocked[msg.sender]
    AND			blocked[msg.sender]
    DUP2			blocked[msg.sender]
    MSTORE			blocked[msg.sender]
    PUSH 20		blocked[msg.sender]
    ADD			blocked[msg.sender]
    SWAP1			blocked[msg.sender]
    DUP2			blocked[msg.sender]
    MSTORE			blocked[msg.sender]
    PUSH 20		blocked[msg.sender]
    ADD			blocked[msg.sender]
    PUSH 0		blocked[msg.sender]
    SHA3			blocked[msg.sender]
    PUSH 0		blocked[msg.sender]
    POP			blocked[msg.sender] = _proposalID
    DUP2			blocked[msg.sender] = _proposalID
    SWAP1			blocked[msg.sender] = _proposalID
    SSTORE			blocked[msg.sender] = _proposalID
    POP			blocked[msg.sender] = _proposalID
    PUSH [tag237]		if (blocked[msg.sender] == 0) {...
    JUMP			if (blocked[msg.sender] == 0) {...
  tag236: 
    JUMPDEST		if (blocked[msg.sender] == 0) {...
    PUSH 0		proposals
    PUSH 0		proposals
    POP			proposals
    PUSH B		blocked
    PUSH 0		blocked
    POP			blocked
    PUSH 0		blocked[msg.sender]
    CALLER			msg.sender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		blocked[msg.sender]
    AND			blocked[msg.sender]
    DUP2			blocked[msg.sender]
    MSTORE			blocked[msg.sender]
    PUSH 20		blocked[msg.sender]
    ADD			blocked[msg.sender]
    SWAP1			blocked[msg.sender]
    DUP2			blocked[msg.sender]
    MSTORE			blocked[msg.sender]
    PUSH 20		blocked[msg.sender]
    ADD			blocked[msg.sender]
    PUSH 0		blocked[msg.sender]
    SHA3			blocked[msg.sender]
    PUSH 0		blocked[msg.sender]
    POP			blocked[msg.sender]
    SLOAD			blocked[msg.sender]
    DUP2			proposals[blocked[msg.sender]]
    SLOAD			proposals[blocked[msg.sender]]
    DUP2			proposals[blocked[msg.sender]]
    LT			proposals[blocked[msg.sender]]
    ISZERO			proposals[blocked[msg.sender]]
    PUSH [ErrorTag]		proposals[blocked[msg.sender]]
    JUMPI			proposals[blocked[msg.sender]]
    SWAP1			proposals[blocked[msg.sender]]
    PUSH 0		proposals[blocked[msg.sender]]
    MSTORE			proposals[blocked[msg.sender]]
    PUSH 20		proposals[blocked[msg.sender]]
    PUSH 0		proposals[blocked[msg.sender]]
    SHA3			proposals[blocked[msg.sender]]
    SWAP1			proposals[blocked[msg.sender]]
    PUSH E		proposals[blocked[msg.sender]]
    MUL			proposals[blocked[msg.sender]]
    ADD			proposals[blocked[msg.sender]]
    PUSH 0		proposals[blocked[msg.sender]]
  tag238: 
    JUMPDEST		proposals[blocked[msg.sender]]
    POP			proposals[blocked[msg.sender]]
    PUSH 3		proposals[blocked[msg.sender]].votingDeadline
    ADD			proposals[blocked[msg.sender]].votingDeadline
    PUSH 0		proposals[blocked[msg.sender]].votingDeadline
    POP			proposals[blocked[msg.sender]].votingDeadline
    SLOAD			proposals[blocked[msg.sender]].votingDeadline
    DUP2			p
    PUSH 3		p.votingDeadline
    ADD			p.votingDeadline
    PUSH 0		p.votingDeadline
    POP			p.votingDeadline
    SLOAD			p.votingDeadline
    GT			p.votingDeadline > proposals[blocked[msg.sender]].votingDeadline
    ISZERO			if (p.votingDeadline > proposals[blocked[msg.sender]].votingDeadline) {...
    PUSH [tag239]		if (p.votingDeadline > proposals[blocked[msg.sender]].votingDeadline) {...
    JUMPI			if (p.votingDeadline > proposals[blocked[msg.sender]].votingDeadline) {...
    DUP4			_proposalID
    PUSH B		blocked
    PUSH 0		blocked
    POP			blocked
    PUSH 0		blocked[msg.sender]
    CALLER			msg.sender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		blocked[msg.sender]
    AND			blocked[msg.sender]
    DUP2			blocked[msg.sender]
    MSTORE			blocked[msg.sender]
    PUSH 20		blocked[msg.sender]
    ADD			blocked[msg.sender]
    SWAP1			blocked[msg.sender]
    DUP2			blocked[msg.sender]
    MSTORE			blocked[msg.sender]
    PUSH 20		blocked[msg.sender]
    ADD			blocked[msg.sender]
    PUSH 0		blocked[msg.sender]
    SHA3			blocked[msg.sender]
    PUSH 0		blocked[msg.sender]
    POP			blocked[msg.sender] = _proposalID
    DUP2			blocked[msg.sender] = _proposalID
    SWAP1			blocked[msg.sender] = _proposalID
    SSTORE			blocked[msg.sender] = _proposalID
    POP			blocked[msg.sender] = _proposalID
  tag239: 
    JUMPDEST		if (p.votingDeadline > proposals[blocked[msg.sender]].votingDeadline) {...
  tag237: 
    JUMPDEST		if (blocked[msg.sender] == 0) {...
    CALLER			msg.sender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		Voted(_proposalID, _supportsProposal, msg.sender)
    AND			Voted(_proposalID, _supportsProposal, msg.sender)
    DUP5			_proposalID
    PUSH 86ABFCE99B7DD908BEC0169288797F85049EC73CBE046ED9DE818FAB3A497AE0		Voted(_proposalID, _supportsProposal, msg.sender)
    DUP6			_supportsProposal
    PUSH 40		Voted(_proposalID, _supportsProposal, msg.sender)
    MLOAD			Voted(_proposalID, _supportsProposal, msg.sender)
    DUP1			Voted(_proposalID, _supportsProposal, msg.sender)
    DUP3			Voted(_proposalID, _supportsProposal, msg.sender)
    DUP2			Voted(_proposalID, _supportsProposal, msg.sender)
    MSTORE			Voted(_proposalID, _supportsProposal, msg.sender)
    PUSH 20		Voted(_proposalID, _supportsProposal, msg.sender)
    ADD			Voted(_proposalID, _supportsProposal, msg.sender)
    SWAP2			Voted(_proposalID, _supportsProposal, msg.sender)
    POP			Voted(_proposalID, _supportsProposal, msg.sender)
    POP			Voted(_proposalID, _supportsProposal, msg.sender)
    PUSH 40		Voted(_proposalID, _supportsProposal, msg.sender)
    MLOAD			Voted(_proposalID, _supportsProposal, msg.sender)
    DUP1			Voted(_proposalID, _supportsProposal, msg.sender)
    SWAP2			Voted(_proposalID, _supportsProposal, msg.sender)
    SUB			Voted(_proposalID, _supportsProposal, msg.sender)
    SWAP1			Voted(_proposalID, _supportsProposal, msg.sender)
    LOG3			Voted(_proposalID, _supportsProposal, msg.sender)
  tag226: 
    JUMPDEST		function vote(...
    POP			function vote(...
    SWAP3			function vote(...
    SWAP2			function vote(...
    POP			function vote(...
    POP			function vote(...
    JUMP	[out]		function vote(...
  tag78: 
    JUMPDEST		function executeProposal(...
    PUSH 0		bool _success
    PUSH 0		Proposal p
    PUSH 0		uint waitPeriod
    PUSH 0		bool proposalCheck
    PUSH 0		uint quorum
    PUSH 0		0
    CALLVALUE			msg.value
    GT			msg.value > 0
    ISZERO			if (msg.value > 0) throw
    PUSH [tag241]		if (msg.value > 0) throw
    JUMPI			if (msg.value > 0) throw
    PUSH [ErrorTag]		throw
    JUMP			throw
  tag241: 
    JUMPDEST		if (msg.value > 0) throw
    PUSH 0		proposals
    PUSH 0		proposals
    POP			proposals
    DUP8			_proposalID
    DUP2			proposals[_proposalID]
    SLOAD			proposals[_proposalID]
    DUP2			proposals[_proposalID]
    LT			proposals[_proposalID]
    ISZERO			proposals[_proposalID]
    PUSH [ErrorTag]		proposals[_proposalID]
    JUMPI			proposals[_proposalID]
    SWAP1			proposals[_proposalID]
    PUSH 0		proposals[_proposalID]
    MSTORE			proposals[_proposalID]
    PUSH 20		proposals[_proposalID]
    PUSH 0		proposals[_proposalID]
    SHA3			proposals[_proposalID]
    SWAP1			proposals[_proposalID]
    PUSH E		proposals[_proposalID]
    MUL			proposals[_proposalID]
    ADD			proposals[_proposalID]
    PUSH 0		proposals[_proposalID]
  tag242: 
    JUMPDEST		proposals[_proposalID]
    POP			proposals[_proposalID]
    SWAP4			Proposal p = proposals[_proposalID]
    POP			Proposal p = proposals[_proposalID]
    DUP4			p
    PUSH 7		p.newCurator
    ADD			p.newCurator
    PUSH 0		p.newCurator
    SWAP1			p.newCurator
    SLOAD			p.newCurator
    SWAP1			p.newCurator
    PUSH 100		p.newCurator
    EXP			p.newCurator
    SWAP1			p.newCurator
    DIV			p.newCurator
    PUSH FF		p.newCurator
    AND			p.newCurator
    PUSH [tag243]		p.newCurator...
    JUMPI			p.newCurator...
    PUSH D2F00		10 days
    PUSH [tag244]		p.newCurator...
    JUMP			p.newCurator...
  tag243: 
    JUMPDEST		p.newCurator...
    PUSH 239880		27 days
  tag244: 
    JUMPDEST		p.newCurator...
    SWAP3			uint waitPeriod = p.newCurator...
    POP			uint waitPeriod = p.newCurator...
    DUP4			p
    PUSH 4		p.open
    ADD			p.open
    PUSH 0		p.open
    SWAP1			p.open
    SLOAD			p.open
    SWAP1			p.open
    PUSH 100		p.open
    EXP			p.open
    SWAP1			p.open
    DIV			p.open
    PUSH FF		p.open
    AND			p.open
    DUP1			p.open && now > p.votingDeadline + waitPeriod
    ISZERO			p.open && now > p.votingDeadline + waitPeriod
    PUSH [tag245]		p.open && now > p.votingDeadline + waitPeriod
    JUMPI			p.open && now > p.votingDeadline + waitPeriod
    POP			p.open && now > p.votingDeadline + waitPeriod
    DUP3			waitPeriod
    DUP5			p
    PUSH 3		p.votingDeadline
    ADD			p.votingDeadline
    PUSH 0		p.votingDeadline
    POP			p.votingDeadline
    SLOAD			p.votingDeadline
    ADD			p.votingDeadline + waitPeriod
    TIMESTAMP			now
    GT			now > p.votingDeadline + waitPeriod
  tag245: 
    JUMPDEST		p.open && now > p.votingDeadline + waitPeriod
    ISZERO			if (p.open && now > p.votingDeadline + waitPeriod) {...
    PUSH [tag246]		if (p.open && now > p.votingDeadline + waitPeriod) {...
    JUMPI			if (p.open && now > p.votingDeadline + waitPeriod) {...
    PUSH [tag247]		closeProposal(_proposalID)
    DUP8			_proposalID
    PUSH [tag248]		closeProposal
    JUMP	[in]		closeProposal(_proposalID)
  tag247: 
    JUMPDEST		closeProposal(_proposalID)
    PUSH [tag240]		return;
    JUMP			return;
  tag246: 
    JUMPDEST		if (p.open && now > p.votingDeadline + waitPeriod) {...
    DUP4			p
    PUSH 3		p.votingDeadline
    ADD			p.votingDeadline
    PUSH 0		p.votingDeadline
    POP			p.votingDeadline
    SLOAD			p.votingDeadline
    TIMESTAMP			now
    LT			now < p.votingDeadline
    DUP1			now < p.votingDeadline  // has the voting deadline arrived?...
    PUSH [tag249]		now < p.votingDeadline  // has the voting deadline arrived?...
    JUMPI			now < p.votingDeadline  // has the voting deadline arrived?...
    POP			now < p.votingDeadline  // has the voting deadline arrived?...
    DUP4			p
    PUSH 4		p.open
    ADD			p.open
    PUSH 0		p.open
    SWAP1			p.open
    SLOAD			p.open
    SWAP1			p.open
    PUSH 100		p.open
    EXP			p.open
    SWAP1			p.open
    DIV			p.open
    PUSH FF		p.open
    AND			p.open
    ISZERO			!p.open
  tag249: 
    JUMPDEST		now < p.votingDeadline  // has the voting deadline arrived?...
    DUP1			now < p.votingDeadline  // has the voting deadline arrived?...
    PUSH [tag250]		now < p.votingDeadline  // has the voting deadline arrived?...
    JUMPI			now < p.votingDeadline  // has the voting deadline arrived?...
    POP			now < p.votingDeadline  // has the voting deadline arrived?...
    DUP4			p
    PUSH 0		p.recipient
    ADD			p.recipient
    PUSH 0		p.recipient
    SWAP1			p.recipient
    SLOAD			p.recipient
    SWAP1			p.recipient
    PUSH 100		p.recipient
    EXP			p.recipient
    SWAP1			p.recipient
    DIV			p.recipient
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.recipient
    AND			p.recipient
    DUP5			p
    PUSH 1		p.amount
    ADD			p.amount
    PUSH 0		p.amount
    POP			p.amount
    SLOAD			p.amount
    DUP8			_transactionData
    PUSH 40		sha3(p.recipient, p.amount, _transactionData)
    MLOAD			sha3(p.recipient, p.amount, _transactionData)
    DUP1			sha3(p.recipient, p.amount, _transactionData)
    DUP5			sha3(p.recipient, p.amount, _transactionData)
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		sha3(p.recipient, p.amount, _transactionData)
    AND			sha3(p.recipient, p.amount, _transactionData)
    PUSH 1000000000000000000000000		sha3(p.recipient, p.amount, _transactionData)
    MUL			sha3(p.recipient, p.amount, _transactionData)
    DUP2			sha3(p.recipient, p.amount, _transactionData)
    MSTORE			sha3(p.recipient, p.amount, _transactionData)
    PUSH 14		sha3(p.recipient, p.amount, _transactionData)
    ADD			sha3(p.recipient, p.amount, _transactionData)
    DUP4			sha3(p.recipient, p.amount, _transactionData)
    DUP2			sha3(p.recipient, p.amount, _transactionData)
    MSTORE			sha3(p.recipient, p.amount, _transactionData)
    PUSH 20		sha3(p.recipient, p.amount, _transactionData)
    ADD			sha3(p.recipient, p.amount, _transactionData)
    DUP3			sha3(p.recipient, p.amount, _transactionData)
    DUP1			sha3(p.recipient, p.amount, _transactionData)
    MLOAD			sha3(p.recipient, p.amount, _transactionData)
    SWAP1			sha3(p.recipient, p.amount, _transactionData)
    PUSH 20		sha3(p.recipient, p.amount, _transactionData)
    ADD			sha3(p.recipient, p.amount, _transactionData)
    SWAP1			sha3(p.recipient, p.amount, _transactionData)
    DUP1			sha3(p.recipient, p.amount, _transactionData)
    DUP4			sha3(p.recipient, p.amount, _transactionData)
    DUP4			sha3(p.recipient, p.amount, _transactionData)
    DUP3			sha3(p.recipient, p.amount, _transactionData)
    SWAP1			sha3(p.recipient, p.amount, _transactionData)
    PUSH 0		sha3(p.recipient, p.amount, _transactionData)
    PUSH 4		sha3(p.recipient, p.amount, _transactionData)
    PUSH 20		sha3(p.recipient, p.amount, _transactionData)
    DUP5			sha3(p.recipient, p.amount, _transactionData)
    PUSH 1F		sha3(p.recipient, p.amount, _transactionData)
    ADD			sha3(p.recipient, p.amount, _transactionData)
    DIV			sha3(p.recipient, p.amount, _transactionData)
    PUSH F		sha3(p.recipient, p.amount, _transactionData)
    MUL			sha3(p.recipient, p.amount, _transactionData)
    PUSH 3		sha3(p.recipient, p.amount, _transactionData)
    ADD			sha3(p.recipient, p.amount, _transactionData)
    CALL			sha3(p.recipient, p.amount, _transactionData)
    POP			sha3(p.recipient, p.amount, _transactionData)
    SWAP1			sha3(p.recipient, p.amount, _transactionData)
    POP			sha3(p.recipient, p.amount, _transactionData)
    ADD			sha3(p.recipient, p.amount, _transactionData)
    SWAP4			sha3(p.recipient, p.amount, _transactionData)
    POP			sha3(p.recipient, p.amount, _transactionData)
    POP			sha3(p.recipient, p.amount, _transactionData)
    POP			sha3(p.recipient, p.amount, _transactionData)
    POP			sha3(p.recipient, p.amount, _transactionData)
    PUSH 40		sha3(p.recipient, p.amount, _transactionData)
    MLOAD			sha3(p.recipient, p.amount, _transactionData)
    DUP1			sha3(p.recipient, p.amount, _transactionData)
    SWAP2			sha3(p.recipient, p.amount, _transactionData)
    SUB			sha3(p.recipient, p.amount, _transactionData)
    SWAP1			sha3(p.recipient, p.amount, _transactionData)
    SHA3			sha3(p.recipient, p.amount, _transactionData)
    DUP5			p
    PUSH 5		p.proposalHash
    ADD			p.proposalHash
    PUSH 0		p.proposalHash
    POP			p.proposalHash
    SLOAD			p.proposalHash
    EQ			p.proposalHash != sha3(p.recipient, p.amount, _transactionData)
    ISZERO			p.proposalHash != sha3(p.recipient, p.amount, _transactionData)
  tag250: 
    JUMPDEST		now < p.votingDeadline  // has the voting deadline arrived?...
    ISZERO			if (now < p.votingDeadline  // has the voting deadline arrived?...
    PUSH [tag251]		if (now < p.votingDeadline  // has the voting deadline arrived?...
    JUMPI			if (now < p.votingDeadline  // has the voting deadline arrived?...
    PUSH [ErrorTag]		throw
    JUMP			throw
  tag251: 
    JUMPDEST		if (now < p.votingDeadline  // has the voting deadline arrived?...
    PUSH [tag252]		isRecipientAllowed(p.recipient)
    DUP5			p
    PUSH 0		p.recipient
    ADD			p.recipient
    PUSH 0		p.recipient
    SWAP1			p.recipient
    SLOAD			p.recipient
    SWAP1			p.recipient
    PUSH 100		p.recipient
    EXP			p.recipient
    SWAP1			p.recipient
    DIV			p.recipient
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.recipient
    AND			p.recipient
    PUSH [tag186]		isRecipientAllowed
    JUMP	[in]		isRecipientAllowed(p.recipient)
  tag252: 
    JUMPDEST		isRecipientAllowed(p.recipient)
    ISZERO			!isRecipientAllowed(p.recipient)
    ISZERO			if (!isRecipientAllowed(p.recipient)) {...
    PUSH [tag253]		if (!isRecipientAllowed(p.recipient)) {...
    JUMPI			if (!isRecipientAllowed(p.recipient)) {...
    PUSH [tag254]		closeProposal(_proposalID)
    DUP8			_proposalID
    PUSH [tag248]		closeProposal
    JUMP	[in]		closeProposal(_proposalID)
  tag254: 
    JUMPDEST		closeProposal(_proposalID)
    DUP4			p
    PUSH D		p.creator
    ADD			p.creator
    PUSH 0		p.creator
    SWAP1			p.creator
    SLOAD			p.creator
    SWAP1			p.creator
    PUSH 100		p.creator
    EXP			p.creator
    SWAP1			p.creator
    DIV			p.creator
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.creator
    AND			p.creator
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.creator.send
    AND			p.creator.send
    PUSH 0		p.creator.send(p.proposalDeposit)
    DUP6			p
    PUSH 6		p.proposalDeposit
    ADD			p.proposalDeposit
    PUSH 0		p.proposalDeposit
    POP			p.proposalDeposit
    SLOAD			p.proposalDeposit
    PUSH 40		p.creator.send(p.proposalDeposit)
    MLOAD			p.creator.send(p.proposalDeposit)
    DUP1			p.creator.send(p.proposalDeposit)
    SWAP1			p.creator.send(p.proposalDeposit)
    POP			p.creator.send(p.proposalDeposit)
    PUSH 0		p.creator.send(p.proposalDeposit)
    PUSH 40		p.creator.send(p.proposalDeposit)
    MLOAD			p.creator.send(p.proposalDeposit)
    DUP1			p.creator.send(p.proposalDeposit)
    DUP4			p.creator.send(p.proposalDeposit)
    SUB			p.creator.send(p.proposalDeposit)
    DUP2			p.creator.send(p.proposalDeposit)
    DUP6			p.creator.send(p.proposalDeposit)
    DUP9			p.creator.send(p.proposalDeposit)
    DUP9			p.creator.send(p.proposalDeposit)
    CALL			p.creator.send(p.proposalDeposit)
    SWAP4			p.creator.send(p.proposalDeposit)
    POP			p.creator.send(p.proposalDeposit)
    POP			p.creator.send(p.proposalDeposit)
    POP			p.creator.send(p.proposalDeposit)
    POP			p.creator.send(p.proposalDeposit)
    POP			p.creator.send(p.proposalDeposit)
    PUSH [tag240]		return;
    JUMP			return;
  tag253: 
    JUMPDEST		if (!isRecipientAllowed(p.recipient)) {...
    PUSH 1		true
    SWAP2			bool proposalCheck = true
    POP			bool proposalCheck = true
    PUSH [tag255]		actualBalance()
    PUSH [tag86]		actualBalance
    JUMP	[in]		actualBalance()
  tag255: 
    JUMPDEST		actualBalance()
    DUP5			p
    PUSH 1		p.amount
    ADD			p.amount
    PUSH 0		p.amount
    POP			p.amount
    SLOAD			p.amount
    GT			p.amount > actualBalance()
    ISZERO			if (p.amount > actualBalance())...
    PUSH [tag256]		if (p.amount > actualBalance())...
    JUMPI			if (p.amount > actualBalance())...
    PUSH 0		false
    SWAP2			proposalCheck = false
    POP			proposalCheck = false
    DUP2			proposalCheck = false
    POP			proposalCheck = false
  tag256: 
    JUMPDEST		if (p.amount > actualBalance())...
    DUP4			p
    PUSH A		p.nay
    ADD			p.nay
    PUSH 0		p.nay
    POP			p.nay
    SLOAD			p.nay
    DUP5			p
    PUSH 9		p.yea
    ADD			p.yea
    PUSH 0		p.yea
    POP			p.yea
    SLOAD			p.yea
    ADD			p.yea + p.nay
    SWAP1			uint quorum = p.yea + p.nay
    POP			uint quorum = p.yea + p.nay
    PUSH 4		4
    DUP7			_transactionData
    MLOAD			_transactionData.length
    LT			_transactionData.length >= 4
    ISZERO			_transactionData.length >= 4
    DUP1			_transactionData.length >= 4 && _transactionData[0] == 0x68
    ISZERO			_transactionData.length >= 4 && _transactionData[0] == 0x68
    PUSH [tag257]		_transactionData.length >= 4 && _transactionData[0] == 0x68
    JUMPI			_transactionData.length >= 4 && _transactionData[0] == 0x68
    POP			_transactionData.length >= 4 && _transactionData[0] == 0x68
    PUSH 68		0x68
    PUSH 100000000000000000000000000000000000000000000000000000000000000		_transactionData[0] == 0x68
    MUL			_transactionData[0] == 0x68
    DUP7			_transactionData
    PUSH 0		0
    DUP2			_transactionData[0]
    MLOAD			_transactionData[0]
    DUP2			_transactionData[0]
    LT			_transactionData[0]
    ISZERO			_transactionData[0]
    PUSH [ErrorTag]		_transactionData[0]
    JUMPI			_transactionData[0]
    SWAP1			_transactionData[0]
    PUSH 20		_transactionData[0]
    ADD			_transactionData[0]
    ADD			_transactionData[0]
    MLOAD			_transactionData[0]
    PUSH 100000000000000000000000000000000000000000000000000000000000000		_transactionData[0]
    SWAP1			_transactionData[0]
    DIV			_transactionData[0]
    PUSH 100000000000000000000000000000000000000000000000000000000000000		_transactionData[0]
    MUL			_transactionData[0]
    EQ			_transactionData[0] == 0x68
  tag257: 
    JUMPDEST		_transactionData.length >= 4 && _transactionData[0] == 0x68
    DUP1			_transactionData.length >= 4 && _transactionData[0] == 0x68...
    ISZERO			_transactionData.length >= 4 && _transactionData[0] == 0x68...
    PUSH [tag258]		_transactionData.length >= 4 && _transactionData[0] == 0x68...
    JUMPI			_transactionData.length >= 4 && _transactionData[0] == 0x68...
    POP			_transactionData.length >= 4 && _transactionData[0] == 0x68...
    PUSH 37		0x37
    PUSH 100000000000000000000000000000000000000000000000000000000000000		_transactionData[1] == 0x37
    MUL			_transactionData[1] == 0x37
    DUP7			_transactionData
    PUSH 1		1
    DUP2			_transactionData[1]
    MLOAD			_transactionData[1]
    DUP2			_transactionData[1]
    LT			_transactionData[1]
    ISZERO			_transactionData[1]
    PUSH [ErrorTag]		_transactionData[1]
    JUMPI			_transactionData[1]
    SWAP1			_transactionData[1]
    PUSH 20		_transactionData[1]
    ADD			_transactionData[1]
    ADD			_transactionData[1]
    MLOAD			_transactionData[1]
    PUSH 100000000000000000000000000000000000000000000000000000000000000		_transactionData[1]
    SWAP1			_transactionData[1]
    DIV			_transactionData[1]
    PUSH 100000000000000000000000000000000000000000000000000000000000000		_transactionData[1]
    MUL			_transactionData[1]
    EQ			_transactionData[1] == 0x37
  tag258: 
    JUMPDEST		_transactionData.length >= 4 && _transactionData[0] == 0x68...
    DUP1			_transactionData.length >= 4 && _transactionData[0] == 0x68...
    ISZERO			_transactionData.length >= 4 && _transactionData[0] == 0x68...
    PUSH [tag259]		_transactionData.length >= 4 && _transactionData[0] == 0x68...
    JUMPI			_transactionData.length >= 4 && _transactionData[0] == 0x68...
    POP			_transactionData.length >= 4 && _transactionData[0] == 0x68...
    PUSH FF		0xff
    PUSH 100000000000000000000000000000000000000000000000000000000000000		_transactionData[2] == 0xff
    MUL			_transactionData[2] == 0xff
    DUP7			_transactionData
    PUSH 2		2
    DUP2			_transactionData[2]
    MLOAD			_transactionData[2]
    DUP2			_transactionData[2]
    LT			_transactionData[2]
    ISZERO			_transactionData[2]
    PUSH [ErrorTag]		_transactionData[2]
    JUMPI			_transactionData[2]
    SWAP1			_transactionData[2]
    PUSH 20		_transactionData[2]
    ADD			_transactionData[2]
    ADD			_transactionData[2]
    MLOAD			_transactionData[2]
    PUSH 100000000000000000000000000000000000000000000000000000000000000		_transactionData[2]
    SWAP1			_transactionData[2]
    DIV			_transactionData[2]
    PUSH 100000000000000000000000000000000000000000000000000000000000000		_transactionData[2]
    MUL			_transactionData[2]
    EQ			_transactionData[2] == 0xff
  tag259: 
    JUMPDEST		_transactionData.length >= 4 && _transactionData[0] == 0x68...
    DUP1			_transactionData.length >= 4 && _transactionData[0] == 0x68...
    ISZERO			_transactionData.length >= 4 && _transactionData[0] == 0x68...
    PUSH [tag260]		_transactionData.length >= 4 && _transactionData[0] == 0x68...
    JUMPI			_transactionData.length >= 4 && _transactionData[0] == 0x68...
    POP			_transactionData.length >= 4 && _transactionData[0] == 0x68...
    PUSH 1E		0x1e
    PUSH 100000000000000000000000000000000000000000000000000000000000000		_transactionData[3] == 0x1e
    MUL			_transactionData[3] == 0x1e
    DUP7			_transactionData
    PUSH 3		3
    DUP2			_transactionData[3]
    MLOAD			_transactionData[3]
    DUP2			_transactionData[3]
    LT			_transactionData[3]
    ISZERO			_transactionData[3]
    PUSH [ErrorTag]		_transactionData[3]
    JUMPI			_transactionData[3]
    SWAP1			_transactionData[3]
    PUSH 20		_transactionData[3]
    ADD			_transactionData[3]
    ADD			_transactionData[3]
    MLOAD			_transactionData[3]
    PUSH 100000000000000000000000000000000000000000000000000000000000000		_transactionData[3]
    SWAP1			_transactionData[3]
    DIV			_transactionData[3]
    PUSH 100000000000000000000000000000000000000000000000000000000000000		_transactionData[3]
    MUL			_transactionData[3]
    EQ			_transactionData[3] == 0x1e
  tag260: 
    JUMPDEST		_transactionData.length >= 4 && _transactionData[0] == 0x68...
    DUP1			_transactionData.length >= 4 && _transactionData[0] == 0x68...
    ISZERO			_transactionData.length >= 4 && _transactionData[0] == 0x68...
    PUSH [tag261]		_transactionData.length >= 4 && _transactionData[0] == 0x68...
    JUMPI			_transactionData.length >= 4 && _transactionData[0] == 0x68...
    POP			_transactionData.length >= 4 && _transactionData[0] == 0x68...
    PUSH [tag262]		minQuorum(actualBalance() + rewardToken[address(this)])
    PUSH 5		rewardToken
    PUSH 0		rewardToken
    POP			rewardToken
    PUSH 0		rewardToken[address(this)]
    ADDRESS			this
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		rewardToken[address(this)]
    AND			rewardToken[address(this)]
    DUP2			rewardToken[address(this)]
    MSTORE			rewardToken[address(this)]
    PUSH 20		rewardToken[address(this)]
    ADD			rewardToken[address(this)]
    SWAP1			rewardToken[address(this)]
    DUP2			rewardToken[address(this)]
    MSTORE			rewardToken[address(this)]
    PUSH 20		rewardToken[address(this)]
    ADD			rewardToken[address(this)]
    PUSH 0		rewardToken[address(this)]
    SHA3			rewardToken[address(this)]
    PUSH 0		rewardToken[address(this)]
    POP			rewardToken[address(this)]
    SLOAD			rewardToken[address(this)]
    PUSH [tag263]		actualBalance()
    PUSH [tag86]		actualBalance
    JUMP	[in]		actualBalance()
  tag263: 
    JUMPDEST		actualBalance()
    ADD			actualBalance() + rewardToken[address(this)]
    PUSH [tag264]		minQuorum
    JUMP	[in]		minQuorum(actualBalance() + rewardToken[address(this)])
  tag262: 
    JUMPDEST		minQuorum(actualBalance() + rewardToken[address(this)])
    DUP2			quorum
    LT			quorum < minQuorum(actualBalance() + rewardToken[address(this)])
  tag261: 
    JUMPDEST		_transactionData.length >= 4 && _transactionData[0] == 0x68...
    ISZERO			if (_transactionData.length >= 4 && _transactionData[0] == 0x68...
    PUSH [tag265]		if (_transactionData.length >= 4 && _transactionData[0] == 0x68...
    JUMPI			if (_transactionData.length >= 4 && _transactionData[0] == 0x68...
    PUSH 0		false
    SWAP2			proposalCheck = false
    POP			proposalCheck = false
    DUP2			proposalCheck = false
    POP			proposalCheck = false
  tag265: 
    JUMPDEST		if (_transactionData.length >= 4 && _transactionData[0] == 0x68...
    PUSH [tag266]		minQuorum(p.amount)
    DUP5			p
    PUSH 1		p.amount
    ADD			p.amount
    PUSH 0		p.amount
    POP			p.amount
    SLOAD			p.amount
    PUSH [tag264]		minQuorum
    JUMP	[in]		minQuorum(p.amount)
  tag266: 
    JUMPDEST		minQuorum(p.amount)
    DUP2			quorum
    LT			quorum >= minQuorum(p.amount)
    ISZERO			quorum >= minQuorum(p.amount)
    ISZERO			if (quorum >= minQuorum(p.amount)) {...
    PUSH [tag267]		if (quorum >= minQuorum(p.amount)) {...
    JUMPI			if (quorum >= minQuorum(p.amount)) {...
    DUP4			p
    PUSH D		p.creator
    ADD			p.creator
    PUSH 0		p.creator
    SWAP1			p.creator
    SLOAD			p.creator
    SWAP1			p.creator
    PUSH 100		p.creator
    EXP			p.creator
    SWAP1			p.creator
    DIV			p.creator
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.creator
    AND			p.creator
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.creator.send
    AND			p.creator.send
    PUSH 0		p.creator.send(p.proposalDeposit)
    DUP6			p
    PUSH 6		p.proposalDeposit
    ADD			p.proposalDeposit
    PUSH 0		p.proposalDeposit
    POP			p.proposalDeposit
    SLOAD			p.proposalDeposit
    PUSH 40		p.creator.send(p.proposalDeposit)
    MLOAD			p.creator.send(p.proposalDeposit)
    DUP1			p.creator.send(p.proposalDeposit)
    SWAP1			p.creator.send(p.proposalDeposit)
    POP			p.creator.send(p.proposalDeposit)
    PUSH 0		p.creator.send(p.proposalDeposit)
    PUSH 40		p.creator.send(p.proposalDeposit)
    MLOAD			p.creator.send(p.proposalDeposit)
    DUP1			p.creator.send(p.proposalDeposit)
    DUP4			p.creator.send(p.proposalDeposit)
    SUB			p.creator.send(p.proposalDeposit)
    DUP2			p.creator.send(p.proposalDeposit)
    DUP6			p.creator.send(p.proposalDeposit)
    DUP9			p.creator.send(p.proposalDeposit)
    DUP9			p.creator.send(p.proposalDeposit)
    CALL			p.creator.send(p.proposalDeposit)
    SWAP4			p.creator.send(p.proposalDeposit)
    POP			p.creator.send(p.proposalDeposit)
    POP			p.creator.send(p.proposalDeposit)
    POP			p.creator.send(p.proposalDeposit)
    POP			p.creator.send(p.proposalDeposit)
    ISZERO			!p.creator.send(p.proposalDeposit)
    ISZERO			if (!p.creator.send(p.proposalDeposit))...
    PUSH [tag268]		if (!p.creator.send(p.proposalDeposit))...
    JUMPI			if (!p.creator.send(p.proposalDeposit))...
    PUSH [ErrorTag]		throw
    JUMP			throw
  tag268: 
    JUMPDEST		if (!p.creator.send(p.proposalDeposit))...
    TIMESTAMP			now
    PUSH 2		lastTimeMinQuorumMet
    PUSH 0		lastTimeMinQuorumMet
    POP			lastTimeMinQuorumMet = now
    DUP2			lastTimeMinQuorumMet = now
    SWAP1			lastTimeMinQuorumMet = now
    SSTORE			lastTimeMinQuorumMet = now
    POP			lastTimeMinQuorumMet = now
    PUSH 5		5
    PUSH 16		totalSupply
    PUSH 0		totalSupply
    POP			totalSupply
    SLOAD			totalSupply
    DIV			totalSupply / 5
    DUP2			quorum
    GT			quorum > totalSupply / 5
    ISZERO			if (quorum > totalSupply / 5)...
    PUSH [tag269]		if (quorum > totalSupply / 5)...
    JUMPI			if (quorum > totalSupply / 5)...
    PUSH 5		5
    PUSH 1		minQuorumDivisor
    PUSH 0		minQuorumDivisor
    POP			minQuorumDivisor = 5
    DUP2			minQuorumDivisor = 5
    SWAP1			minQuorumDivisor = 5
    SSTORE			minQuorumDivisor = 5
    POP			minQuorumDivisor = 5
  tag269: 
    JUMPDEST		if (quorum > totalSupply / 5)...
  tag267: 
    JUMPDEST		if (quorum >= minQuorum(p.amount)) {...
    PUSH [tag270]		minQuorum(p.amount)
    DUP5			p
    PUSH 1		p.amount
    ADD			p.amount
    PUSH 0		p.amount
    POP			p.amount
    SLOAD			p.amount
    PUSH [tag264]		minQuorum
    JUMP	[in]		minQuorum(p.amount)
  tag270: 
    JUMPDEST		minQuorum(p.amount)
    DUP2			quorum
    LT			quorum >= minQuorum(p.amount)
    ISZERO			quorum >= minQuorum(p.amount)
    DUP1			quorum >= minQuorum(p.amount) && p.yea > p.nay
    ISZERO			quorum >= minQuorum(p.amount) && p.yea > p.nay
    PUSH [tag271]		quorum >= minQuorum(p.amount) && p.yea > p.nay
    JUMPI			quorum >= minQuorum(p.amount) && p.yea > p.nay
    POP			quorum >= minQuorum(p.amount) && p.yea > p.nay
    DUP4			p
    PUSH A		p.nay
    ADD			p.nay
    PUSH 0		p.nay
    POP			p.nay
    SLOAD			p.nay
    DUP5			p
    PUSH 9		p.yea
    ADD			p.yea
    PUSH 0		p.yea
    POP			p.yea
    SLOAD			p.yea
    GT			p.yea > p.nay
  tag271: 
    JUMPDEST		quorum >= minQuorum(p.amount) && p.yea > p.nay
    DUP1			quorum >= minQuorum(p.amount) && p.yea > p.nay && proposalCheck
    ISZERO			quorum >= minQuorum(p.amount) && p.yea > p.nay && proposalCheck
    PUSH [tag272]		quorum >= minQuorum(p.amount) && p.yea > p.nay && proposalCheck
    JUMPI			quorum >= minQuorum(p.amount) && p.yea > p.nay && proposalCheck
    POP			quorum >= minQuorum(p.amount) && p.yea > p.nay && proposalCheck
    DUP2			proposalCheck
  tag272: 
    JUMPDEST		quorum >= minQuorum(p.amount) && p.yea > p.nay && proposalCheck
    ISZERO			if (quorum >= minQuorum(p.amount) && p.yea > p.nay && proposalCheck) {...
    PUSH [tag273]		if (quorum >= minQuorum(p.amount) && p.yea > p.nay && proposalCheck) {...
    JUMPI			if (quorum >= minQuorum(p.amount) && p.yea > p.nay && proposalCheck) {...
    DUP4			p
    PUSH 0		p.recipient
    ADD			p.recipient
    PUSH 0		p.recipient
    SWAP1			p.recipient
    SLOAD			p.recipient
    SWAP1			p.recipient
    PUSH 100		p.recipient
    EXP			p.recipient
    SWAP1			p.recipient
    DIV			p.recipient
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.recipient
    AND			p.recipient
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.recipient.call
    AND			p.recipient.call
    DUP5			p
    PUSH 1		p.amount
    ADD			p.amount
    PUSH 0		p.amount
    POP			p.amount
    SLOAD			p.amount
    DUP8			_transactionData
    PUSH 40		p.recipient.call.value(p.amount)(_transactionData)
    MLOAD			p.recipient.call.value(p.amount)(_transactionData)
    DUP1			p.recipient.call.value(p.amount)(_transactionData)
    DUP3			p.recipient.call.value(p.amount)(_transactionData)
    DUP1			p.recipient.call.value(p.amount)(_transactionData)
    MLOAD			p.recipient.call.value(p.amount)(_transactionData)
    SWAP1			p.recipient.call.value(p.amount)(_transactionData)
    PUSH 20		p.recipient.call.value(p.amount)(_transactionData)
    ADD			p.recipient.call.value(p.amount)(_transactionData)
    SWAP1			p.recipient.call.value(p.amount)(_transactionData)
    DUP1			p.recipient.call.value(p.amount)(_transactionData)
    DUP4			p.recipient.call.value(p.amount)(_transactionData)
    DUP4			p.recipient.call.value(p.amount)(_transactionData)
    DUP3			p.recipient.call.value(p.amount)(_transactionData)
    SWAP1			p.recipient.call.value(p.amount)(_transactionData)
    PUSH 0		p.recipient.call.value(p.amount)(_transactionData)
    PUSH 4		p.recipient.call.value(p.amount)(_transactionData)
    PUSH 20		p.recipient.call.value(p.amount)(_transactionData)
    DUP5			p.recipient.call.value(p.amount)(_transactionData)
    PUSH 1F		p.recipient.call.value(p.amount)(_transactionData)
    ADD			p.recipient.call.value(p.amount)(_transactionData)
    DIV			p.recipient.call.value(p.amount)(_transactionData)
    PUSH F		p.recipient.call.value(p.amount)(_transactionData)
    MUL			p.recipient.call.value(p.amount)(_transactionData)
    PUSH 3		p.recipient.call.value(p.amount)(_transactionData)
    ADD			p.recipient.call.value(p.amount)(_transactionData)
    CALL			p.recipient.call.value(p.amount)(_transactionData)
    POP			p.recipient.call.value(p.amount)(_transactionData)
    SWAP1			p.recipient.call.value(p.amount)(_transactionData)
    POP			p.recipient.call.value(p.amount)(_transactionData)
    SWAP1			p.recipient.call.value(p.amount)(_transactionData)
    DUP2			p.recipient.call.value(p.amount)(_transactionData)
    ADD			p.recipient.call.value(p.amount)(_transactionData)
    SWAP1			p.recipient.call.value(p.amount)(_transactionData)
    PUSH 1F		p.recipient.call.value(p.amount)(_transactionData)
    AND			p.recipient.call.value(p.amount)(_transactionData)
    DUP1			p.recipient.call.value(p.amount)(_transactionData)
    ISZERO			p.recipient.call.value(p.amount)(_transactionData)
    PUSH [tag274]		p.recipient.call.value(p.amount)(_transactionData)
    JUMPI			p.recipient.call.value(p.amount)(_transactionData)
    DUP1			p.recipient.call.value(p.amount)(_transactionData)
    DUP3			p.recipient.call.value(p.amount)(_transactionData)
    SUB			p.recipient.call.value(p.amount)(_transactionData)
    DUP1			p.recipient.call.value(p.amount)(_transactionData)
    MLOAD			p.recipient.call.value(p.amount)(_transactionData)
    PUSH 1		p.recipient.call.value(p.amount)(_transactionData)
    DUP4			p.recipient.call.value(p.amount)(_transactionData)
    PUSH 20		p.recipient.call.value(p.amount)(_transactionData)
    SUB			p.recipient.call.value(p.amount)(_transactionData)
    PUSH 100		p.recipient.call.value(p.amount)(_transactionData)
    EXP			p.recipient.call.value(p.amount)(_transactionData)
    SUB			p.recipient.call.value(p.amount)(_transactionData)
    NOT			p.recipient.call.value(p.amount)(_transactionData)
    AND			p.recipient.call.value(p.amount)(_transactionData)
    DUP2			p.recipient.call.value(p.amount)(_transactionData)
    MSTORE			p.recipient.call.value(p.amount)(_transactionData)
    PUSH 20		p.recipient.call.value(p.amount)(_transactionData)
    ADD			p.recipient.call.value(p.amount)(_transactionData)
    SWAP2			p.recipient.call.value(p.amount)(_transactionData)
    POP			p.recipient.call.value(p.amount)(_transactionData)
  tag274: 
    JUMPDEST		p.recipient.call.value(p.amount)(_transactionData)
    POP			p.recipient.call.value(p.amount)(_transactionData)
    SWAP2			p.recipient.call.value(p.amount)(_transactionData)
    POP			p.recipient.call.value(p.amount)(_transactionData)
    POP			p.recipient.call.value(p.amount)(_transactionData)
    PUSH 0		p.recipient.call.value(p.amount)(_transactionData)
    PUSH 40		p.recipient.call.value(p.amount)(_transactionData)
    MLOAD			p.recipient.call.value(p.amount)(_transactionData)
    DUP1			p.recipient.call.value(p.amount)(_transactionData)
    DUP4			p.recipient.call.value(p.amount)(_transactionData)
    SUB			p.recipient.call.value(p.amount)(_transactionData)
    DUP2			p.recipient.call.value(p.amount)(_transactionData)
    DUP6			p.recipient.call.value(p.amount)(_transactionData)
    DUP8			p.recipient.call.value(p.amount)(_transactionData)
    PUSH 8502		p.recipient.call.value(p.amount)(_transactionData)
    GAS			p.recipient.call.value(p.amount)(_transactionData)
    SUB			p.recipient.call.value(p.amount)(_transactionData)
    CALL			p.recipient.call.value(p.amount)(_transactionData)
    SWAP3			p.recipient.call.value(p.amount)(_transactionData)
    POP			p.recipient.call.value(p.amount)(_transactionData)
    POP			p.recipient.call.value(p.amount)(_transactionData)
    POP			p.recipient.call.value(p.amount)(_transactionData)
    ISZERO			!p.recipient.call.value(p.amount)(_transactionData)
    ISZERO			if (!p.recipient.call.value(p.amount)(_transactionData))...
    PUSH [tag275]		if (!p.recipient.call.value(p.amount)(_transactionData))...
    JUMPI			if (!p.recipient.call.value(p.amount)(_transactionData))...
    PUSH [ErrorTag]		throw
    JUMP			throw
  tag275: 
    JUMPDEST		if (!p.recipient.call.value(p.amount)(_transactionData))...
    PUSH 1		true
    DUP5			p
    PUSH 4		p.proposalPassed
    ADD			p.proposalPassed
    PUSH 1		p.proposalPassed
    PUSH 100		p.proposalPassed = true
    EXP			p.proposalPassed = true
    DUP2			p.proposalPassed = true
    SLOAD			p.proposalPassed = true
    DUP2			p.proposalPassed = true
    PUSH FF		p.proposalPassed = true
    MUL			p.proposalPassed = true
    NOT			p.proposalPassed = true
    AND			p.proposalPassed = true
    SWAP1			p.proposalPassed = true
    DUP4			p.proposalPassed = true
    MUL			p.proposalPassed = true
    OR			p.proposalPassed = true
    SWAP1			p.proposalPassed = true
    SSTORE			p.proposalPassed = true
    POP			p.proposalPassed = true
    PUSH 1		true
    SWAP5			_success = true
    POP			_success = true
    DUP5			_success = true
    POP			_success = true
    ADDRESS			this
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.recipient != address(this)
    AND			p.recipient != address(this)
    DUP5			p
    PUSH 0		p.recipient
    ADD			p.recipient
    PUSH 0		p.recipient
    SWAP1			p.recipient
    SLOAD			p.recipient
    SWAP1			p.recipient
    PUSH 100		p.recipient
    EXP			p.recipient
    SWAP1			p.recipient
    DIV			p.recipient
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.recipient
    AND			p.recipient
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.recipient != address(this)
    AND			p.recipient != address(this)
    EQ			p.recipient != address(this)
    ISZERO			p.recipient != address(this)
    DUP1			p.recipient != address(this) && p.recipient != address(rewardAccount)
    ISZERO			p.recipient != address(this) && p.recipient != address(rewardAccount)
    PUSH [tag276]		p.recipient != address(this) && p.recipient != address(rewardAccount)
    JUMPI			p.recipient != address(this) && p.recipient != address(rewardAccount)
    POP			p.recipient != address(this) && p.recipient != address(rewardAccount)
    PUSH 7		rewardAccount
    PUSH 0		rewardAccount
    SWAP1			rewardAccount
    SLOAD			rewardAccount
    SWAP1			rewardAccount
    PUSH 100		rewardAccount
    EXP			rewardAccount
    SWAP1			rewardAccount
    DIV			rewardAccount
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		rewardAccount
    AND			rewardAccount
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.recipient != address(rewardAccount)
    AND			p.recipient != address(rewardAccount)
    DUP5			p
    PUSH 0		p.recipient
    ADD			p.recipient
    PUSH 0		p.recipient
    SWAP1			p.recipient
    SLOAD			p.recipient
    SWAP1			p.recipient
    PUSH 100		p.recipient
    EXP			p.recipient
    SWAP1			p.recipient
    DIV			p.recipient
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.recipient
    AND			p.recipient
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.recipient != address(rewardAccount)
    AND			p.recipient != address(rewardAccount)
    EQ			p.recipient != address(rewardAccount)
    ISZERO			p.recipient != address(rewardAccount)
  tag276: 
    JUMPDEST		p.recipient != address(this) && p.recipient != address(rewardAccount)
    DUP1			p.recipient != address(this) && p.recipient != address(rewardAccount)...
    ISZERO			p.recipient != address(this) && p.recipient != address(rewardAccount)...
    PUSH [tag277]		p.recipient != address(this) && p.recipient != address(rewardAccount)...
    JUMPI			p.recipient != address(this) && p.recipient != address(rewardAccount)...
    POP			p.recipient != address(this) && p.recipient != address(rewardAccount)...
    PUSH 8		DAOrewardAccount
    PUSH 0		DAOrewardAccount
    SWAP1			DAOrewardAccount
    SLOAD			DAOrewardAccount
    SWAP1			DAOrewardAccount
    PUSH 100		DAOrewardAccount
    EXP			DAOrewardAccount
    SWAP1			DAOrewardAccount
    DIV			DAOrewardAccount
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		DAOrewardAccount
    AND			DAOrewardAccount
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.recipient != address(DAOrewardAccount)
    AND			p.recipient != address(DAOrewardAccount)
    DUP5			p
    PUSH 0		p.recipient
    ADD			p.recipient
    PUSH 0		p.recipient
    SWAP1			p.recipient
    SLOAD			p.recipient
    SWAP1			p.recipient
    PUSH 100		p.recipient
    EXP			p.recipient
    SWAP1			p.recipient
    DIV			p.recipient
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.recipient
    AND			p.recipient
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.recipient != address(DAOrewardAccount)
    AND			p.recipient != address(DAOrewardAccount)
    EQ			p.recipient != address(DAOrewardAccount)
    ISZERO			p.recipient != address(DAOrewardAccount)
  tag277: 
    JUMPDEST		p.recipient != address(this) && p.recipient != address(rewardAccount)...
    DUP1			p.recipient != address(this) && p.recipient != address(rewardAccount)...
    ISZERO			p.recipient != address(this) && p.recipient != address(rewardAccount)...
    PUSH [tag278]		p.recipient != address(this) && p.recipient != address(rewardAccount)...
    JUMPI			p.recipient != address(this) && p.recipient != address(rewardAccount)...
    POP			p.recipient != address(this) && p.recipient != address(rewardAccount)...
    PUSH 12		extraBalance
    PUSH 0		extraBalance
    SWAP1			extraBalance
    SLOAD			extraBalance
    SWAP1			extraBalance
    PUSH 100		extraBalance
    EXP			extraBalance
    SWAP1			extraBalance
    DIV			extraBalance
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		extraBalance
    AND			extraBalance
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.recipient != address(extraBalance)
    AND			p.recipient != address(extraBalance)
    DUP5			p
    PUSH 0		p.recipient
    ADD			p.recipient
    PUSH 0		p.recipient
    SWAP1			p.recipient
    SLOAD			p.recipient
    SWAP1			p.recipient
    PUSH 100		p.recipient
    EXP			p.recipient
    SWAP1			p.recipient
    DIV			p.recipient
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.recipient
    AND			p.recipient
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.recipient != address(extraBalance)
    AND			p.recipient != address(extraBalance)
    EQ			p.recipient != address(extraBalance)
    ISZERO			p.recipient != address(extraBalance)
  tag278: 
    JUMPDEST		p.recipient != address(this) && p.recipient != address(rewardAccount)...
    DUP1			p.recipient != address(this) && p.recipient != address(rewardAccount)...
    ISZERO			p.recipient != address(this) && p.recipient != address(rewardAccount)...
    PUSH [tag279]		p.recipient != address(this) && p.recipient != address(rewardAccount)...
    JUMPI			p.recipient != address(this) && p.recipient != address(rewardAccount)...
    POP			p.recipient != address(this) && p.recipient != address(rewardAccount)...
    PUSH 3		curator
    PUSH 0		curator
    SWAP1			curator
    SLOAD			curator
    SWAP1			curator
    PUSH 100		curator
    EXP			curator
    SWAP1			curator
    DIV			curator
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		curator
    AND			curator
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.recipient != address(curator)
    AND			p.recipient != address(curator)
    DUP5			p
    PUSH 0		p.recipient
    ADD			p.recipient
    PUSH 0		p.recipient
    SWAP1			p.recipient
    SLOAD			p.recipient
    SWAP1			p.recipient
    PUSH 100		p.recipient
    EXP			p.recipient
    SWAP1			p.recipient
    DIV			p.recipient
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.recipient
    AND			p.recipient
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.recipient != address(curator)
    AND			p.recipient != address(curator)
    EQ			p.recipient != address(curator)
    ISZERO			p.recipient != address(curator)
  tag279: 
    JUMPDEST		p.recipient != address(this) && p.recipient != address(rewardAccount)...
    ISZERO			if (p.recipient != address(this) && p.recipient != address(rewardAccount)...
    PUSH [tag280]		if (p.recipient != address(this) && p.recipient != address(rewardAccount)...
    JUMPI			if (p.recipient != address(this) && p.recipient != address(rewardAccount)...
    DUP4			p
    PUSH 1		p.amount
    ADD			p.amount
    PUSH 0		p.amount
    POP			p.amount
    SLOAD			p.amount
    PUSH 5		rewardToken
    PUSH 0		rewardToken
    POP			rewardToken
    PUSH 0		rewardToken[address(this)]
    ADDRESS			this
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		rewardToken[address(this)]
    AND			rewardToken[address(this)]
    DUP2			rewardToken[address(this)]
    MSTORE			rewardToken[address(this)]
    PUSH 20		rewardToken[address(this)]
    ADD			rewardToken[address(this)]
    SWAP1			rewardToken[address(this)]
    DUP2			rewardToken[address(this)]
    MSTORE			rewardToken[address(this)]
    PUSH 20		rewardToken[address(this)]
    ADD			rewardToken[address(this)]
    PUSH 0		rewardToken[address(this)]
    SHA3			rewardToken[address(this)]
    PUSH 0		rewardToken[address(this)]
    DUP3			rewardToken[address(this)] += p.amount
    DUP3			rewardToken[address(this)] += p.amount
    DUP3			rewardToken[address(this)] += p.amount
    POP			rewardToken[address(this)] += p.amount
    SLOAD			rewardToken[address(this)] += p.amount
    ADD			rewardToken[address(this)] += p.amount
    SWAP3			rewardToken[address(this)] += p.amount
    POP			rewardToken[address(this)] += p.amount
    POP			rewardToken[address(this)] += p.amount
    DUP2			rewardToken[address(this)] += p.amount
    SWAP1			rewardToken[address(this)] += p.amount
    SSTORE			rewardToken[address(this)] += p.amount
    POP			rewardToken[address(this)] += p.amount
    DUP4			p
    PUSH 1		p.amount
    ADD			p.amount
    PUSH 0		p.amount
    POP			p.amount
    SLOAD			p.amount
    PUSH 6		totalRewardToken
    PUSH 0		totalRewardToken
    DUP3			totalRewardToken += p.amount
    DUP3			totalRewardToken += p.amount
    DUP3			totalRewardToken += p.amount
    POP			totalRewardToken += p.amount
    SLOAD			totalRewardToken += p.amount
    ADD			totalRewardToken += p.amount
    SWAP3			totalRewardToken += p.amount
    POP			totalRewardToken += p.amount
    POP			totalRewardToken += p.amount
    DUP2			totalRewardToken += p.amount
    SWAP1			totalRewardToken += p.amount
    SSTORE			totalRewardToken += p.amount
    POP			totalRewardToken += p.amount
  tag280: 
    JUMPDEST		if (p.recipient != address(this) && p.recipient != address(rewardAccount)...
  tag273: 
    JUMPDEST		if (quorum >= minQuorum(p.amount) && p.yea > p.nay && proposalCheck) {...
    PUSH [tag281]		closeProposal(_proposalID)
    DUP8			_proposalID
    PUSH [tag248]		closeProposal
    JUMP	[in]		closeProposal(_proposalID)
  tag281: 
    JUMPDEST		closeProposal(_proposalID)
    DUP7			_proposalID
    PUSH DFC78BDCA8E3E0B18C16C5C99323C6CB9EB5E00AFDE190B4E7273F5158702B07		ProposalTallied(_proposalID, _success, quorum)
    DUP7			_success
    DUP4			quorum
    PUSH 40		ProposalTallied(_proposalID, _success, quorum)
    MLOAD			ProposalTallied(_proposalID, _success, quorum)
    DUP1			ProposalTallied(_proposalID, _success, quorum)
    DUP4			ProposalTallied(_proposalID, _success, quorum)
    DUP2			ProposalTallied(_proposalID, _success, quorum)
    MSTORE			ProposalTallied(_proposalID, _success, quorum)
    PUSH 20		ProposalTallied(_proposalID, _success, quorum)
    ADD			ProposalTallied(_proposalID, _success, quorum)
    DUP3			ProposalTallied(_proposalID, _success, quorum)
    DUP2			ProposalTallied(_proposalID, _success, quorum)
    MSTORE			ProposalTallied(_proposalID, _success, quorum)
    PUSH 20		ProposalTallied(_proposalID, _success, quorum)
    ADD			ProposalTallied(_proposalID, _success, quorum)
    SWAP3			ProposalTallied(_proposalID, _success, quorum)
    POP			ProposalTallied(_proposalID, _success, quorum)
    POP			ProposalTallied(_proposalID, _success, quorum)
    POP			ProposalTallied(_proposalID, _success, quorum)
    PUSH 40		ProposalTallied(_proposalID, _success, quorum)
    MLOAD			ProposalTallied(_proposalID, _success, quorum)
    DUP1			ProposalTallied(_proposalID, _success, quorum)
    SWAP2			ProposalTallied(_proposalID, _success, quorum)
    SUB			ProposalTallied(_proposalID, _success, quorum)
    SWAP1			ProposalTallied(_proposalID, _success, quorum)
    LOG2			ProposalTallied(_proposalID, _success, quorum)
  tag240: 
    JUMPDEST		function executeProposal(...
    POP			function executeProposal(...
    POP			function executeProposal(...
    POP			function executeProposal(...
    POP			function executeProposal(...
    SWAP3			function executeProposal(...
    SWAP2			function executeProposal(...
    POP			function executeProposal(...
    POP			function executeProposal(...
    JUMP	[out]		function executeProposal(...
  tag112: 
    JUMPDEST		function splitDAO(...
    PUSH 0		bool _success
    PUSH 0		Proposal p
    PUSH 0		uint fundsToBeMoved
    PUSH 0		uint rewardTokenToBeMoved
    PUSH 0		uint paidOutToBeMoved
    PUSH 0		0
    CALLVALUE			msg.value
    GT			msg.value > 0
    ISZERO			if (msg.value > 0) throw
    PUSH [tag283]		if (msg.value > 0) throw
    JUMPI			if (msg.value > 0) throw
    PUSH [ErrorTag]		throw
    JUMP			throw
  tag283: 
    JUMPDEST		if (msg.value > 0) throw
    PUSH 0		0
    PUSH [tag284]		balanceOf(msg.sender)
    CALLER			msg.sender
    PUSH [tag104]		balanceOf
    JUMP	[in]		balanceOf(msg.sender)
  tag284: 
    JUMPDEST		balanceOf(msg.sender)
    EQ			balanceOf(msg.sender) == 0
    ISZERO			if (balanceOf(msg.sender) == 0) throw
    PUSH [tag285]		if (balanceOf(msg.sender) == 0) throw
    JUMPI			if (balanceOf(msg.sender) == 0) throw
    PUSH [ErrorTag]		throw
    JUMP			throw
  tag285: 
    JUMPDEST		if (balanceOf(msg.sender) == 0) throw
    PUSH 0		proposals
    PUSH 0		proposals
    POP			proposals
    DUP8			_proposalID
    DUP2			proposals[_proposalID]
    SLOAD			proposals[_proposalID]
    DUP2			proposals[_proposalID]
    LT			proposals[_proposalID]
    ISZERO			proposals[_proposalID]
    PUSH [ErrorTag]		proposals[_proposalID]
    JUMPI			proposals[_proposalID]
    SWAP1			proposals[_proposalID]
    PUSH 0		proposals[_proposalID]
    MSTORE			proposals[_proposalID]
    PUSH 20		proposals[_proposalID]
    PUSH 0		proposals[_proposalID]
    SHA3			proposals[_proposalID]
    SWAP1			proposals[_proposalID]
    PUSH E		proposals[_proposalID]
    MUL			proposals[_proposalID]
    ADD			proposals[_proposalID]
    PUSH 0		proposals[_proposalID]
  tag286: 
    JUMPDEST		proposals[_proposalID]
    POP			proposals[_proposalID]
    SWAP4			Proposal p = proposals[_proposalID]
    POP			Proposal p = proposals[_proposalID]
    DUP4			p
    PUSH 3		p.votingDeadline
    ADD			p.votingDeadline
    PUSH 0		p.votingDeadline
    POP			p.votingDeadline
    SLOAD			p.votingDeadline
    TIMESTAMP			now
    LT			now < p.votingDeadline
    DUP1			now < p.votingDeadline  // has the voting deadline arrived?...
    PUSH [tag287]		now < p.votingDeadline  // has the voting deadline arrived?...
    JUMPI			now < p.votingDeadline  // has the voting deadline arrived?...
    POP			now < p.votingDeadline  // has the voting deadline arrived?...
    PUSH 239880		27 days
    DUP5			p
    PUSH 3		p.votingDeadline
    ADD			p.votingDeadline
    PUSH 0		p.votingDeadline
    POP			p.votingDeadline
    SLOAD			p.votingDeadline
    ADD			p.votingDeadline + splitExecutionPeriod
    TIMESTAMP			now
    GT			now > p.votingDeadline + splitExecutionPeriod
  tag287: 
    JUMPDEST		now < p.votingDeadline  // has the voting deadline arrived?...
    DUP1			now < p.votingDeadline  // has the voting deadline arrived?...
    PUSH [tag288]		now < p.votingDeadline  // has the voting deadline arrived?...
    JUMPI			now < p.votingDeadline  // has the voting deadline arrived?...
    POP			now < p.votingDeadline  // has the voting deadline arrived?...
    DUP6			_newCurator
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.recipient != _newCurator
    AND			p.recipient != _newCurator
    DUP5			p
    PUSH 0		p.recipient
    ADD			p.recipient
    PUSH 0		p.recipient
    SWAP1			p.recipient
    SLOAD			p.recipient
    SWAP1			p.recipient
    PUSH 100		p.recipient
    EXP			p.recipient
    SWAP1			p.recipient
    DIV			p.recipient
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.recipient
    AND			p.recipient
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.recipient != _newCurator
    AND			p.recipient != _newCurator
    EQ			p.recipient != _newCurator
    ISZERO			p.recipient != _newCurator
  tag288: 
    JUMPDEST		now < p.votingDeadline  // has the voting deadline arrived?...
    DUP1			now < p.votingDeadline  // has the voting deadline arrived?...
    PUSH [tag289]		now < p.votingDeadline  // has the voting deadline arrived?...
    JUMPI			now < p.votingDeadline  // has the voting deadline arrived?...
    POP			now < p.votingDeadline  // has the voting deadline arrived?...
    DUP4			p
    PUSH 7		p.newCurator
    ADD			p.newCurator
    PUSH 0		p.newCurator
    SWAP1			p.newCurator
    SLOAD			p.newCurator
    SWAP1			p.newCurator
    PUSH 100		p.newCurator
    EXP			p.newCurator
    SWAP1			p.newCurator
    DIV			p.newCurator
    PUSH FF		p.newCurator
    AND			p.newCurator
    ISZERO			!p.newCurator
  tag289: 
    JUMPDEST		now < p.votingDeadline  // has the voting deadline arrived?...
    DUP1			now < p.votingDeadline  // has the voting deadline arrived?...
    PUSH [tag290]		now < p.votingDeadline  // has the voting deadline arrived?...
    JUMPI			now < p.votingDeadline  // has the voting deadline arrived?...
    POP			now < p.votingDeadline  // has the voting deadline arrived?...
    DUP4			p
    PUSH B		p.votedYes
    ADD			p.votedYes
    PUSH 0		p.votedYes
    POP			p.votedYes
    PUSH 0		p.votedYes[msg.sender]
    CALLER			msg.sender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.votedYes[msg.sender]
    AND			p.votedYes[msg.sender]
    DUP2			p.votedYes[msg.sender]
    MSTORE			p.votedYes[msg.sender]
    PUSH 20		p.votedYes[msg.sender]
    ADD			p.votedYes[msg.sender]
    SWAP1			p.votedYes[msg.sender]
    DUP2			p.votedYes[msg.sender]
    MSTORE			p.votedYes[msg.sender]
    PUSH 20		p.votedYes[msg.sender]
    ADD			p.votedYes[msg.sender]
    PUSH 0		p.votedYes[msg.sender]
    SHA3			p.votedYes[msg.sender]
    PUSH 0		p.votedYes[msg.sender]
    SWAP1			p.votedYes[msg.sender]
    SLOAD			p.votedYes[msg.sender]
    SWAP1			p.votedYes[msg.sender]
    PUSH 100		p.votedYes[msg.sender]
    EXP			p.votedYes[msg.sender]
    SWAP1			p.votedYes[msg.sender]
    DIV			p.votedYes[msg.sender]
    PUSH FF		p.votedYes[msg.sender]
    AND			p.votedYes[msg.sender]
    ISZERO			!p.votedYes[msg.sender]
  tag290: 
    JUMPDEST		now < p.votingDeadline  // has the voting deadline arrived?...
    DUP1			now < p.votingDeadline  // has the voting deadline arrived?...
    PUSH [tag291]		now < p.votingDeadline  // has the voting deadline arrived?...
    JUMPI			now < p.votingDeadline  // has the voting deadline arrived?...
    POP			now < p.votingDeadline  // has the voting deadline arrived?...
    DUP7			_proposalID
    PUSH B		blocked
    PUSH 0		blocked
    POP			blocked
    PUSH 0		blocked[msg.sender]
    CALLER			msg.sender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		blocked[msg.sender]
    AND			blocked[msg.sender]
    DUP2			blocked[msg.sender]
    MSTORE			blocked[msg.sender]
    PUSH 20		blocked[msg.sender]
    ADD			blocked[msg.sender]
    SWAP1			blocked[msg.sender]
    DUP2			blocked[msg.sender]
    MSTORE			blocked[msg.sender]
    PUSH 20		blocked[msg.sender]
    ADD			blocked[msg.sender]
    PUSH 0		blocked[msg.sender]
    SHA3			blocked[msg.sender]
    PUSH 0		blocked[msg.sender]
    POP			blocked[msg.sender]
    SLOAD			blocked[msg.sender]
    EQ			blocked[msg.sender] != _proposalID
    ISZERO			blocked[msg.sender] != _proposalID
    DUP1			blocked[msg.sender] != _proposalID && blocked[msg.sender] != 0
    ISZERO			blocked[msg.sender] != _proposalID && blocked[msg.sender] != 0
    PUSH [tag292]		blocked[msg.sender] != _proposalID && blocked[msg.sender] != 0
    JUMPI			blocked[msg.sender] != _proposalID && blocked[msg.sender] != 0
    POP			blocked[msg.sender] != _proposalID && blocked[msg.sender] != 0
    PUSH 0		0
    PUSH B		blocked
    PUSH 0		blocked
    POP			blocked
    PUSH 0		blocked[msg.sender]
    CALLER			msg.sender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		blocked[msg.sender]
    AND			blocked[msg.sender]
    DUP2			blocked[msg.sender]
    MSTORE			blocked[msg.sender]
    PUSH 20		blocked[msg.sender]
    ADD			blocked[msg.sender]
    SWAP1			blocked[msg.sender]
    DUP2			blocked[msg.sender]
    MSTORE			blocked[msg.sender]
    PUSH 20		blocked[msg.sender]
    ADD			blocked[msg.sender]
    PUSH 0		blocked[msg.sender]
    SHA3			blocked[msg.sender]
    PUSH 0		blocked[msg.sender]
    POP			blocked[msg.sender]
    SLOAD			blocked[msg.sender]
    EQ			blocked[msg.sender] != 0
    ISZERO			blocked[msg.sender] != 0
  tag292: 
    JUMPDEST		blocked[msg.sender] != _proposalID && blocked[msg.sender] != 0
  tag291: 
    JUMPDEST		now < p.votingDeadline  // has the voting deadline arrived?...
    ISZERO			if (now < p.votingDeadline  // has the voting deadline arrived?...
    PUSH [tag293]		if (now < p.votingDeadline  // has the voting deadline arrived?...
    JUMPI			if (now < p.votingDeadline  // has the voting deadline arrived?...
    PUSH [ErrorTag]		throw
    JUMP			throw
  tag293: 
    JUMPDEST		if (now < p.votingDeadline  // has the voting deadline arrived?...
    PUSH 0		0
    DUP5			p
    PUSH 8		p.splitData
    ADD			p.splitData
    PUSH 0		p.splitData
    POP			p.splitData
    PUSH 0		0
    DUP2			p.splitData[0]
    SLOAD			p.splitData[0]
    DUP2			p.splitData[0]
    LT			p.splitData[0]
    ISZERO			p.splitData[0]
    PUSH [ErrorTag]		p.splitData[0]
    JUMPI			p.splitData[0]
    SWAP1			p.splitData[0]
    PUSH 0		p.splitData[0]
    MSTORE			p.splitData[0]
    PUSH 20		p.splitData[0]
    PUSH 0		p.splitData[0]
    SHA3			p.splitData[0]
    SWAP1			p.splitData[0]
    PUSH 4		p.splitData[0]
    MUL			p.splitData[0]
    ADD			p.splitData[0]
    PUSH 0		p.splitData[0]
  tag294: 
    JUMPDEST		p.splitData[0]
    POP			p.splitData[0]
    PUSH 3		p.splitData[0].newDAO
    ADD			p.splitData[0].newDAO
    PUSH 0		p.splitData[0].newDAO
    SWAP1			p.splitData[0].newDAO
    SLOAD			p.splitData[0].newDAO
    SWAP1			p.splitData[0].newDAO
    PUSH 100		p.splitData[0].newDAO
    EXP			p.splitData[0].newDAO
    SWAP1			p.splitData[0].newDAO
    DIV			p.splitData[0].newDAO
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.splitData[0].newDAO
    AND			p.splitData[0].newDAO
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		address(p.splitData[0].newDAO) == 0
    AND			address(p.splitData[0].newDAO) == 0
    EQ			address(p.splitData[0].newDAO) == 0
    ISZERO			if (address(p.splitData[0].newDAO) == 0) {...
    PUSH [tag295]		if (address(p.splitData[0].newDAO) == 0) {...
    JUMPI			if (address(p.splitData[0].newDAO) == 0) {...
    PUSH [tag296]		createNewDAO(_newCurator)
    DUP7			_newCurator
    PUSH [tag297]		createNewDAO
    JUMP	[in]		createNewDAO(_newCurator)
  tag296: 
    JUMPDEST		createNewDAO(_newCurator)
    DUP5			p
    PUSH 8		p.splitData
    ADD			p.splitData
    PUSH 0		p.splitData
    POP			p.splitData
    PUSH 0		0
    DUP2			p.splitData[0]
    SLOAD			p.splitData[0]
    DUP2			p.splitData[0]
    LT			p.splitData[0]
    ISZERO			p.splitData[0]
    PUSH [ErrorTag]		p.splitData[0]
    JUMPI			p.splitData[0]
    SWAP1			p.splitData[0]
    PUSH 0		p.splitData[0]
    MSTORE			p.splitData[0]
    PUSH 20		p.splitData[0]
    PUSH 0		p.splitData[0]
    SHA3			p.splitData[0]
    SWAP1			p.splitData[0]
    PUSH 4		p.splitData[0]
    MUL			p.splitData[0]
    ADD			p.splitData[0]
    PUSH 0		p.splitData[0]
  tag298: 
    JUMPDEST		p.splitData[0]
    POP			p.splitData[0]
    PUSH 3		p.splitData[0].newDAO
    ADD			p.splitData[0].newDAO
    PUSH 0		p.splitData[0].newDAO
    PUSH 100		p.splitData[0].newDAO = createNewDAO(_newCurator)
    EXP			p.splitData[0].newDAO = createNewDAO(_newCurator)
    DUP2			p.splitData[0].newDAO = createNewDAO(_newCurator)
    SLOAD			p.splitData[0].newDAO = createNewDAO(_newCurator)
    DUP2			p.splitData[0].newDAO = createNewDAO(_newCurator)
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.splitData[0].newDAO = createNewDAO(_newCurator)
    MUL			p.splitData[0].newDAO = createNewDAO(_newCurator)
    NOT			p.splitData[0].newDAO = createNewDAO(_newCurator)
    AND			p.splitData[0].newDAO = createNewDAO(_newCurator)
    SWAP1			p.splitData[0].newDAO = createNewDAO(_newCurator)
    DUP4			p.splitData[0].newDAO = createNewDAO(_newCurator)
    MUL			p.splitData[0].newDAO = createNewDAO(_newCurator)
    OR			p.splitData[0].newDAO = createNewDAO(_newCurator)
    SWAP1			p.splitData[0].newDAO = createNewDAO(_newCurator)
    SSTORE			p.splitData[0].newDAO = createNewDAO(_newCurator)
    POP			p.splitData[0].newDAO = createNewDAO(_newCurator)
    PUSH 0		0
    DUP5			p
    PUSH 8		p.splitData
    ADD			p.splitData
    PUSH 0		p.splitData
    POP			p.splitData
    PUSH 0		0
    DUP2			p.splitData[0]
    SLOAD			p.splitData[0]
    DUP2			p.splitData[0]
    LT			p.splitData[0]
    ISZERO			p.splitData[0]
    PUSH [ErrorTag]		p.splitData[0]
    JUMPI			p.splitData[0]
    SWAP1			p.splitData[0]
    PUSH 0		p.splitData[0]
    MSTORE			p.splitData[0]
    PUSH 20		p.splitData[0]
    PUSH 0		p.splitData[0]
    SHA3			p.splitData[0]
    SWAP1			p.splitData[0]
    PUSH 4		p.splitData[0]
    MUL			p.splitData[0]
    ADD			p.splitData[0]
    PUSH 0		p.splitData[0]
  tag299: 
    JUMPDEST		p.splitData[0]
    POP			p.splitData[0]
    PUSH 3		p.splitData[0].newDAO
    ADD			p.splitData[0].newDAO
    PUSH 0		p.splitData[0].newDAO
    SWAP1			p.splitData[0].newDAO
    SLOAD			p.splitData[0].newDAO
    SWAP1			p.splitData[0].newDAO
    PUSH 100		p.splitData[0].newDAO
    EXP			p.splitData[0].newDAO
    SWAP1			p.splitData[0].newDAO
    DIV			p.splitData[0].newDAO
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.splitData[0].newDAO
    AND			p.splitData[0].newDAO
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		address(p.splitData[0].newDAO) == 0
    AND			address(p.splitData[0].newDAO) == 0
    EQ			address(p.splitData[0].newDAO) == 0
    ISZERO			if (address(p.splitData[0].newDAO) == 0)...
    PUSH [tag300]		if (address(p.splitData[0].newDAO) == 0)...
    JUMPI			if (address(p.splitData[0].newDAO) == 0)...
    PUSH [ErrorTag]		throw
    JUMP			throw
  tag300: 
    JUMPDEST		if (address(p.splitData[0].newDAO) == 0)...
    PUSH D		sumOfProposalDeposits
    PUSH 0		sumOfProposalDeposits
    POP			sumOfProposalDeposits
    SLOAD			sumOfProposalDeposits
    ADDRESS			this
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		this.balance
    AND			this.balance
    BALANCE			this.balance
    LT			this.balance < sumOfProposalDeposits
    ISZERO			if (this.balance < sumOfProposalDeposits)...
    PUSH [tag301]		if (this.balance < sumOfProposalDeposits)...
    JUMPI			if (this.balance < sumOfProposalDeposits)...
    PUSH [ErrorTag]		throw
    JUMP			throw
  tag301: 
    JUMPDEST		if (this.balance < sumOfProposalDeposits)...
    PUSH [tag302]		actualBalance()
    PUSH [tag86]		actualBalance
    JUMP	[in]		actualBalance()
  tag302: 
    JUMPDEST		actualBalance()
    DUP5			p
    PUSH 8		p.splitData
    ADD			p.splitData
    PUSH 0		p.splitData
    POP			p.splitData
    PUSH 0		0
    DUP2			p.splitData[0]
    SLOAD			p.splitData[0]
    DUP2			p.splitData[0]
    LT			p.splitData[0]
    ISZERO			p.splitData[0]
    PUSH [ErrorTag]		p.splitData[0]
    JUMPI			p.splitData[0]
    SWAP1			p.splitData[0]
    PUSH 0		p.splitData[0]
    MSTORE			p.splitData[0]
    PUSH 20		p.splitData[0]
    PUSH 0		p.splitData[0]
    SHA3			p.splitData[0]
    SWAP1			p.splitData[0]
    PUSH 4		p.splitData[0]
    MUL			p.splitData[0]
    ADD			p.splitData[0]
    PUSH 0		p.splitData[0]
  tag303: 
    JUMPDEST		p.splitData[0]
    POP			p.splitData[0]
    PUSH 0		p.splitData[0].splitBalance
    ADD			p.splitData[0].splitBalance
    PUSH 0		p.splitData[0].splitBalance
    POP			p.splitData[0].splitBalance = actualBalance()
    DUP2			p.splitData[0].splitBalance = actualBalance()
    SWAP1			p.splitData[0].splitBalance = actualBalance()
    SSTORE			p.splitData[0].splitBalance = actualBalance()
    POP			p.splitData[0].splitBalance = actualBalance()
    PUSH 5		rewardToken
    PUSH 0		rewardToken
    POP			rewardToken
    PUSH 0		rewardToken[address(this)]
    ADDRESS			this
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		rewardToken[address(this)]
    AND			rewardToken[address(this)]
    DUP2			rewardToken[address(this)]
    MSTORE			rewardToken[address(this)]
    PUSH 20		rewardToken[address(this)]
    ADD			rewardToken[address(this)]
    SWAP1			rewardToken[address(this)]
    DUP2			rewardToken[address(this)]
    MSTORE			rewardToken[address(this)]
    PUSH 20		rewardToken[address(this)]
    ADD			rewardToken[address(this)]
    PUSH 0		rewardToken[address(this)]
    SHA3			rewardToken[address(this)]
    PUSH 0		rewardToken[address(this)]
    POP			rewardToken[address(this)]
    SLOAD			rewardToken[address(this)]
    DUP5			p
    PUSH 8		p.splitData
    ADD			p.splitData
    PUSH 0		p.splitData
    POP			p.splitData
    PUSH 0		0
    DUP2			p.splitData[0]
    SLOAD			p.splitData[0]
    DUP2			p.splitData[0]
    LT			p.splitData[0]
    ISZERO			p.splitData[0]
    PUSH [ErrorTag]		p.splitData[0]
    JUMPI			p.splitData[0]
    SWAP1			p.splitData[0]
    PUSH 0		p.splitData[0]
    MSTORE			p.splitData[0]
    PUSH 20		p.splitData[0]
    PUSH 0		p.splitData[0]
    SHA3			p.splitData[0]
    SWAP1			p.splitData[0]
    PUSH 4		p.splitData[0]
    MUL			p.splitData[0]
    ADD			p.splitData[0]
    PUSH 0		p.splitData[0]
  tag304: 
    JUMPDEST		p.splitData[0]
    POP			p.splitData[0]
    PUSH 2		p.splitData[0].rewardToken
    ADD			p.splitData[0].rewardToken
    PUSH 0		p.splitData[0].rewardToken
    POP			p.splitData[0].rewardToken = rewardToken[address(this)]
    DUP2			p.splitData[0].rewardToken = rewardToken[address(this)]
    SWAP1			p.splitData[0].rewardToken = rewardToken[address(this)]
    SSTORE			p.splitData[0].rewardToken = rewardToken[address(this)]
    POP			p.splitData[0].rewardToken = rewardToken[address(this)]
    PUSH 16		totalSupply
    PUSH 0		totalSupply
    POP			totalSupply
    SLOAD			totalSupply
    DUP5			p
    PUSH 8		p.splitData
    ADD			p.splitData
    PUSH 0		p.splitData
    POP			p.splitData
    PUSH 0		0
    DUP2			p.splitData[0]
    SLOAD			p.splitData[0]
    DUP2			p.splitData[0]
    LT			p.splitData[0]
    ISZERO			p.splitData[0]
    PUSH [ErrorTag]		p.splitData[0]
    JUMPI			p.splitData[0]
    SWAP1			p.splitData[0]
    PUSH 0		p.splitData[0]
    MSTORE			p.splitData[0]
    PUSH 20		p.splitData[0]
    PUSH 0		p.splitData[0]
    SHA3			p.splitData[0]
    SWAP1			p.splitData[0]
    PUSH 4		p.splitData[0]
    MUL			p.splitData[0]
    ADD			p.splitData[0]
    PUSH 0		p.splitData[0]
  tag305: 
    JUMPDEST		p.splitData[0]
    POP			p.splitData[0]
    PUSH 1		p.splitData[0].totalSupply
    ADD			p.splitData[0].totalSupply
    PUSH 0		p.splitData[0].totalSupply
    POP			p.splitData[0].totalSupply = totalSupply
    DUP2			p.splitData[0].totalSupply = totalSupply
    SWAP1			p.splitData[0].totalSupply = totalSupply
    SSTORE			p.splitData[0].totalSupply = totalSupply
    POP			p.splitData[0].totalSupply = totalSupply
    PUSH 1		true
    DUP5			p
    PUSH 4		p.proposalPassed
    ADD			p.proposalPassed
    PUSH 1		p.proposalPassed
    PUSH 100		p.proposalPassed = true
    EXP			p.proposalPassed = true
    DUP2			p.proposalPassed = true
    SLOAD			p.proposalPassed = true
    DUP2			p.proposalPassed = true
    PUSH FF		p.proposalPassed = true
    MUL			p.proposalPassed = true
    NOT			p.proposalPassed = true
    AND			p.proposalPassed = true
    SWAP1			p.proposalPassed = true
    DUP4			p.proposalPassed = true
    MUL			p.proposalPassed = true
    OR			p.proposalPassed = true
    SWAP1			p.proposalPassed = true
    SSTORE			p.proposalPassed = true
    POP			p.proposalPassed = true
  tag295: 
    JUMPDEST		if (address(p.splitData[0].newDAO) == 0) {...
    DUP4			p
    PUSH 8		p.splitData
    ADD			p.splitData
    PUSH 0		p.splitData
    POP			p.splitData
    PUSH 0		0
    DUP2			p.splitData[0]
    SLOAD			p.splitData[0]
    DUP2			p.splitData[0]
    LT			p.splitData[0]
    ISZERO			p.splitData[0]
    PUSH [ErrorTag]		p.splitData[0]
    JUMPI			p.splitData[0]
    SWAP1			p.splitData[0]
    PUSH 0		p.splitData[0]
    MSTORE			p.splitData[0]
    PUSH 20		p.splitData[0]
    PUSH 0		p.splitData[0]
    SHA3			p.splitData[0]
    SWAP1			p.splitData[0]
    PUSH 4		p.splitData[0]
    MUL			p.splitData[0]
    ADD			p.splitData[0]
    PUSH 0		p.splitData[0]
  tag306: 
    JUMPDEST		p.splitData[0]
    POP			p.splitData[0]
    PUSH 1		p.splitData[0].totalSupply
    ADD			p.splitData[0].totalSupply
    PUSH 0		p.splitData[0].totalSupply
    POP			p.splitData[0].totalSupply
    SLOAD			p.splitData[0].totalSupply
    DUP5			p
    PUSH 8		p.splitData
    ADD			p.splitData
    PUSH 0		p.splitData
    POP			p.splitData
    PUSH 0		0
    DUP2			p.splitData[0]
    SLOAD			p.splitData[0]
    DUP2			p.splitData[0]
    LT			p.splitData[0]
    ISZERO			p.splitData[0]
    PUSH [ErrorTag]		p.splitData[0]
    JUMPI			p.splitData[0]
    SWAP1			p.splitData[0]
    PUSH 0		p.splitData[0]
    MSTORE			p.splitData[0]
    PUSH 20		p.splitData[0]
    PUSH 0		p.splitData[0]
    SHA3			p.splitData[0]
    SWAP1			p.splitData[0]
    PUSH 4		p.splitData[0]
    MUL			p.splitData[0]
    ADD			p.splitData[0]
    PUSH 0		p.splitData[0]
  tag307: 
    JUMPDEST		p.splitData[0]
    POP			p.splitData[0]
    PUSH 0		p.splitData[0].splitBalance
    ADD			p.splitData[0].splitBalance
    PUSH 0		p.splitData[0].splitBalance
    POP			p.splitData[0].splitBalance
    SLOAD			p.splitData[0].splitBalance
    PUSH 14		balances
    PUSH 0		balances
    POP			balances
    PUSH 0		balances[msg.sender]
    CALLER			msg.sender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		balances[msg.sender]
    AND			balances[msg.sender]
    DUP2			balances[msg.sender]
    MSTORE			balances[msg.sender]
    PUSH 20		balances[msg.sender]
    ADD			balances[msg.sender]
    SWAP1			balances[msg.sender]
    DUP2			balances[msg.sender]
    MSTORE			balances[msg.sender]
    PUSH 20		balances[msg.sender]
    ADD			balances[msg.sender]
    PUSH 0		balances[msg.sender]
    SHA3			balances[msg.sender]
    PUSH 0		balances[msg.sender]
    POP			balances[msg.sender]
    SLOAD			balances[msg.sender]
    MUL			balances[msg.sender] * p.splitData[0].splitBalance
    DIV			(balances[msg.sender] * p.splitData[0].splitBalance) /...
    SWAP3			uint fundsToBeMoved =...
    POP			uint fundsToBeMoved =...
    PUSH 0		false
    DUP5			p
    PUSH 8		p.splitData
    ADD			p.splitData
    PUSH 0		p.splitData
    POP			p.splitData
    PUSH 0		0
    DUP2			p.splitData[0]
    SLOAD			p.splitData[0]
    DUP2			p.splitData[0]
    LT			p.splitData[0]
    ISZERO			p.splitData[0]
    PUSH [ErrorTag]		p.splitData[0]
    JUMPI			p.splitData[0]
    SWAP1			p.splitData[0]
    PUSH 0		p.splitData[0]
    MSTORE			p.splitData[0]
    PUSH 20		p.splitData[0]
    PUSH 0		p.splitData[0]
    SHA3			p.splitData[0]
    SWAP1			p.splitData[0]
    PUSH 4		p.splitData[0]
    MUL			p.splitData[0]
    ADD			p.splitData[0]
    PUSH 0		p.splitData[0]
  tag308: 
    JUMPDEST		p.splitData[0]
    POP			p.splitData[0]
    PUSH 3		p.splitData[0].newDAO
    ADD			p.splitData[0].newDAO
    PUSH 0		p.splitData[0].newDAO
    SWAP1			p.splitData[0].newDAO
    SLOAD			p.splitData[0].newDAO
    SWAP1			p.splitData[0].newDAO
    PUSH 100		p.splitData[0].newDAO
    EXP			p.splitData[0].newDAO
    SWAP1			p.splitData[0].newDAO
    DIV			p.splitData[0].newDAO
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.splitData[0].newDAO
    AND			p.splitData[0].newDAO
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.splitData[0].newDAO.createTokenProxy
    AND			p.splitData[0].newDAO.createTokenProxy
    PUSH BAAC5300		p.splitData[0].newDAO.createTokenProxy
    DUP6			fundsToBeMoved
    CALLER			msg.sender
    PUSH 40		p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
    MLOAD			p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
    DUP4			p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
    PUSH 100000000000000000000000000000000000000000000000000000000		p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
    MUL			p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
    DUP2			p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
    MSTORE			p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
    PUSH 4		p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
    ADD			p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
    DUP1			p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
    DUP3			p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
    AND			p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
    DUP2			p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
    MSTORE			p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
    PUSH 20		p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
    ADD			p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
    SWAP2			p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
    POP			p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
    POP			p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
    PUSH 20		p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
    PUSH 40		p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
    MLOAD			p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
    DUP1			p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
    DUP4			p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
    SUB			p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
    DUP2			p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
    DUP6			p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
    DUP9			p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
    PUSH 8502		p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
    GAS			p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
    SUB			p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
    CALL			p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
    ISZERO			p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
    PUSH [ErrorTag]		p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
    JUMPI			p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
    POP			p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
    POP			p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
    POP			p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
    POP			p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
    PUSH 40		p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
    MLOAD			p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
    DUP1			p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
    MLOAD			p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
    SWAP1			p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
    PUSH 20		p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
    ADD			p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
    POP			p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
    EQ			p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender) == false
    ISZERO			if (p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender) == false)...
    PUSH [tag309]		if (p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender) == false)...
    JUMPI			if (p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender) == false)...
    PUSH [ErrorTag]		throw
    JUMP			throw
  tag309: 
    JUMPDEST		if (p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender) == false)...
    DUP4			p
    PUSH 8		p.splitData
    ADD			p.splitData
    PUSH 0		p.splitData
    POP			p.splitData
    PUSH 0		0
    DUP2			p.splitData[0]
    SLOAD			p.splitData[0]
    DUP2			p.splitData[0]
    LT			p.splitData[0]
    ISZERO			p.splitData[0]
    PUSH [ErrorTag]		p.splitData[0]
    JUMPI			p.splitData[0]
    SWAP1			p.splitData[0]
    PUSH 0		p.splitData[0]
    MSTORE			p.splitData[0]
    PUSH 20		p.splitData[0]
    PUSH 0		p.splitData[0]
    SHA3			p.splitData[0]
    SWAP1			p.splitData[0]
    PUSH 4		p.splitData[0]
    MUL			p.splitData[0]
    ADD			p.splitData[0]
    PUSH 0		p.splitData[0]
  tag310: 
    JUMPDEST		p.splitData[0]
    POP			p.splitData[0]
    PUSH 1		p.splitData[0].totalSupply
    ADD			p.splitData[0].totalSupply
    PUSH 0		p.splitData[0].totalSupply
    POP			p.splitData[0].totalSupply
    SLOAD			p.splitData[0].totalSupply
    DUP5			p
    PUSH 8		p.splitData
    ADD			p.splitData
    PUSH 0		p.splitData
    POP			p.splitData
    PUSH 0		0
    DUP2			p.splitData[0]
    SLOAD			p.splitData[0]
    DUP2			p.splitData[0]
    LT			p.splitData[0]
    ISZERO			p.splitData[0]
    PUSH [ErrorTag]		p.splitData[0]
    JUMPI			p.splitData[0]
    SWAP1			p.splitData[0]
    PUSH 0		p.splitData[0]
    MSTORE			p.splitData[0]
    PUSH 20		p.splitData[0]
    PUSH 0		p.splitData[0]
    SHA3			p.splitData[0]
    SWAP1			p.splitData[0]
    PUSH 4		p.splitData[0]
    MUL			p.splitData[0]
    ADD			p.splitData[0]
    PUSH 0		p.splitData[0]
  tag311: 
    JUMPDEST		p.splitData[0]
    POP			p.splitData[0]
    PUSH 2		p.splitData[0].rewardToken
    ADD			p.splitData[0].rewardToken
    PUSH 0		p.splitData[0].rewardToken
    POP			p.splitData[0].rewardToken
    SLOAD			p.splitData[0].rewardToken
    PUSH 14		balances
    PUSH 0		balances
    POP			balances
    PUSH 0		balances[msg.sender]
    CALLER			msg.sender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		balances[msg.sender]
    AND			balances[msg.sender]
    DUP2			balances[msg.sender]
    MSTORE			balances[msg.sender]
    PUSH 20		balances[msg.sender]
    ADD			balances[msg.sender]
    SWAP1			balances[msg.sender]
    DUP2			balances[msg.sender]
    MSTORE			balances[msg.sender]
    PUSH 20		balances[msg.sender]
    ADD			balances[msg.sender]
    PUSH 0		balances[msg.sender]
    SHA3			balances[msg.sender]
    PUSH 0		balances[msg.sender]
    POP			balances[msg.sender]
    SLOAD			balances[msg.sender]
    MUL			balances[msg.sender] * p.splitData[0].rewardToken
    DIV			(balances[msg.sender] * p.splitData[0].rewardToken) /...
    SWAP2			uint rewardTokenToBeMoved =...
    POP			uint rewardTokenToBeMoved =...
    PUSH 5		rewardToken
    PUSH 0		rewardToken
    POP			rewardToken
    PUSH 0		rewardToken[address(this)]
    ADDRESS			this
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		rewardToken[address(this)]
    AND			rewardToken[address(this)]
    DUP2			rewardToken[address(this)]
    MSTORE			rewardToken[address(this)]
    PUSH 20		rewardToken[address(this)]
    ADD			rewardToken[address(this)]
    SWAP1			rewardToken[address(this)]
    DUP2			rewardToken[address(this)]
    MSTORE			rewardToken[address(this)]
    PUSH 20		rewardToken[address(this)]
    ADD			rewardToken[address(this)]
    PUSH 0		rewardToken[address(this)]
    SHA3			rewardToken[address(this)]
    PUSH 0		rewardToken[address(this)]
    POP			rewardToken[address(this)]
    SLOAD			rewardToken[address(this)]
    DUP3			rewardTokenToBeMoved
    PUSH 9		DAOpaidOut
    PUSH 0		DAOpaidOut
    POP			DAOpaidOut
    PUSH 0		DAOpaidOut[address(this)]
    ADDRESS			this
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		DAOpaidOut[address(this)]
    AND			DAOpaidOut[address(this)]
    DUP2			DAOpaidOut[address(this)]
    MSTORE			DAOpaidOut[address(this)]
    PUSH 20		DAOpaidOut[address(this)]
    ADD			DAOpaidOut[address(this)]
    SWAP1			DAOpaidOut[address(this)]
    DUP2			DAOpaidOut[address(this)]
    MSTORE			DAOpaidOut[address(this)]
    PUSH 20		DAOpaidOut[address(this)]
    ADD			DAOpaidOut[address(this)]
    PUSH 0		DAOpaidOut[address(this)]
    SHA3			DAOpaidOut[address(this)]
    PUSH 0		DAOpaidOut[address(this)]
    POP			DAOpaidOut[address(this)]
    SLOAD			DAOpaidOut[address(this)]
    MUL			DAOpaidOut[address(this)] * rewardTokenToBeMoved
    DIV			DAOpaidOut[address(this)] * rewardTokenToBeMoved /...
    SWAP1			uint paidOutToBeMoved = DAOpaidOut[address(this)] * rewardTokenToBeMoved /...
    POP			uint paidOutToBeMoved = DAOpaidOut[address(this)] * rewardTokenToBeMoved /...
    DUP2			rewardTokenToBeMoved
    PUSH 5		rewardToken
    PUSH 0		rewardToken
    POP			rewardToken
    PUSH 0		rewardToken[address(p.splitData[0].newDAO)]
    DUP7			p
    PUSH 8		p.splitData
    ADD			p.splitData
    PUSH 0		p.splitData
    POP			p.splitData
    PUSH 0		0
    DUP2			p.splitData[0]
    SLOAD			p.splitData[0]
    DUP2			p.splitData[0]
    LT			p.splitData[0]
    ISZERO			p.splitData[0]
    PUSH [ErrorTag]		p.splitData[0]
    JUMPI			p.splitData[0]
    SWAP1			p.splitData[0]
    PUSH 0		p.splitData[0]
    MSTORE			p.splitData[0]
    PUSH 20		p.splitData[0]
    PUSH 0		p.splitData[0]
    SHA3			p.splitData[0]
    SWAP1			p.splitData[0]
    PUSH 4		p.splitData[0]
    MUL			p.splitData[0]
    ADD			p.splitData[0]
    PUSH 0		p.splitData[0]
  tag312: 
    JUMPDEST		p.splitData[0]
    POP			p.splitData[0]
    PUSH 3		p.splitData[0].newDAO
    ADD			p.splitData[0].newDAO
    PUSH 0		p.splitData[0].newDAO
    SWAP1			p.splitData[0].newDAO
    SLOAD			p.splitData[0].newDAO
    SWAP1			p.splitData[0].newDAO
    PUSH 100		p.splitData[0].newDAO
    EXP			p.splitData[0].newDAO
    SWAP1			p.splitData[0].newDAO
    DIV			p.splitData[0].newDAO
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.splitData[0].newDAO
    AND			p.splitData[0].newDAO
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		rewardToken[address(p.splitData[0].newDAO)]
    AND			rewardToken[address(p.splitData[0].newDAO)]
    DUP2			rewardToken[address(p.splitData[0].newDAO)]
    MSTORE			rewardToken[address(p.splitData[0].newDAO)]
    PUSH 20		rewardToken[address(p.splitData[0].newDAO)]
    ADD			rewardToken[address(p.splitData[0].newDAO)]
    SWAP1			rewardToken[address(p.splitData[0].newDAO)]
    DUP2			rewardToken[address(p.splitData[0].newDAO)]
    MSTORE			rewardToken[address(p.splitData[0].newDAO)]
    PUSH 20		rewardToken[address(p.splitData[0].newDAO)]
    ADD			rewardToken[address(p.splitData[0].newDAO)]
    PUSH 0		rewardToken[address(p.splitData[0].newDAO)]
    SHA3			rewardToken[address(p.splitData[0].newDAO)]
    PUSH 0		rewardToken[address(p.splitData[0].newDAO)]
    DUP3			rewardToken[address(p.splitData[0].newDAO)] += rewardTokenToBeMoved
    DUP3			rewardToken[address(p.splitData[0].newDAO)] += rewardTokenToBeMoved
    DUP3			rewardToken[address(p.splitData[0].newDAO)] += rewardTokenToBeMoved
    POP			rewardToken[address(p.splitData[0].newDAO)] += rewardTokenToBeMoved
    SLOAD			rewardToken[address(p.splitData[0].newDAO)] += rewardTokenToBeMoved
    ADD			rewardToken[address(p.splitData[0].newDAO)] += rewardTokenToBeMoved
    SWAP3			rewardToken[address(p.splitData[0].newDAO)] += rewardTokenToBeMoved
    POP			rewardToken[address(p.splitData[0].newDAO)] += rewardTokenToBeMoved
    POP			rewardToken[address(p.splitData[0].newDAO)] += rewardTokenToBeMoved
    DUP2			rewardToken[address(p.splitData[0].newDAO)] += rewardTokenToBeMoved
    SWAP1			rewardToken[address(p.splitData[0].newDAO)] += rewardTokenToBeMoved
    SSTORE			rewardToken[address(p.splitData[0].newDAO)] += rewardTokenToBeMoved
    POP			rewardToken[address(p.splitData[0].newDAO)] += rewardTokenToBeMoved
    DUP2			rewardTokenToBeMoved
    PUSH 5		rewardToken
    PUSH 0		rewardToken
    POP			rewardToken
    PUSH 0		rewardToken[address(this)]
    ADDRESS			this
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		rewardToken[address(this)]
    AND			rewardToken[address(this)]
    DUP2			rewardToken[address(this)]
    MSTORE			rewardToken[address(this)]
    PUSH 20		rewardToken[address(this)]
    ADD			rewardToken[address(this)]
    SWAP1			rewardToken[address(this)]
    DUP2			rewardToken[address(this)]
    MSTORE			rewardToken[address(this)]
    PUSH 20		rewardToken[address(this)]
    ADD			rewardToken[address(this)]
    PUSH 0		rewardToken[address(this)]
    SHA3			rewardToken[address(this)]
    PUSH 0		rewardToken[address(this)]
    POP			rewardToken[address(this)]
    SLOAD			rewardToken[address(this)]
    LT			rewardToken[address(this)] < rewardTokenToBeMoved
    ISZERO			if (rewardToken[address(this)] < rewardTokenToBeMoved)...
    PUSH [tag313]		if (rewardToken[address(this)] < rewardTokenToBeMoved)...
    JUMPI			if (rewardToken[address(this)] < rewardTokenToBeMoved)...
    PUSH [ErrorTag]		throw
    JUMP			throw
  tag313: 
    JUMPDEST		if (rewardToken[address(this)] < rewardTokenToBeMoved)...
    DUP2			rewardTokenToBeMoved
    PUSH 5		rewardToken
    PUSH 0		rewardToken
    POP			rewardToken
    PUSH 0		rewardToken[address(this)]
    ADDRESS			this
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		rewardToken[address(this)]
    AND			rewardToken[address(this)]
    DUP2			rewardToken[address(this)]
    MSTORE			rewardToken[address(this)]
    PUSH 20		rewardToken[address(this)]
    ADD			rewardToken[address(this)]
    SWAP1			rewardToken[address(this)]
    DUP2			rewardToken[address(this)]
    MSTORE			rewardToken[address(this)]
    PUSH 20		rewardToken[address(this)]
    ADD			rewardToken[address(this)]
    PUSH 0		rewardToken[address(this)]
    SHA3			rewardToken[address(this)]
    PUSH 0		rewardToken[address(this)]
    DUP3			rewardToken[address(this)] -= rewardTokenToBeMoved
    DUP3			rewardToken[address(this)] -= rewardTokenToBeMoved
    DUP3			rewardToken[address(this)] -= rewardTokenToBeMoved
    POP			rewardToken[address(this)] -= rewardTokenToBeMoved
    SLOAD			rewardToken[address(this)] -= rewardTokenToBeMoved
    SUB			rewardToken[address(this)] -= rewardTokenToBeMoved
    SWAP3			rewardToken[address(this)] -= rewardTokenToBeMoved
    POP			rewardToken[address(this)] -= rewardTokenToBeMoved
    POP			rewardToken[address(this)] -= rewardTokenToBeMoved
    DUP2			rewardToken[address(this)] -= rewardTokenToBeMoved
    SWAP1			rewardToken[address(this)] -= rewardTokenToBeMoved
    SSTORE			rewardToken[address(this)] -= rewardTokenToBeMoved
    POP			rewardToken[address(this)] -= rewardTokenToBeMoved
    DUP1			paidOutToBeMoved
    PUSH 9		DAOpaidOut
    PUSH 0		DAOpaidOut
    POP			DAOpaidOut
    PUSH 0		DAOpaidOut[address(p.splitData[0].newDAO)]
    DUP7			p
    PUSH 8		p.splitData
    ADD			p.splitData
    PUSH 0		p.splitData
    POP			p.splitData
    PUSH 0		0
    DUP2			p.splitData[0]
    SLOAD			p.splitData[0]
    DUP2			p.splitData[0]
    LT			p.splitData[0]
    ISZERO			p.splitData[0]
    PUSH [ErrorTag]		p.splitData[0]
    JUMPI			p.splitData[0]
    SWAP1			p.splitData[0]
    PUSH 0		p.splitData[0]
    MSTORE			p.splitData[0]
    PUSH 20		p.splitData[0]
    PUSH 0		p.splitData[0]
    SHA3			p.splitData[0]
    SWAP1			p.splitData[0]
    PUSH 4		p.splitData[0]
    MUL			p.splitData[0]
    ADD			p.splitData[0]
    PUSH 0		p.splitData[0]
  tag314: 
    JUMPDEST		p.splitData[0]
    POP			p.splitData[0]
    PUSH 3		p.splitData[0].newDAO
    ADD			p.splitData[0].newDAO
    PUSH 0		p.splitData[0].newDAO
    SWAP1			p.splitData[0].newDAO
    SLOAD			p.splitData[0].newDAO
    SWAP1			p.splitData[0].newDAO
    PUSH 100		p.splitData[0].newDAO
    EXP			p.splitData[0].newDAO
    SWAP1			p.splitData[0].newDAO
    DIV			p.splitData[0].newDAO
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.splitData[0].newDAO
    AND			p.splitData[0].newDAO
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		DAOpaidOut[address(p.splitData[0].newDAO)]
    AND			DAOpaidOut[address(p.splitData[0].newDAO)]
    DUP2			DAOpaidOut[address(p.splitData[0].newDAO)]
    MSTORE			DAOpaidOut[address(p.splitData[0].newDAO)]
    PUSH 20		DAOpaidOut[address(p.splitData[0].newDAO)]
    ADD			DAOpaidOut[address(p.splitData[0].newDAO)]
    SWAP1			DAOpaidOut[address(p.splitData[0].newDAO)]
    DUP2			DAOpaidOut[address(p.splitData[0].newDAO)]
    MSTORE			DAOpaidOut[address(p.splitData[0].newDAO)]
    PUSH 20		DAOpaidOut[address(p.splitData[0].newDAO)]
    ADD			DAOpaidOut[address(p.splitData[0].newDAO)]
    PUSH 0		DAOpaidOut[address(p.splitData[0].newDAO)]
    SHA3			DAOpaidOut[address(p.splitData[0].newDAO)]
    PUSH 0		DAOpaidOut[address(p.splitData[0].newDAO)]
    DUP3			DAOpaidOut[address(p.splitData[0].newDAO)] += paidOutToBeMoved
    DUP3			DAOpaidOut[address(p.splitData[0].newDAO)] += paidOutToBeMoved
    DUP3			DAOpaidOut[address(p.splitData[0].newDAO)] += paidOutToBeMoved
    POP			DAOpaidOut[address(p.splitData[0].newDAO)] += paidOutToBeMoved
    SLOAD			DAOpaidOut[address(p.splitData[0].newDAO)] += paidOutToBeMoved
    ADD			DAOpaidOut[address(p.splitData[0].newDAO)] += paidOutToBeMoved
    SWAP3			DAOpaidOut[address(p.splitData[0].newDAO)] += paidOutToBeMoved
    POP			DAOpaidOut[address(p.splitData[0].newDAO)] += paidOutToBeMoved
    POP			DAOpaidOut[address(p.splitData[0].newDAO)] += paidOutToBeMoved
    DUP2			DAOpaidOut[address(p.splitData[0].newDAO)] += paidOutToBeMoved
    SWAP1			DAOpaidOut[address(p.splitData[0].newDAO)] += paidOutToBeMoved
    SSTORE			DAOpaidOut[address(p.splitData[0].newDAO)] += paidOutToBeMoved
    POP			DAOpaidOut[address(p.splitData[0].newDAO)] += paidOutToBeMoved
    DUP1			paidOutToBeMoved
    PUSH 9		DAOpaidOut
    PUSH 0		DAOpaidOut
    POP			DAOpaidOut
    PUSH 0		DAOpaidOut[address(this)]
    ADDRESS			this
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		DAOpaidOut[address(this)]
    AND			DAOpaidOut[address(this)]
    DUP2			DAOpaidOut[address(this)]
    MSTORE			DAOpaidOut[address(this)]
    PUSH 20		DAOpaidOut[address(this)]
    ADD			DAOpaidOut[address(this)]
    SWAP1			DAOpaidOut[address(this)]
    DUP2			DAOpaidOut[address(this)]
    MSTORE			DAOpaidOut[address(this)]
    PUSH 20		DAOpaidOut[address(this)]
    ADD			DAOpaidOut[address(this)]
    PUSH 0		DAOpaidOut[address(this)]
    SHA3			DAOpaidOut[address(this)]
    PUSH 0		DAOpaidOut[address(this)]
    POP			DAOpaidOut[address(this)]
    SLOAD			DAOpaidOut[address(this)]
    LT			DAOpaidOut[address(this)] < paidOutToBeMoved
    ISZERO			if (DAOpaidOut[address(this)] < paidOutToBeMoved)...
    PUSH [tag315]		if (DAOpaidOut[address(this)] < paidOutToBeMoved)...
    JUMPI			if (DAOpaidOut[address(this)] < paidOutToBeMoved)...
    PUSH [ErrorTag]		throw
    JUMP			throw
  tag315: 
    JUMPDEST		if (DAOpaidOut[address(this)] < paidOutToBeMoved)...
    DUP1			paidOutToBeMoved
    PUSH 9		DAOpaidOut
    PUSH 0		DAOpaidOut
    POP			DAOpaidOut
    PUSH 0		DAOpaidOut[address(this)]
    ADDRESS			this
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		DAOpaidOut[address(this)]
    AND			DAOpaidOut[address(this)]
    DUP2			DAOpaidOut[address(this)]
    MSTORE			DAOpaidOut[address(this)]
    PUSH 20		DAOpaidOut[address(this)]
    ADD			DAOpaidOut[address(this)]
    SWAP1			DAOpaidOut[address(this)]
    DUP2			DAOpaidOut[address(this)]
    MSTORE			DAOpaidOut[address(this)]
    PUSH 20		DAOpaidOut[address(this)]
    ADD			DAOpaidOut[address(this)]
    PUSH 0		DAOpaidOut[address(this)]
    SHA3			DAOpaidOut[address(this)]
    PUSH 0		DAOpaidOut[address(this)]
    DUP3			DAOpaidOut[address(this)] -= paidOutToBeMoved
    DUP3			DAOpaidOut[address(this)] -= paidOutToBeMoved
    DUP3			DAOpaidOut[address(this)] -= paidOutToBeMoved
    POP			DAOpaidOut[address(this)] -= paidOutToBeMoved
    SLOAD			DAOpaidOut[address(this)] -= paidOutToBeMoved
    SUB			DAOpaidOut[address(this)] -= paidOutToBeMoved
    SWAP3			DAOpaidOut[address(this)] -= paidOutToBeMoved
    POP			DAOpaidOut[address(this)] -= paidOutToBeMoved
    POP			DAOpaidOut[address(this)] -= paidOutToBeMoved
    DUP2			DAOpaidOut[address(this)] -= paidOutToBeMoved
    SWAP1			DAOpaidOut[address(this)] -= paidOutToBeMoved
    SSTORE			DAOpaidOut[address(this)] -= paidOutToBeMoved
    POP			DAOpaidOut[address(this)] -= paidOutToBeMoved
    PUSH 0		0
    CALLER			msg.sender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		Transfer(msg.sender, 0, balances[msg.sender])
    AND			Transfer(msg.sender, 0, balances[msg.sender])
    PUSH DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF		Transfer(msg.sender, 0, balances[msg.sender])
    PUSH 14		balances
    PUSH 0		balances
    POP			balances
    PUSH 0		balances[msg.sender]
    CALLER			msg.sender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		balances[msg.sender]
    AND			balances[msg.sender]
    DUP2			balances[msg.sender]
    MSTORE			balances[msg.sender]
    PUSH 20		balances[msg.sender]
    ADD			balances[msg.sender]
    SWAP1			balances[msg.sender]
    DUP2			balances[msg.sender]
    MSTORE			balances[msg.sender]
    PUSH 20		balances[msg.sender]
    ADD			balances[msg.sender]
    PUSH 0		balances[msg.sender]
    SHA3			balances[msg.sender]
    PUSH 0		balances[msg.sender]
    POP			balances[msg.sender]
    SLOAD			balances[msg.sender]
    PUSH 40		Transfer(msg.sender, 0, balances[msg.sender])
    MLOAD			Transfer(msg.sender, 0, balances[msg.sender])
    DUP1			Transfer(msg.sender, 0, balances[msg.sender])
    DUP3			Transfer(msg.sender, 0, balances[msg.sender])
    DUP2			Transfer(msg.sender, 0, balances[msg.sender])
    MSTORE			Transfer(msg.sender, 0, balances[msg.sender])
    PUSH 20		Transfer(msg.sender, 0, balances[msg.sender])
    ADD			Transfer(msg.sender, 0, balances[msg.sender])
    SWAP2			Transfer(msg.sender, 0, balances[msg.sender])
    POP			Transfer(msg.sender, 0, balances[msg.sender])
    POP			Transfer(msg.sender, 0, balances[msg.sender])
    PUSH 40		Transfer(msg.sender, 0, balances[msg.sender])
    MLOAD			Transfer(msg.sender, 0, balances[msg.sender])
    DUP1			Transfer(msg.sender, 0, balances[msg.sender])
    SWAP2			Transfer(msg.sender, 0, balances[msg.sender])
    SUB			Transfer(msg.sender, 0, balances[msg.sender])
    SWAP1			Transfer(msg.sender, 0, balances[msg.sender])
    LOG3			Transfer(msg.sender, 0, balances[msg.sender])
    PUSH [tag316]		withdrawRewardFor(msg.sender)
    CALLER			msg.sender
    PUSH [tag317]		withdrawRewardFor
    JUMP	[in]		withdrawRewardFor(msg.sender)
  tag316: 
    JUMPDEST		withdrawRewardFor(msg.sender)
    POP			withdrawRewardFor(msg.sender)
    PUSH 14		balances
    PUSH 0		balances
    POP			balances
    PUSH 0		balances[msg.sender]
    CALLER			msg.sender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		balances[msg.sender]
    AND			balances[msg.sender]
    DUP2			balances[msg.sender]
    MSTORE			balances[msg.sender]
    PUSH 20		balances[msg.sender]
    ADD			balances[msg.sender]
    SWAP1			balances[msg.sender]
    DUP2			balances[msg.sender]
    MSTORE			balances[msg.sender]
    PUSH 20		balances[msg.sender]
    ADD			balances[msg.sender]
    PUSH 0		balances[msg.sender]
    SHA3			balances[msg.sender]
    PUSH 0		balances[msg.sender]
    POP			balances[msg.sender]
    SLOAD			balances[msg.sender]
    PUSH 16		totalSupply
    PUSH 0		totalSupply
    DUP3			totalSupply -= balances[msg.sender]
    DUP3			totalSupply -= balances[msg.sender]
    DUP3			totalSupply -= balances[msg.sender]
    POP			totalSupply -= balances[msg.sender]
    SLOAD			totalSupply -= balances[msg.sender]
    SUB			totalSupply -= balances[msg.sender]
    SWAP3			totalSupply -= balances[msg.sender]
    POP			totalSupply -= balances[msg.sender]
    POP			totalSupply -= balances[msg.sender]
    DUP2			totalSupply -= balances[msg.sender]
    SWAP1			totalSupply -= balances[msg.sender]
    SSTORE			totalSupply -= balances[msg.sender]
    POP			totalSupply -= balances[msg.sender]
    PUSH 0		0
    PUSH 14		balances
    PUSH 0		balances
    POP			balances
    PUSH 0		balances[msg.sender]
    CALLER			msg.sender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		balances[msg.sender]
    AND			balances[msg.sender]
    DUP2			balances[msg.sender]
    MSTORE			balances[msg.sender]
    PUSH 20		balances[msg.sender]
    ADD			balances[msg.sender]
    SWAP1			balances[msg.sender]
    DUP2			balances[msg.sender]
    MSTORE			balances[msg.sender]
    PUSH 20		balances[msg.sender]
    ADD			balances[msg.sender]
    PUSH 0		balances[msg.sender]
    SHA3			balances[msg.sender]
    PUSH 0		balances[msg.sender]
    POP			balances[msg.sender] = 0
    DUP2			balances[msg.sender] = 0
    SWAP1			balances[msg.sender] = 0
    SSTORE			balances[msg.sender] = 0
    POP			balances[msg.sender] = 0
    PUSH 0		0
    PUSH A		paidOut
    PUSH 0		paidOut
    POP			paidOut
    PUSH 0		paidOut[msg.sender]
    CALLER			msg.sender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		paidOut[msg.sender]
    AND			paidOut[msg.sender]
    DUP2			paidOut[msg.sender]
    MSTORE			paidOut[msg.sender]
    PUSH 20		paidOut[msg.sender]
    ADD			paidOut[msg.sender]
    SWAP1			paidOut[msg.sender]
    DUP2			paidOut[msg.sender]
    MSTORE			paidOut[msg.sender]
    PUSH 20		paidOut[msg.sender]
    ADD			paidOut[msg.sender]
    PUSH 0		paidOut[msg.sender]
    SHA3			paidOut[msg.sender]
    PUSH 0		paidOut[msg.sender]
    POP			paidOut[msg.sender] = 0
    DUP2			paidOut[msg.sender] = 0
    SWAP1			paidOut[msg.sender] = 0
    SSTORE			paidOut[msg.sender] = 0
    POP			paidOut[msg.sender] = 0
    PUSH 1		true
    SWAP5			return true
    POP			return true
    PUSH [tag282]		return true
    JUMP			return true
  tag282: 
    JUMPDEST		function splitDAO(...
    POP			function splitDAO(...
    POP			function splitDAO(...
    POP			function splitDAO(...
    POP			function splitDAO(...
    SWAP3			function splitDAO(...
    SWAP2			function splitDAO(...
    POP			function splitDAO(...
    POP			function splitDAO(...
    JUMP	[out]		function splitDAO(...
  tag102: 
    JUMPDEST		function newContract(address _newContract){...
    ADDRESS			this
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		msg.sender != address(this)
    AND			msg.sender != address(this)
    CALLER			msg.sender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		msg.sender != address(this)
    AND			msg.sender != address(this)
    EQ			msg.sender != address(this)
    ISZERO			msg.sender != address(this)
    DUP1			msg.sender != address(this) || !allowedRecipients[_newContract]
    PUSH [tag319]		msg.sender != address(this) || !allowedRecipients[_newContract]
    JUMPI			msg.sender != address(this) || !allowedRecipients[_newContract]
    POP			msg.sender != address(this) || !allowedRecipients[_newContract]
    PUSH 4		allowedRecipients
    PUSH 0		allowedRecipients
    POP			allowedRecipients
    PUSH 0		allowedRecipients[_newContract]
    DUP3			_newContract
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		allowedRecipients[_newContract]
    AND			allowedRecipients[_newContract]
    DUP2			allowedRecipients[_newContract]
    MSTORE			allowedRecipients[_newContract]
    PUSH 20		allowedRecipients[_newContract]
    ADD			allowedRecipients[_newContract]
    SWAP1			allowedRecipients[_newContract]
    DUP2			allowedRecipients[_newContract]
    MSTORE			allowedRecipients[_newContract]
    PUSH 20		allowedRecipients[_newContract]
    ADD			allowedRecipients[_newContract]
    PUSH 0		allowedRecipients[_newContract]
    SHA3			allowedRecipients[_newContract]
    PUSH 0		allowedRecipients[_newContract]
    SWAP1			allowedRecipients[_newContract]
    SLOAD			allowedRecipients[_newContract]
    SWAP1			allowedRecipients[_newContract]
    PUSH 100		allowedRecipients[_newContract]
    EXP			allowedRecipients[_newContract]
    SWAP1			allowedRecipients[_newContract]
    DIV			allowedRecipients[_newContract]
    PUSH FF		allowedRecipients[_newContract]
    AND			allowedRecipients[_newContract]
    ISZERO			!allowedRecipients[_newContract]
  tag319: 
    JUMPDEST		msg.sender != address(this) || !allowedRecipients[_newContract]
    ISZERO			if (msg.sender != address(this) || !allowedRecipients[_newContract]) return;
    PUSH [tag320]		if (msg.sender != address(this) || !allowedRecipients[_newContract]) return;
    JUMPI			if (msg.sender != address(this) || !allowedRecipients[_newContract]) return;
    PUSH [tag318]		return;
    JUMP			return;
  tag320: 
    JUMPDEST		if (msg.sender != address(this) || !allowedRecipients[_newContract]) return;
    DUP1			_newContract
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		_newContract.call
    AND			_newContract.call
    ADDRESS			this
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		address(this).balance
    AND			address(this).balance
    BALANCE			address(this).balance
    PUSH 40		_newContract.call.value(address(this).balance)()
    MLOAD			_newContract.call.value(address(this).balance)()
    DUP1			_newContract.call.value(address(this).balance)()
    SWAP1			_newContract.call.value(address(this).balance)()
    POP			_newContract.call.value(address(this).balance)()
    PUSH 0		_newContract.call.value(address(this).balance)()
    PUSH 40		_newContract.call.value(address(this).balance)()
    MLOAD			_newContract.call.value(address(this).balance)()
    DUP1			_newContract.call.value(address(this).balance)()
    DUP4			_newContract.call.value(address(this).balance)()
    SUB			_newContract.call.value(address(this).balance)()
    DUP2			_newContract.call.value(address(this).balance)()
    DUP6			_newContract.call.value(address(this).balance)()
    DUP8			_newContract.call.value(address(this).balance)()
    PUSH 8502		_newContract.call.value(address(this).balance)()
    GAS			_newContract.call.value(address(this).balance)()
    SUB			_newContract.call.value(address(this).balance)()
    CALL			_newContract.call.value(address(this).balance)()
    SWAP3			_newContract.call.value(address(this).balance)()
    POP			_newContract.call.value(address(this).balance)()
    POP			_newContract.call.value(address(this).balance)()
    POP			_newContract.call.value(address(this).balance)()
    ISZERO			!_newContract.call.value(address(this).balance)()
    ISZERO			if (!_newContract.call.value(address(this).balance)()) {...
    PUSH [tag321]		if (!_newContract.call.value(address(this).balance)()) {...
    JUMPI			if (!_newContract.call.value(address(this).balance)()) {...
    PUSH [ErrorTag]		throw
    JUMP			throw
  tag321: 
    JUMPDEST		if (!_newContract.call.value(address(this).balance)()) {...
    PUSH 5		rewardToken
    PUSH 0		rewardToken
    POP			rewardToken
    PUSH 0		rewardToken[address(this)]
    ADDRESS			this
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		rewardToken[address(this)]
    AND			rewardToken[address(this)]
    DUP2			rewardToken[address(this)]
    MSTORE			rewardToken[address(this)]
    PUSH 20		rewardToken[address(this)]
    ADD			rewardToken[address(this)]
    SWAP1			rewardToken[address(this)]
    DUP2			rewardToken[address(this)]
    MSTORE			rewardToken[address(this)]
    PUSH 20		rewardToken[address(this)]
    ADD			rewardToken[address(this)]
    PUSH 0		rewardToken[address(this)]
    SHA3			rewardToken[address(this)]
    PUSH 0		rewardToken[address(this)]
    POP			rewardToken[address(this)]
    SLOAD			rewardToken[address(this)]
    PUSH 5		rewardToken
    PUSH 0		rewardToken
    POP			rewardToken
    PUSH 0		rewardToken[_newContract]
    DUP4			_newContract
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		rewardToken[_newContract]
    AND			rewardToken[_newContract]
    DUP2			rewardToken[_newContract]
    MSTORE			rewardToken[_newContract]
    PUSH 20		rewardToken[_newContract]
    ADD			rewardToken[_newContract]
    SWAP1			rewardToken[_newContract]
    DUP2			rewardToken[_newContract]
    MSTORE			rewardToken[_newContract]
    PUSH 20		rewardToken[_newContract]
    ADD			rewardToken[_newContract]
    PUSH 0		rewardToken[_newContract]
    SHA3			rewardToken[_newContract]
    PUSH 0		rewardToken[_newContract]
    DUP3			rewardToken[_newContract] += rewardToken[address(this)]
    DUP3			rewardToken[_newContract] += rewardToken[address(this)]
    DUP3			rewardToken[_newContract] += rewardToken[address(this)]
    POP			rewardToken[_newContract] += rewardToken[address(this)]
    SLOAD			rewardToken[_newContract] += rewardToken[address(this)]
    ADD			rewardToken[_newContract] += rewardToken[address(this)]
    SWAP3			rewardToken[_newContract] += rewardToken[address(this)]
    POP			rewardToken[_newContract] += rewardToken[address(this)]
    POP			rewardToken[_newContract] += rewardToken[address(this)]
    DUP2			rewardToken[_newContract] += rewardToken[address(this)]
    SWAP1			rewardToken[_newContract] += rewardToken[address(this)]
    SSTORE			rewardToken[_newContract] += rewardToken[address(this)]
    POP			rewardToken[_newContract] += rewardToken[address(this)]
    PUSH 0		0
    PUSH 5		rewardToken
    PUSH 0		rewardToken
    POP			rewardToken
    PUSH 0		rewardToken[address(this)]
    ADDRESS			this
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		rewardToken[address(this)]
    AND			rewardToken[address(this)]
    DUP2			rewardToken[address(this)]
    MSTORE			rewardToken[address(this)]
    PUSH 20		rewardToken[address(this)]
    ADD			rewardToken[address(this)]
    SWAP1			rewardToken[address(this)]
    DUP2			rewardToken[address(this)]
    MSTORE			rewardToken[address(this)]
    PUSH 20		rewardToken[address(this)]
    ADD			rewardToken[address(this)]
    PUSH 0		rewardToken[address(this)]
    SHA3			rewardToken[address(this)]
    PUSH 0		rewardToken[address(this)]
    POP			rewardToken[address(this)] = 0
    DUP2			rewardToken[address(this)] = 0
    SWAP1			rewardToken[address(this)] = 0
    SSTORE			rewardToken[address(this)] = 0
    POP			rewardToken[address(this)] = 0
    PUSH 9		DAOpaidOut
    PUSH 0		DAOpaidOut
    POP			DAOpaidOut
    PUSH 0		DAOpaidOut[address(this)]
    ADDRESS			this
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		DAOpaidOut[address(this)]
    AND			DAOpaidOut[address(this)]
    DUP2			DAOpaidOut[address(this)]
    MSTORE			DAOpaidOut[address(this)]
    PUSH 20		DAOpaidOut[address(this)]
    ADD			DAOpaidOut[address(this)]
    SWAP1			DAOpaidOut[address(this)]
    DUP2			DAOpaidOut[address(this)]
    MSTORE			DAOpaidOut[address(this)]
    PUSH 20		DAOpaidOut[address(this)]
    ADD			DAOpaidOut[address(this)]
    PUSH 0		DAOpaidOut[address(this)]
    SHA3			DAOpaidOut[address(this)]
    PUSH 0		DAOpaidOut[address(this)]
    POP			DAOpaidOut[address(this)]
    SLOAD			DAOpaidOut[address(this)]
    PUSH 9		DAOpaidOut
    PUSH 0		DAOpaidOut
    POP			DAOpaidOut
    PUSH 0		DAOpaidOut[_newContract]
    DUP4			_newContract
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		DAOpaidOut[_newContract]
    AND			DAOpaidOut[_newContract]
    DUP2			DAOpaidOut[_newContract]
    MSTORE			DAOpaidOut[_newContract]
    PUSH 20		DAOpaidOut[_newContract]
    ADD			DAOpaidOut[_newContract]
    SWAP1			DAOpaidOut[_newContract]
    DUP2			DAOpaidOut[_newContract]
    MSTORE			DAOpaidOut[_newContract]
    PUSH 20		DAOpaidOut[_newContract]
    ADD			DAOpaidOut[_newContract]
    PUSH 0		DAOpaidOut[_newContract]
    SHA3			DAOpaidOut[_newContract]
    PUSH 0		DAOpaidOut[_newContract]
    DUP3			DAOpaidOut[_newContract] += DAOpaidOut[address(this)]
    DUP3			DAOpaidOut[_newContract] += DAOpaidOut[address(this)]
    DUP3			DAOpaidOut[_newContract] += DAOpaidOut[address(this)]
    POP			DAOpaidOut[_newContract] += DAOpaidOut[address(this)]
    SLOAD			DAOpaidOut[_newContract] += DAOpaidOut[address(this)]
    ADD			DAOpaidOut[_newContract] += DAOpaidOut[address(this)]
    SWAP3			DAOpaidOut[_newContract] += DAOpaidOut[address(this)]
    POP			DAOpaidOut[_newContract] += DAOpaidOut[address(this)]
    POP			DAOpaidOut[_newContract] += DAOpaidOut[address(this)]
    DUP2			DAOpaidOut[_newContract] += DAOpaidOut[address(this)]
    SWAP1			DAOpaidOut[_newContract] += DAOpaidOut[address(this)]
    SSTORE			DAOpaidOut[_newContract] += DAOpaidOut[address(this)]
    POP			DAOpaidOut[_newContract] += DAOpaidOut[address(this)]
    PUSH 0		0
    PUSH 9		DAOpaidOut
    PUSH 0		DAOpaidOut
    POP			DAOpaidOut
    PUSH 0		DAOpaidOut[address(this)]
    ADDRESS			this
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		DAOpaidOut[address(this)]
    AND			DAOpaidOut[address(this)]
    DUP2			DAOpaidOut[address(this)]
    MSTORE			DAOpaidOut[address(this)]
    PUSH 20		DAOpaidOut[address(this)]
    ADD			DAOpaidOut[address(this)]
    SWAP1			DAOpaidOut[address(this)]
    DUP2			DAOpaidOut[address(this)]
    MSTORE			DAOpaidOut[address(this)]
    PUSH 20		DAOpaidOut[address(this)]
    ADD			DAOpaidOut[address(this)]
    PUSH 0		DAOpaidOut[address(this)]
    SHA3			DAOpaidOut[address(this)]
    PUSH 0		DAOpaidOut[address(this)]
    POP			DAOpaidOut[address(this)] = 0
    DUP2			DAOpaidOut[address(this)] = 0
    SWAP1			DAOpaidOut[address(this)] = 0
    SSTORE			DAOpaidOut[address(this)] = 0
    POP			DAOpaidOut[address(this)] = 0
  tag318: 
    JUMPDEST		function newContract(address _newContract){...
    POP			function newContract(address _newContract){...
    JUMP	[out]		function newContract(address _newContract){...
  tag122: 
    JUMPDEST		function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
    PUSH 0		bool _success
    PUSH 0		DAO dao
    PUSH 0		uint reward
    PUSH 0		0
    CALLVALUE			msg.value
    GT			msg.value > 0
    ISZERO			if (msg.value > 0) throw
    PUSH [tag323]		if (msg.value > 0) throw
    JUMPI			if (msg.value > 0) throw
    PUSH [ErrorTag]		throw
    JUMP			throw
  tag323: 
    JUMPDEST		if (msg.value > 0) throw
    CALLER			msg.sender
    SWAP2			DAO dao = DAO(msg.sender)
    POP			DAO dao = DAO(msg.sender)
    PUSH 9		DAOpaidOut
    PUSH 0		DAOpaidOut
    POP			DAOpaidOut
    PUSH 0		DAOpaidOut[msg.sender]
    CALLER			msg.sender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		DAOpaidOut[msg.sender]
    AND			DAOpaidOut[msg.sender]
    DUP2			DAOpaidOut[msg.sender]
    MSTORE			DAOpaidOut[msg.sender]
    PUSH 20		DAOpaidOut[msg.sender]
    ADD			DAOpaidOut[msg.sender]
    SWAP1			DAOpaidOut[msg.sender]
    DUP2			DAOpaidOut[msg.sender]
    MSTORE			DAOpaidOut[msg.sender]
    PUSH 20		DAOpaidOut[msg.sender]
    ADD			DAOpaidOut[msg.sender]
    PUSH 0		DAOpaidOut[msg.sender]
    SHA3			DAOpaidOut[msg.sender]
    PUSH 0		DAOpaidOut[msg.sender]
    POP			DAOpaidOut[msg.sender]
    SLOAD			DAOpaidOut[msg.sender]
    PUSH 6		totalRewardToken
    PUSH 0		totalRewardToken
    POP			totalRewardToken
    SLOAD			totalRewardToken
    PUSH 8		DAOrewardAccount
    PUSH 0		DAOrewardAccount
    SWAP1			DAOrewardAccount
    SLOAD			DAOrewardAccount
    SWAP1			DAOrewardAccount
    PUSH 100		DAOrewardAccount
    EXP			DAOrewardAccount
    SWAP1			DAOrewardAccount
    DIV			DAOrewardAccount
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		DAOrewardAccount
    AND			DAOrewardAccount
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		DAOrewardAccount.accumulatedInput
    AND			DAOrewardAccount.accumulatedInput
    PUSH D2CC718F		DAOrewardAccount.accumulatedInput
    PUSH 40		DAOrewardAccount.accumulatedInput()
    MLOAD			DAOrewardAccount.accumulatedInput()
    DUP2			DAOrewardAccount.accumulatedInput()
    PUSH 100000000000000000000000000000000000000000000000000000000		DAOrewardAccount.accumulatedInput()
    MUL			DAOrewardAccount.accumulatedInput()
    DUP2			DAOrewardAccount.accumulatedInput()
    MSTORE			DAOrewardAccount.accumulatedInput()
    PUSH 4		DAOrewardAccount.accumulatedInput()
    ADD			DAOrewardAccount.accumulatedInput()
    DUP1			DAOrewardAccount.accumulatedInput()
    SWAP1			DAOrewardAccount.accumulatedInput()
    POP			DAOrewardAccount.accumulatedInput()
    PUSH 20		DAOrewardAccount.accumulatedInput()
    PUSH 40		DAOrewardAccount.accumulatedInput()
    MLOAD			DAOrewardAccount.accumulatedInput()
    DUP1			DAOrewardAccount.accumulatedInput()
    DUP4			DAOrewardAccount.accumulatedInput()
    SUB			DAOrewardAccount.accumulatedInput()
    DUP2			DAOrewardAccount.accumulatedInput()
    PUSH 0		DAOrewardAccount.accumulatedInput()
    DUP8			DAOrewardAccount.accumulatedInput()
    PUSH 61DA		DAOrewardAccount.accumulatedInput()
    GAS			DAOrewardAccount.accumulatedInput()
    SUB			DAOrewardAccount.accumulatedInput()
    CALL			DAOrewardAccount.accumulatedInput()
    ISZERO			DAOrewardAccount.accumulatedInput()
    PUSH [ErrorTag]		DAOrewardAccount.accumulatedInput()
    JUMPI			DAOrewardAccount.accumulatedInput()
    POP			DAOrewardAccount.accumulatedInput()
    POP			DAOrewardAccount.accumulatedInput()
    POP			DAOrewardAccount.accumulatedInput()
    PUSH 40		DAOrewardAccount.accumulatedInput()
    MLOAD			DAOrewardAccount.accumulatedInput()
    DUP1			DAOrewardAccount.accumulatedInput()
    MLOAD			DAOrewardAccount.accumulatedInput()
    SWAP1			DAOrewardAccount.accumulatedInput()
    PUSH 20		DAOrewardAccount.accumulatedInput()
    ADD			DAOrewardAccount.accumulatedInput()
    POP			DAOrewardAccount.accumulatedInput()
    PUSH 5		rewardToken
    PUSH 0		rewardToken
    POP			rewardToken
    PUSH 0		rewardToken[msg.sender]
    CALLER			msg.sender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		rewardToken[msg.sender]
    AND			rewardToken[msg.sender]
    DUP2			rewardToken[msg.sender]
    MSTORE			rewardToken[msg.sender]
    PUSH 20		rewardToken[msg.sender]
    ADD			rewardToken[msg.sender]
    SWAP1			rewardToken[msg.sender]
    DUP2			rewardToken[msg.sender]
    MSTORE			rewardToken[msg.sender]
    PUSH 20		rewardToken[msg.sender]
    ADD			rewardToken[msg.sender]
    PUSH 0		rewardToken[msg.sender]
    SHA3			rewardToken[msg.sender]
    PUSH 0		rewardToken[msg.sender]
    POP			rewardToken[msg.sender]
    SLOAD			rewardToken[msg.sender]
    MUL			rewardToken[msg.sender] * DAOrewardAccount.accumulatedInput()
    DIV			(rewardToken[msg.sender] * DAOrewardAccount.accumulatedInput()) /...
    LT			(rewardToken[msg.sender] * DAOrewardAccount.accumulatedInput()) /...
    ISZERO			if ((rewardToken[msg.sender] * DAOrewardAccount.accumulatedInput()) /...
    PUSH [tag324]		if ((rewardToken[msg.sender] * DAOrewardAccount.accumulatedInput()) /...
    JUMPI			if ((rewardToken[msg.sender] * DAOrewardAccount.accumulatedInput()) /...
    PUSH [ErrorTag]		throw
    JUMP			throw
  tag324: 
    JUMPDEST		if ((rewardToken[msg.sender] * DAOrewardAccount.accumulatedInput()) /...
    PUSH 9		DAOpaidOut
    PUSH 0		DAOpaidOut
    POP			DAOpaidOut
    PUSH 0		DAOpaidOut[msg.sender]
    CALLER			msg.sender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		DAOpaidOut[msg.sender]
    AND			DAOpaidOut[msg.sender]
    DUP2			DAOpaidOut[msg.sender]
    MSTORE			DAOpaidOut[msg.sender]
    PUSH 20		DAOpaidOut[msg.sender]
    ADD			DAOpaidOut[msg.sender]
    SWAP1			DAOpaidOut[msg.sender]
    DUP2			DAOpaidOut[msg.sender]
    MSTORE			DAOpaidOut[msg.sender]
    PUSH 20		DAOpaidOut[msg.sender]
    ADD			DAOpaidOut[msg.sender]
    PUSH 0		DAOpaidOut[msg.sender]
    SHA3			DAOpaidOut[msg.sender]
    PUSH 0		DAOpaidOut[msg.sender]
    POP			DAOpaidOut[msg.sender]
    SLOAD			DAOpaidOut[msg.sender]
    PUSH 6		totalRewardToken
    PUSH 0		totalRewardToken
    POP			totalRewardToken
    SLOAD			totalRewardToken
    PUSH 8		DAOrewardAccount
    PUSH 0		DAOrewardAccount
    SWAP1			DAOrewardAccount
    SLOAD			DAOrewardAccount
    SWAP1			DAOrewardAccount
    PUSH 100		DAOrewardAccount
    EXP			DAOrewardAccount
    SWAP1			DAOrewardAccount
    DIV			DAOrewardAccount
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		DAOrewardAccount
    AND			DAOrewardAccount
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		DAOrewardAccount.accumulatedInput
    AND			DAOrewardAccount.accumulatedInput
    PUSH D2CC718F		DAOrewardAccount.accumulatedInput
    PUSH 40		DAOrewardAccount.accumulatedInput()
    MLOAD			DAOrewardAccount.accumulatedInput()
    DUP2			DAOrewardAccount.accumulatedInput()
    PUSH 100000000000000000000000000000000000000000000000000000000		DAOrewardAccount.accumulatedInput()
    MUL			DAOrewardAccount.accumulatedInput()
    DUP2			DAOrewardAccount.accumulatedInput()
    MSTORE			DAOrewardAccount.accumulatedInput()
    PUSH 4		DAOrewardAccount.accumulatedInput()
    ADD			DAOrewardAccount.accumulatedInput()
    DUP1			DAOrewardAccount.accumulatedInput()
    SWAP1			DAOrewardAccount.accumulatedInput()
    POP			DAOrewardAccount.accumulatedInput()
    PUSH 20		DAOrewardAccount.accumulatedInput()
    PUSH 40		DAOrewardAccount.accumulatedInput()
    MLOAD			DAOrewardAccount.accumulatedInput()
    DUP1			DAOrewardAccount.accumulatedInput()
    DUP4			DAOrewardAccount.accumulatedInput()
    SUB			DAOrewardAccount.accumulatedInput()
    DUP2			DAOrewardAccount.accumulatedInput()
    PUSH 0		DAOrewardAccount.accumulatedInput()
    DUP8			DAOrewardAccount.accumulatedInput()
    PUSH 61DA		DAOrewardAccount.accumulatedInput()
    GAS			DAOrewardAccount.accumulatedInput()
    SUB			DAOrewardAccount.accumulatedInput()
    CALL			DAOrewardAccount.accumulatedInput()
    ISZERO			DAOrewardAccount.accumulatedInput()
    PUSH [ErrorTag]		DAOrewardAccount.accumulatedInput()
    JUMPI			DAOrewardAccount.accumulatedInput()
    POP			DAOrewardAccount.accumulatedInput()
    POP			DAOrewardAccount.accumulatedInput()
    POP			DAOrewardAccount.accumulatedInput()
    PUSH 40		DAOrewardAccount.accumulatedInput()
    MLOAD			DAOrewardAccount.accumulatedInput()
    DUP1			DAOrewardAccount.accumulatedInput()
    MLOAD			DAOrewardAccount.accumulatedInput()
    SWAP1			DAOrewardAccount.accumulatedInput()
    PUSH 20		DAOrewardAccount.accumulatedInput()
    ADD			DAOrewardAccount.accumulatedInput()
    POP			DAOrewardAccount.accumulatedInput()
    PUSH 5		rewardToken
    PUSH 0		rewardToken
    POP			rewardToken
    PUSH 0		rewardToken[msg.sender]
    CALLER			msg.sender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		rewardToken[msg.sender]
    AND			rewardToken[msg.sender]
    DUP2			rewardToken[msg.sender]
    MSTORE			rewardToken[msg.sender]
    PUSH 20		rewardToken[msg.sender]
    ADD			rewardToken[msg.sender]
    SWAP1			rewardToken[msg.sender]
    DUP2			rewardToken[msg.sender]
    MSTORE			rewardToken[msg.sender]
    PUSH 20		rewardToken[msg.sender]
    ADD			rewardToken[msg.sender]
    PUSH 0		rewardToken[msg.sender]
    SHA3			rewardToken[msg.sender]
    PUSH 0		rewardToken[msg.sender]
    POP			rewardToken[msg.sender]
    SLOAD			rewardToken[msg.sender]
    MUL			rewardToken[msg.sender] * DAOrewardAccount.accumulatedInput()
    DIV			(rewardToken[msg.sender] * DAOrewardAccount.accumulatedInput()) /...
    SUB			(rewardToken[msg.sender] * DAOrewardAccount.accumulatedInput()) /...
    SWAP1			uint reward =...
    POP			uint reward =...
    DUP4			_toMembers
    ISZERO			if(_toMembers) {...
    PUSH [tag325]		if(_toMembers) {...
    JUMPI			if(_toMembers) {...
    PUSH 8		DAOrewardAccount
    PUSH 0		DAOrewardAccount
    SWAP1			DAOrewardAccount
    SLOAD			DAOrewardAccount
    SWAP1			DAOrewardAccount
    PUSH 100		DAOrewardAccount
    EXP			DAOrewardAccount
    SWAP1			DAOrewardAccount
    DIV			DAOrewardAccount
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		DAOrewardAccount
    AND			DAOrewardAccount
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		DAOrewardAccount.payOut
    AND			DAOrewardAccount.payOut
    PUSH 221038A		DAOrewardAccount.payOut
    DUP4			dao
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		dao.rewardAccount
    AND			dao.rewardAccount
    PUSH E708203		dao.rewardAccount
    PUSH 40		dao.rewardAccount()
    MLOAD			dao.rewardAccount()
    DUP2			dao.rewardAccount()
    PUSH 100000000000000000000000000000000000000000000000000000000		dao.rewardAccount()
    MUL			dao.rewardAccount()
    DUP2			dao.rewardAccount()
    MSTORE			dao.rewardAccount()
    PUSH 4		dao.rewardAccount()
    ADD			dao.rewardAccount()
    DUP1			dao.rewardAccount()
    SWAP1			dao.rewardAccount()
    POP			dao.rewardAccount()
    PUSH 20		dao.rewardAccount()
    PUSH 40		dao.rewardAccount()
    MLOAD			dao.rewardAccount()
    DUP1			dao.rewardAccount()
    DUP4			dao.rewardAccount()
    SUB			dao.rewardAccount()
    DUP2			dao.rewardAccount()
    PUSH 0		dao.rewardAccount()
    DUP8			dao.rewardAccount()
    PUSH 61DA		dao.rewardAccount()
    GAS			dao.rewardAccount()
    SUB			dao.rewardAccount()
    CALL			dao.rewardAccount()
    ISZERO			dao.rewardAccount()
    PUSH [ErrorTag]		dao.rewardAccount()
    JUMPI			dao.rewardAccount()
    POP			dao.rewardAccount()
    POP			dao.rewardAccount()
    POP			dao.rewardAccount()
    PUSH 40		dao.rewardAccount()
    MLOAD			dao.rewardAccount()
    DUP1			dao.rewardAccount()
    MLOAD			dao.rewardAccount()
    SWAP1			dao.rewardAccount()
    PUSH 20		dao.rewardAccount()
    ADD			dao.rewardAccount()
    POP			dao.rewardAccount()
    DUP4			reward
    PUSH 40		DAOrewardAccount.payOut(dao.rewardAccount(), reward)
    MLOAD			DAOrewardAccount.payOut(dao.rewardAccount(), reward)
    DUP4			DAOrewardAccount.payOut(dao.rewardAccount(), reward)
    PUSH 100000000000000000000000000000000000000000000000000000000		DAOrewardAccount.payOut(dao.rewardAccount(), reward)
    MUL			DAOrewardAccount.payOut(dao.rewardAccount(), reward)
    DUP2			DAOrewardAccount.payOut(dao.rewardAccount(), reward)
    MSTORE			DAOrewardAccount.payOut(dao.rewardAccount(), reward)
    PUSH 4		DAOrewardAccount.payOut(dao.rewardAccount(), reward)
    ADD			DAOrewardAccount.payOut(dao.rewardAccount(), reward)
    DUP1			DAOrewardAccount.payOut(dao.rewardAccount(), reward)
    DUP4			DAOrewardAccount.payOut(dao.rewardAccount(), reward)
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		DAOrewardAccount.payOut(dao.rewardAccount(), reward)
    AND			DAOrewardAccount.payOut(dao.rewardAccount(), reward)
    DUP2			DAOrewardAccount.payOut(dao.rewardAccount(), reward)
    MSTORE			DAOrewardAccount.payOut(dao.rewardAccount(), reward)
    PUSH 20		DAOrewardAccount.payOut(dao.rewardAccount(), reward)
    ADD			DAOrewardAccount.payOut(dao.rewardAccount(), reward)
    DUP3			DAOrewardAccount.payOut(dao.rewardAccount(), reward)
    DUP2			DAOrewardAccount.payOut(dao.rewardAccount(), reward)
    MSTORE			DAOrewardAccount.payOut(dao.rewardAccount(), reward)
    PUSH 20		DAOrewardAccount.payOut(dao.rewardAccount(), reward)
    ADD			DAOrewardAccount.payOut(dao.rewardAccount(), reward)
    SWAP3			DAOrewardAccount.payOut(dao.rewardAccount(), reward)
    POP			DAOrewardAccount.payOut(dao.rewardAccount(), reward)
    POP			DAOrewardAccount.payOut(dao.rewardAccount(), reward)
    POP			DAOrewardAccount.payOut(dao.rewardAccount(), reward)
    PUSH 20		DAOrewardAccount.payOut(dao.rewardAccount(), reward)
    PUSH 40		DAOrewardAccount.payOut(dao.rewardAccount(), reward)
    MLOAD			DAOrewardAccount.payOut(dao.rewardAccount(), reward)
    DUP1			DAOrewardAccount.payOut(dao.rewardAccount(), reward)
    DUP4			DAOrewardAccount.payOut(dao.rewardAccount(), reward)
    SUB			DAOrewardAccount.payOut(dao.rewardAccount(), reward)
    DUP2			DAOrewardAccount.payOut(dao.rewardAccount(), reward)
    PUSH 0		DAOrewardAccount.payOut(dao.rewardAccount(), reward)
    DUP8			DAOrewardAccount.payOut(dao.rewardAccount(), reward)
    PUSH 61DA		DAOrewardAccount.payOut(dao.rewardAccount(), reward)
    GAS			DAOrewardAccount.payOut(dao.rewardAccount(), reward)
    SUB			DAOrewardAccount.payOut(dao.rewardAccount(), reward)
    CALL			DAOrewardAccount.payOut(dao.rewardAccount(), reward)
    ISZERO			DAOrewardAccount.payOut(dao.rewardAccount(), reward)
    PUSH [ErrorTag]		DAOrewardAccount.payOut(dao.rewardAccount(), reward)
    JUMPI			DAOrewardAccount.payOut(dao.rewardAccount(), reward)
    POP			DAOrewardAccount.payOut(dao.rewardAccount(), reward)
    POP			DAOrewardAccount.payOut(dao.rewardAccount(), reward)
    POP			DAOrewardAccount.payOut(dao.rewardAccount(), reward)
    PUSH 40		DAOrewardAccount.payOut(dao.rewardAccount(), reward)
    MLOAD			DAOrewardAccount.payOut(dao.rewardAccount(), reward)
    DUP1			DAOrewardAccount.payOut(dao.rewardAccount(), reward)
    MLOAD			DAOrewardAccount.payOut(dao.rewardAccount(), reward)
    SWAP1			DAOrewardAccount.payOut(dao.rewardAccount(), reward)
    PUSH 20		DAOrewardAccount.payOut(dao.rewardAccount(), reward)
    ADD			DAOrewardAccount.payOut(dao.rewardAccount(), reward)
    POP			DAOrewardAccount.payOut(dao.rewardAccount(), reward)
    ISZERO			!DAOrewardAccount.payOut(dao.rewardAccount(), reward)
    ISZERO			if (!DAOrewardAccount.payOut(dao.rewardAccount(), reward))...
    PUSH [tag326]		if (!DAOrewardAccount.payOut(dao.rewardAccount(), reward))...
    JUMPI			if (!DAOrewardAccount.payOut(dao.rewardAccount(), reward))...
    PUSH [ErrorTag]		throw
    JUMP			throw
  tag326: 
    JUMPDEST		if (!DAOrewardAccount.payOut(dao.rewardAccount(), reward))...
    PUSH [tag327]		if(_toMembers) {...
    JUMP			if(_toMembers) {...
  tag325: 
    JUMPDEST		if(_toMembers) {...
    PUSH 8		DAOrewardAccount
    PUSH 0		DAOrewardAccount
    SWAP1			DAOrewardAccount
    SLOAD			DAOrewardAccount
    SWAP1			DAOrewardAccount
    PUSH 100		DAOrewardAccount
    EXP			DAOrewardAccount
    SWAP1			DAOrewardAccount
    DIV			DAOrewardAccount
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		DAOrewardAccount
    AND			DAOrewardAccount
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		DAOrewardAccount.payOut
    AND			DAOrewardAccount.payOut
    PUSH 221038A		DAOrewardAccount.payOut
    DUP4			dao
    DUP4			reward
    PUSH 40		DAOrewardAccount.payOut(dao, reward)
    MLOAD			DAOrewardAccount.payOut(dao, reward)
    DUP4			DAOrewardAccount.payOut(dao, reward)
    PUSH 100000000000000000000000000000000000000000000000000000000		DAOrewardAccount.payOut(dao, reward)
    MUL			DAOrewardAccount.payOut(dao, reward)
    DUP2			DAOrewardAccount.payOut(dao, reward)
    MSTORE			DAOrewardAccount.payOut(dao, reward)
    PUSH 4		DAOrewardAccount.payOut(dao, reward)
    ADD			DAOrewardAccount.payOut(dao, reward)
    DUP1			DAOrewardAccount.payOut(dao, reward)
    DUP4			DAOrewardAccount.payOut(dao, reward)
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		DAOrewardAccount.payOut(dao, reward)
    AND			DAOrewardAccount.payOut(dao, reward)
    DUP2			DAOrewardAccount.payOut(dao, reward)
    MSTORE			DAOrewardAccount.payOut(dao, reward)
    PUSH 20		DAOrewardAccount.payOut(dao, reward)
    ADD			DAOrewardAccount.payOut(dao, reward)
    DUP3			DAOrewardAccount.payOut(dao, reward)
    DUP2			DAOrewardAccount.payOut(dao, reward)
    MSTORE			DAOrewardAccount.payOut(dao, reward)
    PUSH 20		DAOrewardAccount.payOut(dao, reward)
    ADD			DAOrewardAccount.payOut(dao, reward)
    SWAP3			DAOrewardAccount.payOut(dao, reward)
    POP			DAOrewardAccount.payOut(dao, reward)
    POP			DAOrewardAccount.payOut(dao, reward)
    POP			DAOrewardAccount.payOut(dao, reward)
    PUSH 20		DAOrewardAccount.payOut(dao, reward)
    PUSH 40		DAOrewardAccount.payOut(dao, reward)
    MLOAD			DAOrewardAccount.payOut(dao, reward)
    DUP1			DAOrewardAccount.payOut(dao, reward)
    DUP4			DAOrewardAccount.payOut(dao, reward)
    SUB			DAOrewardAccount.payOut(dao, reward)
    DUP2			DAOrewardAccount.payOut(dao, reward)
    PUSH 0		DAOrewardAccount.payOut(dao, reward)
    DUP8			DAOrewardAccount.payOut(dao, reward)
    PUSH 61DA		DAOrewardAccount.payOut(dao, reward)
    GAS			DAOrewardAccount.payOut(dao, reward)
    SUB			DAOrewardAccount.payOut(dao, reward)
    CALL			DAOrewardAccount.payOut(dao, reward)
    ISZERO			DAOrewardAccount.payOut(dao, reward)
    PUSH [ErrorTag]		DAOrewardAccount.payOut(dao, reward)
    JUMPI			DAOrewardAccount.payOut(dao, reward)
    POP			DAOrewardAccount.payOut(dao, reward)
    POP			DAOrewardAccount.payOut(dao, reward)
    POP			DAOrewardAccount.payOut(dao, reward)
    PUSH 40		DAOrewardAccount.payOut(dao, reward)
    MLOAD			DAOrewardAccount.payOut(dao, reward)
    DUP1			DAOrewardAccount.payOut(dao, reward)
    MLOAD			DAOrewardAccount.payOut(dao, reward)
    SWAP1			DAOrewardAccount.payOut(dao, reward)
    PUSH 20		DAOrewardAccount.payOut(dao, reward)
    ADD			DAOrewardAccount.payOut(dao, reward)
    POP			DAOrewardAccount.payOut(dao, reward)
    ISZERO			!DAOrewardAccount.payOut(dao, reward)
    ISZERO			if (!DAOrewardAccount.payOut(dao, reward))...
    PUSH [tag328]		if (!DAOrewardAccount.payOut(dao, reward))...
    JUMPI			if (!DAOrewardAccount.payOut(dao, reward))...
    PUSH [ErrorTag]		throw
    JUMP			throw
  tag328: 
    JUMPDEST		if (!DAOrewardAccount.payOut(dao, reward))...
  tag327: 
    JUMPDEST		if(_toMembers) {...
    DUP1			reward
    PUSH 9		DAOpaidOut
    PUSH 0		DAOpaidOut
    POP			DAOpaidOut
    PUSH 0		DAOpaidOut[msg.sender]
    CALLER			msg.sender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		DAOpaidOut[msg.sender]
    AND			DAOpaidOut[msg.sender]
    DUP2			DAOpaidOut[msg.sender]
    MSTORE			DAOpaidOut[msg.sender]
    PUSH 20		DAOpaidOut[msg.sender]
    ADD			DAOpaidOut[msg.sender]
    SWAP1			DAOpaidOut[msg.sender]
    DUP2			DAOpaidOut[msg.sender]
    MSTORE			DAOpaidOut[msg.sender]
    PUSH 20		DAOpaidOut[msg.sender]
    ADD			DAOpaidOut[msg.sender]
    PUSH 0		DAOpaidOut[msg.sender]
    SHA3			DAOpaidOut[msg.sender]
    PUSH 0		DAOpaidOut[msg.sender]
    DUP3			DAOpaidOut[msg.sender] += reward
    DUP3			DAOpaidOut[msg.sender] += reward
    DUP3			DAOpaidOut[msg.sender] += reward
    POP			DAOpaidOut[msg.sender] += reward
    SLOAD			DAOpaidOut[msg.sender] += reward
    ADD			DAOpaidOut[msg.sender] += reward
    SWAP3			DAOpaidOut[msg.sender] += reward
    POP			DAOpaidOut[msg.sender] += reward
    POP			DAOpaidOut[msg.sender] += reward
    DUP2			DAOpaidOut[msg.sender] += reward
    SWAP1			DAOpaidOut[msg.sender] += reward
    SSTORE			DAOpaidOut[msg.sender] += reward
    POP			DAOpaidOut[msg.sender] += reward
    PUSH 1		true
    SWAP3			return true
    POP			return true
    PUSH [tag322]		return true
    JUMP			return true
  tag322: 
    JUMPDEST		function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
    POP			function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
    POP			function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
    SWAP2			function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
    SWAP1			function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
    POP			function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
    JUMP	[out]		function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
  tag134: 
    JUMPDEST		function getMyReward() noEther returns (bool _success) {...
    PUSH 0		bool _success
    PUSH 0		0
    CALLVALUE			msg.value
    GT			msg.value > 0
    ISZERO			if (msg.value > 0) throw
    PUSH [tag330]		if (msg.value > 0) throw
    JUMPI			if (msg.value > 0) throw
    PUSH [ErrorTag]		throw
    JUMP			throw
  tag330: 
    JUMPDEST		if (msg.value > 0) throw
    PUSH [tag331]		withdrawRewardFor(msg.sender)
    CALLER			msg.sender
    PUSH [tag317]		withdrawRewardFor
    JUMP	[in]		withdrawRewardFor(msg.sender)
  tag331: 
    JUMPDEST		withdrawRewardFor(msg.sender)
    SWAP1			return withdrawRewardFor(msg.sender)
    POP			return withdrawRewardFor(msg.sender)
    PUSH [tag329]		return withdrawRewardFor(msg.sender)
    JUMP			return withdrawRewardFor(msg.sender)
  tag329: 
    JUMPDEST		function getMyReward() noEther returns (bool _success) {...
    SWAP1			function getMyReward() noEther returns (bool _success) {...
    JUMP	[out]		function getMyReward() noEther returns (bool _success) {...
  tag72: 
    JUMPDEST		uint256 public totalSupply
    PUSH 16		uint256 public totalSupply
    PUSH 0		uint256 public totalSupply
    POP			uint256 public totalSupply
    SLOAD			uint256 public totalSupply
    DUP2			uint256 public totalSupply
    JUMP	[out]		uint256 public totalSupply
  tag104: 
    JUMPDEST		function balanceOf(address _owner) constant returns (uint256 balance) {...
    PUSH 0		uint256 balance
    PUSH 14		balances
    PUSH 0		balances
    POP			balances
    PUSH 0		balances[_owner]
    DUP4			_owner
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		balances[_owner]
    AND			balances[_owner]
    DUP2			balances[_owner]
    MSTORE			balances[_owner]
    PUSH 20		balances[_owner]
    ADD			balances[_owner]
    SWAP1			balances[_owner]
    DUP2			balances[_owner]
    MSTORE			balances[_owner]
    PUSH 20		balances[_owner]
    ADD			balances[_owner]
    PUSH 0		balances[_owner]
    SHA3			balances[_owner]
    PUSH 0		balances[_owner]
    POP			balances[_owner]
    SLOAD			balances[_owner]
    SWAP1			return balances[_owner]
    POP			return balances[_owner]
    PUSH [tag332]		return balances[_owner]
    JUMP			return balances[_owner]
  tag332: 
    JUMPDEST		function balanceOf(address _owner) constant returns (uint256 balance) {...
    SWAP2			function balanceOf(address _owner) constant returns (uint256 balance) {...
    SWAP1			function balanceOf(address _owner) constant returns (uint256 balance) {...
    POP			function balanceOf(address _owner) constant returns (uint256 balance) {...
    JUMP	[out]		function balanceOf(address _owner) constant returns (uint256 balance) {...
  tag125: 
    JUMPDEST		function transfer(address _to, uint256 _value) returns (bool success) {...
    PUSH 0		bool success
    PUSH 11		isFueled
    PUSH 0		isFueled
    SWAP1			isFueled
    SLOAD			isFueled
    SWAP1			isFueled
    PUSH 100		isFueled
    EXP			isFueled
    SWAP1			isFueled
    DIV			isFueled
    PUSH FF		isFueled
    AND			isFueled
    DUP1			isFueled...
    ISZERO			isFueled...
    PUSH [tag334]		isFueled...
    JUMPI			isFueled...
    POP			isFueled...
    PUSH F		closingTime
    PUSH 0		closingTime
    POP			closingTime
    SLOAD			closingTime
    TIMESTAMP			now
    GT			now > closingTime
  tag334: 
    JUMPDEST		isFueled...
    DUP1			isFueled...
    ISZERO			isFueled...
    PUSH [tag335]		isFueled...
    JUMPI			isFueled...
    POP			isFueled...
    PUSH [tag336]		isBlocked(msg.sender)
    CALLER			msg.sender
    PUSH [tag337]		isBlocked
    JUMP	[in]		isBlocked(msg.sender)
  tag336: 
    JUMPDEST		isBlocked(msg.sender)
    ISZERO			!isBlocked(msg.sender)
  tag335: 
    JUMPDEST		isFueled...
    DUP1			isFueled...
    ISZERO			isFueled...
    PUSH [tag338]		isFueled...
    JUMPI			isFueled...
    POP			isFueled...
    PUSH [tag339]		transferPaidOut(msg.sender, _to, _value)
    CALLER			msg.sender
    DUP5			_to
    DUP5			_value
    PUSH [tag340]		transferPaidOut
    JUMP	[in]		transferPaidOut(msg.sender, _to, _value)
  tag339: 
    JUMPDEST		transferPaidOut(msg.sender, _to, _value)
  tag338: 
    JUMPDEST		isFueled...
    DUP1			isFueled...
    ISZERO			isFueled...
    PUSH [tag341]		isFueled...
    JUMPI			isFueled...
    POP			isFueled...
    PUSH [tag342]		super.transfer(_to, _value)
    DUP4			_to
    DUP4			_value
    PUSH [tag343]		super.transfer
    JUMP	[in]		super.transfer(_to, _value)
  tag342: 
    JUMPDEST		super.transfer(_to, _value)
  tag341: 
    JUMPDEST		isFueled...
    ISZERO			if (isFueled...
    PUSH [tag344]		if (isFueled...
    JUMPI			if (isFueled...
    PUSH 1		true
    SWAP1			return true
    POP			return true
    PUSH [tag333]		return true
    JUMP			return true
    PUSH [tag345]		if (isFueled...
    JUMP			if (isFueled...
  tag344: 
    JUMPDEST		if (isFueled...
    PUSH [ErrorTag]		throw
    JUMP			throw
  tag345: 
    JUMPDEST		if (isFueled...
  tag333: 
    JUMPDEST		function transfer(address _to, uint256 _value) returns (bool success) {...
    SWAP3			function transfer(address _to, uint256 _value) returns (bool success) {...
    SWAP2			function transfer(address _to, uint256 _value) returns (bool success) {...
    POP			function transfer(address _to, uint256 _value) returns (bool success) {...
    POP			function transfer(address _to, uint256 _value) returns (bool success) {...
    JUMP	[out]		function transfer(address _to, uint256 _value) returns (bool success) {...
  tag92: 
    JUMPDEST		function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
    PUSH 0		bool success
    PUSH [tag347]		getMyReward()
    PUSH [tag134]		getMyReward
    JUMP	[in]		getMyReward()
  tag347: 
    JUMPDEST		getMyReward()
    ISZERO			!getMyReward()
    ISZERO			if (!getMyReward())...
    PUSH [tag348]		if (!getMyReward())...
    JUMPI			if (!getMyReward())...
    PUSH [ErrorTag]		throw
    JUMP			throw
  tag348: 
    JUMPDEST		if (!getMyReward())...
    PUSH [tag349]		transfer(_to, _value)
    DUP4			_to
    DUP4			_value
    PUSH [tag125]		transfer
    JUMP	[in]		transfer(_to, _value)
  tag349: 
    JUMPDEST		transfer(_to, _value)
    SWAP1			return transfer(_to, _value)
    POP			return transfer(_to, _value)
    PUSH [tag346]		return transfer(_to, _value)
    JUMP			return transfer(_to, _value)
  tag346: 
    JUMPDEST		function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
    SWAP3			function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
    SWAP2			function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
    POP			function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
    POP			function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
    JUMP	[out]		function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
  tag80: 
    JUMPDEST		function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
    PUSH 0		bool success
    PUSH 11		isFueled
    PUSH 0		isFueled
    SWAP1			isFueled
    SLOAD			isFueled
    SWAP1			isFueled
    PUSH 100		isFueled
    EXP			isFueled
    SWAP1			isFueled
    DIV			isFueled
    PUSH FF		isFueled
    AND			isFueled
    DUP1			isFueled...
    ISZERO			isFueled...
    PUSH [tag351]		isFueled...
    JUMPI			isFueled...
    POP			isFueled...
    PUSH F		closingTime
    PUSH 0		closingTime
    POP			closingTime
    SLOAD			closingTime
    TIMESTAMP			now
    GT			now > closingTime
  tag351: 
    JUMPDEST		isFueled...
    DUP1			isFueled...
    ISZERO			isFueled...
    PUSH [tag352]		isFueled...
    JUMPI			isFueled...
    POP			isFueled...
    PUSH [tag353]		isBlocked(_from)
    DUP5			_from
    PUSH [tag337]		isBlocked
    JUMP	[in]		isBlocked(_from)
  tag353: 
    JUMPDEST		isBlocked(_from)
    ISZERO			!isBlocked(_from)
  tag352: 
    JUMPDEST		isFueled...
    DUP1			isFueled...
    ISZERO			isFueled...
    PUSH [tag354]		isFueled...
    JUMPI			isFueled...
    POP			isFueled...
    PUSH [tag355]		transferPaidOut(_from, _to, _value)
    DUP5			_from
    DUP5			_to
    DUP5			_value
    PUSH [tag340]		transferPaidOut
    JUMP	[in]		transferPaidOut(_from, _to, _value)
  tag355: 
    JUMPDEST		transferPaidOut(_from, _to, _value)
  tag354: 
    JUMPDEST		isFueled...
    DUP1			isFueled...
    ISZERO			isFueled...
    PUSH [tag356]		isFueled...
    JUMPI			isFueled...
    POP			isFueled...
    PUSH [tag357]		super.transferFrom(_from, _to, _value)
    DUP5			_from
    DUP5			_to
    DUP5			_value
    PUSH [tag358]		super.transferFrom
    JUMP	[in]		super.transferFrom(_from, _to, _value)
  tag357: 
    JUMPDEST		super.transferFrom(_from, _to, _value)
  tag356: 
    JUMPDEST		isFueled...
    ISZERO			if (isFueled...
    PUSH [tag359]		if (isFueled...
    JUMPI			if (isFueled...
    PUSH 1		true
    SWAP1			return true
    POP			return true
    PUSH [tag350]		return true
    JUMP			return true
    PUSH [tag360]		if (isFueled...
    JUMP			if (isFueled...
  tag359: 
    JUMPDEST		if (isFueled...
    PUSH [ErrorTag]		throw
    JUMP			throw
  tag360: 
    JUMPDEST		if (isFueled...
  tag350: 
    JUMPDEST		function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
    SWAP4			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
    SWAP3			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
    POP			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
    POP			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
    POP			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
    JUMP	[out]		function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
  tag138: 
    JUMPDEST		function transferFromWithoutReward(...
    PUSH 0		bool success
    PUSH [tag362]		withdrawRewardFor(_from)
    DUP5			_from
    PUSH [tag317]		withdrawRewardFor
    JUMP	[in]		withdrawRewardFor(_from)
  tag362: 
    JUMPDEST		withdrawRewardFor(_from)
    ISZERO			!withdrawRewardFor(_from)
    ISZERO			if (!withdrawRewardFor(_from))...
    PUSH [tag363]		if (!withdrawRewardFor(_from))...
    JUMPI			if (!withdrawRewardFor(_from))...
    PUSH [ErrorTag]		throw
    JUMP			throw
  tag363: 
    JUMPDEST		if (!withdrawRewardFor(_from))...
    PUSH [tag364]		transferFrom(_from, _to, _value)
    DUP5			_from
    DUP5			_to
    DUP5			_value
    PUSH [tag80]		transferFrom
    JUMP	[in]		transferFrom(_from, _to, _value)
  tag364: 
    JUMPDEST		transferFrom(_from, _to, _value)
    SWAP1			return transferFrom(_from, _to, _value)
    POP			return transferFrom(_from, _to, _value)
    PUSH [tag361]		return transferFrom(_from, _to, _value)
    JUMP			return transferFrom(_from, _to, _value)
  tag361: 
    JUMPDEST		function transferFromWithoutReward(...
    SWAP4			function transferFromWithoutReward(...
    SWAP3			function transferFromWithoutReward(...
    POP			function transferFromWithoutReward(...
    POP			function transferFromWithoutReward(...
    POP			function transferFromWithoutReward(...
    JUMP	[out]		function transferFromWithoutReward(...
  tag142: 
    JUMPDEST		function changeProposalDeposit(uint _proposalDeposit) noEther external {...
    PUSH 0		0
    CALLVALUE			msg.value
    GT			msg.value > 0
    ISZERO			if (msg.value > 0) throw
    PUSH [tag366]		if (msg.value > 0) throw
    JUMPI			if (msg.value > 0) throw
    PUSH [ErrorTag]		throw
    JUMP			throw
  tag366: 
    JUMPDEST		if (msg.value > 0) throw
    ADDRESS			this
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		msg.sender != address(this)
    AND			msg.sender != address(this)
    CALLER			msg.sender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		msg.sender != address(this)
    AND			msg.sender != address(this)
    EQ			msg.sender != address(this)
    ISZERO			msg.sender != address(this)
    DUP1			msg.sender != address(this) || _proposalDeposit > (actualBalance() + rewardToken[address(this)])...
    PUSH [tag367]		msg.sender != address(this) || _proposalDeposit > (actualBalance() + rewardToken[address(this)])...
    JUMPI			msg.sender != address(this) || _proposalDeposit > (actualBalance() + rewardToken[address(this)])...
    POP			msg.sender != address(this) || _proposalDeposit > (actualBalance() + rewardToken[address(this)])...
    PUSH 64		100
    PUSH 5		rewardToken
    PUSH 0		rewardToken
    POP			rewardToken
    PUSH 0		rewardToken[address(this)]
    ADDRESS			this
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		rewardToken[address(this)]
    AND			rewardToken[address(this)]
    DUP2			rewardToken[address(this)]
    MSTORE			rewardToken[address(this)]
    PUSH 20		rewardToken[address(this)]
    ADD			rewardToken[address(this)]
    SWAP1			rewardToken[address(this)]
    DUP2			rewardToken[address(this)]
    MSTORE			rewardToken[address(this)]
    PUSH 20		rewardToken[address(this)]
    ADD			rewardToken[address(this)]
    PUSH 0		rewardToken[address(this)]
    SHA3			rewardToken[address(this)]
    PUSH 0		rewardToken[address(this)]
    POP			rewardToken[address(this)]
    SLOAD			rewardToken[address(this)]
    PUSH [tag368]		actualBalance()
    PUSH [tag86]		actualBalance
    JUMP	[in]		actualBalance()
  tag368: 
    JUMPDEST		actualBalance()
    ADD			actualBalance() + rewardToken[address(this)]
    DIV			(actualBalance() + rewardToken[address(this)])...
    DUP2			_proposalDeposit
    GT			_proposalDeposit > (actualBalance() + rewardToken[address(this)])...
  tag367: 
    JUMPDEST		msg.sender != address(this) || _proposalDeposit > (actualBalance() + rewardToken[address(this)])...
    ISZERO			if (msg.sender != address(this) || _proposalDeposit > (actualBalance() + rewardToken[address(this)])...
    PUSH [tag369]		if (msg.sender != address(this) || _proposalDeposit > (actualBalance() + rewardToken[address(this)])...
    JUMPI			if (msg.sender != address(this) || _proposalDeposit > (actualBalance() + rewardToken[address(this)])...
    PUSH [ErrorTag]		throw
    JUMP			throw
  tag369: 
    JUMPDEST		if (msg.sender != address(this) || _proposalDeposit > (actualBalance() + rewardToken[address(this)])...
    DUP1			_proposalDeposit
    PUSH C		proposalDeposit
    PUSH 0		proposalDeposit
    POP			proposalDeposit = _proposalDeposit
    DUP2			proposalDeposit = _proposalDeposit
    SWAP1			proposalDeposit = _proposalDeposit
    SSTORE			proposalDeposit = _proposalDeposit
    POP			proposalDeposit = _proposalDeposit
  tag365: 
    JUMPDEST		function changeProposalDeposit(uint _proposalDeposit) noEther external {...
    POP			function changeProposalDeposit(uint _proposalDeposit) noEther external {...
    JUMP	[out]		function changeProposalDeposit(uint _proposalDeposit) noEther external {...
  tag106: 
    JUMPDEST		function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
    PUSH 0		bool _success
    PUSH 0		0
    CALLVALUE			msg.value
    GT			msg.value > 0
    ISZERO			if (msg.value > 0) throw
    PUSH [tag371]		if (msg.value > 0) throw
    JUMPI			if (msg.value > 0) throw
    PUSH [ErrorTag]		throw
    JUMP			throw
  tag371: 
    JUMPDEST		if (msg.value > 0) throw
    PUSH 3		curator
    PUSH 0		curator
    SWAP1			curator
    SLOAD			curator
    SWAP1			curator
    PUSH 100		curator
    EXP			curator
    SWAP1			curator
    DIV			curator
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		curator
    AND			curator
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		msg.sender != curator
    AND			msg.sender != curator
    CALLER			msg.sender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		msg.sender != curator
    AND			msg.sender != curator
    EQ			msg.sender != curator
    ISZERO			msg.sender != curator
    ISZERO			if (msg.sender != curator)...
    PUSH [tag372]		if (msg.sender != curator)...
    JUMPI			if (msg.sender != curator)...
    PUSH [ErrorTag]		throw
    JUMP			throw
  tag372: 
    JUMPDEST		if (msg.sender != curator)...
    DUP2			_allowed
    PUSH 4		allowedRecipients
    PUSH 0		allowedRecipients
    POP			allowedRecipients
    PUSH 0		allowedRecipients[_recipient]
    DUP6			_recipient
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		allowedRecipients[_recipient]
    AND			allowedRecipients[_recipient]
    DUP2			allowedRecipients[_recipient]
    MSTORE			allowedRecipients[_recipient]
    PUSH 20		allowedRecipients[_recipient]
    ADD			allowedRecipients[_recipient]
    SWAP1			allowedRecipients[_recipient]
    DUP2			allowedRecipients[_recipient]
    MSTORE			allowedRecipients[_recipient]
    PUSH 20		allowedRecipients[_recipient]
    ADD			allowedRecipients[_recipient]
    PUSH 0		allowedRecipients[_recipient]
    SHA3			allowedRecipients[_recipient]
    PUSH 0		allowedRecipients[_recipient]
    PUSH 100		allowedRecipients[_recipient] = _allowed
    EXP			allowedRecipients[_recipient] = _allowed
    DUP2			allowedRecipients[_recipient] = _allowed
    SLOAD			allowedRecipients[_recipient] = _allowed
    DUP2			allowedRecipients[_recipient] = _allowed
    PUSH FF		allowedRecipients[_recipient] = _allowed
    MUL			allowedRecipients[_recipient] = _allowed
    NOT			allowedRecipients[_recipient] = _allowed
    AND			allowedRecipients[_recipient] = _allowed
    SWAP1			allowedRecipients[_recipient] = _allowed
    DUP4			allowedRecipients[_recipient] = _allowed
    MUL			allowedRecipients[_recipient] = _allowed
    OR			allowedRecipients[_recipient] = _allowed
    SWAP1			allowedRecipients[_recipient] = _allowed
    SSTORE			allowedRecipients[_recipient] = _allowed
    POP			allowedRecipients[_recipient] = _allowed
    DUP3			_recipient
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		AllowedRecipientChanged(_recipient, _allowed)
    AND			AllowedRecipientChanged(_recipient, _allowed)
    PUSH 73AD2A153C8B67991DF9459024950B318A609782CEE8C7EEDA47B905F9BAA91F		AllowedRecipientChanged(_recipient, _allowed)
    DUP4			_allowed
    PUSH 40		AllowedRecipientChanged(_recipient, _allowed)
    MLOAD			AllowedRecipientChanged(_recipient, _allowed)
    DUP1			AllowedRecipientChanged(_recipient, _allowed)
    DUP3			AllowedRecipientChanged(_recipient, _allowed)
    DUP2			AllowedRecipientChanged(_recipient, _allowed)
    MSTORE			AllowedRecipientChanged(_recipient, _allowed)
    PUSH 20		AllowedRecipientChanged(_recipient, _allowed)
    ADD			AllowedRecipientChanged(_recipient, _allowed)
    SWAP2			AllowedRecipientChanged(_recipient, _allowed)
    POP			AllowedRecipientChanged(_recipient, _allowed)
    POP			AllowedRecipientChanged(_recipient, _allowed)
    PUSH 40		AllowedRecipientChanged(_recipient, _allowed)
    MLOAD			AllowedRecipientChanged(_recipient, _allowed)
    DUP1			AllowedRecipientChanged(_recipient, _allowed)
    SWAP2			AllowedRecipientChanged(_recipient, _allowed)
    SUB			AllowedRecipientChanged(_recipient, _allowed)
    SWAP1			AllowedRecipientChanged(_recipient, _allowed)
    LOG2			AllowedRecipientChanged(_recipient, _allowed)
    PUSH 1		true
    SWAP1			return true
    POP			return true
    PUSH [tag370]		return true
    JUMP			return true
  tag370: 
    JUMPDEST		function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
    SWAP3			function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
    SWAP2			function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
    POP			function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
    POP			function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
    JUMP	[out]		function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
  tag86: 
    JUMPDEST		function actualBalance() constant returns (uint _actualBalance) {...
    PUSH 0		uint _actualBalance
    PUSH D		sumOfProposalDeposits
    PUSH 0		sumOfProposalDeposits
    POP			sumOfProposalDeposits
    SLOAD			sumOfProposalDeposits
    ADDRESS			this
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		this.balance
    AND			this.balance
    BALANCE			this.balance
    SUB			this.balance - sumOfProposalDeposits
    SWAP1			return this.balance - sumOfProposalDeposits
    POP			return this.balance - sumOfProposalDeposits
    PUSH [tag373]		return this.balance - sumOfProposalDeposits
    JUMP			return this.balance - sumOfProposalDeposits
  tag373: 
    JUMPDEST		function actualBalance() constant returns (uint _actualBalance) {...
    SWAP1			function actualBalance() constant returns (uint _actualBalance) {...
    JUMP	[out]		function actualBalance() constant returns (uint _actualBalance) {...
  tag108: 
    JUMPDEST		function halveMinQuorum() returns (bool _success) {...
    PUSH 0		bool _success
    PUSH E6B680		25 weeks
    TIMESTAMP			now
    SUB			now - quorumHalvingPeriod
    PUSH 2		lastTimeMinQuorumMet
    PUSH 0		lastTimeMinQuorumMet
    POP			lastTimeMinQuorumMet
    SLOAD			lastTimeMinQuorumMet
    LT			lastTimeMinQuorumMet < (now - quorumHalvingPeriod)
    DUP1			lastTimeMinQuorumMet < (now - quorumHalvingPeriod) || msg.sender == curator
    PUSH [tag375]		lastTimeMinQuorumMet < (now - quorumHalvingPeriod) || msg.sender == curator
    JUMPI			lastTimeMinQuorumMet < (now - quorumHalvingPeriod) || msg.sender == curator
    POP			lastTimeMinQuorumMet < (now - quorumHalvingPeriod) || msg.sender == curator
    PUSH 3		curator
    PUSH 0		curator
    SWAP1			curator
    SLOAD			curator
    SWAP1			curator
    PUSH 100		curator
    EXP			curator
    SWAP1			curator
    DIV			curator
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		curator
    AND			curator
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		msg.sender == curator
    AND			msg.sender == curator
    CALLER			msg.sender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		msg.sender == curator
    AND			msg.sender == curator
    EQ			msg.sender == curator
  tag375: 
    JUMPDEST		lastTimeMinQuorumMet < (now - quorumHalvingPeriod) || msg.sender == curator
    DUP1			(lastTimeMinQuorumMet < (now - quorumHalvingPeriod) || msg.sender == curator)...
    ISZERO			(lastTimeMinQuorumMet < (now - quorumHalvingPeriod) || msg.sender == curator)...
    PUSH [tag376]		(lastTimeMinQuorumMet < (now - quorumHalvingPeriod) || msg.sender == curator)...
    JUMPI			(lastTimeMinQuorumMet < (now - quorumHalvingPeriod) || msg.sender == curator)...
    POP			(lastTimeMinQuorumMet < (now - quorumHalvingPeriod) || msg.sender == curator)...
    PUSH 127500		2 weeks
    TIMESTAMP			now
    SUB			now - minProposalDebatePeriod
    PUSH 2		lastTimeMinQuorumMet
    PUSH 0		lastTimeMinQuorumMet
    POP			lastTimeMinQuorumMet
    SLOAD			lastTimeMinQuorumMet
    LT			lastTimeMinQuorumMet < (now - minProposalDebatePeriod)
  tag376: 
    JUMPDEST		(lastTimeMinQuorumMet < (now - quorumHalvingPeriod) || msg.sender == curator)...
    ISZERO			if ((lastTimeMinQuorumMet < (now - quorumHalvingPeriod) || msg.sender == curator)...
    PUSH [tag377]		if ((lastTimeMinQuorumMet < (now - quorumHalvingPeriod) || msg.sender == curator)...
    JUMPI			if ((lastTimeMinQuorumMet < (now - quorumHalvingPeriod) || msg.sender == curator)...
    TIMESTAMP			now
    PUSH 2		lastTimeMinQuorumMet
    PUSH 0		lastTimeMinQuorumMet
    POP			lastTimeMinQuorumMet = now
    DUP2			lastTimeMinQuorumMet = now
    SWAP1			lastTimeMinQuorumMet = now
    SSTORE			lastTimeMinQuorumMet = now
    POP			lastTimeMinQuorumMet = now
    PUSH 2		2
    PUSH 1		minQuorumDivisor
    PUSH 0		minQuorumDivisor
    DUP3			minQuorumDivisor *= 2
    DUP3			minQuorumDivisor *= 2
    DUP3			minQuorumDivisor *= 2
    POP			minQuorumDivisor *= 2
    SLOAD			minQuorumDivisor *= 2
    MUL			minQuorumDivisor *= 2
    SWAP3			minQuorumDivisor *= 2
    POP			minQuorumDivisor *= 2
    POP			minQuorumDivisor *= 2
    DUP2			minQuorumDivisor *= 2
    SWAP1			minQuorumDivisor *= 2
    SSTORE			minQuorumDivisor *= 2
    POP			minQuorumDivisor *= 2
    PUSH 1		true
    SWAP1			return true
    POP			return true
    PUSH [tag374]		return true
    JUMP			return true
    PUSH [tag378]		if ((lastTimeMinQuorumMet < (now - quorumHalvingPeriod) || msg.sender == curator)...
    JUMP			if ((lastTimeMinQuorumMet < (now - quorumHalvingPeriod) || msg.sender == curator)...
  tag377: 
    JUMPDEST		if ((lastTimeMinQuorumMet < (now - quorumHalvingPeriod) || msg.sender == curator)...
    PUSH 0		false
    SWAP1			return false
    POP			return false
    PUSH [tag374]		return false
    JUMP			return false
  tag378: 
    JUMPDEST		if ((lastTimeMinQuorumMet < (now - quorumHalvingPeriod) || msg.sender == curator)...
  tag374: 
    JUMPDEST		function halveMinQuorum() returns (bool _success) {...
    SWAP1			function halveMinQuorum() returns (bool _success) {...
    JUMP	[out]		function halveMinQuorum() returns (bool _success) {...
  tag118: 
    JUMPDEST		function numberOfProposals() constant returns (uint _numberOfProposals) {...
    PUSH 0		uint _numberOfProposals
    PUSH 1		1
    PUSH 0		proposals
    PUSH 0		proposals
    POP			proposals
    DUP1			proposals.length
    SLOAD			proposals.length
    SWAP1			proposals.length
    POP			proposals.length
    SUB			proposals.length - 1
    SWAP1			return proposals.length - 1
    POP			return proposals.length - 1
    PUSH [tag379]		return proposals.length - 1
    JUMP			return proposals.length - 1
  tag379: 
    JUMPDEST		function numberOfProposals() constant returns (uint _numberOfProposals) {...
    SWAP1			function numberOfProposals() constant returns (uint _numberOfProposals) {...
    JUMP	[out]		function numberOfProposals() constant returns (uint _numberOfProposals) {...
  tag130: 
    JUMPDEST		function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
    PUSH 0		address _newDAO
    PUSH 0		proposals
    PUSH 0		proposals
    POP			proposals
    DUP3			_proposalID
    DUP2			proposals[_proposalID]
    SLOAD			proposals[_proposalID]
    DUP2			proposals[_proposalID]
    LT			proposals[_proposalID]
    ISZERO			proposals[_proposalID]
    PUSH [ErrorTag]		proposals[_proposalID]
    JUMPI			proposals[_proposalID]
    SWAP1			proposals[_proposalID]
    PUSH 0		proposals[_proposalID]
    MSTORE			proposals[_proposalID]
    PUSH 20		proposals[_proposalID]
    PUSH 0		proposals[_proposalID]
    SHA3			proposals[_proposalID]
    SWAP1			proposals[_proposalID]
    PUSH E		proposals[_proposalID]
    MUL			proposals[_proposalID]
    ADD			proposals[_proposalID]
    PUSH 0		proposals[_proposalID]
  tag381: 
    JUMPDEST		proposals[_proposalID]
    POP			proposals[_proposalID]
    PUSH 8		proposals[_proposalID].splitData
    ADD			proposals[_proposalID].splitData
    PUSH 0		proposals[_proposalID].splitData
    POP			proposals[_proposalID].splitData
    PUSH 0		0
    DUP2			proposals[_proposalID].splitData[0]
    SLOAD			proposals[_proposalID].splitData[0]
    DUP2			proposals[_proposalID].splitData[0]
    LT			proposals[_proposalID].splitData[0]
    ISZERO			proposals[_proposalID].splitData[0]
    PUSH [ErrorTag]		proposals[_proposalID].splitData[0]
    JUMPI			proposals[_proposalID].splitData[0]
    SWAP1			proposals[_proposalID].splitData[0]
    PUSH 0		proposals[_proposalID].splitData[0]
    MSTORE			proposals[_proposalID].splitData[0]
    PUSH 20		proposals[_proposalID].splitData[0]
    PUSH 0		proposals[_proposalID].splitData[0]
    SHA3			proposals[_proposalID].splitData[0]
    SWAP1			proposals[_proposalID].splitData[0]
    PUSH 4		proposals[_proposalID].splitData[0]
    MUL			proposals[_proposalID].splitData[0]
    ADD			proposals[_proposalID].splitData[0]
    PUSH 0		proposals[_proposalID].splitData[0]
  tag382: 
    JUMPDEST		proposals[_proposalID].splitData[0]
    POP			proposals[_proposalID].splitData[0]
    PUSH 3		proposals[_proposalID].splitData[0].newDAO
    ADD			proposals[_proposalID].splitData[0].newDAO
    PUSH 0		proposals[_proposalID].splitData[0].newDAO
    SWAP1			proposals[_proposalID].splitData[0].newDAO
    SLOAD			proposals[_proposalID].splitData[0].newDAO
    SWAP1			proposals[_proposalID].splitData[0].newDAO
    PUSH 100		proposals[_proposalID].splitData[0].newDAO
    EXP			proposals[_proposalID].splitData[0].newDAO
    SWAP1			proposals[_proposalID].splitData[0].newDAO
    DIV			proposals[_proposalID].splitData[0].newDAO
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		proposals[_proposalID].splitData[0].newDAO
    AND			proposals[_proposalID].splitData[0].newDAO
    SWAP1			return proposals[_proposalID].splitData[0].newDAO
    POP			return proposals[_proposalID].splitData[0].newDAO
    PUSH [tag380]		return proposals[_proposalID].splitData[0].newDAO
    JUMP			return proposals[_proposalID].splitData[0].newDAO
  tag380: 
    JUMPDEST		function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
    SWAP2			function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
    SWAP1			function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
    POP			function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
    JUMP	[out]		function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
  tag82: 
    JUMPDEST		function unblockMe() returns (bool) {...
    PUSH 0		bool
    PUSH [tag384]		isBlocked(msg.sender)
    CALLER			msg.sender
    PUSH [tag337]		isBlocked
    JUMP	[in]		isBlocked(msg.sender)
  tag384: 
    JUMPDEST		isBlocked(msg.sender)
    SWAP1			return isBlocked(msg.sender)
    POP			return isBlocked(msg.sender)
    PUSH [tag383]		return isBlocked(msg.sender)
    JUMP			return isBlocked(msg.sender)
  tag383: 
    JUMPDEST		function unblockMe() returns (bool) {...
    SWAP1			function unblockMe() returns (bool) {...
    JUMP	[out]		function unblockMe() returns (bool) {...
  tag343: 
    JUMPDEST		function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    PUSH 0		bool success
    PUSH 0		0
    CALLVALUE			msg.value
    GT			msg.value > 0
    ISZERO			if (msg.value > 0) throw
    PUSH [tag386]		if (msg.value > 0) throw
    JUMPI			if (msg.value > 0) throw
    PUSH [ErrorTag]		throw
    JUMP			throw
  tag386: 
    JUMPDEST		if (msg.value > 0) throw
    DUP2			_amount
    PUSH 14		balances
    PUSH 0		balances
    POP			balances
    PUSH 0		balances[msg.sender]
    CALLER			msg.sender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		balances[msg.sender]
    AND			balances[msg.sender]
    DUP2			balances[msg.sender]
    MSTORE			balances[msg.sender]
    PUSH 20		balances[msg.sender]
    ADD			balances[msg.sender]
    SWAP1			balances[msg.sender]
    DUP2			balances[msg.sender]
    MSTORE			balances[msg.sender]
    PUSH 20		balances[msg.sender]
    ADD			balances[msg.sender]
    PUSH 0		balances[msg.sender]
    SHA3			balances[msg.sender]
    PUSH 0		balances[msg.sender]
    POP			balances[msg.sender]
    SLOAD			balances[msg.sender]
    LT			balances[msg.sender] >= _amount
    ISZERO			balances[msg.sender] >= _amount
    DUP1			balances[msg.sender] >= _amount && _amount > 0
    ISZERO			balances[msg.sender] >= _amount && _amount > 0
    PUSH [tag387]		balances[msg.sender] >= _amount && _amount > 0
    JUMPI			balances[msg.sender] >= _amount && _amount > 0
    POP			balances[msg.sender] >= _amount && _amount > 0
    PUSH 0		0
    DUP3			_amount
    GT			_amount > 0
  tag387: 
    JUMPDEST		balances[msg.sender] >= _amount && _amount > 0
    ISZERO			if (balances[msg.sender] >= _amount && _amount > 0) {...
    PUSH [tag388]		if (balances[msg.sender] >= _amount && _amount > 0) {...
    JUMPI			if (balances[msg.sender] >= _amount && _amount > 0) {...
    DUP2			_amount
    PUSH 14		balances
    PUSH 0		balances
    POP			balances
    PUSH 0		balances[msg.sender]
    CALLER			msg.sender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		balances[msg.sender]
    AND			balances[msg.sender]
    DUP2			balances[msg.sender]
    MSTORE			balances[msg.sender]
    PUSH 20		balances[msg.sender]
    ADD			balances[msg.sender]
    SWAP1			balances[msg.sender]
    DUP2			balances[msg.sender]
    MSTORE			balances[msg.sender]
    PUSH 20		balances[msg.sender]
    ADD			balances[msg.sender]
    PUSH 0		balances[msg.sender]
    SHA3			balances[msg.sender]
    PUSH 0		balances[msg.sender]
    DUP3			balances[msg.sender] -= _amount
    DUP3			balances[msg.sender] -= _amount
    DUP3			balances[msg.sender] -= _amount
    POP			balances[msg.sender] -= _amount
    SLOAD			balances[msg.sender] -= _amount
    SUB			balances[msg.sender] -= _amount
    SWAP3			balances[msg.sender] -= _amount
    POP			balances[msg.sender] -= _amount
    POP			balances[msg.sender] -= _amount
    DUP2			balances[msg.sender] -= _amount
    SWAP1			balances[msg.sender] -= _amount
    SSTORE			balances[msg.sender] -= _amount
    POP			balances[msg.sender] -= _amount
    DUP2			_amount
    PUSH 14		balances
    PUSH 0		balances
    POP			balances
    PUSH 0		balances[_to]
    DUP6			_to
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		balances[_to]
    AND			balances[_to]
    DUP2			balances[_to]
    MSTORE			balances[_to]
    PUSH 20		balances[_to]
    ADD			balances[_to]
    SWAP1			balances[_to]
    DUP2			balances[_to]
    MSTORE			balances[_to]
    PUSH 20		balances[_to]
    ADD			balances[_to]
    PUSH 0		balances[_to]
    SHA3			balances[_to]
    PUSH 0		balances[_to]
    DUP3			balances[_to] += _amount
    DUP3			balances[_to] += _amount
    DUP3			balances[_to] += _amount
    POP			balances[_to] += _amount
    SLOAD			balances[_to] += _amount
    ADD			balances[_to] += _amount
    SWAP3			balances[_to] += _amount
    POP			balances[_to] += _amount
    POP			balances[_to] += _amount
    DUP2			balances[_to] += _amount
    SWAP1			balances[_to] += _amount
    SSTORE			balances[_to] += _amount
    POP			balances[_to] += _amount
    DUP3			_to
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		Transfer(msg.sender, _to, _amount)
    AND			Transfer(msg.sender, _to, _amount)
    CALLER			msg.sender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		Transfer(msg.sender, _to, _amount)
    AND			Transfer(msg.sender, _to, _amount)
    PUSH DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF		Transfer(msg.sender, _to, _amount)
    DUP5			_amount
    PUSH 40		Transfer(msg.sender, _to, _amount)
    MLOAD			Transfer(msg.sender, _to, _amount)
    DUP1			Transfer(msg.sender, _to, _amount)
    DUP3			Transfer(msg.sender, _to, _amount)
    DUP2			Transfer(msg.sender, _to, _amount)
    MSTORE			Transfer(msg.sender, _to, _amount)
    PUSH 20		Transfer(msg.sender, _to, _amount)
    ADD			Transfer(msg.sender, _to, _amount)
    SWAP2			Transfer(msg.sender, _to, _amount)
    POP			Transfer(msg.sender, _to, _amount)
    POP			Transfer(msg.sender, _to, _amount)
    PUSH 40		Transfer(msg.sender, _to, _amount)
    MLOAD			Transfer(msg.sender, _to, _amount)
    DUP1			Transfer(msg.sender, _to, _amount)
    SWAP2			Transfer(msg.sender, _to, _amount)
    SUB			Transfer(msg.sender, _to, _amount)
    SWAP1			Transfer(msg.sender, _to, _amount)
    LOG3			Transfer(msg.sender, _to, _amount)
    PUSH 1		true
    SWAP1			return true
    POP			return true
    PUSH [tag385]		return true
    JUMP			return true
    PUSH [tag389]		if (balances[msg.sender] >= _amount && _amount > 0) {...
    JUMP			if (balances[msg.sender] >= _amount && _amount > 0) {...
  tag388: 
    JUMPDEST		if (balances[msg.sender] >= _amount && _amount > 0) {...
    PUSH 0		false
    SWAP1			return false
    POP			return false
    PUSH [tag385]		return false
    JUMP			return false
  tag389: 
    JUMPDEST		if (balances[msg.sender] >= _amount && _amount > 0) {...
  tag385: 
    JUMPDEST		function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    SWAP3			function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    SWAP2			function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    POP			function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    POP			function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    JUMP	[out]		function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
  tag358: 
    JUMPDEST		function transferFrom(...
    PUSH 0		bool success
    PUSH 0		0
    CALLVALUE			msg.value
    GT			msg.value > 0
    ISZERO			if (msg.value > 0) throw
    PUSH [tag391]		if (msg.value > 0) throw
    JUMPI			if (msg.value > 0) throw
    PUSH [ErrorTag]		throw
    JUMP			throw
  tag391: 
    JUMPDEST		if (msg.value > 0) throw
    DUP2			_amount
    PUSH 14		balances
    PUSH 0		balances
    POP			balances
    PUSH 0		balances[_from]
    DUP7			_from
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		balances[_from]
    AND			balances[_from]
    DUP2			balances[_from]
    MSTORE			balances[_from]
    PUSH 20		balances[_from]
    ADD			balances[_from]
    SWAP1			balances[_from]
    DUP2			balances[_from]
    MSTORE			balances[_from]
    PUSH 20		balances[_from]
    ADD			balances[_from]
    PUSH 0		balances[_from]
    SHA3			balances[_from]
    PUSH 0		balances[_from]
    POP			balances[_from]
    SLOAD			balances[_from]
    LT			balances[_from] >= _amount
    ISZERO			balances[_from] >= _amount
    DUP1			balances[_from] >= _amount...
    ISZERO			balances[_from] >= _amount...
    PUSH [tag392]		balances[_from] >= _amount...
    JUMPI			balances[_from] >= _amount...
    POP			balances[_from] >= _amount...
    DUP2			_amount
    PUSH 15		allowed
    PUSH 0		allowed
    POP			allowed
    PUSH 0		allowed[_from]
    DUP7			_from
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		allowed[_from]
    AND			allowed[_from]
    DUP2			allowed[_from]
    MSTORE			allowed[_from]
    PUSH 20		allowed[_from]
    ADD			allowed[_from]
    SWAP1			allowed[_from]
    DUP2			allowed[_from]
    MSTORE			allowed[_from]
    PUSH 20		allowed[_from]
    ADD			allowed[_from]
    PUSH 0		allowed[_from]
    SHA3			allowed[_from]
    PUSH 0		allowed[_from]
    POP			allowed[_from]
    PUSH 0		allowed[_from][msg.sender]
    CALLER			msg.sender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		allowed[_from][msg.sender]
    AND			allowed[_from][msg.sender]
    DUP2			allowed[_from][msg.sender]
    MSTORE			allowed[_from][msg.sender]
    PUSH 20		allowed[_from][msg.sender]
    ADD			allowed[_from][msg.sender]
    SWAP1			allowed[_from][msg.sender]
    DUP2			allowed[_from][msg.sender]
    MSTORE			allowed[_from][msg.sender]
    PUSH 20		allowed[_from][msg.sender]
    ADD			allowed[_from][msg.sender]
    PUSH 0		allowed[_from][msg.sender]
    SHA3			allowed[_from][msg.sender]
    PUSH 0		allowed[_from][msg.sender]
    POP			allowed[_from][msg.sender]
    SLOAD			allowed[_from][msg.sender]
    LT			allowed[_from][msg.sender] >= _amount
    ISZERO			allowed[_from][msg.sender] >= _amount
  tag392: 
    JUMPDEST		balances[_from] >= _amount...
    DUP1			balances[_from] >= _amount...
    ISZERO			balances[_from] >= _amount...
    PUSH [tag393]		balances[_from] >= _amount...
    JUMPI			balances[_from] >= _amount...
    POP			balances[_from] >= _amount...
    PUSH 0		0
    DUP3			_amount
    GT			_amount > 0
  tag393: 
    JUMPDEST		balances[_from] >= _amount...
    ISZERO			if (balances[_from] >= _amount...
    PUSH [tag394]		if (balances[_from] >= _amount...
    JUMPI			if (balances[_from] >= _amount...
    DUP2			_amount
    PUSH 14		balances
    PUSH 0		balances
    POP			balances
    PUSH 0		balances[_to]
    DUP6			_to
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		balances[_to]
    AND			balances[_to]
    DUP2			balances[_to]
    MSTORE			balances[_to]
    PUSH 20		balances[_to]
    ADD			balances[_to]
    SWAP1			balances[_to]
    DUP2			balances[_to]
    MSTORE			balances[_to]
    PUSH 20		balances[_to]
    ADD			balances[_to]
    PUSH 0		balances[_to]
    SHA3			balances[_to]
    PUSH 0		balances[_to]
    DUP3			balances[_to] += _amount
    DUP3			balances[_to] += _amount
    DUP3			balances[_to] += _amount
    POP			balances[_to] += _amount
    SLOAD			balances[_to] += _amount
    ADD			balances[_to] += _amount
    SWAP3			balances[_to] += _amount
    POP			balances[_to] += _amount
    POP			balances[_to] += _amount
    DUP2			balances[_to] += _amount
    SWAP1			balances[_to] += _amount
    SSTORE			balances[_to] += _amount
    POP			balances[_to] += _amount
    DUP2			_amount
    PUSH 14		balances
    PUSH 0		balances
    POP			balances
    PUSH 0		balances[_from]
    DUP7			_from
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		balances[_from]
    AND			balances[_from]
    DUP2			balances[_from]
    MSTORE			balances[_from]
    PUSH 20		balances[_from]
    ADD			balances[_from]
    SWAP1			balances[_from]
    DUP2			balances[_from]
    MSTORE			balances[_from]
    PUSH 20		balances[_from]
    ADD			balances[_from]
    PUSH 0		balances[_from]
    SHA3			balances[_from]
    PUSH 0		balances[_from]
    DUP3			balances[_from] -= _amount
    DUP3			balances[_from] -= _amount
    DUP3			balances[_from] -= _amount
    POP			balances[_from] -= _amount
    SLOAD			balances[_from] -= _amount
    SUB			balances[_from] -= _amount
    SWAP3			balances[_from] -= _amount
    POP			balances[_from] -= _amount
    POP			balances[_from] -= _amount
    DUP2			balances[_from] -= _amount
    SWAP1			balances[_from] -= _amount
    SSTORE			balances[_from] -= _amount
    POP			balances[_from] -= _amount
    DUP2			_amount
    PUSH 15		allowed
    PUSH 0		allowed
    POP			allowed
    PUSH 0		allowed[_from]
    DUP7			_from
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		allowed[_from]
    AND			allowed[_from]
    DUP2			allowed[_from]
    MSTORE			allowed[_from]
    PUSH 20		allowed[_from]
    ADD			allowed[_from]
    SWAP1			allowed[_from]
    DUP2			allowed[_from]
    MSTORE			allowed[_from]
    PUSH 20		allowed[_from]
    ADD			allowed[_from]
    PUSH 0		allowed[_from]
    SHA3			allowed[_from]
    PUSH 0		allowed[_from]
    POP			allowed[_from]
    PUSH 0		allowed[_from][msg.sender]
    CALLER			msg.sender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		allowed[_from][msg.sender]
    AND			allowed[_from][msg.sender]
    DUP2			allowed[_from][msg.sender]
    MSTORE			allowed[_from][msg.sender]
    PUSH 20		allowed[_from][msg.sender]
    ADD			allowed[_from][msg.sender]
    SWAP1			allowed[_from][msg.sender]
    DUP2			allowed[_from][msg.sender]
    MSTORE			allowed[_from][msg.sender]
    PUSH 20		allowed[_from][msg.sender]
    ADD			allowed[_from][msg.sender]
    PUSH 0		allowed[_from][msg.sender]
    SHA3			allowed[_from][msg.sender]
    PUSH 0		allowed[_from][msg.sender]
    DUP3			allowed[_from][msg.sender] -= _amount
    DUP3			allowed[_from][msg.sender] -= _amount
    DUP3			allowed[_from][msg.sender] -= _amount
    POP			allowed[_from][msg.sender] -= _amount
    SLOAD			allowed[_from][msg.sender] -= _amount
    SUB			allowed[_from][msg.sender] -= _amount
    SWAP3			allowed[_from][msg.sender] -= _amount
    POP			allowed[_from][msg.sender] -= _amount
    POP			allowed[_from][msg.sender] -= _amount
    DUP2			allowed[_from][msg.sender] -= _amount
    SWAP1			allowed[_from][msg.sender] -= _amount
    SSTORE			allowed[_from][msg.sender] -= _amount
    POP			allowed[_from][msg.sender] -= _amount
    DUP3			_to
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		Transfer(_from, _to, _amount)
    AND			Transfer(_from, _to, _amount)
    DUP5			_from
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		Transfer(_from, _to, _amount)
    AND			Transfer(_from, _to, _amount)
    PUSH DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF		Transfer(_from, _to, _amount)
    DUP5			_amount
    PUSH 40		Transfer(_from, _to, _amount)
    MLOAD			Transfer(_from, _to, _amount)
    DUP1			Transfer(_from, _to, _amount)
    DUP3			Transfer(_from, _to, _amount)
    DUP2			Transfer(_from, _to, _amount)
    MSTORE			Transfer(_from, _to, _amount)
    PUSH 20		Transfer(_from, _to, _amount)
    ADD			Transfer(_from, _to, _amount)
    SWAP2			Transfer(_from, _to, _amount)
    POP			Transfer(_from, _to, _amount)
    POP			Transfer(_from, _to, _amount)
    PUSH 40		Transfer(_from, _to, _amount)
    MLOAD			Transfer(_from, _to, _amount)
    DUP1			Transfer(_from, _to, _amount)
    SWAP2			Transfer(_from, _to, _amount)
    SUB			Transfer(_from, _to, _amount)
    SWAP1			Transfer(_from, _to, _amount)
    LOG3			Transfer(_from, _to, _amount)
    PUSH 1		true
    SWAP1			return true
    POP			return true
    PUSH [tag390]		return true
    JUMP			return true
    PUSH [tag395]		if (balances[_from] >= _amount...
    JUMP			if (balances[_from] >= _amount...
  tag394: 
    JUMPDEST		if (balances[_from] >= _amount...
    PUSH 0		false
    SWAP1			return false
    POP			return false
    PUSH [tag390]		return false
    JUMP			return false
  tag395: 
    JUMPDEST		if (balances[_from] >= _amount...
  tag390: 
    JUMPDEST		function transferFrom(...
    SWAP4			function transferFrom(...
    SWAP3			function transferFrom(...
    POP			function transferFrom(...
    POP			function transferFrom(...
    POP			function transferFrom(...
    JUMP	[out]		function transferFrom(...
  tag248: 
    JUMPDEST		function closeProposal(uint _proposalID) internal {...
    PUSH 0		Proposal p
    PUSH 0		proposals
    PUSH 0		proposals
    POP			proposals
    DUP3			_proposalID
    DUP2			proposals[_proposalID]
    SLOAD			proposals[_proposalID]
    DUP2			proposals[_proposalID]
    LT			proposals[_proposalID]
    ISZERO			proposals[_proposalID]
    PUSH [ErrorTag]		proposals[_proposalID]
    JUMPI			proposals[_proposalID]
    SWAP1			proposals[_proposalID]
    PUSH 0		proposals[_proposalID]
    MSTORE			proposals[_proposalID]
    PUSH 20		proposals[_proposalID]
    PUSH 0		proposals[_proposalID]
    SHA3			proposals[_proposalID]
    SWAP1			proposals[_proposalID]
    PUSH E		proposals[_proposalID]
    MUL			proposals[_proposalID]
    ADD			proposals[_proposalID]
    PUSH 0		proposals[_proposalID]
  tag397: 
    JUMPDEST		proposals[_proposalID]
    POP			proposals[_proposalID]
    SWAP1			Proposal p = proposals[_proposalID]
    POP			Proposal p = proposals[_proposalID]
    DUP1			p
    PUSH 4		p.open
    ADD			p.open
    PUSH 0		p.open
    SWAP1			p.open
    SLOAD			p.open
    SWAP1			p.open
    PUSH 100		p.open
    EXP			p.open
    SWAP1			p.open
    DIV			p.open
    PUSH FF		p.open
    AND			p.open
    ISZERO			if (p.open)...
    PUSH [tag398]		if (p.open)...
    JUMPI			if (p.open)...
    DUP1			p
    PUSH 6		p.proposalDeposit
    ADD			p.proposalDeposit
    PUSH 0		p.proposalDeposit
    POP			p.proposalDeposit
    SLOAD			p.proposalDeposit
    PUSH D		sumOfProposalDeposits
    PUSH 0		sumOfProposalDeposits
    DUP3			sumOfProposalDeposits -= p.proposalDeposit
    DUP3			sumOfProposalDeposits -= p.proposalDeposit
    DUP3			sumOfProposalDeposits -= p.proposalDeposit
    POP			sumOfProposalDeposits -= p.proposalDeposit
    SLOAD			sumOfProposalDeposits -= p.proposalDeposit
    SUB			sumOfProposalDeposits -= p.proposalDeposit
    SWAP3			sumOfProposalDeposits -= p.proposalDeposit
    POP			sumOfProposalDeposits -= p.proposalDeposit
    POP			sumOfProposalDeposits -= p.proposalDeposit
    DUP2			sumOfProposalDeposits -= p.proposalDeposit
    SWAP1			sumOfProposalDeposits -= p.proposalDeposit
    SSTORE			sumOfProposalDeposits -= p.proposalDeposit
    POP			sumOfProposalDeposits -= p.proposalDeposit
  tag398: 
    JUMPDEST		if (p.open)...
    PUSH 0		false
    DUP2			p
    PUSH 4		p.open
    ADD			p.open
    PUSH 0		p.open
    PUSH 100		p.open = false
    EXP			p.open = false
    DUP2			p.open = false
    SLOAD			p.open = false
    DUP2			p.open = false
    PUSH FF		p.open = false
    MUL			p.open = false
    NOT			p.open = false
    AND			p.open = false
    SWAP1			p.open = false
    DUP4			p.open = false
    MUL			p.open = false
    OR			p.open = false
    SWAP1			p.open = false
    SSTORE			p.open = false
    POP			p.open = false
  tag396: 
    JUMPDEST		function closeProposal(uint _proposalID) internal {...
    POP			function closeProposal(uint _proposalID) internal {...
    POP			function closeProposal(uint _proposalID) internal {...
    JUMP	[out]		function closeProposal(uint _proposalID) internal {...
  tag317: 
    JUMPDEST		function withdrawRewardFor(address _account) noEther internal returns (bool _success) {...
    PUSH 0		bool _success
    PUSH 0		uint reward
    PUSH 0		0
    CALLVALUE			msg.value
    GT			msg.value > 0
    ISZERO			if (msg.value > 0) throw
    PUSH [tag400]		if (msg.value > 0) throw
    JUMPI			if (msg.value > 0) throw
    PUSH [ErrorTag]		throw
    JUMP			throw
  tag400: 
    JUMPDEST		if (msg.value > 0) throw
    PUSH A		paidOut
    PUSH 0		paidOut
    POP			paidOut
    PUSH 0		paidOut[_account]
    DUP5			_account
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		paidOut[_account]
    AND			paidOut[_account]
    DUP2			paidOut[_account]
    MSTORE			paidOut[_account]
    PUSH 20		paidOut[_account]
    ADD			paidOut[_account]
    SWAP1			paidOut[_account]
    DUP2			paidOut[_account]
    MSTORE			paidOut[_account]
    PUSH 20		paidOut[_account]
    ADD			paidOut[_account]
    PUSH 0		paidOut[_account]
    SHA3			paidOut[_account]
    PUSH 0		paidOut[_account]
    POP			paidOut[_account]
    SLOAD			paidOut[_account]
    PUSH 16		totalSupply
    PUSH 0		totalSupply
    POP			totalSupply
    SLOAD			totalSupply
    PUSH 7		rewardAccount
    PUSH 0		rewardAccount
    SWAP1			rewardAccount
    SLOAD			rewardAccount
    SWAP1			rewardAccount
    PUSH 100		rewardAccount
    EXP			rewardAccount
    SWAP1			rewardAccount
    DIV			rewardAccount
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		rewardAccount
    AND			rewardAccount
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		rewardAccount.accumulatedInput
    AND			rewardAccount.accumulatedInput
    PUSH D2CC718F		rewardAccount.accumulatedInput
    PUSH 40		rewardAccount.accumulatedInput()
    MLOAD			rewardAccount.accumulatedInput()
    DUP2			rewardAccount.accumulatedInput()
    PUSH 100000000000000000000000000000000000000000000000000000000		rewardAccount.accumulatedInput()
    MUL			rewardAccount.accumulatedInput()
    DUP2			rewardAccount.accumulatedInput()
    MSTORE			rewardAccount.accumulatedInput()
    PUSH 4		rewardAccount.accumulatedInput()
    ADD			rewardAccount.accumulatedInput()
    DUP1			rewardAccount.accumulatedInput()
    SWAP1			rewardAccount.accumulatedInput()
    POP			rewardAccount.accumulatedInput()
    PUSH 20		rewardAccount.accumulatedInput()
    PUSH 40		rewardAccount.accumulatedInput()
    MLOAD			rewardAccount.accumulatedInput()
    DUP1			rewardAccount.accumulatedInput()
    DUP4			rewardAccount.accumulatedInput()
    SUB			rewardAccount.accumulatedInput()
    DUP2			rewardAccount.accumulatedInput()
    PUSH 0		rewardAccount.accumulatedInput()
    DUP8			rewardAccount.accumulatedInput()
    PUSH 61DA		rewardAccount.accumulatedInput()
    GAS			rewardAccount.accumulatedInput()
    SUB			rewardAccount.accumulatedInput()
    CALL			rewardAccount.accumulatedInput()
    ISZERO			rewardAccount.accumulatedInput()
    PUSH [ErrorTag]		rewardAccount.accumulatedInput()
    JUMPI			rewardAccount.accumulatedInput()
    POP			rewardAccount.accumulatedInput()
    POP			rewardAccount.accumulatedInput()
    POP			rewardAccount.accumulatedInput()
    PUSH 40		rewardAccount.accumulatedInput()
    MLOAD			rewardAccount.accumulatedInput()
    DUP1			rewardAccount.accumulatedInput()
    MLOAD			rewardAccount.accumulatedInput()
    SWAP1			rewardAccount.accumulatedInput()
    PUSH 20		rewardAccount.accumulatedInput()
    ADD			rewardAccount.accumulatedInput()
    POP			rewardAccount.accumulatedInput()
    PUSH [tag401]		balanceOf(_account)
    DUP7			_account
    PUSH [tag104]		balanceOf
    JUMP	[in]		balanceOf(_account)
  tag401: 
    JUMPDEST		balanceOf(_account)
    MUL			balanceOf(_account) * rewardAccount.accumulatedInput()
    DIV			(balanceOf(_account) * rewardAccount.accumulatedInput()) / totalSupply
    LT			(balanceOf(_account) * rewardAccount.accumulatedInput()) / totalSupply < paidOut[_account]
    ISZERO			if ((balanceOf(_account) * rewardAccount.accumulatedInput()) / totalSupply < paidOut[_account])...
    PUSH [tag402]		if ((balanceOf(_account) * rewardAccount.accumulatedInput()) / totalSupply < paidOut[_account])...
    JUMPI			if ((balanceOf(_account) * rewardAccount.accumulatedInput()) / totalSupply < paidOut[_account])...
    PUSH [ErrorTag]		throw
    JUMP			throw
  tag402: 
    JUMPDEST		if ((balanceOf(_account) * rewardAccount.accumulatedInput()) / totalSupply < paidOut[_account])...
    PUSH A		paidOut
    PUSH 0		paidOut
    POP			paidOut
    PUSH 0		paidOut[_account]
    DUP5			_account
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		paidOut[_account]
    AND			paidOut[_account]
    DUP2			paidOut[_account]
    MSTORE			paidOut[_account]
    PUSH 20		paidOut[_account]
    ADD			paidOut[_account]
    SWAP1			paidOut[_account]
    DUP2			paidOut[_account]
    MSTORE			paidOut[_account]
    PUSH 20		paidOut[_account]
    ADD			paidOut[_account]
    PUSH 0		paidOut[_account]
    SHA3			paidOut[_account]
    PUSH 0		paidOut[_account]
    POP			paidOut[_account]
    SLOAD			paidOut[_account]
    PUSH 16		totalSupply
    PUSH 0		totalSupply
    POP			totalSupply
    SLOAD			totalSupply
    PUSH 7		rewardAccount
    PUSH 0		rewardAccount
    SWAP1			rewardAccount
    SLOAD			rewardAccount
    SWAP1			rewardAccount
    PUSH 100		rewardAccount
    EXP			rewardAccount
    SWAP1			rewardAccount
    DIV			rewardAccount
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		rewardAccount
    AND			rewardAccount
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		rewardAccount.accumulatedInput
    AND			rewardAccount.accumulatedInput
    PUSH D2CC718F		rewardAccount.accumulatedInput
    PUSH 40		rewardAccount.accumulatedInput()
    MLOAD			rewardAccount.accumulatedInput()
    DUP2			rewardAccount.accumulatedInput()
    PUSH 100000000000000000000000000000000000000000000000000000000		rewardAccount.accumulatedInput()
    MUL			rewardAccount.accumulatedInput()
    DUP2			rewardAccount.accumulatedInput()
    MSTORE			rewardAccount.accumulatedInput()
    PUSH 4		rewardAccount.accumulatedInput()
    ADD			rewardAccount.accumulatedInput()
    DUP1			rewardAccount.accumulatedInput()
    SWAP1			rewardAccount.accumulatedInput()
    POP			rewardAccount.accumulatedInput()
    PUSH 20		rewardAccount.accumulatedInput()
    PUSH 40		rewardAccount.accumulatedInput()
    MLOAD			rewardAccount.accumulatedInput()
    DUP1			rewardAccount.accumulatedInput()
    DUP4			rewardAccount.accumulatedInput()
    SUB			rewardAccount.accumulatedInput()
    DUP2			rewardAccount.accumulatedInput()
    PUSH 0		rewardAccount.accumulatedInput()
    DUP8			rewardAccount.accumulatedInput()
    PUSH 61DA		rewardAccount.accumulatedInput()
    GAS			rewardAccount.accumulatedInput()
    SUB			rewardAccount.accumulatedInput()
    CALL			rewardAccount.accumulatedInput()
    ISZERO			rewardAccount.accumulatedInput()
    PUSH [ErrorTag]		rewardAccount.accumulatedInput()
    JUMPI			rewardAccount.accumulatedInput()
    POP			rewardAccount.accumulatedInput()
    POP			rewardAccount.accumulatedInput()
    POP			rewardAccount.accumulatedInput()
    PUSH 40		rewardAccount.accumulatedInput()
    MLOAD			rewardAccount.accumulatedInput()
    DUP1			rewardAccount.accumulatedInput()
    MLOAD			rewardAccount.accumulatedInput()
    SWAP1			rewardAccount.accumulatedInput()
    PUSH 20		rewardAccount.accumulatedInput()
    ADD			rewardAccount.accumulatedInput()
    POP			rewardAccount.accumulatedInput()
    PUSH [tag403]		balanceOf(_account)
    DUP7			_account
    PUSH [tag104]		balanceOf
    JUMP	[in]		balanceOf(_account)
  tag403: 
    JUMPDEST		balanceOf(_account)
    MUL			balanceOf(_account) * rewardAccount.accumulatedInput()
    DIV			(balanceOf(_account) * rewardAccount.accumulatedInput()) / totalSupply
    SUB			(balanceOf(_account) * rewardAccount.accumulatedInput()) / totalSupply - paidOut[_account]
    SWAP1			uint reward =...
    POP			uint reward =...
    PUSH 7		rewardAccount
    PUSH 0		rewardAccount
    SWAP1			rewardAccount
    SLOAD			rewardAccount
    SWAP1			rewardAccount
    PUSH 100		rewardAccount
    EXP			rewardAccount
    SWAP1			rewardAccount
    DIV			rewardAccount
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		rewardAccount
    AND			rewardAccount
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		rewardAccount.payOut
    AND			rewardAccount.payOut
    PUSH 221038A		rewardAccount.payOut
    DUP5			_account
    DUP4			reward
    PUSH 40		rewardAccount.payOut(_account, reward)
    MLOAD			rewardAccount.payOut(_account, reward)
    DUP4			rewardAccount.payOut(_account, reward)
    PUSH 100000000000000000000000000000000000000000000000000000000		rewardAccount.payOut(_account, reward)
    MUL			rewardAccount.payOut(_account, reward)
    DUP2			rewardAccount.payOut(_account, reward)
    MSTORE			rewardAccount.payOut(_account, reward)
    PUSH 4		rewardAccount.payOut(_account, reward)
    ADD			rewardAccount.payOut(_account, reward)
    DUP1			rewardAccount.payOut(_account, reward)
    DUP4			rewardAccount.payOut(_account, reward)
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		rewardAccount.payOut(_account, reward)
    AND			rewardAccount.payOut(_account, reward)
    DUP2			rewardAccount.payOut(_account, reward)
    MSTORE			rewardAccount.payOut(_account, reward)
    PUSH 20		rewardAccount.payOut(_account, reward)
    ADD			rewardAccount.payOut(_account, reward)
    DUP3			rewardAccount.payOut(_account, reward)
    DUP2			rewardAccount.payOut(_account, reward)
    MSTORE			rewardAccount.payOut(_account, reward)
    PUSH 20		rewardAccount.payOut(_account, reward)
    ADD			rewardAccount.payOut(_account, reward)
    SWAP3			rewardAccount.payOut(_account, reward)
    POP			rewardAccount.payOut(_account, reward)
    POP			rewardAccount.payOut(_account, reward)
    POP			rewardAccount.payOut(_account, reward)
    PUSH 20		rewardAccount.payOut(_account, reward)
    PUSH 40		rewardAccount.payOut(_account, reward)
    MLOAD			rewardAccount.payOut(_account, reward)
    DUP1			rewardAccount.payOut(_account, reward)
    DUP4			rewardAccount.payOut(_account, reward)
    SUB			rewardAccount.payOut(_account, reward)
    DUP2			rewardAccount.payOut(_account, reward)
    PUSH 0		rewardAccount.payOut(_account, reward)
    DUP8			rewardAccount.payOut(_account, reward)
    PUSH 61DA		rewardAccount.payOut(_account, reward)
    GAS			rewardAccount.payOut(_account, reward)
    SUB			rewardAccount.payOut(_account, reward)
    CALL			rewardAccount.payOut(_account, reward)
    ISZERO			rewardAccount.payOut(_account, reward)
    PUSH [ErrorTag]		rewardAccount.payOut(_account, reward)
    JUMPI			rewardAccount.payOut(_account, reward)
    POP			rewardAccount.payOut(_account, reward)
    POP			rewardAccount.payOut(_account, reward)
    POP			rewardAccount.payOut(_account, reward)
    PUSH 40		rewardAccount.payOut(_account, reward)
    MLOAD			rewardAccount.payOut(_account, reward)
    DUP1			rewardAccount.payOut(_account, reward)
    MLOAD			rewardAccount.payOut(_account, reward)
    SWAP1			rewardAccount.payOut(_account, reward)
    PUSH 20		rewardAccount.payOut(_account, reward)
    ADD			rewardAccount.payOut(_account, reward)
    POP			rewardAccount.payOut(_account, reward)
    ISZERO			!rewardAccount.payOut(_account, reward)
    ISZERO			if (!rewardAccount.payOut(_account, reward))...
    PUSH [tag404]		if (!rewardAccount.payOut(_account, reward))...
    JUMPI			if (!rewardAccount.payOut(_account, reward))...
    PUSH [ErrorTag]		throw
    JUMP			throw
  tag404: 
    JUMPDEST		if (!rewardAccount.payOut(_account, reward))...
    DUP1			reward
    PUSH A		paidOut
    PUSH 0		paidOut
    POP			paidOut
    PUSH 0		paidOut[_account]
    DUP6			_account
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		paidOut[_account]
    AND			paidOut[_account]
    DUP2			paidOut[_account]
    MSTORE			paidOut[_account]
    PUSH 20		paidOut[_account]
    ADD			paidOut[_account]
    SWAP1			paidOut[_account]
    DUP2			paidOut[_account]
    MSTORE			paidOut[_account]
    PUSH 20		paidOut[_account]
    ADD			paidOut[_account]
    PUSH 0		paidOut[_account]
    SHA3			paidOut[_account]
    PUSH 0		paidOut[_account]
    DUP3			paidOut[_account] += reward
    DUP3			paidOut[_account] += reward
    DUP3			paidOut[_account] += reward
    POP			paidOut[_account] += reward
    SLOAD			paidOut[_account] += reward
    ADD			paidOut[_account] += reward
    SWAP3			paidOut[_account] += reward
    POP			paidOut[_account] += reward
    POP			paidOut[_account] += reward
    DUP2			paidOut[_account] += reward
    SWAP1			paidOut[_account] += reward
    SSTORE			paidOut[_account] += reward
    POP			paidOut[_account] += reward
    PUSH 1		true
    SWAP2			return true
    POP			return true
    PUSH [tag399]		return true
    JUMP			return true
  tag399: 
    JUMPDEST		function withdrawRewardFor(address _account) noEther internal returns (bool _success) {...
    POP			function withdrawRewardFor(address _account) noEther internal returns (bool _success) {...
    SWAP2			function withdrawRewardFor(address _account) noEther internal returns (bool _success) {...
    SWAP1			function withdrawRewardFor(address _account) noEther internal returns (bool _success) {...
    POP			function withdrawRewardFor(address _account) noEther internal returns (bool _success) {...
    JUMP	[out]		function withdrawRewardFor(address _account) noEther internal returns (bool _success) {...
  tag340: 
    JUMPDEST		function transferPaidOut(...
    PUSH 0		bool success
    PUSH 0		uint transferPaidOut
    PUSH [tag406]		balanceOf(_from)
    DUP6			_from
    PUSH [tag104]		balanceOf
    JUMP	[in]		balanceOf(_from)
  tag406: 
    JUMPDEST		balanceOf(_from)
    DUP4			_value
    PUSH A		paidOut
    PUSH 0		paidOut
    POP			paidOut
    PUSH 0		paidOut[_from]
    DUP9			_from
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		paidOut[_from]
    AND			paidOut[_from]
    DUP2			paidOut[_from]
    MSTORE			paidOut[_from]
    PUSH 20		paidOut[_from]
    ADD			paidOut[_from]
    SWAP1			paidOut[_from]
    DUP2			paidOut[_from]
    MSTORE			paidOut[_from]
    PUSH 20		paidOut[_from]
    ADD			paidOut[_from]
    PUSH 0		paidOut[_from]
    SHA3			paidOut[_from]
    PUSH 0		paidOut[_from]
    POP			paidOut[_from]
    SLOAD			paidOut[_from]
    MUL			paidOut[_from] * _value
    DIV			paidOut[_from] * _value / balanceOf(_from)
    SWAP1			uint transferPaidOut = paidOut[_from] * _value / balanceOf(_from)
    POP			uint transferPaidOut = paidOut[_from] * _value / balanceOf(_from)
    PUSH A		paidOut
    PUSH 0		paidOut
    POP			paidOut
    PUSH 0		paidOut[_from]
    DUP7			_from
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		paidOut[_from]
    AND			paidOut[_from]
    DUP2			paidOut[_from]
    MSTORE			paidOut[_from]
    PUSH 20		paidOut[_from]
    ADD			paidOut[_from]
    SWAP1			paidOut[_from]
    DUP2			paidOut[_from]
    MSTORE			paidOut[_from]
    PUSH 20		paidOut[_from]
    ADD			paidOut[_from]
    PUSH 0		paidOut[_from]
    SHA3			paidOut[_from]
    PUSH 0		paidOut[_from]
    POP			paidOut[_from]
    SLOAD			paidOut[_from]
    DUP2			transferPaidOut
    GT			transferPaidOut > paidOut[_from]
    ISZERO			if (transferPaidOut > paidOut[_from])...
    PUSH [tag407]		if (transferPaidOut > paidOut[_from])...
    JUMPI			if (transferPaidOut > paidOut[_from])...
    PUSH [ErrorTag]		throw
    JUMP			throw
  tag407: 
    JUMPDEST		if (transferPaidOut > paidOut[_from])...
    DUP1			transferPaidOut
    PUSH A		paidOut
    PUSH 0		paidOut
    POP			paidOut
    PUSH 0		paidOut[_from]
    DUP8			_from
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		paidOut[_from]
    AND			paidOut[_from]
    DUP2			paidOut[_from]
    MSTORE			paidOut[_from]
    PUSH 20		paidOut[_from]
    ADD			paidOut[_from]
    SWAP1			paidOut[_from]
    DUP2			paidOut[_from]
    MSTORE			paidOut[_from]
    PUSH 20		paidOut[_from]
    ADD			paidOut[_from]
    PUSH 0		paidOut[_from]
    SHA3			paidOut[_from]
    PUSH 0		paidOut[_from]
    DUP3			paidOut[_from] -= transferPaidOut
    DUP3			paidOut[_from] -= transferPaidOut
    DUP3			paidOut[_from] -= transferPaidOut
    POP			paidOut[_from] -= transferPaidOut
    SLOAD			paidOut[_from] -= transferPaidOut
    SUB			paidOut[_from] -= transferPaidOut
    SWAP3			paidOut[_from] -= transferPaidOut
    POP			paidOut[_from] -= transferPaidOut
    POP			paidOut[_from] -= transferPaidOut
    DUP2			paidOut[_from] -= transferPaidOut
    SWAP1			paidOut[_from] -= transferPaidOut
    SSTORE			paidOut[_from] -= transferPaidOut
    POP			paidOut[_from] -= transferPaidOut
    DUP1			transferPaidOut
    PUSH A		paidOut
    PUSH 0		paidOut
    POP			paidOut
    PUSH 0		paidOut[_to]
    DUP7			_to
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		paidOut[_to]
    AND			paidOut[_to]
    DUP2			paidOut[_to]
    MSTORE			paidOut[_to]
    PUSH 20		paidOut[_to]
    ADD			paidOut[_to]
    SWAP1			paidOut[_to]
    DUP2			paidOut[_to]
    MSTORE			paidOut[_to]
    PUSH 20		paidOut[_to]
    ADD			paidOut[_to]
    PUSH 0		paidOut[_to]
    SHA3			paidOut[_to]
    PUSH 0		paidOut[_to]
    DUP3			paidOut[_to] += transferPaidOut
    DUP3			paidOut[_to] += transferPaidOut
    DUP3			paidOut[_to] += transferPaidOut
    POP			paidOut[_to] += transferPaidOut
    SLOAD			paidOut[_to] += transferPaidOut
    ADD			paidOut[_to] += transferPaidOut
    SWAP3			paidOut[_to] += transferPaidOut
    POP			paidOut[_to] += transferPaidOut
    POP			paidOut[_to] += transferPaidOut
    DUP2			paidOut[_to] += transferPaidOut
    SWAP1			paidOut[_to] += transferPaidOut
    SSTORE			paidOut[_to] += transferPaidOut
    POP			paidOut[_to] += transferPaidOut
    PUSH 1		true
    SWAP2			return true
    POP			return true
    PUSH [tag405]		return true
    JUMP			return true
  tag405: 
    JUMPDEST		function transferPaidOut(...
    POP			function transferPaidOut(...
    SWAP4			function transferPaidOut(...
    SWAP3			function transferPaidOut(...
    POP			function transferPaidOut(...
    POP			function transferPaidOut(...
    POP			function transferPaidOut(...
    JUMP	[out]		function transferPaidOut(...
  tag186: 
    JUMPDEST		function isRecipientAllowed(address _recipient) internal returns (bool _isAllowed) {...
    PUSH 0		bool _isAllowed
    PUSH 4		allowedRecipients
    PUSH 0		allowedRecipients
    POP			allowedRecipients
    PUSH 0		allowedRecipients[_recipient]
    DUP4			_recipient
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		allowedRecipients[_recipient]
    AND			allowedRecipients[_recipient]
    DUP2			allowedRecipients[_recipient]
    MSTORE			allowedRecipients[_recipient]
    PUSH 20		allowedRecipients[_recipient]
    ADD			allowedRecipients[_recipient]
    SWAP1			allowedRecipients[_recipient]
    DUP2			allowedRecipients[_recipient]
    MSTORE			allowedRecipients[_recipient]
    PUSH 20		allowedRecipients[_recipient]
    ADD			allowedRecipients[_recipient]
    PUSH 0		allowedRecipients[_recipient]
    SHA3			allowedRecipients[_recipient]
    PUSH 0		allowedRecipients[_recipient]
    SWAP1			allowedRecipients[_recipient]
    SLOAD			allowedRecipients[_recipient]
    SWAP1			allowedRecipients[_recipient]
    PUSH 100		allowedRecipients[_recipient]
    EXP			allowedRecipients[_recipient]
    SWAP1			allowedRecipients[_recipient]
    DIV			allowedRecipients[_recipient]
    PUSH FF		allowedRecipients[_recipient]
    AND			allowedRecipients[_recipient]
    DUP1			allowedRecipients[_recipient]...
    PUSH [tag409]		allowedRecipients[_recipient]...
    JUMPI			allowedRecipients[_recipient]...
    POP			allowedRecipients[_recipient]...
    PUSH 12		extraBalance
    PUSH 0		extraBalance
    SWAP1			extraBalance
    SLOAD			extraBalance
    SWAP1			extraBalance
    PUSH 100		extraBalance
    EXP			extraBalance
    SWAP1			extraBalance
    DIV			extraBalance
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		extraBalance
    AND			extraBalance
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		_recipient == address(extraBalance)
    AND			_recipient == address(extraBalance)
    DUP3			_recipient
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		_recipient == address(extraBalance)
    AND			_recipient == address(extraBalance)
    EQ			_recipient == address(extraBalance)
    DUP1			_recipient == address(extraBalance)...
    ISZERO			_recipient == address(extraBalance)...
    PUSH [tag410]		_recipient == address(extraBalance)...
    JUMPI			_recipient == address(extraBalance)...
    POP			_recipient == address(extraBalance)...
    PUSH 12		extraBalance
    PUSH 0		extraBalance
    SWAP1			extraBalance
    SLOAD			extraBalance
    SWAP1			extraBalance
    PUSH 100		extraBalance
    EXP			extraBalance
    SWAP1			extraBalance
    DIV			extraBalance
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		extraBalance
    AND			extraBalance
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		extraBalance.accumulatedInput
    AND			extraBalance.accumulatedInput
    PUSH D2CC718F		extraBalance.accumulatedInput
    PUSH 40		extraBalance.accumulatedInput()
    MLOAD			extraBalance.accumulatedInput()
    DUP2			extraBalance.accumulatedInput()
    PUSH 100000000000000000000000000000000000000000000000000000000		extraBalance.accumulatedInput()
    MUL			extraBalance.accumulatedInput()
    DUP2			extraBalance.accumulatedInput()
    MSTORE			extraBalance.accumulatedInput()
    PUSH 4		extraBalance.accumulatedInput()
    ADD			extraBalance.accumulatedInput()
    DUP1			extraBalance.accumulatedInput()
    SWAP1			extraBalance.accumulatedInput()
    POP			extraBalance.accumulatedInput()
    PUSH 20		extraBalance.accumulatedInput()
    PUSH 40		extraBalance.accumulatedInput()
    MLOAD			extraBalance.accumulatedInput()
    DUP1			extraBalance.accumulatedInput()
    DUP4			extraBalance.accumulatedInput()
    SUB			extraBalance.accumulatedInput()
    DUP2			extraBalance.accumulatedInput()
    PUSH 0		extraBalance.accumulatedInput()
    DUP8			extraBalance.accumulatedInput()
    PUSH 61DA		extraBalance.accumulatedInput()
    GAS			extraBalance.accumulatedInput()
    SUB			extraBalance.accumulatedInput()
    CALL			extraBalance.accumulatedInput()
    ISZERO			extraBalance.accumulatedInput()
    PUSH [ErrorTag]		extraBalance.accumulatedInput()
    JUMPI			extraBalance.accumulatedInput()
    POP			extraBalance.accumulatedInput()
    POP			extraBalance.accumulatedInput()
    POP			extraBalance.accumulatedInput()
    PUSH 40		extraBalance.accumulatedInput()
    MLOAD			extraBalance.accumulatedInput()
    DUP1			extraBalance.accumulatedInput()
    MLOAD			extraBalance.accumulatedInput()
    SWAP1			extraBalance.accumulatedInput()
    PUSH 20		extraBalance.accumulatedInput()
    ADD			extraBalance.accumulatedInput()
    POP			extraBalance.accumulatedInput()
    PUSH 6		totalRewardToken
    PUSH 0		totalRewardToken
    POP			totalRewardToken
    SLOAD			totalRewardToken
    GT			totalRewardToken > extraBalance.accumulatedInput()
  tag410: 
    JUMPDEST		_recipient == address(extraBalance)...
  tag409: 
    JUMPDEST		allowedRecipients[_recipient]...
    ISZERO			if (allowedRecipients[_recipient]...
    PUSH [tag411]		if (allowedRecipients[_recipient]...
    JUMPI			if (allowedRecipients[_recipient]...
    PUSH 1		true
    SWAP1			return true
    POP			return true
    PUSH [tag408]		return true
    JUMP			return true
    PUSH [tag412]		if (allowedRecipients[_recipient]...
    JUMP			if (allowedRecipients[_recipient]...
  tag411: 
    JUMPDEST		if (allowedRecipients[_recipient]...
    PUSH 0		false
    SWAP1			return false
    POP			return false
    PUSH [tag408]		return false
    JUMP			return false
  tag412: 
    JUMPDEST		if (allowedRecipients[_recipient]...
  tag408: 
    JUMPDEST		function isRecipientAllowed(address _recipient) internal returns (bool _isAllowed) {...
    SWAP2			function isRecipientAllowed(address _recipient) internal returns (bool _isAllowed) {...
    SWAP1			function isRecipientAllowed(address _recipient) internal returns (bool _isAllowed) {...
    POP			function isRecipientAllowed(address _recipient) internal returns (bool _isAllowed) {...
    JUMP	[out]		function isRecipientAllowed(address _recipient) internal returns (bool _isAllowed) {...
  tag264: 
    JUMPDEST		function minQuorum(uint _value) internal constant returns (uint _minQuorum) {...
    PUSH 0		uint _minQuorum
    PUSH 5		rewardToken
    PUSH 0		rewardToken
    POP			rewardToken
    PUSH 0		rewardToken[address(this)]
    ADDRESS			this
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		rewardToken[address(this)]
    AND			rewardToken[address(this)]
    DUP2			rewardToken[address(this)]
    MSTORE			rewardToken[address(this)]
    PUSH 20		rewardToken[address(this)]
    ADD			rewardToken[address(this)]
    SWAP1			rewardToken[address(this)]
    DUP2			rewardToken[address(this)]
    MSTORE			rewardToken[address(this)]
    PUSH 20		rewardToken[address(this)]
    ADD			rewardToken[address(this)]
    PUSH 0		rewardToken[address(this)]
    SHA3			rewardToken[address(this)]
    PUSH 0		rewardToken[address(this)]
    POP			rewardToken[address(this)]
    SLOAD			rewardToken[address(this)]
    PUSH [tag414]		actualBalance()
    PUSH [tag86]		actualBalance
    JUMP	[in]		actualBalance()
  tag414: 
    JUMPDEST		actualBalance()
    ADD			actualBalance() + rewardToken[address(this)]
    PUSH 3		3
    MUL			3 * (actualBalance() + rewardToken[address(this)])
    PUSH 16		totalSupply
    PUSH 0		totalSupply
    POP			totalSupply
    SLOAD			totalSupply
    DUP4			_value
    MUL			_value * totalSupply
    DIV			(_value * totalSupply) / (3 * (actualBalance() + rewardToken[address(this)]))
    PUSH 1		minQuorumDivisor
    PUSH 0		minQuorumDivisor
    POP			minQuorumDivisor
    SLOAD			minQuorumDivisor
    PUSH 16		totalSupply
    PUSH 0		totalSupply
    POP			totalSupply
    SLOAD			totalSupply
    DIV			totalSupply / minQuorumDivisor
    ADD			totalSupply / minQuorumDivisor +...
    SWAP1			return totalSupply / minQuorumDivisor +...
    POP			return totalSupply / minQuorumDivisor +...
    PUSH [tag413]		return totalSupply / minQuorumDivisor +...
    JUMP			return totalSupply / minQuorumDivisor +...
  tag413: 
    JUMPDEST		function minQuorum(uint _value) internal constant returns (uint _minQuorum) {...
    SWAP2			function minQuorum(uint _value) internal constant returns (uint _minQuorum) {...
    SWAP1			function minQuorum(uint _value) internal constant returns (uint _minQuorum) {...
    POP			function minQuorum(uint _value) internal constant returns (uint _minQuorum) {...
    JUMP	[out]		function minQuorum(uint _value) internal constant returns (uint _minQuorum) {...
  tag297: 
    JUMPDEST		function createNewDAO(address _newCurator) internal returns (DAO _newDAO) {...
    PUSH 0		DAO _newDAO
    DUP2			_newCurator
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		NewCurator(_newCurator)
    AND			NewCurator(_newCurator)
    PUSH 9046FEFD66F538AB35263248A44217DCB70E2EB2CD136629E141B8B8F9F03B60		NewCurator(_newCurator)
    PUSH 40		NewCurator(_newCurator)
    MLOAD			NewCurator(_newCurator)
    DUP1			NewCurator(_newCurator)
    SWAP1			NewCurator(_newCurator)
    POP			NewCurator(_newCurator)
    PUSH 40		NewCurator(_newCurator)
    MLOAD			NewCurator(_newCurator)
    DUP1			NewCurator(_newCurator)
    SWAP2			NewCurator(_newCurator)
    SUB			NewCurator(_newCurator)
    SWAP1			NewCurator(_newCurator)
    LOG2			NewCurator(_newCurator)
    PUSH E		daoCreator
    PUSH 0		daoCreator
    SWAP1			daoCreator
    SLOAD			daoCreator
    SWAP1			daoCreator
    PUSH 100		daoCreator
    EXP			daoCreator
    SWAP1			daoCreator
    DIV			daoCreator
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		daoCreator
    AND			daoCreator
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		daoCreator.createDAO
    AND			daoCreator.createDAO
    PUSH E2FAF044		daoCreator.createDAO
    DUP4			_newCurator
    PUSH 0		0
    PUSH 0		0
    PUSH 239880		27 days
    TIMESTAMP			now
    ADD			now + splitExecutionPeriod
    PUSH 40		daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
    MLOAD			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
    DUP6			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
    PUSH 100000000000000000000000000000000000000000000000000000000		daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
    MUL			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
    DUP2			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
    MSTORE			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
    PUSH 4		daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
    ADD			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
    DUP1			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
    DUP6			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
    AND			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
    DUP2			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
    MSTORE			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
    PUSH 20		daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
    ADD			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
    DUP5			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
    DUP2			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
    MSTORE			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
    PUSH 20		daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
    ADD			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
    DUP4			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
    DUP2			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
    MSTORE			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
    PUSH 20		daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
    ADD			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
    DUP3			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
    DUP2			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
    MSTORE			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
    PUSH 20		daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
    ADD			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
    SWAP5			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
    POP			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
    POP			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
    POP			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
    POP			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
    POP			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
    PUSH 20		daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
    PUSH 40		daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
    MLOAD			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
    DUP1			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
    DUP4			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
    SUB			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
    DUP2			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
    PUSH 0		daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
    DUP8			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
    PUSH 61DA		daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
    GAS			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
    SUB			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
    CALL			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
    ISZERO			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
    PUSH [ErrorTag]		daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
    JUMPI			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
    POP			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
    POP			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
    POP			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
    PUSH 40		daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
    MLOAD			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
    DUP1			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
    MLOAD			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
    SWAP1			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
    PUSH 20		daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
    ADD			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
    POP			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
    SWAP1			return daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
    POP			return daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
    PUSH [tag415]		return daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
    JUMP			return daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
  tag415: 
    JUMPDEST		function createNewDAO(address _newCurator) internal returns (DAO _newDAO) {...
    SWAP2			function createNewDAO(address _newCurator) internal returns (DAO _newDAO) {...
    SWAP1			function createNewDAO(address _newCurator) internal returns (DAO _newDAO) {...
    POP			function createNewDAO(address _newCurator) internal returns (DAO _newDAO) {...
    JUMP	[out]		function createNewDAO(address _newCurator) internal returns (DAO _newDAO) {...
  tag337: 
    JUMPDEST		function isBlocked(address _account) internal returns (bool) {...
    PUSH 0		bool
    PUSH 0		Proposal p
    PUSH 0		0
    PUSH B		blocked
    PUSH 0		blocked
    POP			blocked
    PUSH 0		blocked[_account]
    DUP6			_account
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		blocked[_account]
    AND			blocked[_account]
    DUP2			blocked[_account]
    MSTORE			blocked[_account]
    PUSH 20		blocked[_account]
    ADD			blocked[_account]
    SWAP1			blocked[_account]
    DUP2			blocked[_account]
    MSTORE			blocked[_account]
    PUSH 20		blocked[_account]
    ADD			blocked[_account]
    PUSH 0		blocked[_account]
    SHA3			blocked[_account]
    PUSH 0		blocked[_account]
    POP			blocked[_account]
    SLOAD			blocked[_account]
    EQ			blocked[_account] == 0
    ISZERO			if (blocked[_account] == 0)...
    PUSH [tag417]		if (blocked[_account] == 0)...
    JUMPI			if (blocked[_account] == 0)...
    PUSH 0		false
    SWAP2			return false
    POP			return false
    PUSH [tag416]		return false
    JUMP			return false
  tag417: 
    JUMPDEST		if (blocked[_account] == 0)...
    PUSH 0		proposals
    PUSH 0		proposals
    POP			proposals
    PUSH B		blocked
    PUSH 0		blocked
    POP			blocked
    PUSH 0		blocked[_account]
    DUP6			_account
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		blocked[_account]
    AND			blocked[_account]
    DUP2			blocked[_account]
    MSTORE			blocked[_account]
    PUSH 20		blocked[_account]
    ADD			blocked[_account]
    SWAP1			blocked[_account]
    DUP2			blocked[_account]
    MSTORE			blocked[_account]
    PUSH 20		blocked[_account]
    ADD			blocked[_account]
    PUSH 0		blocked[_account]
    SHA3			blocked[_account]
    PUSH 0		blocked[_account]
    POP			blocked[_account]
    SLOAD			blocked[_account]
    DUP2			proposals[blocked[_account]]
    SLOAD			proposals[blocked[_account]]
    DUP2			proposals[blocked[_account]]
    LT			proposals[blocked[_account]]
    ISZERO			proposals[blocked[_account]]
    PUSH [ErrorTag]		proposals[blocked[_account]]
    JUMPI			proposals[blocked[_account]]
    SWAP1			proposals[blocked[_account]]
    PUSH 0		proposals[blocked[_account]]
    MSTORE			proposals[blocked[_account]]
    PUSH 20		proposals[blocked[_account]]
    PUSH 0		proposals[blocked[_account]]
    SHA3			proposals[blocked[_account]]
    SWAP1			proposals[blocked[_account]]
    PUSH E		proposals[blocked[_account]]
    MUL			proposals[blocked[_account]]
    ADD			proposals[blocked[_account]]
    PUSH 0		proposals[blocked[_account]]
  tag418: 
    JUMPDEST		proposals[blocked[_account]]
    POP			proposals[blocked[_account]]
    SWAP1			Proposal p = proposals[blocked[_account]]
    POP			Proposal p = proposals[blocked[_account]]
    DUP1			p
    PUSH 3		p.votingDeadline
    ADD			p.votingDeadline
    PUSH 0		p.votingDeadline
    POP			p.votingDeadline
    SLOAD			p.votingDeadline
    TIMESTAMP			now
    GT			now > p.votingDeadline
    ISZERO			if (now > p.votingDeadline) {...
    PUSH [tag419]		if (now > p.votingDeadline) {...
    JUMPI			if (now > p.votingDeadline) {...
    PUSH 0		0
    PUSH B		blocked
    PUSH 0		blocked
    POP			blocked
    PUSH 0		blocked[_account]
    DUP6			_account
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		blocked[_account]
    AND			blocked[_account]
    DUP2			blocked[_account]
    MSTORE			blocked[_account]
    PUSH 20		blocked[_account]
    ADD			blocked[_account]
    SWAP1			blocked[_account]
    DUP2			blocked[_account]
    MSTORE			blocked[_account]
    PUSH 20		blocked[_account]
    ADD			blocked[_account]
    PUSH 0		blocked[_account]
    SHA3			blocked[_account]
    PUSH 0		blocked[_account]
    POP			blocked[_account] = 0
    DUP2			blocked[_account] = 0
    SWAP1			blocked[_account] = 0
    SSTORE			blocked[_account] = 0
    POP			blocked[_account] = 0
    PUSH 0		false
    SWAP2			return false
    POP			return false
    PUSH [tag416]		return false
    JUMP			return false
    PUSH [tag420]		if (now > p.votingDeadline) {...
    JUMP			if (now > p.votingDeadline) {...
  tag419: 
    JUMPDEST		if (now > p.votingDeadline) {...
    PUSH 1		true
    SWAP2			return true
    POP			return true
    PUSH [tag416]		return true
    JUMP			return true
  tag420: 
    JUMPDEST		if (now > p.votingDeadline) {...
  tag416: 
    JUMPDEST		function isBlocked(address _account) internal returns (bool) {...
    POP			function isBlocked(address _account) internal returns (bool) {...
    SWAP2			function isBlocked(address _account) internal returns (bool) {...
    SWAP1			function isBlocked(address _account) internal returns (bool) {...
    POP			function isBlocked(address _account) internal returns (bool) {...
    JUMP	[out]		function isBlocked(address _account) internal returns (bool) {...

======= DAOInterface =======
EVM assembly:
Contract not fully implemented

======= DAO_Creator =======
EVM assembly:
.code:
  PUSH 60		contract DAO_Creator {...
  PUSH 40		contract DAO_Creator {...
  MSTORE			contract DAO_Creator {...
  PUSH #[$00000000…00000000]		contract DAO_Creator {...
  DUP1			contract DAO_Creator {...
  PUSH [$00000000…00000000]		contract DAO_Creator {...
  PUSH 0		contract DAO_Creator {...
  CODECOPY			contract DAO_Creator {...
  PUSH 0		contract DAO_Creator {...
  RETURN			contract DAO_Creator {...
.data:
  0: 
  .code:
    PUSH 60		contract DAO_Creator {...
    PUSH 40		contract DAO_Creator {...
    MSTORE			contract DAO_Creator {...
    PUSH 0		contract DAO_Creator {...
    CALLDATALOAD			contract DAO_Creator {...
    PUSH 100000000000000000000000000000000000000000000000000000000		contract DAO_Creator {...
    SWAP1			contract DAO_Creator {...
    DIV			contract DAO_Creator {...
    DUP1			contract DAO_Creator {...
    PUSH E2FAF044		contract DAO_Creator {...
    EQ			contract DAO_Creator {...
    PUSH [tag2]		contract DAO_Creator {...
    JUMPI			contract DAO_Creator {...
    PUSH [tag1]		contract DAO_Creator {...
    JUMP			contract DAO_Creator {...
  tag1: 
    JUMPDEST		contract DAO_Creator {...
    STOP			contract DAO_Creator {...
  tag2: 
    JUMPDEST		function createDAO(...
    PUSH [tag3]		function createDAO(...
    PUSH 4		function createDAO(...
    DUP1			function createDAO(...
    DUP1			function createDAO(...
    CALLDATALOAD			function createDAO(...
    SWAP1			function createDAO(...
    PUSH 20		function createDAO(...
    ADD			function createDAO(...
    SWAP1			function createDAO(...
    SWAP2			function createDAO(...
    SWAP1			function createDAO(...
    DUP1			function createDAO(...
    CALLDATALOAD			function createDAO(...
    SWAP1			function createDAO(...
    PUSH 20		function createDAO(...
    ADD			function createDAO(...
    SWAP1			function createDAO(...
    SWAP2			function createDAO(...
    SWAP1			function createDAO(...
    DUP1			function createDAO(...
    CALLDATALOAD			function createDAO(...
    SWAP1			function createDAO(...
    PUSH 20		function createDAO(...
    ADD			function createDAO(...
    SWAP1			function createDAO(...
    SWAP2			function createDAO(...
    SWAP1			function createDAO(...
    DUP1			function createDAO(...
    CALLDATALOAD			function createDAO(...
    SWAP1			function createDAO(...
    PUSH 20		function createDAO(...
    ADD			function createDAO(...
    SWAP1			function createDAO(...
    SWAP2			function createDAO(...
    SWAP1			function createDAO(...
    POP			function createDAO(...
    POP			function createDAO(...
    PUSH [tag4]		function createDAO(...
    JUMP			function createDAO(...
  tag3: 
    JUMPDEST		function createDAO(...
    PUSH 40		function createDAO(...
    MLOAD			function createDAO(...
    DUP1			function createDAO(...
    DUP3			function createDAO(...
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		function createDAO(...
    AND			function createDAO(...
    DUP2			function createDAO(...
    MSTORE			function createDAO(...
    PUSH 20		function createDAO(...
    ADD			function createDAO(...
    SWAP2			function createDAO(...
    POP			function createDAO(...
    POP			function createDAO(...
    PUSH 40		function createDAO(...
    MLOAD			function createDAO(...
    DUP1			function createDAO(...
    SWAP2			function createDAO(...
    SUB			function createDAO(...
    SWAP1			function createDAO(...
    RETURN			function createDAO(...
  tag4: 
    JUMPDEST		function createDAO(...
    PUSH 0		DAO _newDAO
    DUP5			_curator
    ADDRESS			this
    DUP6			_proposalDeposit
    DUP6			_minTokensToCreate
    DUP6			_closingTime
    CALLER			msg.sender
    PUSH 40		new DAO(...
    MLOAD			new DAO(...
    PUSH #[$00000000…00000000]		new DAO(...
    DUP1			new DAO(...
    PUSH [$00000000…00000000]		new DAO(...
    DUP4			new DAO(...
    CODECOPY			new DAO(...
    ADD			new DAO(...
    DUP1			new DAO(...
    DUP8			new DAO(...
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		new DAO(...
    AND			new DAO(...
    DUP2			new DAO(...
    MSTORE			new DAO(...
    PUSH 20		new DAO(...
    ADD			new DAO(...
    DUP7			new DAO(...
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		new DAO(...
    AND			new DAO(...
    DUP2			new DAO(...
    MSTORE			new DAO(...
    PUSH 20		new DAO(...
    ADD			new DAO(...
    DUP6			new DAO(...
    DUP2			new DAO(...
    MSTORE			new DAO(...
    PUSH 20		new DAO(...
    ADD			new DAO(...
    DUP5			new DAO(...
    DUP2			new DAO(...
    MSTORE			new DAO(...
    PUSH 20		new DAO(...
    ADD			new DAO(...
    DUP4			new DAO(...
    DUP2			new DAO(...
    MSTORE			new DAO(...
    PUSH 20		new DAO(...
    ADD			new DAO(...
    DUP3			new DAO(...
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		new DAO(...
    AND			new DAO(...
    DUP2			new DAO(...
    MSTORE			new DAO(...
    PUSH 20		new DAO(...
    ADD			new DAO(...
    SWAP7			new DAO(...
    POP			new DAO(...
    POP			new DAO(...
    POP			new DAO(...
    POP			new DAO(...
    POP			new DAO(...
    POP			new DAO(...
    POP			new DAO(...
    PUSH 40		new DAO(...
    MLOAD			new DAO(...
    DUP1			new DAO(...
    SWAP2			new DAO(...
    SUB			new DAO(...
    SWAP1			new DAO(...
    PUSH 0		new DAO(...
    CREATE			new DAO(...
    SWAP1			return new DAO(...
    POP			return new DAO(...
    PUSH [tag5]		return new DAO(...
    JUMP			return new DAO(...
  tag5: 
    JUMPDEST		function createDAO(...
    SWAP5			function createDAO(...
    SWAP4			function createDAO(...
    POP			function createDAO(...
    POP			function createDAO(...
    POP			function createDAO(...
    POP			function createDAO(...
    JUMP	[out]		function createDAO(...
  .data:
    0: 
    .code:
      PUSH 60		contract DAO is DAOInterface, Token, TokenCreation {...
      PUSH 40		contract DAO is DAOInterface, Token, TokenCreation {...
      MSTORE			contract DAO is DAOInterface, Token, TokenCreation {...
      PUSH 40		function DAO(...
      MLOAD			function DAO(...
      PUSH C0		function DAO(...
      DUP1			function DAO(...
      PUSHSIZE		function DAO(...
      DUP4			function DAO(...
      CODECOPY			function DAO(...
      DUP2			function DAO(...
      ADD			function DAO(...
      PUSH 40		function DAO(...
      MSTORE			function DAO(...
      DUP1			function DAO(...
      DUP1			function DAO(...
      MLOAD			function DAO(...
      SWAP1			function DAO(...
      PUSH 20		function DAO(...
      ADD			function DAO(...
      SWAP1			function DAO(...
      SWAP2			function DAO(...
      SWAP1			function DAO(...
      DUP1			function DAO(...
      MLOAD			function DAO(...
      SWAP1			function DAO(...
      PUSH 20		function DAO(...
      ADD			function DAO(...
      SWAP1			function DAO(...
      SWAP2			function DAO(...
      SWAP1			function DAO(...
      DUP1			function DAO(...
      MLOAD			function DAO(...
      SWAP1			function DAO(...
      PUSH 20		function DAO(...
      ADD			function DAO(...
      SWAP1			function DAO(...
      SWAP2			function DAO(...
      SWAP1			function DAO(...
      DUP1			function DAO(...
      MLOAD			function DAO(...
      SWAP1			function DAO(...
      PUSH 20		function DAO(...
      ADD			function DAO(...
      SWAP1			function DAO(...
      SWAP2			function DAO(...
      SWAP1			function DAO(...
      DUP1			function DAO(...
      MLOAD			function DAO(...
      SWAP1			function DAO(...
      PUSH 20		function DAO(...
      ADD			function DAO(...
      SWAP1			function DAO(...
      SWAP2			function DAO(...
      SWAP1			function DAO(...
      DUP1			function DAO(...
      MLOAD			function DAO(...
      SWAP1			function DAO(...
      PUSH 20		function DAO(...
      ADD			function DAO(...
      SWAP1			function DAO(...
      SWAP2			function DAO(...
      SWAP1			function DAO(...
      POP			function DAO(...
      POP			function DAO(...
    tag1: 
      JUMPDEST		function DAO(...
      DUP3			_minTokensToCreate
      DUP3			_closingTime
      DUP3			_privateCreation
    tag2: 
      JUMPDEST		function TokenCreation(...
      DUP2			_closingTime
      PUSH F		closingTime
      PUSH 0		closingTime
      POP			closingTime = _closingTime
      DUP2			closingTime = _closingTime
      SWAP1			closingTime = _closingTime
      SSTORE			closingTime = _closingTime
      POP			closingTime = _closingTime
      DUP3			_minTokensToCreate
      PUSH 10		minTokensToCreate
      PUSH 0		minTokensToCreate
      POP			minTokensToCreate = _minTokensToCreate
      DUP2			minTokensToCreate = _minTokensToCreate
      SWAP1			minTokensToCreate = _minTokensToCreate
      SSTORE			minTokensToCreate = _minTokensToCreate
      POP			minTokensToCreate = _minTokensToCreate
      DUP1			_privateCreation
      PUSH 11		privateCreation
      PUSH 1		privateCreation
      PUSH 100		privateCreation = _privateCreation
      EXP			privateCreation = _privateCreation
      DUP2			privateCreation = _privateCreation
      SLOAD			privateCreation = _privateCreation
      DUP2			privateCreation = _privateCreation
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		privateCreation = _privateCreation
      MUL			privateCreation = _privateCreation
      NOT			privateCreation = _privateCreation
      AND			privateCreation = _privateCreation
      SWAP1			privateCreation = _privateCreation
      DUP4			privateCreation = _privateCreation
      MUL			privateCreation = _privateCreation
      OR			privateCreation = _privateCreation
      SWAP1			privateCreation = _privateCreation
      SSTORE			privateCreation = _privateCreation
      POP			privateCreation = _privateCreation
      ADDRESS			this
      PUSH 1		true
      PUSH 40		new ManagedAccount(address(this), true)
      MLOAD			new ManagedAccount(address(this), true)
      PUSH #[$00000000…00000000]		new ManagedAccount(address(this), true)
      DUP1			new ManagedAccount(address(this), true)
      PUSH [$00000000…00000000]		new ManagedAccount(address(this), true)
      DUP4			new ManagedAccount(address(this), true)
      CODECOPY			new ManagedAccount(address(this), true)
      ADD			new ManagedAccount(address(this), true)
      DUP1			new ManagedAccount(address(this), true)
      DUP4			new ManagedAccount(address(this), true)
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		new ManagedAccount(address(this), true)
      AND			new ManagedAccount(address(this), true)
      DUP2			new ManagedAccount(address(this), true)
      MSTORE			new ManagedAccount(address(this), true)
      PUSH 20		new ManagedAccount(address(this), true)
      ADD			new ManagedAccount(address(this), true)
      DUP3			new ManagedAccount(address(this), true)
      DUP2			new ManagedAccount(address(this), true)
      MSTORE			new ManagedAccount(address(this), true)
      PUSH 20		new ManagedAccount(address(this), true)
      ADD			new ManagedAccount(address(this), true)
      SWAP3			new ManagedAccount(address(this), true)
      POP			new ManagedAccount(address(this), true)
      POP			new ManagedAccount(address(this), true)
      POP			new ManagedAccount(address(this), true)
      PUSH 40		new ManagedAccount(address(this), true)
      MLOAD			new ManagedAccount(address(this), true)
      DUP1			new ManagedAccount(address(this), true)
      SWAP2			new ManagedAccount(address(this), true)
      SUB			new ManagedAccount(address(this), true)
      SWAP1			new ManagedAccount(address(this), true)
      PUSH 0		new ManagedAccount(address(this), true)
      CREATE			new ManagedAccount(address(this), true)
      PUSH 12		extraBalance
      PUSH 0		extraBalance
      PUSH 100		extraBalance = new ManagedAccount(address(this), true)
      EXP			extraBalance = new ManagedAccount(address(this), true)
      DUP2			extraBalance = new ManagedAccount(address(this), true)
      SLOAD			extraBalance = new ManagedAccount(address(this), true)
      DUP2			extraBalance = new ManagedAccount(address(this), true)
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		extraBalance = new ManagedAccount(address(this), true)
      MUL			extraBalance = new ManagedAccount(address(this), true)
      NOT			extraBalance = new ManagedAccount(address(this), true)
      AND			extraBalance = new ManagedAccount(address(this), true)
      SWAP1			extraBalance = new ManagedAccount(address(this), true)
      DUP4			extraBalance = new ManagedAccount(address(this), true)
      MUL			extraBalance = new ManagedAccount(address(this), true)
      OR			extraBalance = new ManagedAccount(address(this), true)
      SWAP1			extraBalance = new ManagedAccount(address(this), true)
      SSTORE			extraBalance = new ManagedAccount(address(this), true)
      POP			extraBalance = new ManagedAccount(address(this), true)
    tag3: 
      JUMPDEST		function TokenCreation(...
      POP			function TokenCreation(...
      POP			function TokenCreation(...
      POP			function TokenCreation(...
      DUP6			_curator
      PUSH 3		curator
      PUSH 0		curator
      PUSH 100		curator = _curator
      EXP			curator = _curator
      DUP2			curator = _curator
      SLOAD			curator = _curator
      DUP2			curator = _curator
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		curator = _curator
      MUL			curator = _curator
      NOT			curator = _curator
      AND			curator = _curator
      SWAP1			curator = _curator
      DUP4			curator = _curator
      MUL			curator = _curator
      OR			curator = _curator
      SWAP1			curator = _curator
      SSTORE			curator = _curator
      POP			curator = _curator
      DUP5			_daoCreator
      PUSH E		daoCreator
      PUSH 0		daoCreator
      PUSH 100		daoCreator = _daoCreator
      EXP			daoCreator = _daoCreator
      DUP2			daoCreator = _daoCreator
      SLOAD			daoCreator = _daoCreator
      DUP2			daoCreator = _daoCreator
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		daoCreator = _daoCreator
      MUL			daoCreator = _daoCreator
      NOT			daoCreator = _daoCreator
      AND			daoCreator = _daoCreator
      SWAP1			daoCreator = _daoCreator
      DUP4			daoCreator = _daoCreator
      MUL			daoCreator = _daoCreator
      OR			daoCreator = _daoCreator
      SWAP1			daoCreator = _daoCreator
      SSTORE			daoCreator = _daoCreator
      POP			daoCreator = _daoCreator
      DUP4			_proposalDeposit
      PUSH C		proposalDeposit
      PUSH 0		proposalDeposit
      POP			proposalDeposit = _proposalDeposit
      DUP2			proposalDeposit = _proposalDeposit
      SWAP1			proposalDeposit = _proposalDeposit
      SSTORE			proposalDeposit = _proposalDeposit
      POP			proposalDeposit = _proposalDeposit
      ADDRESS			this
      PUSH 0		false
      PUSH 40		new ManagedAccount(address(this), false)
      MLOAD			new ManagedAccount(address(this), false)
      PUSH #[$00000000…00000001]		new ManagedAccount(address(this), false)
      DUP1			new ManagedAccount(address(this), false)
      PUSH [$00000000…00000001]		new ManagedAccount(address(this), false)
      DUP4			new ManagedAccount(address(this), false)
      CODECOPY			new ManagedAccount(address(this), false)
      ADD			new ManagedAccount(address(this), false)
      DUP1			new ManagedAccount(address(this), false)
      DUP4			new ManagedAccount(address(this), false)
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		new ManagedAccount(address(this), false)
      AND			new ManagedAccount(address(this), false)
      DUP2			new ManagedAccount(address(this), false)
      MSTORE			new ManagedAccount(address(this), false)
      PUSH 20		new ManagedAccount(address(this), false)
      ADD			new ManagedAccount(address(this), false)
      DUP3			new ManagedAccount(address(this), false)
      DUP2			new ManagedAccount(address(this), false)
      MSTORE			new ManagedAccount(address(this), false)
      PUSH 20		new ManagedAccount(address(this), false)
      ADD			new ManagedAccount(address(this), false)
      SWAP3			new ManagedAccount(address(this), false)
      POP			new ManagedAccount(address(this), false)
      POP			new ManagedAccount(address(this), false)
      POP			new ManagedAccount(address(this), false)
      PUSH 40		new ManagedAccount(address(this), false)
      MLOAD			new ManagedAccount(address(this), false)
      DUP1			new ManagedAccount(address(this), false)
      SWAP2			new ManagedAccount(address(this), false)
      SUB			new ManagedAccount(address(this), false)
      SWAP1			new ManagedAccount(address(this), false)
      PUSH 0		new ManagedAccount(address(this), false)
      CREATE			new ManagedAccount(address(this), false)
      PUSH 7		rewardAccount
      PUSH 0		rewardAccount
      PUSH 100		rewardAccount = new ManagedAccount(address(this), false)
      EXP			rewardAccount = new ManagedAccount(address(this), false)
      DUP2			rewardAccount = new ManagedAccount(address(this), false)
      SLOAD			rewardAccount = new ManagedAccount(address(this), false)
      DUP2			rewardAccount = new ManagedAccount(address(this), false)
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		rewardAccount = new ManagedAccount(address(this), false)
      MUL			rewardAccount = new ManagedAccount(address(this), false)
      NOT			rewardAccount = new ManagedAccount(address(this), false)
      AND			rewardAccount = new ManagedAccount(address(this), false)
      SWAP1			rewardAccount = new ManagedAccount(address(this), false)
      DUP4			rewardAccount = new ManagedAccount(address(this), false)
      MUL			rewardAccount = new ManagedAccount(address(this), false)
      OR			rewardAccount = new ManagedAccount(address(this), false)
      SWAP1			rewardAccount = new ManagedAccount(address(this), false)
      SSTORE			rewardAccount = new ManagedAccount(address(this), false)
      POP			rewardAccount = new ManagedAccount(address(this), false)
      ADDRESS			this
      PUSH 0		false
      PUSH 40		new ManagedAccount(address(this), false)
      MLOAD			new ManagedAccount(address(this), false)
      PUSH #[$00000000…00000002]		new ManagedAccount(address(this), false)
      DUP1			new ManagedAccount(address(this), false)
      PUSH [$00000000…00000002]		new ManagedAccount(address(this), false)
      DUP4			new ManagedAccount(address(this), false)
      CODECOPY			new ManagedAccount(address(this), false)
      ADD			new ManagedAccount(address(this), false)
      DUP1			new ManagedAccount(address(this), false)
      DUP4			new ManagedAccount(address(this), false)
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		new ManagedAccount(address(this), false)
      AND			new ManagedAccount(address(this), false)
      DUP2			new ManagedAccount(address(this), false)
      MSTORE			new ManagedAccount(address(this), false)
      PUSH 20		new ManagedAccount(address(this), false)
      ADD			new ManagedAccount(address(this), false)
      DUP3			new ManagedAccount(address(this), false)
      DUP2			new ManagedAccount(address(this), false)
      MSTORE			new ManagedAccount(address(this), false)
      PUSH 20		new ManagedAccount(address(this), false)
      ADD			new ManagedAccount(address(this), false)
      SWAP3			new ManagedAccount(address(this), false)
      POP			new ManagedAccount(address(this), false)
      POP			new ManagedAccount(address(this), false)
      POP			new ManagedAccount(address(this), false)
      PUSH 40		new ManagedAccount(address(this), false)
      MLOAD			new ManagedAccount(address(this), false)
      DUP1			new ManagedAccount(address(this), false)
      SWAP2			new ManagedAccount(address(this), false)
      SUB			new ManagedAccount(address(this), false)
      SWAP1			new ManagedAccount(address(this), false)
      PUSH 0		new ManagedAccount(address(this), false)
      CREATE			new ManagedAccount(address(this), false)
      PUSH 8		DAOrewardAccount
      PUSH 0		DAOrewardAccount
      PUSH 100		DAOrewardAccount = new ManagedAccount(address(this), false)
      EXP			DAOrewardAccount = new ManagedAccount(address(this), false)
      DUP2			DAOrewardAccount = new ManagedAccount(address(this), false)
      SLOAD			DAOrewardAccount = new ManagedAccount(address(this), false)
      DUP2			DAOrewardAccount = new ManagedAccount(address(this), false)
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		DAOrewardAccount = new ManagedAccount(address(this), false)
      MUL			DAOrewardAccount = new ManagedAccount(address(this), false)
      NOT			DAOrewardAccount = new ManagedAccount(address(this), false)
      AND			DAOrewardAccount = new ManagedAccount(address(this), false)
      SWAP1			DAOrewardAccount = new ManagedAccount(address(this), false)
      DUP4			DAOrewardAccount = new ManagedAccount(address(this), false)
      MUL			DAOrewardAccount = new ManagedAccount(address(this), false)
      OR			DAOrewardAccount = new ManagedAccount(address(this), false)
      SWAP1			DAOrewardAccount = new ManagedAccount(address(this), false)
      SSTORE			DAOrewardAccount = new ManagedAccount(address(this), false)
      POP			DAOrewardAccount = new ManagedAccount(address(this), false)
      PUSH 0		0
      PUSH 7		rewardAccount
      PUSH 0		rewardAccount
      SWAP1			rewardAccount
      SLOAD			rewardAccount
      SWAP1			rewardAccount
      PUSH 100		rewardAccount
      EXP			rewardAccount
      SWAP1			rewardAccount
      DIV			rewardAccount
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		rewardAccount
      AND			rewardAccount
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		address(rewardAccount) == 0
      AND			address(rewardAccount) == 0
      EQ			address(rewardAccount) == 0
      ISZERO			if (address(rewardAccount) == 0)...
      PUSH [tag5]		if (address(rewardAccount) == 0)...
      JUMPI			if (address(rewardAccount) == 0)...
      PUSH [ErrorTag]		throw
      JUMP			throw
    tag5: 
      JUMPDEST		if (address(rewardAccount) == 0)...
      PUSH 0		0
      PUSH 8		DAOrewardAccount
      PUSH 0		DAOrewardAccount
      SWAP1			DAOrewardAccount
      SLOAD			DAOrewardAccount
      SWAP1			DAOrewardAccount
      PUSH 100		DAOrewardAccount
      EXP			DAOrewardAccount
      SWAP1			DAOrewardAccount
      DIV			DAOrewardAccount
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		DAOrewardAccount
      AND			DAOrewardAccount
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		address(DAOrewardAccount) == 0
      AND			address(DAOrewardAccount) == 0
      EQ			address(DAOrewardAccount) == 0
      ISZERO			if (address(DAOrewardAccount) == 0)...
      PUSH [tag6]		if (address(DAOrewardAccount) == 0)...
      JUMPI			if (address(DAOrewardAccount) == 0)...
      PUSH [ErrorTag]		throw
      JUMP			throw
    tag6: 
      JUMPDEST		if (address(DAOrewardAccount) == 0)...
      TIMESTAMP			now
      PUSH 2		lastTimeMinQuorumMet
      PUSH 0		lastTimeMinQuorumMet
      POP			lastTimeMinQuorumMet = now
      DUP2			lastTimeMinQuorumMet = now
      SWAP1			lastTimeMinQuorumMet = now
      SSTORE			lastTimeMinQuorumMet = now
      POP			lastTimeMinQuorumMet = now
      PUSH 5		5
      PUSH 1		minQuorumDivisor
      PUSH 0		minQuorumDivisor
      POP			minQuorumDivisor = 5
      DUP2			minQuorumDivisor = 5
      SWAP1			minQuorumDivisor = 5
      SSTORE			minQuorumDivisor = 5
      POP			minQuorumDivisor = 5
      PUSH 1		1
      PUSH 0		proposals
      PUSH 0		proposals
      POP			proposals
      DUP2			proposals.length = 1
      DUP2			proposals.length = 1
      SLOAD			proposals.length = 1
      DUP2			proposals.length = 1
      DUP4			proposals.length = 1
      SSTORE			proposals.length = 1
      DUP2			proposals.length = 1
      DUP2			proposals.length = 1
      ISZERO			proposals.length = 1
      GT			proposals.length = 1
      PUSH [tag7]		proposals.length = 1
      JUMPI			proposals.length = 1
      PUSH E		proposals.length = 1
      MUL			proposals.length = 1
      DUP2			proposals.length = 1
      PUSH E		proposals.length = 1
      MUL			proposals.length = 1
      DUP4			proposals.length = 1
      PUSH 0		proposals.length = 1
      MSTORE			proposals.length = 1
      PUSH 20		proposals.length = 1
      PUSH 0		proposals.length = 1
      SHA3			proposals.length = 1
      SWAP2			proposals.length = 1
      DUP3			proposals.length = 1
      ADD			proposals.length = 1
      SWAP2			proposals.length = 1
      ADD			proposals.length = 1
      PUSH [tag8]		proposals.length = 1
      SWAP2			proposals.length = 1
      SWAP1			proposals.length = 1
      PUSH [tag9]		proposals.length = 1
      JUMP			proposals.length = 1
    tag9: 
      JUMPDEST		proposals.length = 1
      DUP1			proposals.length = 1
      DUP3			proposals.length = 1
      GT			proposals.length = 1
      ISZERO			proposals.length = 1
      PUSH [tag10]		proposals.length = 1
      JUMPI			proposals.length = 1
      PUSH 0		proposals.length = 1
      PUSH 0		proposals.length = 1
      DUP3			proposals.length = 1
      ADD			proposals.length = 1
      PUSH 0		proposals.length = 1
      PUSH 100		proposals.length = 1
      EXP			proposals.length = 1
      DUP2			proposals.length = 1
      SLOAD			proposals.length = 1
      SWAP1			proposals.length = 1
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		proposals.length = 1
      MUL			proposals.length = 1
      NOT			proposals.length = 1
      AND			proposals.length = 1
      SWAP1			proposals.length = 1
      SSTORE			proposals.length = 1
      PUSH 1		proposals.length = 1
      DUP3			proposals.length = 1
      ADD			proposals.length = 1
      PUSH 0		proposals.length = 1
      POP			proposals.length = 1
      PUSH 0		proposals.length = 1
      SWAP1			proposals.length = 1
      SSTORE			proposals.length = 1
      PUSH 2		proposals.length = 1
      DUP3			proposals.length = 1
      ADD			proposals.length = 1
      PUSH 0		proposals.length = 1
      POP			proposals.length = 1
      DUP1			proposals.length = 1
      SLOAD			proposals.length = 1
      PUSH 1		proposals.length = 1
      DUP2			proposals.length = 1
      PUSH 1		proposals.length = 1
      AND			proposals.length = 1
      ISZERO			proposals.length = 1
      PUSH 100		proposals.length = 1
      MUL			proposals.length = 1
      SUB			proposals.length = 1
      AND			proposals.length = 1
      PUSH 2		proposals.length = 1
      SWAP1			proposals.length = 1
      DIV			proposals.length = 1
      PUSH 0		proposals.length = 1
      DUP3			proposals.length = 1
      SSTORE			proposals.length = 1
      DUP1			proposals.length = 1
      PUSH 1F		proposals.length = 1
      LT			proposals.length = 1
      PUSH [tag12]		proposals.length = 1
      JUMPI			proposals.length = 1
      POP			proposals.length = 1
      PUSH [tag11]		proposals.length = 1
      JUMP			proposals.length = 1
    tag12: 
      JUMPDEST		proposals.length = 1
      PUSH 1F		proposals.length = 1
      ADD			proposals.length = 1
      PUSH 20		proposals.length = 1
      SWAP1			proposals.length = 1
      DIV			proposals.length = 1
      SWAP1			proposals.length = 1
      PUSH 0		proposals.length = 1
      MSTORE			proposals.length = 1
      PUSH 20		proposals.length = 1
      PUSH 0		proposals.length = 1
      SHA3			proposals.length = 1
      SWAP1			proposals.length = 1
      DUP2			proposals.length = 1
      ADD			proposals.length = 1
      SWAP1			proposals.length = 1
      PUSH [tag13]		proposals.length = 1
      SWAP2			proposals.length = 1
      SWAP1			proposals.length = 1
      PUSH [tag14]		proposals.length = 1
      JUMP			proposals.length = 1
    tag14: 
      JUMPDEST		proposals.length = 1
      DUP1			proposals.length = 1
      DUP3			proposals.length = 1
      GT			proposals.length = 1
      ISZERO			proposals.length = 1
      PUSH [tag15]		proposals.length = 1
      JUMPI			proposals.length = 1
      PUSH 0		proposals.length = 1
      DUP2			proposals.length = 1
      DUP2			proposals.length = 1
      POP			proposals.length = 1
      PUSH 0		proposals.length = 1
      SWAP1			proposals.length = 1
      SSTORE			proposals.length = 1
      POP			proposals.length = 1
      PUSH 1		proposals.length = 1
      ADD			proposals.length = 1
      PUSH [tag14]		proposals.length = 1
      JUMP			proposals.length = 1
    tag15: 
      JUMPDEST		proposals.length = 1
      POP			proposals.length = 1
      SWAP1			proposals.length = 1
      JUMP			proposals.length = 1
    tag13: 
      JUMPDEST		proposals.length = 1
    tag11: 
      JUMPDEST		proposals.length = 1
      POP			proposals.length = 1
      PUSH 3		proposals.length = 1
      DUP3			proposals.length = 1
      ADD			proposals.length = 1
      PUSH 0		proposals.length = 1
      POP			proposals.length = 1
      PUSH 0		proposals.length = 1
      SWAP1			proposals.length = 1
      SSTORE			proposals.length = 1
      PUSH 4		proposals.length = 1
      DUP3			proposals.length = 1
      ADD			proposals.length = 1
      PUSH 0		proposals.length = 1
      PUSH 100		proposals.length = 1
      EXP			proposals.length = 1
      DUP2			proposals.length = 1
      SLOAD			proposals.length = 1
      SWAP1			proposals.length = 1
      PUSH FF		proposals.length = 1
      MUL			proposals.length = 1
      NOT			proposals.length = 1
      AND			proposals.length = 1
      SWAP1			proposals.length = 1
      SSTORE			proposals.length = 1
      PUSH 4		proposals.length = 1
      DUP3			proposals.length = 1
      ADD			proposals.length = 1
      PUSH 1		proposals.length = 1
      PUSH 100		proposals.length = 1
      EXP			proposals.length = 1
      DUP2			proposals.length = 1
      SLOAD			proposals.length = 1
      SWAP1			proposals.length = 1
      PUSH FF		proposals.length = 1
      MUL			proposals.length = 1
      NOT			proposals.length = 1
      AND			proposals.length = 1
      SWAP1			proposals.length = 1
      SSTORE			proposals.length = 1
      PUSH 5		proposals.length = 1
      DUP3			proposals.length = 1
      ADD			proposals.length = 1
      PUSH 0		proposals.length = 1
      POP			proposals.length = 1
      PUSH 0		proposals.length = 1
      SWAP1			proposals.length = 1
      SSTORE			proposals.length = 1
      PUSH 6		proposals.length = 1
      DUP3			proposals.length = 1
      ADD			proposals.length = 1
      PUSH 0		proposals.length = 1
      POP			proposals.length = 1
      PUSH 0		proposals.length = 1
      SWAP1			proposals.length = 1
      SSTORE			proposals.length = 1
      PUSH 7		proposals.length = 1
      DUP3			proposals.length = 1
      ADD			proposals.length = 1
      PUSH 0		proposals.length = 1
      PUSH 100		proposals.length = 1
      EXP			proposals.length = 1
      DUP2			proposals.length = 1
      SLOAD			proposals.length = 1
      SWAP1			proposals.length = 1
      PUSH FF		proposals.length = 1
      MUL			proposals.length = 1
      NOT			proposals.length = 1
      AND			proposals.length = 1
      SWAP1			proposals.length = 1
      SSTORE			proposals.length = 1
      PUSH 8		proposals.length = 1
      DUP3			proposals.length = 1
      ADD			proposals.length = 1
      PUSH 0		proposals.length = 1
      POP			proposals.length = 1
      DUP1			proposals.length = 1
      SLOAD			proposals.length = 1
      PUSH 0		proposals.length = 1
      DUP3			proposals.length = 1
      SSTORE			proposals.length = 1
      PUSH 4		proposals.length = 1
      MUL			proposals.length = 1
      SWAP1			proposals.length = 1
      PUSH 0		proposals.length = 1
      MSTORE			proposals.length = 1
      PUSH 20		proposals.length = 1
      PUSH 0		proposals.length = 1
      SHA3			proposals.length = 1
      SWAP1			proposals.length = 1
      DUP2			proposals.length = 1
      ADD			proposals.length = 1
      SWAP1			proposals.length = 1
      PUSH [tag17]		proposals.length = 1
      SWAP2			proposals.length = 1
      SWAP1			proposals.length = 1
      PUSH [tag18]		proposals.length = 1
      JUMP			proposals.length = 1
    tag18: 
      JUMPDEST		proposals.length = 1
      DUP1			proposals.length = 1
      DUP3			proposals.length = 1
      GT			proposals.length = 1
      ISZERO			proposals.length = 1
      PUSH [tag19]		proposals.length = 1
      JUMPI			proposals.length = 1
      PUSH 0		proposals.length = 1
      PUSH 0		proposals.length = 1
      DUP3			proposals.length = 1
      ADD			proposals.length = 1
      PUSH 0		proposals.length = 1
      POP			proposals.length = 1
      PUSH 0		proposals.length = 1
      SWAP1			proposals.length = 1
      SSTORE			proposals.length = 1
      PUSH 1		proposals.length = 1
      DUP3			proposals.length = 1
      ADD			proposals.length = 1
      PUSH 0		proposals.length = 1
      POP			proposals.length = 1
      PUSH 0		proposals.length = 1
      SWAP1			proposals.length = 1
      SSTORE			proposals.length = 1
      PUSH 2		proposals.length = 1
      DUP3			proposals.length = 1
      ADD			proposals.length = 1
      PUSH 0		proposals.length = 1
      POP			proposals.length = 1
      PUSH 0		proposals.length = 1
      SWAP1			proposals.length = 1
      SSTORE			proposals.length = 1
      PUSH 3		proposals.length = 1
      DUP3			proposals.length = 1
      ADD			proposals.length = 1
      PUSH 0		proposals.length = 1
      PUSH 100		proposals.length = 1
      EXP			proposals.length = 1
      DUP2			proposals.length = 1
      SLOAD			proposals.length = 1
      SWAP1			proposals.length = 1
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		proposals.length = 1
      MUL			proposals.length = 1
      NOT			proposals.length = 1
      AND			proposals.length = 1
      SWAP1			proposals.length = 1
      SSTORE			proposals.length = 1
      POP			proposals.length = 1
      PUSH 1		proposals.length = 1
      ADD			proposals.length = 1
      PUSH [tag18]		proposals.length = 1
      JUMP			proposals.length = 1
    tag19: 
      JUMPDEST		proposals.length = 1
      POP			proposals.length = 1
      SWAP1			proposals.length = 1
      JUMP			proposals.length = 1
    tag17: 
      JUMPDEST		proposals.length = 1
    tag16: 
      JUMPDEST		proposals.length = 1
      POP			proposals.length = 1
      PUSH 9		proposals.length = 1
      DUP3			proposals.length = 1
      ADD			proposals.length = 1
      PUSH 0		proposals.length = 1
      POP			proposals.length = 1
      PUSH 0		proposals.length = 1
      SWAP1			proposals.length = 1
      SSTORE			proposals.length = 1
      PUSH A		proposals.length = 1
      DUP3			proposals.length = 1
      ADD			proposals.length = 1
      PUSH 0		proposals.length = 1
      POP			proposals.length = 1
      PUSH 0		proposals.length = 1
      SWAP1			proposals.length = 1
      SSTORE			proposals.length = 1
      PUSH D		proposals.length = 1
      DUP3			proposals.length = 1
      ADD			proposals.length = 1
      PUSH 0		proposals.length = 1
      PUSH 100		proposals.length = 1
      EXP			proposals.length = 1
      DUP2			proposals.length = 1
      SLOAD			proposals.length = 1
      SWAP1			proposals.length = 1
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		proposals.length = 1
      MUL			proposals.length = 1
      NOT			proposals.length = 1
      AND			proposals.length = 1
      SWAP1			proposals.length = 1
      SSTORE			proposals.length = 1
      POP			proposals.length = 1
      PUSH 1		proposals.length = 1
      ADD			proposals.length = 1
      PUSH [tag9]		proposals.length = 1
      JUMP			proposals.length = 1
    tag10: 
      JUMPDEST		proposals.length = 1
      POP			proposals.length = 1
      SWAP1			proposals.length = 1
      JUMP			proposals.length = 1
    tag8: 
      JUMPDEST		proposals.length = 1
    tag7: 
      JUMPDEST		proposals.length = 1
      POP			proposals.length = 1
      POP			proposals.length = 1
      POP			proposals.length = 1
      POP			proposals.length = 1
      PUSH 1		true
      PUSH 4		allowedRecipients
      PUSH 0		allowedRecipients
      POP			allowedRecipients
      PUSH 0		allowedRecipients[address(this)]
      ADDRESS			this
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		allowedRecipients[address(this)]
      AND			allowedRecipients[address(this)]
      DUP2			allowedRecipients[address(this)]
      MSTORE			allowedRecipients[address(this)]
      PUSH 20		allowedRecipients[address(this)]
      ADD			allowedRecipients[address(this)]
      SWAP1			allowedRecipients[address(this)]
      DUP2			allowedRecipients[address(this)]
      MSTORE			allowedRecipients[address(this)]
      PUSH 20		allowedRecipients[address(this)]
      ADD			allowedRecipients[address(this)]
      PUSH 0		allowedRecipients[address(this)]
      SHA3			allowedRecipients[address(this)]
      PUSH 0		allowedRecipients[address(this)]
      PUSH 100		allowedRecipients[address(this)] = true
      EXP			allowedRecipients[address(this)] = true
      DUP2			allowedRecipients[address(this)] = true
      SLOAD			allowedRecipients[address(this)] = true
      DUP2			allowedRecipients[address(this)] = true
      PUSH FF		allowedRecipients[address(this)] = true
      MUL			allowedRecipients[address(this)] = true
      NOT			allowedRecipients[address(this)] = true
      AND			allowedRecipients[address(this)] = true
      SWAP1			allowedRecipients[address(this)] = true
      DUP4			allowedRecipients[address(this)] = true
      MUL			allowedRecipients[address(this)] = true
      OR			allowedRecipients[address(this)] = true
      SWAP1			allowedRecipients[address(this)] = true
      SSTORE			allowedRecipients[address(this)] = true
      POP			allowedRecipients[address(this)] = true
      PUSH 1		true
      PUSH 4		allowedRecipients
      PUSH 0		allowedRecipients
      POP			allowedRecipients
      PUSH 0		allowedRecipients[curator]
      PUSH 3		curator
      PUSH 0		curator
      SWAP1			curator
      SLOAD			curator
      SWAP1			curator
      PUSH 100		curator
      EXP			curator
      SWAP1			curator
      DIV			curator
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		curator
      AND			curator
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		allowedRecipients[curator]
      AND			allowedRecipients[curator]
      DUP2			allowedRecipients[curator]
      MSTORE			allowedRecipients[curator]
      PUSH 20		allowedRecipients[curator]
      ADD			allowedRecipients[curator]
      SWAP1			allowedRecipients[curator]
      DUP2			allowedRecipients[curator]
      MSTORE			allowedRecipients[curator]
      PUSH 20		allowedRecipients[curator]
      ADD			allowedRecipients[curator]
      PUSH 0		allowedRecipients[curator]
      SHA3			allowedRecipients[curator]
      PUSH 0		allowedRecipients[curator]
      PUSH 100		allowedRecipients[curator] = true
      EXP			allowedRecipients[curator] = true
      DUP2			allowedRecipients[curator] = true
      SLOAD			allowedRecipients[curator] = true
      DUP2			allowedRecipients[curator] = true
      PUSH FF		allowedRecipients[curator] = true
      MUL			allowedRecipients[curator] = true
      NOT			allowedRecipients[curator] = true
      AND			allowedRecipients[curator] = true
      SWAP1			allowedRecipients[curator] = true
      DUP4			allowedRecipients[curator] = true
      MUL			allowedRecipients[curator] = true
      OR			allowedRecipients[curator] = true
      SWAP1			allowedRecipients[curator] = true
      SSTORE			allowedRecipients[curator] = true
      POP			allowedRecipients[curator] = true
    tag4: 
      JUMPDEST		function DAO(...
      POP			function DAO(...
      POP			function DAO(...
      POP			function DAO(...
      POP			function DAO(...
      POP			function DAO(...
      POP			function DAO(...
      PUSH #[$00000000…00000003]		contract DAO is DAOInterface, Token, TokenCreation {...
      DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
      PUSH [$00000000…00000003]		contract DAO is DAOInterface, Token, TokenCreation {...
      PUSH 0		contract DAO is DAOInterface, Token, TokenCreation {...
      CODECOPY			contract DAO is DAOInterface, Token, TokenCreation {...
      PUSH 0		contract DAO is DAOInterface, Token, TokenCreation {...
      RETURN			contract DAO is DAOInterface, Token, TokenCreation {...
    .data:
      0: 
      .code:
        PUSH 60		contract ManagedAccount is ManagedAccountInterface{...
        PUSH 40		contract ManagedAccount is ManagedAccountInterface{...
        MSTORE			contract ManagedAccount is ManagedAccountInterface{...
        PUSH 40		function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        MLOAD			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        PUSH 40		function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        DUP1			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        PUSHSIZE		function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        DUP4			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        CODECOPY			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        DUP2			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        ADD			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        PUSH 40		function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        MSTORE			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        DUP1			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        DUP1			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        MLOAD			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        SWAP1			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        PUSH 20		function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        ADD			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        SWAP1			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        SWAP2			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        SWAP1			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        DUP1			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        MLOAD			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        SWAP1			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        PUSH 20		function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        ADD			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        SWAP1			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        SWAP2			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        SWAP1			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        POP			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        POP			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
      tag1: 
        JUMPDEST		function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        DUP2			_owner
        PUSH 0		owner
        PUSH 0		owner
        PUSH 100		owner = _owner
        EXP			owner = _owner
        DUP2			owner = _owner
        SLOAD			owner = _owner
        DUP2			owner = _owner
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		owner = _owner
        MUL			owner = _owner
        NOT			owner = _owner
        AND			owner = _owner
        SWAP1			owner = _owner
        DUP4			owner = _owner
        MUL			owner = _owner
        OR			owner = _owner
        SWAP1			owner = _owner
        SSTORE			owner = _owner
        POP			owner = _owner
        DUP1			_payOwnerOnly
        PUSH 0		payOwnerOnly
        PUSH 14		payOwnerOnly
        PUSH 100		payOwnerOnly = _payOwnerOnly
        EXP			payOwnerOnly = _payOwnerOnly
        DUP2			payOwnerOnly = _payOwnerOnly
        SLOAD			payOwnerOnly = _payOwnerOnly
        DUP2			payOwnerOnly = _payOwnerOnly
        PUSH FF		payOwnerOnly = _payOwnerOnly
        MUL			payOwnerOnly = _payOwnerOnly
        NOT			payOwnerOnly = _payOwnerOnly
        AND			payOwnerOnly = _payOwnerOnly
        SWAP1			payOwnerOnly = _payOwnerOnly
        DUP4			payOwnerOnly = _payOwnerOnly
        MUL			payOwnerOnly = _payOwnerOnly
        OR			payOwnerOnly = _payOwnerOnly
        SWAP1			payOwnerOnly = _payOwnerOnly
        SSTORE			payOwnerOnly = _payOwnerOnly
        POP			payOwnerOnly = _payOwnerOnly
      tag2: 
        JUMPDEST		function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        POP			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        POP			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        PUSH #[$00000000…00000000]		contract ManagedAccount is ManagedAccountInterface{...
        DUP1			contract ManagedAccount is ManagedAccountInterface{...
        PUSH [$00000000…00000000]		contract ManagedAccount is ManagedAccountInterface{...
        PUSH 0		contract ManagedAccount is ManagedAccountInterface{...
        CODECOPY			contract ManagedAccount is ManagedAccountInterface{...
        PUSH 0		contract ManagedAccount is ManagedAccountInterface{...
        RETURN			contract ManagedAccount is ManagedAccountInterface{...
      .data:
        0: 
        .code:
          PUSH 60		contract ManagedAccount is ManagedAccountInterface{...
          PUSH 40		contract ManagedAccount is ManagedAccountInterface{...
          MSTORE			contract ManagedAccount is ManagedAccountInterface{...
          CALLDATASIZE			contract ManagedAccount is ManagedAccountInterface{...
          ISZERO			contract ManagedAccount is ManagedAccountInterface{...
          PUSH [tag1]		contract ManagedAccount is ManagedAccountInterface{...
          JUMPI			contract ManagedAccount is ManagedAccountInterface{...
          PUSH 0		contract ManagedAccount is ManagedAccountInterface{...
          CALLDATALOAD			contract ManagedAccount is ManagedAccountInterface{...
          PUSH 100000000000000000000000000000000000000000000000000000000		contract ManagedAccount is ManagedAccountInterface{...
          SWAP1			contract ManagedAccount is ManagedAccountInterface{...
          DIV			contract ManagedAccount is ManagedAccountInterface{...
          DUP1			contract ManagedAccount is ManagedAccountInterface{...
          PUSH 221038A		contract ManagedAccount is ManagedAccountInterface{...
          EQ			contract ManagedAccount is ManagedAccountInterface{...
          PUSH [tag2]		contract ManagedAccount is ManagedAccountInterface{...
          JUMPI			contract ManagedAccount is ManagedAccountInterface{...
          DUP1			contract ManagedAccount is ManagedAccountInterface{...
          PUSH 18BDC79A		contract ManagedAccount is ManagedAccountInterface{...
          EQ			contract ManagedAccount is ManagedAccountInterface{...
          PUSH [tag3]		contract ManagedAccount is ManagedAccountInterface{...
          JUMPI			contract ManagedAccount is ManagedAccountInterface{...
          DUP1			contract ManagedAccount is ManagedAccountInterface{...
          PUSH 8DA5CB5B		contract ManagedAccount is ManagedAccountInterface{...
          EQ			contract ManagedAccount is ManagedAccountInterface{...
          PUSH [tag4]		contract ManagedAccount is ManagedAccountInterface{...
          JUMPI			contract ManagedAccount is ManagedAccountInterface{...
          DUP1			contract ManagedAccount is ManagedAccountInterface{...
          PUSH D2CC718F		contract ManagedAccount is ManagedAccountInterface{...
          EQ			contract ManagedAccount is ManagedAccountInterface{...
          PUSH [tag5]		contract ManagedAccount is ManagedAccountInterface{...
          JUMPI			contract ManagedAccount is ManagedAccountInterface{...
          PUSH [tag1]		contract ManagedAccount is ManagedAccountInterface{...
          JUMP			contract ManagedAccount is ManagedAccountInterface{...
        tag1: 
          JUMPDEST		contract ManagedAccount is ManagedAccountInterface{...
          PUSH [tag6]		contract ManagedAccount is ManagedAccountInterface{...
        tag7: 
          JUMPDEST		function() {...
          CALLVALUE			msg.value
          PUSH 1		accumulatedInput
          PUSH 0		accumulatedInput
          DUP3			accumulatedInput += msg.value
          DUP3			accumulatedInput += msg.value
          DUP3			accumulatedInput += msg.value
          POP			accumulatedInput += msg.value
          SLOAD			accumulatedInput += msg.value
          ADD			accumulatedInput += msg.value
          SWAP3			accumulatedInput += msg.value
          POP			accumulatedInput += msg.value
          POP			accumulatedInput += msg.value
          DUP2			accumulatedInput += msg.value
          SWAP1			accumulatedInput += msg.value
          SSTORE			accumulatedInput += msg.value
          POP			accumulatedInput += msg.value
        tag8: 
          JUMPDEST		function() {...
          JUMP	[out]		function() {...
        tag6: 
          JUMPDEST		contract ManagedAccount is ManagedAccountInterface{...
          STOP			contract ManagedAccount is ManagedAccountInterface{...
        tag2: 
          JUMPDEST		function payOut(address _recipient, uint _amount) returns (bool) {...
          PUSH [tag9]		function payOut(address _recipient, uint _amount) returns (bool) {...
          PUSH 4		function payOut(address _recipient, uint _amount) returns (bool) {...
          DUP1			function payOut(address _recipient, uint _amount) returns (bool) {...
          DUP1			function payOut(address _recipient, uint _amount) returns (bool) {...
          CALLDATALOAD			function payOut(address _recipient, uint _amount) returns (bool) {...
          SWAP1			function payOut(address _recipient, uint _amount) returns (bool) {...
          PUSH 20		function payOut(address _recipient, uint _amount) returns (bool) {...
          ADD			function payOut(address _recipient, uint _amount) returns (bool) {...
          SWAP1			function payOut(address _recipient, uint _amount) returns (bool) {...
          SWAP2			function payOut(address _recipient, uint _amount) returns (bool) {...
          SWAP1			function payOut(address _recipient, uint _amount) returns (bool) {...
          DUP1			function payOut(address _recipient, uint _amount) returns (bool) {...
          CALLDATALOAD			function payOut(address _recipient, uint _amount) returns (bool) {...
          SWAP1			function payOut(address _recipient, uint _amount) returns (bool) {...
          PUSH 20		function payOut(address _recipient, uint _amount) returns (bool) {...
          ADD			function payOut(address _recipient, uint _amount) returns (bool) {...
          SWAP1			function payOut(address _recipient, uint _amount) returns (bool) {...
          SWAP2			function payOut(address _recipient, uint _amount) returns (bool) {...
          SWAP1			function payOut(address _recipient, uint _amount) returns (bool) {...
          POP			function payOut(address _recipient, uint _amount) returns (bool) {...
          POP			function payOut(address _recipient, uint _amount) returns (bool) {...
          PUSH [tag10]		function payOut(address _recipient, uint _amount) returns (bool) {...
          JUMP			function payOut(address _recipient, uint _amount) returns (bool) {...
        tag9: 
          JUMPDEST		function payOut(address _recipient, uint _amount) returns (bool) {...
          PUSH 40		function payOut(address _recipient, uint _amount) returns (bool) {...
          MLOAD			function payOut(address _recipient, uint _amount) returns (bool) {...
          DUP1			function payOut(address _recipient, uint _amount) returns (bool) {...
          DUP3			function payOut(address _recipient, uint _amount) returns (bool) {...
          DUP2			function payOut(address _recipient, uint _amount) returns (bool) {...
          MSTORE			function payOut(address _recipient, uint _amount) returns (bool) {...
          PUSH 20		function payOut(address _recipient, uint _amount) returns (bool) {...
          ADD			function payOut(address _recipient, uint _amount) returns (bool) {...
          SWAP2			function payOut(address _recipient, uint _amount) returns (bool) {...
          POP			function payOut(address _recipient, uint _amount) returns (bool) {...
          POP			function payOut(address _recipient, uint _amount) returns (bool) {...
          PUSH 40		function payOut(address _recipient, uint _amount) returns (bool) {...
          MLOAD			function payOut(address _recipient, uint _amount) returns (bool) {...
          DUP1			function payOut(address _recipient, uint _amount) returns (bool) {...
          SWAP2			function payOut(address _recipient, uint _amount) returns (bool) {...
          SUB			function payOut(address _recipient, uint _amount) returns (bool) {...
          SWAP1			function payOut(address _recipient, uint _amount) returns (bool) {...
          RETURN			function payOut(address _recipient, uint _amount) returns (bool) {...
        tag3: 
          JUMPDEST		bool public payOwnerOnly
          PUSH [tag11]		bool public payOwnerOnly
          PUSH 4		bool public payOwnerOnly
          DUP1			bool public payOwnerOnly
          POP			bool public payOwnerOnly
          POP			bool public payOwnerOnly
          PUSH [tag12]		bool public payOwnerOnly
          JUMP			bool public payOwnerOnly
        tag11: 
          JUMPDEST		bool public payOwnerOnly
          PUSH 40		bool public payOwnerOnly
          MLOAD			bool public payOwnerOnly
          DUP1			bool public payOwnerOnly
          DUP3			bool public payOwnerOnly
          DUP2			bool public payOwnerOnly
          MSTORE			bool public payOwnerOnly
          PUSH 20		bool public payOwnerOnly
          ADD			bool public payOwnerOnly
          SWAP2			bool public payOwnerOnly
          POP			bool public payOwnerOnly
          POP			bool public payOwnerOnly
          PUSH 40		bool public payOwnerOnly
          MLOAD			bool public payOwnerOnly
          DUP1			bool public payOwnerOnly
          SWAP2			bool public payOwnerOnly
          SUB			bool public payOwnerOnly
          SWAP1			bool public payOwnerOnly
          RETURN			bool public payOwnerOnly
        tag4: 
          JUMPDEST		address public owner
          PUSH [tag13]		address public owner
          PUSH 4		address public owner
          DUP1			address public owner
          POP			address public owner
          POP			address public owner
          PUSH [tag14]		address public owner
          JUMP			address public owner
        tag13: 
          JUMPDEST		address public owner
          PUSH 40		address public owner
          MLOAD			address public owner
          DUP1			address public owner
          DUP3			address public owner
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		address public owner
          AND			address public owner
          DUP2			address public owner
          MSTORE			address public owner
          PUSH 20		address public owner
          ADD			address public owner
          SWAP2			address public owner
          POP			address public owner
          POP			address public owner
          PUSH 40		address public owner
          MLOAD			address public owner
          DUP1			address public owner
          SWAP2			address public owner
          SUB			address public owner
          SWAP1			address public owner
          RETURN			address public owner
        tag5: 
          JUMPDEST		uint public accumulatedInput
          PUSH [tag15]		uint public accumulatedInput
          PUSH 4		uint public accumulatedInput
          DUP1			uint public accumulatedInput
          POP			uint public accumulatedInput
          POP			uint public accumulatedInput
          PUSH [tag16]		uint public accumulatedInput
          JUMP			uint public accumulatedInput
        tag15: 
          JUMPDEST		uint public accumulatedInput
          PUSH 40		uint public accumulatedInput
          MLOAD			uint public accumulatedInput
          DUP1			uint public accumulatedInput
          DUP3			uint public accumulatedInput
          DUP2			uint public accumulatedInput
          MSTORE			uint public accumulatedInput
          PUSH 20		uint public accumulatedInput
          ADD			uint public accumulatedInput
          SWAP2			uint public accumulatedInput
          POP			uint public accumulatedInput
          POP			uint public accumulatedInput
          PUSH 40		uint public accumulatedInput
          MLOAD			uint public accumulatedInput
          DUP1			uint public accumulatedInput
          SWAP2			uint public accumulatedInput
          SUB			uint public accumulatedInput
          SWAP1			uint public accumulatedInput
          RETURN			uint public accumulatedInput
        tag14: 
          JUMPDEST		address public owner
          PUSH 0		address public owner
          PUSH 0		address public owner
          SWAP1			address public owner
          SLOAD			address public owner
          SWAP1			address public owner
          PUSH 100		address public owner
          EXP			address public owner
          SWAP1			address public owner
          DIV			address public owner
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		address public owner
          AND			address public owner
          DUP2			address public owner
          JUMP	[out]		address public owner
        tag12: 
          JUMPDEST		bool public payOwnerOnly
          PUSH 0		bool public payOwnerOnly
          PUSH 14		bool public payOwnerOnly
          SWAP1			bool public payOwnerOnly
          SLOAD			bool public payOwnerOnly
          SWAP1			bool public payOwnerOnly
          PUSH 100		bool public payOwnerOnly
          EXP			bool public payOwnerOnly
          SWAP1			bool public payOwnerOnly
          DIV			bool public payOwnerOnly
          PUSH FF		bool public payOwnerOnly
          AND			bool public payOwnerOnly
          DUP2			bool public payOwnerOnly
          JUMP	[out]		bool public payOwnerOnly
        tag16: 
          JUMPDEST		uint public accumulatedInput
          PUSH 1		uint public accumulatedInput
          PUSH 0		uint public accumulatedInput
          POP			uint public accumulatedInput
          SLOAD			uint public accumulatedInput
          DUP2			uint public accumulatedInput
          JUMP	[out]		uint public accumulatedInput
        tag10: 
          JUMPDEST		function payOut(address _recipient, uint _amount) returns (bool) {...
          PUSH 0		bool
          PUSH 0		owner
          PUSH 0		owner
          SWAP1			owner
          SLOAD			owner
          SWAP1			owner
          PUSH 100		owner
          EXP			owner
          SWAP1			owner
          DIV			owner
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		owner
          AND			owner
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		msg.sender != owner
          AND			msg.sender != owner
          CALLER			msg.sender
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		msg.sender != owner
          AND			msg.sender != owner
          EQ			msg.sender != owner
          ISZERO			msg.sender != owner
          DUP1			msg.sender != owner || msg.value > 0
          PUSH [tag18]		msg.sender != owner || msg.value > 0
          JUMPI			msg.sender != owner || msg.value > 0
          POP			msg.sender != owner || msg.value > 0
          PUSH 0		0
          CALLVALUE			msg.value
          GT			msg.value > 0
        tag18: 
          JUMPDEST		msg.sender != owner || msg.value > 0
          DUP1			msg.sender != owner || msg.value > 0 || (payOwnerOnly && _recipient != owner)
          PUSH [tag19]		msg.sender != owner || msg.value > 0 || (payOwnerOnly && _recipient != owner)
          JUMPI			msg.sender != owner || msg.value > 0 || (payOwnerOnly && _recipient != owner)
          POP			msg.sender != owner || msg.value > 0 || (payOwnerOnly && _recipient != owner)
          PUSH 0		payOwnerOnly
          PUSH 14		payOwnerOnly
          SWAP1			payOwnerOnly
          SLOAD			payOwnerOnly
          SWAP1			payOwnerOnly
          PUSH 100		payOwnerOnly
          EXP			payOwnerOnly
          SWAP1			payOwnerOnly
          DIV			payOwnerOnly
          PUSH FF		payOwnerOnly
          AND			payOwnerOnly
          DUP1			payOwnerOnly && _recipient != owner
          ISZERO			payOwnerOnly && _recipient != owner
          PUSH [tag20]		payOwnerOnly && _recipient != owner
          JUMPI			payOwnerOnly && _recipient != owner
          POP			payOwnerOnly && _recipient != owner
          PUSH 0		owner
          PUSH 0		owner
          SWAP1			owner
          SLOAD			owner
          SWAP1			owner
          PUSH 100		owner
          EXP			owner
          SWAP1			owner
          DIV			owner
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		owner
          AND			owner
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		_recipient != owner
          AND			_recipient != owner
          DUP4			_recipient
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		_recipient != owner
          AND			_recipient != owner
          EQ			_recipient != owner
          ISZERO			_recipient != owner
        tag20: 
          JUMPDEST		payOwnerOnly && _recipient != owner
        tag19: 
          JUMPDEST		msg.sender != owner || msg.value > 0 || (payOwnerOnly && _recipient != owner)
          ISZERO			if (msg.sender != owner || msg.value > 0 || (payOwnerOnly && _recipient != owner))...
          PUSH [tag21]		if (msg.sender != owner || msg.value > 0 || (payOwnerOnly && _recipient != owner))...
          JUMPI			if (msg.sender != owner || msg.value > 0 || (payOwnerOnly && _recipient != owner))...
          PUSH [ErrorTag]		throw
          JUMP			throw
        tag21: 
          JUMPDEST		if (msg.sender != owner || msg.value > 0 || (payOwnerOnly && _recipient != owner))...
          DUP3			_recipient
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		_recipient.call
          AND			_recipient.call
          DUP3			_amount
          PUSH 40		_recipient.call.value(_amount)()
          MLOAD			_recipient.call.value(_amount)()
          DUP1			_recipient.call.value(_amount)()
          SWAP1			_recipient.call.value(_amount)()
          POP			_recipient.call.value(_amount)()
          PUSH 0		_recipient.call.value(_amount)()
          PUSH 40		_recipient.call.value(_amount)()
          MLOAD			_recipient.call.value(_amount)()
          DUP1			_recipient.call.value(_amount)()
          DUP4			_recipient.call.value(_amount)()
          SUB			_recipient.call.value(_amount)()
          DUP2			_recipient.call.value(_amount)()
          DUP6			_recipient.call.value(_amount)()
          DUP8			_recipient.call.value(_amount)()
          PUSH 8502		_recipient.call.value(_amount)()
          GAS			_recipient.call.value(_amount)()
          SUB			_recipient.call.value(_amount)()
          CALL			_recipient.call.value(_amount)()
          SWAP3			_recipient.call.value(_amount)()
          POP			_recipient.call.value(_amount)()
          POP			_recipient.call.value(_amount)()
          POP			_recipient.call.value(_amount)()
          ISZERO			if (_recipient.call.value(_amount)()) {...
          PUSH [tag22]		if (_recipient.call.value(_amount)()) {...
          JUMPI			if (_recipient.call.value(_amount)()) {...
          DUP3			_recipient
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		PayOut(_recipient, _amount)
          AND			PayOut(_recipient, _amount)
          PUSH 9735B0CB909F3D21D5C16BBCCCD272D85FA11446F6D679F6ECB170D2DABFECFC		PayOut(_recipient, _amount)
          DUP4			_amount
          PUSH 40		PayOut(_recipient, _amount)
          MLOAD			PayOut(_recipient, _amount)
          DUP1			PayOut(_recipient, _amount)
          DUP3			PayOut(_recipient, _amount)
          DUP2			PayOut(_recipient, _amount)
          MSTORE			PayOut(_recipient, _amount)
          PUSH 20		PayOut(_recipient, _amount)
          ADD			PayOut(_recipient, _amount)
          SWAP2			PayOut(_recipient, _amount)
          POP			PayOut(_recipient, _amount)
          POP			PayOut(_recipient, _amount)
          PUSH 40		PayOut(_recipient, _amount)
          MLOAD			PayOut(_recipient, _amount)
          DUP1			PayOut(_recipient, _amount)
          SWAP2			PayOut(_recipient, _amount)
          SUB			PayOut(_recipient, _amount)
          SWAP1			PayOut(_recipient, _amount)
          LOG2			PayOut(_recipient, _amount)
          PUSH 1		true
          SWAP1			return true
          POP			return true
          PUSH [tag17]		return true
          JUMP			return true
          PUSH [tag23]		if (_recipient.call.value(_amount)()) {...
          JUMP			if (_recipient.call.value(_amount)()) {...
        tag22: 
          JUMPDEST		if (_recipient.call.value(_amount)()) {...
          PUSH 0		false
          SWAP1			return false
          POP			return false
          PUSH [tag17]		return false
          JUMP			return false
        tag23: 
          JUMPDEST		if (_recipient.call.value(_amount)()) {...
        tag17: 
          JUMPDEST		function payOut(address _recipient, uint _amount) returns (bool) {...
          SWAP3			function payOut(address _recipient, uint _amount) returns (bool) {...
          SWAP2			function payOut(address _recipient, uint _amount) returns (bool) {...
          POP			function payOut(address _recipient, uint _amount) returns (bool) {...
          POP			function payOut(address _recipient, uint _amount) returns (bool) {...
          JUMP	[out]		function payOut(address _recipient, uint _amount) returns (bool) {...
      1: 
      .code:
        PUSH 60		contract ManagedAccount is ManagedAccountInterface{...
        PUSH 40		contract ManagedAccount is ManagedAccountInterface{...
        MSTORE			contract ManagedAccount is ManagedAccountInterface{...
        PUSH 40		function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        MLOAD			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        PUSH 40		function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        DUP1			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        PUSHSIZE		function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        DUP4			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        CODECOPY			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        DUP2			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        ADD			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        PUSH 40		function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        MSTORE			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        DUP1			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        DUP1			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        MLOAD			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        SWAP1			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        PUSH 20		function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        ADD			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        SWAP1			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        SWAP2			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        SWAP1			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        DUP1			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        MLOAD			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        SWAP1			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        PUSH 20		function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        ADD			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        SWAP1			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        SWAP2			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        SWAP1			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        POP			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        POP			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
      tag1: 
        JUMPDEST		function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        DUP2			_owner
        PUSH 0		owner
        PUSH 0		owner
        PUSH 100		owner = _owner
        EXP			owner = _owner
        DUP2			owner = _owner
        SLOAD			owner = _owner
        DUP2			owner = _owner
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		owner = _owner
        MUL			owner = _owner
        NOT			owner = _owner
        AND			owner = _owner
        SWAP1			owner = _owner
        DUP4			owner = _owner
        MUL			owner = _owner
        OR			owner = _owner
        SWAP1			owner = _owner
        SSTORE			owner = _owner
        POP			owner = _owner
        DUP1			_payOwnerOnly
        PUSH 0		payOwnerOnly
        PUSH 14		payOwnerOnly
        PUSH 100		payOwnerOnly = _payOwnerOnly
        EXP			payOwnerOnly = _payOwnerOnly
        DUP2			payOwnerOnly = _payOwnerOnly
        SLOAD			payOwnerOnly = _payOwnerOnly
        DUP2			payOwnerOnly = _payOwnerOnly
        PUSH FF		payOwnerOnly = _payOwnerOnly
        MUL			payOwnerOnly = _payOwnerOnly
        NOT			payOwnerOnly = _payOwnerOnly
        AND			payOwnerOnly = _payOwnerOnly
        SWAP1			payOwnerOnly = _payOwnerOnly
        DUP4			payOwnerOnly = _payOwnerOnly
        MUL			payOwnerOnly = _payOwnerOnly
        OR			payOwnerOnly = _payOwnerOnly
        SWAP1			payOwnerOnly = _payOwnerOnly
        SSTORE			payOwnerOnly = _payOwnerOnly
        POP			payOwnerOnly = _payOwnerOnly
      tag2: 
        JUMPDEST		function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        POP			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        POP			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        PUSH #[$00000000…00000000]		contract ManagedAccount is ManagedAccountInterface{...
        DUP1			contract ManagedAccount is ManagedAccountInterface{...
        PUSH [$00000000…00000000]		contract ManagedAccount is ManagedAccountInterface{...
        PUSH 0		contract ManagedAccount is ManagedAccountInterface{...
        CODECOPY			contract ManagedAccount is ManagedAccountInterface{...
        PUSH 0		contract ManagedAccount is ManagedAccountInterface{...
        RETURN			contract ManagedAccount is ManagedAccountInterface{...
      .data:
        0: 
        .code:
          PUSH 60		contract ManagedAccount is ManagedAccountInterface{...
          PUSH 40		contract ManagedAccount is ManagedAccountInterface{...
          MSTORE			contract ManagedAccount is ManagedAccountInterface{...
          CALLDATASIZE			contract ManagedAccount is ManagedAccountInterface{...
          ISZERO			contract ManagedAccount is ManagedAccountInterface{...
          PUSH [tag1]		contract ManagedAccount is ManagedAccountInterface{...
          JUMPI			contract ManagedAccount is ManagedAccountInterface{...
          PUSH 0		contract ManagedAccount is ManagedAccountInterface{...
          CALLDATALOAD			contract ManagedAccount is ManagedAccountInterface{...
          PUSH 100000000000000000000000000000000000000000000000000000000		contract ManagedAccount is ManagedAccountInterface{...
          SWAP1			contract ManagedAccount is ManagedAccountInterface{...
          DIV			contract ManagedAccount is ManagedAccountInterface{...
          DUP1			contract ManagedAccount is ManagedAccountInterface{...
          PUSH 221038A		contract ManagedAccount is ManagedAccountInterface{...
          EQ			contract ManagedAccount is ManagedAccountInterface{...
          PUSH [tag2]		contract ManagedAccount is ManagedAccountInterface{...
          JUMPI			contract ManagedAccount is ManagedAccountInterface{...
          DUP1			contract ManagedAccount is ManagedAccountInterface{...
          PUSH 18BDC79A		contract ManagedAccount is ManagedAccountInterface{...
          EQ			contract ManagedAccount is ManagedAccountInterface{...
          PUSH [tag3]		contract ManagedAccount is ManagedAccountInterface{...
          JUMPI			contract ManagedAccount is ManagedAccountInterface{...
          DUP1			contract ManagedAccount is ManagedAccountInterface{...
          PUSH 8DA5CB5B		contract ManagedAccount is ManagedAccountInterface{...
          EQ			contract ManagedAccount is ManagedAccountInterface{...
          PUSH [tag4]		contract ManagedAccount is ManagedAccountInterface{...
          JUMPI			contract ManagedAccount is ManagedAccountInterface{...
          DUP1			contract ManagedAccount is ManagedAccountInterface{...
          PUSH D2CC718F		contract ManagedAccount is ManagedAccountInterface{...
          EQ			contract ManagedAccount is ManagedAccountInterface{...
          PUSH [tag5]		contract ManagedAccount is ManagedAccountInterface{...
          JUMPI			contract ManagedAccount is ManagedAccountInterface{...
          PUSH [tag1]		contract ManagedAccount is ManagedAccountInterface{...
          JUMP			contract ManagedAccount is ManagedAccountInterface{...
        tag1: 
          JUMPDEST		contract ManagedAccount is ManagedAccountInterface{...
          PUSH [tag6]		contract ManagedAccount is ManagedAccountInterface{...
        tag7: 
          JUMPDEST		function() {...
          CALLVALUE			msg.value
          PUSH 1		accumulatedInput
          PUSH 0		accumulatedInput
          DUP3			accumulatedInput += msg.value
          DUP3			accumulatedInput += msg.value
          DUP3			accumulatedInput += msg.value
          POP			accumulatedInput += msg.value
          SLOAD			accumulatedInput += msg.value
          ADD			accumulatedInput += msg.value
          SWAP3			accumulatedInput += msg.value
          POP			accumulatedInput += msg.value
          POP			accumulatedInput += msg.value
          DUP2			accumulatedInput += msg.value
          SWAP1			accumulatedInput += msg.value
          SSTORE			accumulatedInput += msg.value
          POP			accumulatedInput += msg.value
        tag8: 
          JUMPDEST		function() {...
          JUMP	[out]		function() {...
        tag6: 
          JUMPDEST		contract ManagedAccount is ManagedAccountInterface{...
          STOP			contract ManagedAccount is ManagedAccountInterface{...
        tag2: 
          JUMPDEST		function payOut(address _recipient, uint _amount) returns (bool) {...
          PUSH [tag9]		function payOut(address _recipient, uint _amount) returns (bool) {...
          PUSH 4		function payOut(address _recipient, uint _amount) returns (bool) {...
          DUP1			function payOut(address _recipient, uint _amount) returns (bool) {...
          DUP1			function payOut(address _recipient, uint _amount) returns (bool) {...
          CALLDATALOAD			function payOut(address _recipient, uint _amount) returns (bool) {...
          SWAP1			function payOut(address _recipient, uint _amount) returns (bool) {...
          PUSH 20		function payOut(address _recipient, uint _amount) returns (bool) {...
          ADD			function payOut(address _recipient, uint _amount) returns (bool) {...
          SWAP1			function payOut(address _recipient, uint _amount) returns (bool) {...
          SWAP2			function payOut(address _recipient, uint _amount) returns (bool) {...
          SWAP1			function payOut(address _recipient, uint _amount) returns (bool) {...
          DUP1			function payOut(address _recipient, uint _amount) returns (bool) {...
          CALLDATALOAD			function payOut(address _recipient, uint _amount) returns (bool) {...
          SWAP1			function payOut(address _recipient, uint _amount) returns (bool) {...
          PUSH 20		function payOut(address _recipient, uint _amount) returns (bool) {...
          ADD			function payOut(address _recipient, uint _amount) returns (bool) {...
          SWAP1			function payOut(address _recipient, uint _amount) returns (bool) {...
          SWAP2			function payOut(address _recipient, uint _amount) returns (bool) {...
          SWAP1			function payOut(address _recipient, uint _amount) returns (bool) {...
          POP			function payOut(address _recipient, uint _amount) returns (bool) {...
          POP			function payOut(address _recipient, uint _amount) returns (bool) {...
          PUSH [tag10]		function payOut(address _recipient, uint _amount) returns (bool) {...
          JUMP			function payOut(address _recipient, uint _amount) returns (bool) {...
        tag9: 
          JUMPDEST		function payOut(address _recipient, uint _amount) returns (bool) {...
          PUSH 40		function payOut(address _recipient, uint _amount) returns (bool) {...
          MLOAD			function payOut(address _recipient, uint _amount) returns (bool) {...
          DUP1			function payOut(address _recipient, uint _amount) returns (bool) {...
          DUP3			function payOut(address _recipient, uint _amount) returns (bool) {...
          DUP2			function payOut(address _recipient, uint _amount) returns (bool) {...
          MSTORE			function payOut(address _recipient, uint _amount) returns (bool) {...
          PUSH 20		function payOut(address _recipient, uint _amount) returns (bool) {...
          ADD			function payOut(address _recipient, uint _amount) returns (bool) {...
          SWAP2			function payOut(address _recipient, uint _amount) returns (bool) {...
          POP			function payOut(address _recipient, uint _amount) returns (bool) {...
          POP			function payOut(address _recipient, uint _amount) returns (bool) {...
          PUSH 40		function payOut(address _recipient, uint _amount) returns (bool) {...
          MLOAD			function payOut(address _recipient, uint _amount) returns (bool) {...
          DUP1			function payOut(address _recipient, uint _amount) returns (bool) {...
          SWAP2			function payOut(address _recipient, uint _amount) returns (bool) {...
          SUB			function payOut(address _recipient, uint _amount) returns (bool) {...
          SWAP1			function payOut(address _recipient, uint _amount) returns (bool) {...
          RETURN			function payOut(address _recipient, uint _amount) returns (bool) {...
        tag3: 
          JUMPDEST		bool public payOwnerOnly
          PUSH [tag11]		bool public payOwnerOnly
          PUSH 4		bool public payOwnerOnly
          DUP1			bool public payOwnerOnly
          POP			bool public payOwnerOnly
          POP			bool public payOwnerOnly
          PUSH [tag12]		bool public payOwnerOnly
          JUMP			bool public payOwnerOnly
        tag11: 
          JUMPDEST		bool public payOwnerOnly
          PUSH 40		bool public payOwnerOnly
          MLOAD			bool public payOwnerOnly
          DUP1			bool public payOwnerOnly
          DUP3			bool public payOwnerOnly
          DUP2			bool public payOwnerOnly
          MSTORE			bool public payOwnerOnly
          PUSH 20		bool public payOwnerOnly
          ADD			bool public payOwnerOnly
          SWAP2			bool public payOwnerOnly
          POP			bool public payOwnerOnly
          POP			bool public payOwnerOnly
          PUSH 40		bool public payOwnerOnly
          MLOAD			bool public payOwnerOnly
          DUP1			bool public payOwnerOnly
          SWAP2			bool public payOwnerOnly
          SUB			bool public payOwnerOnly
          SWAP1			bool public payOwnerOnly
          RETURN			bool public payOwnerOnly
        tag4: 
          JUMPDEST		address public owner
          PUSH [tag13]		address public owner
          PUSH 4		address public owner
          DUP1			address public owner
          POP			address public owner
          POP			address public owner
          PUSH [tag14]		address public owner
          JUMP			address public owner
        tag13: 
          JUMPDEST		address public owner
          PUSH 40		address public owner
          MLOAD			address public owner
          DUP1			address public owner
          DUP3			address public owner
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		address public owner
          AND			address public owner
          DUP2			address public owner
          MSTORE			address public owner
          PUSH 20		address public owner
          ADD			address public owner
          SWAP2			address public owner
          POP			address public owner
          POP			address public owner
          PUSH 40		address public owner
          MLOAD			address public owner
          DUP1			address public owner
          SWAP2			address public owner
          SUB			address public owner
          SWAP1			address public owner
          RETURN			address public owner
        tag5: 
          JUMPDEST		uint public accumulatedInput
          PUSH [tag15]		uint public accumulatedInput
          PUSH 4		uint public accumulatedInput
          DUP1			uint public accumulatedInput
          POP			uint public accumulatedInput
          POP			uint public accumulatedInput
          PUSH [tag16]		uint public accumulatedInput
          JUMP			uint public accumulatedInput
        tag15: 
          JUMPDEST		uint public accumulatedInput
          PUSH 40		uint public accumulatedInput
          MLOAD			uint public accumulatedInput
          DUP1			uint public accumulatedInput
          DUP3			uint public accumulatedInput
          DUP2			uint public accumulatedInput
          MSTORE			uint public accumulatedInput
          PUSH 20		uint public accumulatedInput
          ADD			uint public accumulatedInput
          SWAP2			uint public accumulatedInput
          POP			uint public accumulatedInput
          POP			uint public accumulatedInput
          PUSH 40		uint public accumulatedInput
          MLOAD			uint public accumulatedInput
          DUP1			uint public accumulatedInput
          SWAP2			uint public accumulatedInput
          SUB			uint public accumulatedInput
          SWAP1			uint public accumulatedInput
          RETURN			uint public accumulatedInput
        tag14: 
          JUMPDEST		address public owner
          PUSH 0		address public owner
          PUSH 0		address public owner
          SWAP1			address public owner
          SLOAD			address public owner
          SWAP1			address public owner
          PUSH 100		address public owner
          EXP			address public owner
          SWAP1			address public owner
          DIV			address public owner
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		address public owner
          AND			address public owner
          DUP2			address public owner
          JUMP	[out]		address public owner
        tag12: 
          JUMPDEST		bool public payOwnerOnly
          PUSH 0		bool public payOwnerOnly
          PUSH 14		bool public payOwnerOnly
          SWAP1			bool public payOwnerOnly
          SLOAD			bool public payOwnerOnly
          SWAP1			bool public payOwnerOnly
          PUSH 100		bool public payOwnerOnly
          EXP			bool public payOwnerOnly
          SWAP1			bool public payOwnerOnly
          DIV			bool public payOwnerOnly
          PUSH FF		bool public payOwnerOnly
          AND			bool public payOwnerOnly
          DUP2			bool public payOwnerOnly
          JUMP	[out]		bool public payOwnerOnly
        tag16: 
          JUMPDEST		uint public accumulatedInput
          PUSH 1		uint public accumulatedInput
          PUSH 0		uint public accumulatedInput
          POP			uint public accumulatedInput
          SLOAD			uint public accumulatedInput
          DUP2			uint public accumulatedInput
          JUMP	[out]		uint public accumulatedInput
        tag10: 
          JUMPDEST		function payOut(address _recipient, uint _amount) returns (bool) {...
          PUSH 0		bool
          PUSH 0		owner
          PUSH 0		owner
          SWAP1			owner
          SLOAD			owner
          SWAP1			owner
          PUSH 100		owner
          EXP			owner
          SWAP1			owner
          DIV			owner
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		owner
          AND			owner
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		msg.sender != owner
          AND			msg.sender != owner
          CALLER			msg.sender
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		msg.sender != owner
          AND			msg.sender != owner
          EQ			msg.sender != owner
          ISZERO			msg.sender != owner
          DUP1			msg.sender != owner || msg.value > 0
          PUSH [tag18]		msg.sender != owner || msg.value > 0
          JUMPI			msg.sender != owner || msg.value > 0
          POP			msg.sender != owner || msg.value > 0
          PUSH 0		0
          CALLVALUE			msg.value
          GT			msg.value > 0
        tag18: 
          JUMPDEST		msg.sender != owner || msg.value > 0
          DUP1			msg.sender != owner || msg.value > 0 || (payOwnerOnly && _recipient != owner)
          PUSH [tag19]		msg.sender != owner || msg.value > 0 || (payOwnerOnly && _recipient != owner)
          JUMPI			msg.sender != owner || msg.value > 0 || (payOwnerOnly && _recipient != owner)
          POP			msg.sender != owner || msg.value > 0 || (payOwnerOnly && _recipient != owner)
          PUSH 0		payOwnerOnly
          PUSH 14		payOwnerOnly
          SWAP1			payOwnerOnly
          SLOAD			payOwnerOnly
          SWAP1			payOwnerOnly
          PUSH 100		payOwnerOnly
          EXP			payOwnerOnly
          SWAP1			payOwnerOnly
          DIV			payOwnerOnly
          PUSH FF		payOwnerOnly
          AND			payOwnerOnly
          DUP1			payOwnerOnly && _recipient != owner
          ISZERO			payOwnerOnly && _recipient != owner
          PUSH [tag20]		payOwnerOnly && _recipient != owner
          JUMPI			payOwnerOnly && _recipient != owner
          POP			payOwnerOnly && _recipient != owner
          PUSH 0		owner
          PUSH 0		owner
          SWAP1			owner
          SLOAD			owner
          SWAP1			owner
          PUSH 100		owner
          EXP			owner
          SWAP1			owner
          DIV			owner
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		owner
          AND			owner
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		_recipient != owner
          AND			_recipient != owner
          DUP4			_recipient
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		_recipient != owner
          AND			_recipient != owner
          EQ			_recipient != owner
          ISZERO			_recipient != owner
        tag20: 
          JUMPDEST		payOwnerOnly && _recipient != owner
        tag19: 
          JUMPDEST		msg.sender != owner || msg.value > 0 || (payOwnerOnly && _recipient != owner)
          ISZERO			if (msg.sender != owner || msg.value > 0 || (payOwnerOnly && _recipient != owner))...
          PUSH [tag21]		if (msg.sender != owner || msg.value > 0 || (payOwnerOnly && _recipient != owner))...
          JUMPI			if (msg.sender != owner || msg.value > 0 || (payOwnerOnly && _recipient != owner))...
          PUSH [ErrorTag]		throw
          JUMP			throw
        tag21: 
          JUMPDEST		if (msg.sender != owner || msg.value > 0 || (payOwnerOnly && _recipient != owner))...
          DUP3			_recipient
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		_recipient.call
          AND			_recipient.call
          DUP3			_amount
          PUSH 40		_recipient.call.value(_amount)()
          MLOAD			_recipient.call.value(_amount)()
          DUP1			_recipient.call.value(_amount)()
          SWAP1			_recipient.call.value(_amount)()
          POP			_recipient.call.value(_amount)()
          PUSH 0		_recipient.call.value(_amount)()
          PUSH 40		_recipient.call.value(_amount)()
          MLOAD			_recipient.call.value(_amount)()
          DUP1			_recipient.call.value(_amount)()
          DUP4			_recipient.call.value(_amount)()
          SUB			_recipient.call.value(_amount)()
          DUP2			_recipient.call.value(_amount)()
          DUP6			_recipient.call.value(_amount)()
          DUP8			_recipient.call.value(_amount)()
          PUSH 8502		_recipient.call.value(_amount)()
          GAS			_recipient.call.value(_amount)()
          SUB			_recipient.call.value(_amount)()
          CALL			_recipient.call.value(_amount)()
          SWAP3			_recipient.call.value(_amount)()
          POP			_recipient.call.value(_amount)()
          POP			_recipient.call.value(_amount)()
          POP			_recipient.call.value(_amount)()
          ISZERO			if (_recipient.call.value(_amount)()) {...
          PUSH [tag22]		if (_recipient.call.value(_amount)()) {...
          JUMPI			if (_recipient.call.value(_amount)()) {...
          DUP3			_recipient
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		PayOut(_recipient, _amount)
          AND			PayOut(_recipient, _amount)
          PUSH 9735B0CB909F3D21D5C16BBCCCD272D85FA11446F6D679F6ECB170D2DABFECFC		PayOut(_recipient, _amount)
          DUP4			_amount
          PUSH 40		PayOut(_recipient, _amount)
          MLOAD			PayOut(_recipient, _amount)
          DUP1			PayOut(_recipient, _amount)
          DUP3			PayOut(_recipient, _amount)
          DUP2			PayOut(_recipient, _amount)
          MSTORE			PayOut(_recipient, _amount)
          PUSH 20		PayOut(_recipient, _amount)
          ADD			PayOut(_recipient, _amount)
          SWAP2			PayOut(_recipient, _amount)
          POP			PayOut(_recipient, _amount)
          POP			PayOut(_recipient, _amount)
          PUSH 40		PayOut(_recipient, _amount)
          MLOAD			PayOut(_recipient, _amount)
          DUP1			PayOut(_recipient, _amount)
          SWAP2			PayOut(_recipient, _amount)
          SUB			PayOut(_recipient, _amount)
          SWAP1			PayOut(_recipient, _amount)
          LOG2			PayOut(_recipient, _amount)
          PUSH 1		true
          SWAP1			return true
          POP			return true
          PUSH [tag17]		return true
          JUMP			return true
          PUSH [tag23]		if (_recipient.call.value(_amount)()) {...
          JUMP			if (_recipient.call.value(_amount)()) {...
        tag22: 
          JUMPDEST		if (_recipient.call.value(_amount)()) {...
          PUSH 0		false
          SWAP1			return false
          POP			return false
          PUSH [tag17]		return false
          JUMP			return false
        tag23: 
          JUMPDEST		if (_recipient.call.value(_amount)()) {...
        tag17: 
          JUMPDEST		function payOut(address _recipient, uint _amount) returns (bool) {...
          SWAP3			function payOut(address _recipient, uint _amount) returns (bool) {...
          SWAP2			function payOut(address _recipient, uint _amount) returns (bool) {...
          POP			function payOut(address _recipient, uint _amount) returns (bool) {...
          POP			function payOut(address _recipient, uint _amount) returns (bool) {...
          JUMP	[out]		function payOut(address _recipient, uint _amount) returns (bool) {...
      2: 
      .code:
        PUSH 60		contract ManagedAccount is ManagedAccountInterface{...
        PUSH 40		contract ManagedAccount is ManagedAccountInterface{...
        MSTORE			contract ManagedAccount is ManagedAccountInterface{...
        PUSH 40		function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        MLOAD			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        PUSH 40		function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        DUP1			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        PUSHSIZE		function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        DUP4			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        CODECOPY			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        DUP2			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        ADD			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        PUSH 40		function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        MSTORE			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        DUP1			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        DUP1			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        MLOAD			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        SWAP1			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        PUSH 20		function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        ADD			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        SWAP1			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        SWAP2			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        SWAP1			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        DUP1			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        MLOAD			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        SWAP1			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        PUSH 20		function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        ADD			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        SWAP1			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        SWAP2			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        SWAP1			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        POP			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        POP			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
      tag1: 
        JUMPDEST		function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        DUP2			_owner
        PUSH 0		owner
        PUSH 0		owner
        PUSH 100		owner = _owner
        EXP			owner = _owner
        DUP2			owner = _owner
        SLOAD			owner = _owner
        DUP2			owner = _owner
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		owner = _owner
        MUL			owner = _owner
        NOT			owner = _owner
        AND			owner = _owner
        SWAP1			owner = _owner
        DUP4			owner = _owner
        MUL			owner = _owner
        OR			owner = _owner
        SWAP1			owner = _owner
        SSTORE			owner = _owner
        POP			owner = _owner
        DUP1			_payOwnerOnly
        PUSH 0		payOwnerOnly
        PUSH 14		payOwnerOnly
        PUSH 100		payOwnerOnly = _payOwnerOnly
        EXP			payOwnerOnly = _payOwnerOnly
        DUP2			payOwnerOnly = _payOwnerOnly
        SLOAD			payOwnerOnly = _payOwnerOnly
        DUP2			payOwnerOnly = _payOwnerOnly
        PUSH FF		payOwnerOnly = _payOwnerOnly
        MUL			payOwnerOnly = _payOwnerOnly
        NOT			payOwnerOnly = _payOwnerOnly
        AND			payOwnerOnly = _payOwnerOnly
        SWAP1			payOwnerOnly = _payOwnerOnly
        DUP4			payOwnerOnly = _payOwnerOnly
        MUL			payOwnerOnly = _payOwnerOnly
        OR			payOwnerOnly = _payOwnerOnly
        SWAP1			payOwnerOnly = _payOwnerOnly
        SSTORE			payOwnerOnly = _payOwnerOnly
        POP			payOwnerOnly = _payOwnerOnly
      tag2: 
        JUMPDEST		function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        POP			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        POP			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
        PUSH #[$00000000…00000000]		contract ManagedAccount is ManagedAccountInterface{...
        DUP1			contract ManagedAccount is ManagedAccountInterface{...
        PUSH [$00000000…00000000]		contract ManagedAccount is ManagedAccountInterface{...
        PUSH 0		contract ManagedAccount is ManagedAccountInterface{...
        CODECOPY			contract ManagedAccount is ManagedAccountInterface{...
        PUSH 0		contract ManagedAccount is ManagedAccountInterface{...
        RETURN			contract ManagedAccount is ManagedAccountInterface{...
      .data:
        0: 
        .code:
          PUSH 60		contract ManagedAccount is ManagedAccountInterface{...
          PUSH 40		contract ManagedAccount is ManagedAccountInterface{...
          MSTORE			contract ManagedAccount is ManagedAccountInterface{...
          CALLDATASIZE			contract ManagedAccount is ManagedAccountInterface{...
          ISZERO			contract ManagedAccount is ManagedAccountInterface{...
          PUSH [tag1]		contract ManagedAccount is ManagedAccountInterface{...
          JUMPI			contract ManagedAccount is ManagedAccountInterface{...
          PUSH 0		contract ManagedAccount is ManagedAccountInterface{...
          CALLDATALOAD			contract ManagedAccount is ManagedAccountInterface{...
          PUSH 100000000000000000000000000000000000000000000000000000000		contract ManagedAccount is ManagedAccountInterface{...
          SWAP1			contract ManagedAccount is ManagedAccountInterface{...
          DIV			contract ManagedAccount is ManagedAccountInterface{...
          DUP1			contract ManagedAccount is ManagedAccountInterface{...
          PUSH 221038A		contract ManagedAccount is ManagedAccountInterface{...
          EQ			contract ManagedAccount is ManagedAccountInterface{...
          PUSH [tag2]		contract ManagedAccount is ManagedAccountInterface{...
          JUMPI			contract ManagedAccount is ManagedAccountInterface{...
          DUP1			contract ManagedAccount is ManagedAccountInterface{...
          PUSH 18BDC79A		contract ManagedAccount is ManagedAccountInterface{...
          EQ			contract ManagedAccount is ManagedAccountInterface{...
          PUSH [tag3]		contract ManagedAccount is ManagedAccountInterface{...
          JUMPI			contract ManagedAccount is ManagedAccountInterface{...
          DUP1			contract ManagedAccount is ManagedAccountInterface{...
          PUSH 8DA5CB5B		contract ManagedAccount is ManagedAccountInterface{...
          EQ			contract ManagedAccount is ManagedAccountInterface{...
          PUSH [tag4]		contract ManagedAccount is ManagedAccountInterface{...
          JUMPI			contract ManagedAccount is ManagedAccountInterface{...
          DUP1			contract ManagedAccount is ManagedAccountInterface{...
          PUSH D2CC718F		contract ManagedAccount is ManagedAccountInterface{...
          EQ			contract ManagedAccount is ManagedAccountInterface{...
          PUSH [tag5]		contract ManagedAccount is ManagedAccountInterface{...
          JUMPI			contract ManagedAccount is ManagedAccountInterface{...
          PUSH [tag1]		contract ManagedAccount is ManagedAccountInterface{...
          JUMP			contract ManagedAccount is ManagedAccountInterface{...
        tag1: 
          JUMPDEST		contract ManagedAccount is ManagedAccountInterface{...
          PUSH [tag6]		contract ManagedAccount is ManagedAccountInterface{...
        tag7: 
          JUMPDEST		function() {...
          CALLVALUE			msg.value
          PUSH 1		accumulatedInput
          PUSH 0		accumulatedInput
          DUP3			accumulatedInput += msg.value
          DUP3			accumulatedInput += msg.value
          DUP3			accumulatedInput += msg.value
          POP			accumulatedInput += msg.value
          SLOAD			accumulatedInput += msg.value
          ADD			accumulatedInput += msg.value
          SWAP3			accumulatedInput += msg.value
          POP			accumulatedInput += msg.value
          POP			accumulatedInput += msg.value
          DUP2			accumulatedInput += msg.value
          SWAP1			accumulatedInput += msg.value
          SSTORE			accumulatedInput += msg.value
          POP			accumulatedInput += msg.value
        tag8: 
          JUMPDEST		function() {...
          JUMP	[out]		function() {...
        tag6: 
          JUMPDEST		contract ManagedAccount is ManagedAccountInterface{...
          STOP			contract ManagedAccount is ManagedAccountInterface{...
        tag2: 
          JUMPDEST		function payOut(address _recipient, uint _amount) returns (bool) {...
          PUSH [tag9]		function payOut(address _recipient, uint _amount) returns (bool) {...
          PUSH 4		function payOut(address _recipient, uint _amount) returns (bool) {...
          DUP1			function payOut(address _recipient, uint _amount) returns (bool) {...
          DUP1			function payOut(address _recipient, uint _amount) returns (bool) {...
          CALLDATALOAD			function payOut(address _recipient, uint _amount) returns (bool) {...
          SWAP1			function payOut(address _recipient, uint _amount) returns (bool) {...
          PUSH 20		function payOut(address _recipient, uint _amount) returns (bool) {...
          ADD			function payOut(address _recipient, uint _amount) returns (bool) {...
          SWAP1			function payOut(address _recipient, uint _amount) returns (bool) {...
          SWAP2			function payOut(address _recipient, uint _amount) returns (bool) {...
          SWAP1			function payOut(address _recipient, uint _amount) returns (bool) {...
          DUP1			function payOut(address _recipient, uint _amount) returns (bool) {...
          CALLDATALOAD			function payOut(address _recipient, uint _amount) returns (bool) {...
          SWAP1			function payOut(address _recipient, uint _amount) returns (bool) {...
          PUSH 20		function payOut(address _recipient, uint _amount) returns (bool) {...
          ADD			function payOut(address _recipient, uint _amount) returns (bool) {...
          SWAP1			function payOut(address _recipient, uint _amount) returns (bool) {...
          SWAP2			function payOut(address _recipient, uint _amount) returns (bool) {...
          SWAP1			function payOut(address _recipient, uint _amount) returns (bool) {...
          POP			function payOut(address _recipient, uint _amount) returns (bool) {...
          POP			function payOut(address _recipient, uint _amount) returns (bool) {...
          PUSH [tag10]		function payOut(address _recipient, uint _amount) returns (bool) {...
          JUMP			function payOut(address _recipient, uint _amount) returns (bool) {...
        tag9: 
          JUMPDEST		function payOut(address _recipient, uint _amount) returns (bool) {...
          PUSH 40		function payOut(address _recipient, uint _amount) returns (bool) {...
          MLOAD			function payOut(address _recipient, uint _amount) returns (bool) {...
          DUP1			function payOut(address _recipient, uint _amount) returns (bool) {...
          DUP3			function payOut(address _recipient, uint _amount) returns (bool) {...
          DUP2			function payOut(address _recipient, uint _amount) returns (bool) {...
          MSTORE			function payOut(address _recipient, uint _amount) returns (bool) {...
          PUSH 20		function payOut(address _recipient, uint _amount) returns (bool) {...
          ADD			function payOut(address _recipient, uint _amount) returns (bool) {...
          SWAP2			function payOut(address _recipient, uint _amount) returns (bool) {...
          POP			function payOut(address _recipient, uint _amount) returns (bool) {...
          POP			function payOut(address _recipient, uint _amount) returns (bool) {...
          PUSH 40		function payOut(address _recipient, uint _amount) returns (bool) {...
          MLOAD			function payOut(address _recipient, uint _amount) returns (bool) {...
          DUP1			function payOut(address _recipient, uint _amount) returns (bool) {...
          SWAP2			function payOut(address _recipient, uint _amount) returns (bool) {...
          SUB			function payOut(address _recipient, uint _amount) returns (bool) {...
          SWAP1			function payOut(address _recipient, uint _amount) returns (bool) {...
          RETURN			function payOut(address _recipient, uint _amount) returns (bool) {...
        tag3: 
          JUMPDEST		bool public payOwnerOnly
          PUSH [tag11]		bool public payOwnerOnly
          PUSH 4		bool public payOwnerOnly
          DUP1			bool public payOwnerOnly
          POP			bool public payOwnerOnly
          POP			bool public payOwnerOnly
          PUSH [tag12]		bool public payOwnerOnly
          JUMP			bool public payOwnerOnly
        tag11: 
          JUMPDEST		bool public payOwnerOnly
          PUSH 40		bool public payOwnerOnly
          MLOAD			bool public payOwnerOnly
          DUP1			bool public payOwnerOnly
          DUP3			bool public payOwnerOnly
          DUP2			bool public payOwnerOnly
          MSTORE			bool public payOwnerOnly
          PUSH 20		bool public payOwnerOnly
          ADD			bool public payOwnerOnly
          SWAP2			bool public payOwnerOnly
          POP			bool public payOwnerOnly
          POP			bool public payOwnerOnly
          PUSH 40		bool public payOwnerOnly
          MLOAD			bool public payOwnerOnly
          DUP1			bool public payOwnerOnly
          SWAP2			bool public payOwnerOnly
          SUB			bool public payOwnerOnly
          SWAP1			bool public payOwnerOnly
          RETURN			bool public payOwnerOnly
        tag4: 
          JUMPDEST		address public owner
          PUSH [tag13]		address public owner
          PUSH 4		address public owner
          DUP1			address public owner
          POP			address public owner
          POP			address public owner
          PUSH [tag14]		address public owner
          JUMP			address public owner
        tag13: 
          JUMPDEST		address public owner
          PUSH 40		address public owner
          MLOAD			address public owner
          DUP1			address public owner
          DUP3			address public owner
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		address public owner
          AND			address public owner
          DUP2			address public owner
          MSTORE			address public owner
          PUSH 20		address public owner
          ADD			address public owner
          SWAP2			address public owner
          POP			address public owner
          POP			address public owner
          PUSH 40		address public owner
          MLOAD			address public owner
          DUP1			address public owner
          SWAP2			address public owner
          SUB			address public owner
          SWAP1			address public owner
          RETURN			address public owner
        tag5: 
          JUMPDEST		uint public accumulatedInput
          PUSH [tag15]		uint public accumulatedInput
          PUSH 4		uint public accumulatedInput
          DUP1			uint public accumulatedInput
          POP			uint public accumulatedInput
          POP			uint public accumulatedInput
          PUSH [tag16]		uint public accumulatedInput
          JUMP			uint public accumulatedInput
        tag15: 
          JUMPDEST		uint public accumulatedInput
          PUSH 40		uint public accumulatedInput
          MLOAD			uint public accumulatedInput
          DUP1			uint public accumulatedInput
          DUP3			uint public accumulatedInput
          DUP2			uint public accumulatedInput
          MSTORE			uint public accumulatedInput
          PUSH 20		uint public accumulatedInput
          ADD			uint public accumulatedInput
          SWAP2			uint public accumulatedInput
          POP			uint public accumulatedInput
          POP			uint public accumulatedInput
          PUSH 40		uint public accumulatedInput
          MLOAD			uint public accumulatedInput
          DUP1			uint public accumulatedInput
          SWAP2			uint public accumulatedInput
          SUB			uint public accumulatedInput
          SWAP1			uint public accumulatedInput
          RETURN			uint public accumulatedInput
        tag14: 
          JUMPDEST		address public owner
          PUSH 0		address public owner
          PUSH 0		address public owner
          SWAP1			address public owner
          SLOAD			address public owner
          SWAP1			address public owner
          PUSH 100		address public owner
          EXP			address public owner
          SWAP1			address public owner
          DIV			address public owner
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		address public owner
          AND			address public owner
          DUP2			address public owner
          JUMP	[out]		address public owner
        tag12: 
          JUMPDEST		bool public payOwnerOnly
          PUSH 0		bool public payOwnerOnly
          PUSH 14		bool public payOwnerOnly
          SWAP1			bool public payOwnerOnly
          SLOAD			bool public payOwnerOnly
          SWAP1			bool public payOwnerOnly
          PUSH 100		bool public payOwnerOnly
          EXP			bool public payOwnerOnly
          SWAP1			bool public payOwnerOnly
          DIV			bool public payOwnerOnly
          PUSH FF		bool public payOwnerOnly
          AND			bool public payOwnerOnly
          DUP2			bool public payOwnerOnly
          JUMP	[out]		bool public payOwnerOnly
        tag16: 
          JUMPDEST		uint public accumulatedInput
          PUSH 1		uint public accumulatedInput
          PUSH 0		uint public accumulatedInput
          POP			uint public accumulatedInput
          SLOAD			uint public accumulatedInput
          DUP2			uint public accumulatedInput
          JUMP	[out]		uint public accumulatedInput
        tag10: 
          JUMPDEST		function payOut(address _recipient, uint _amount) returns (bool) {...
          PUSH 0		bool
          PUSH 0		owner
          PUSH 0		owner
          SWAP1			owner
          SLOAD			owner
          SWAP1			owner
          PUSH 100		owner
          EXP			owner
          SWAP1			owner
          DIV			owner
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		owner
          AND			owner
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		msg.sender != owner
          AND			msg.sender != owner
          CALLER			msg.sender
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		msg.sender != owner
          AND			msg.sender != owner
          EQ			msg.sender != owner
          ISZERO			msg.sender != owner
          DUP1			msg.sender != owner || msg.value > 0
          PUSH [tag18]		msg.sender != owner || msg.value > 0
          JUMPI			msg.sender != owner || msg.value > 0
          POP			msg.sender != owner || msg.value > 0
          PUSH 0		0
          CALLVALUE			msg.value
          GT			msg.value > 0
        tag18: 
          JUMPDEST		msg.sender != owner || msg.value > 0
          DUP1			msg.sender != owner || msg.value > 0 || (payOwnerOnly && _recipient != owner)
          PUSH [tag19]		msg.sender != owner || msg.value > 0 || (payOwnerOnly && _recipient != owner)
          JUMPI			msg.sender != owner || msg.value > 0 || (payOwnerOnly && _recipient != owner)
          POP			msg.sender != owner || msg.value > 0 || (payOwnerOnly && _recipient != owner)
          PUSH 0		payOwnerOnly
          PUSH 14		payOwnerOnly
          SWAP1			payOwnerOnly
          SLOAD			payOwnerOnly
          SWAP1			payOwnerOnly
          PUSH 100		payOwnerOnly
          EXP			payOwnerOnly
          SWAP1			payOwnerOnly
          DIV			payOwnerOnly
          PUSH FF		payOwnerOnly
          AND			payOwnerOnly
          DUP1			payOwnerOnly && _recipient != owner
          ISZERO			payOwnerOnly && _recipient != owner
          PUSH [tag20]		payOwnerOnly && _recipient != owner
          JUMPI			payOwnerOnly && _recipient != owner
          POP			payOwnerOnly && _recipient != owner
          PUSH 0		owner
          PUSH 0		owner
          SWAP1			owner
          SLOAD			owner
          SWAP1			owner
          PUSH 100		owner
          EXP			owner
          SWAP1			owner
          DIV			owner
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		owner
          AND			owner
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		_recipient != owner
          AND			_recipient != owner
          DUP4			_recipient
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		_recipient != owner
          AND			_recipient != owner
          EQ			_recipient != owner
          ISZERO			_recipient != owner
        tag20: 
          JUMPDEST		payOwnerOnly && _recipient != owner
        tag19: 
          JUMPDEST		msg.sender != owner || msg.value > 0 || (payOwnerOnly && _recipient != owner)
          ISZERO			if (msg.sender != owner || msg.value > 0 || (payOwnerOnly && _recipient != owner))...
          PUSH [tag21]		if (msg.sender != owner || msg.value > 0 || (payOwnerOnly && _recipient != owner))...
          JUMPI			if (msg.sender != owner || msg.value > 0 || (payOwnerOnly && _recipient != owner))...
          PUSH [ErrorTag]		throw
          JUMP			throw
        tag21: 
          JUMPDEST		if (msg.sender != owner || msg.value > 0 || (payOwnerOnly && _recipient != owner))...
          DUP3			_recipient
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		_recipient.call
          AND			_recipient.call
          DUP3			_amount
          PUSH 40		_recipient.call.value(_amount)()
          MLOAD			_recipient.call.value(_amount)()
          DUP1			_recipient.call.value(_amount)()
          SWAP1			_recipient.call.value(_amount)()
          POP			_recipient.call.value(_amount)()
          PUSH 0		_recipient.call.value(_amount)()
          PUSH 40		_recipient.call.value(_amount)()
          MLOAD			_recipient.call.value(_amount)()
          DUP1			_recipient.call.value(_amount)()
          DUP4			_recipient.call.value(_amount)()
          SUB			_recipient.call.value(_amount)()
          DUP2			_recipient.call.value(_amount)()
          DUP6			_recipient.call.value(_amount)()
          DUP8			_recipient.call.value(_amount)()
          PUSH 8502		_recipient.call.value(_amount)()
          GAS			_recipient.call.value(_amount)()
          SUB			_recipient.call.value(_amount)()
          CALL			_recipient.call.value(_amount)()
          SWAP3			_recipient.call.value(_amount)()
          POP			_recipient.call.value(_amount)()
          POP			_recipient.call.value(_amount)()
          POP			_recipient.call.value(_amount)()
          ISZERO			if (_recipient.call.value(_amount)()) {...
          PUSH [tag22]		if (_recipient.call.value(_amount)()) {...
          JUMPI			if (_recipient.call.value(_amount)()) {...
          DUP3			_recipient
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		PayOut(_recipient, _amount)
          AND			PayOut(_recipient, _amount)
          PUSH 9735B0CB909F3D21D5C16BBCCCD272D85FA11446F6D679F6ECB170D2DABFECFC		PayOut(_recipient, _amount)
          DUP4			_amount
          PUSH 40		PayOut(_recipient, _amount)
          MLOAD			PayOut(_recipient, _amount)
          DUP1			PayOut(_recipient, _amount)
          DUP3			PayOut(_recipient, _amount)
          DUP2			PayOut(_recipient, _amount)
          MSTORE			PayOut(_recipient, _amount)
          PUSH 20		PayOut(_recipient, _amount)
          ADD			PayOut(_recipient, _amount)
          SWAP2			PayOut(_recipient, _amount)
          POP			PayOut(_recipient, _amount)
          POP			PayOut(_recipient, _amount)
          PUSH 40		PayOut(_recipient, _amount)
          MLOAD			PayOut(_recipient, _amount)
          DUP1			PayOut(_recipient, _amount)
          SWAP2			PayOut(_recipient, _amount)
          SUB			PayOut(_recipient, _amount)
          SWAP1			PayOut(_recipient, _amount)
          LOG2			PayOut(_recipient, _amount)
          PUSH 1		true
          SWAP1			return true
          POP			return true
          PUSH [tag17]		return true
          JUMP			return true
          PUSH [tag23]		if (_recipient.call.value(_amount)()) {...
          JUMP			if (_recipient.call.value(_amount)()) {...
        tag22: 
          JUMPDEST		if (_recipient.call.value(_amount)()) {...
          PUSH 0		false
          SWAP1			return false
          POP			return false
          PUSH [tag17]		return false
          JUMP			return false
        tag23: 
          JUMPDEST		if (_recipient.call.value(_amount)()) {...
        tag17: 
          JUMPDEST		function payOut(address _recipient, uint _amount) returns (bool) {...
          SWAP3			function payOut(address _recipient, uint _amount) returns (bool) {...
          SWAP2			function payOut(address _recipient, uint _amount) returns (bool) {...
          POP			function payOut(address _recipient, uint _amount) returns (bool) {...
          POP			function payOut(address _recipient, uint _amount) returns (bool) {...
          JUMP	[out]		function payOut(address _recipient, uint _amount) returns (bool) {...
      3: 
      .code:
        PUSH 60		contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH 40		contract DAO is DAOInterface, Token, TokenCreation {...
        MSTORE			contract DAO is DAOInterface, Token, TokenCreation {...
        CALLDATASIZE			contract DAO is DAOInterface, Token, TokenCreation {...
        ISZERO			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH [tag1]		contract DAO is DAOInterface, Token, TokenCreation {...
        JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH 0		contract DAO is DAOInterface, Token, TokenCreation {...
        CALLDATALOAD			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH 100000000000000000000000000000000000000000000000000000000		contract DAO is DAOInterface, Token, TokenCreation {...
        SWAP1			contract DAO is DAOInterface, Token, TokenCreation {...
        DIV			contract DAO is DAOInterface, Token, TokenCreation {...
        DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH 13CF08B		contract DAO is DAOInterface, Token, TokenCreation {...
        EQ			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH [tag2]		contract DAO is DAOInterface, Token, TokenCreation {...
        JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
        DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH 95EA7B3		contract DAO is DAOInterface, Token, TokenCreation {...
        EQ			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH [tag3]		contract DAO is DAOInterface, Token, TokenCreation {...
        JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
        DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH C3B7B96		contract DAO is DAOInterface, Token, TokenCreation {...
        EQ			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH [tag4]		contract DAO is DAOInterface, Token, TokenCreation {...
        JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
        DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH E708203		contract DAO is DAOInterface, Token, TokenCreation {...
        EQ			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH [tag5]		contract DAO is DAOInterface, Token, TokenCreation {...
        JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
        DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH 149ACF9A		contract DAO is DAOInterface, Token, TokenCreation {...
        EQ			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH [tag6]		contract DAO is DAOInterface, Token, TokenCreation {...
        JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
        DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH 18160DDD		contract DAO is DAOInterface, Token, TokenCreation {...
        EQ			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH [tag7]		contract DAO is DAOInterface, Token, TokenCreation {...
        JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
        DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH 1F2DC5EF		contract DAO is DAOInterface, Token, TokenCreation {...
        EQ			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH [tag8]		contract DAO is DAOInterface, Token, TokenCreation {...
        JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
        DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH 21B5B8DD		contract DAO is DAOInterface, Token, TokenCreation {...
        EQ			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH [tag9]		contract DAO is DAOInterface, Token, TokenCreation {...
        JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
        DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH 237E9492		contract DAO is DAOInterface, Token, TokenCreation {...
        EQ			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH [tag10]		contract DAO is DAOInterface, Token, TokenCreation {...
        JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
        DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH 23B872DD		contract DAO is DAOInterface, Token, TokenCreation {...
        EQ			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH [tag11]		contract DAO is DAOInterface, Token, TokenCreation {...
        JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
        DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH 2632BF20		contract DAO is DAOInterface, Token, TokenCreation {...
        EQ			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH [tag12]		contract DAO is DAOInterface, Token, TokenCreation {...
        JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
        DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH 34145808		contract DAO is DAOInterface, Token, TokenCreation {...
        EQ			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH [tag13]		contract DAO is DAOInterface, Token, TokenCreation {...
        JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
        DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH 39D1F908		contract DAO is DAOInterface, Token, TokenCreation {...
        EQ			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH [tag14]		contract DAO is DAOInterface, Token, TokenCreation {...
        JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
        DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH 4B6753BC		contract DAO is DAOInterface, Token, TokenCreation {...
        EQ			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH [tag15]		contract DAO is DAOInterface, Token, TokenCreation {...
        JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
        DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH 4DF6D6CC		contract DAO is DAOInterface, Token, TokenCreation {...
        EQ			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH [tag16]		contract DAO is DAOInterface, Token, TokenCreation {...
        JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
        DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH 4E10C3EE		contract DAO is DAOInterface, Token, TokenCreation {...
        EQ			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH [tag17]		contract DAO is DAOInterface, Token, TokenCreation {...
        JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
        DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH 590E1AE3		contract DAO is DAOInterface, Token, TokenCreation {...
        EQ			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH [tag18]		contract DAO is DAOInterface, Token, TokenCreation {...
        JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
        DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH 612E45A3		contract DAO is DAOInterface, Token, TokenCreation {...
        EQ			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH [tag19]		contract DAO is DAOInterface, Token, TokenCreation {...
        JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
        DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH 643F7CDD		contract DAO is DAOInterface, Token, TokenCreation {...
        EQ			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH [tag20]		contract DAO is DAOInterface, Token, TokenCreation {...
        JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
        DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH 674ED066		contract DAO is DAOInterface, Token, TokenCreation {...
        EQ			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH [tag21]		contract DAO is DAOInterface, Token, TokenCreation {...
        JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
        DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH 6837FF1E		contract DAO is DAOInterface, Token, TokenCreation {...
        EQ			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH [tag22]		contract DAO is DAOInterface, Token, TokenCreation {...
        JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
        DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH 70A08231		contract DAO is DAOInterface, Token, TokenCreation {...
        EQ			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH [tag23]		contract DAO is DAOInterface, Token, TokenCreation {...
        JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
        DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH 749F9889		contract DAO is DAOInterface, Token, TokenCreation {...
        EQ			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH [tag24]		contract DAO is DAOInterface, Token, TokenCreation {...
        JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
        DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH 78524B2E		contract DAO is DAOInterface, Token, TokenCreation {...
        EQ			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH [tag25]		contract DAO is DAOInterface, Token, TokenCreation {...
        JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
        DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH 81F03FCB		contract DAO is DAOInterface, Token, TokenCreation {...
        EQ			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH [tag26]		contract DAO is DAOInterface, Token, TokenCreation {...
        JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
        DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH 82661DC4		contract DAO is DAOInterface, Token, TokenCreation {...
        EQ			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH [tag27]		contract DAO is DAOInterface, Token, TokenCreation {...
        JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
        DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH 82BF6464		contract DAO is DAOInterface, Token, TokenCreation {...
        EQ			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH [tag28]		contract DAO is DAOInterface, Token, TokenCreation {...
        JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
        DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH 8B15A605		contract DAO is DAOInterface, Token, TokenCreation {...
        EQ			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH [tag29]		contract DAO is DAOInterface, Token, TokenCreation {...
        JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
        DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH 8D7AF473		contract DAO is DAOInterface, Token, TokenCreation {...
        EQ			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH [tag30]		contract DAO is DAOInterface, Token, TokenCreation {...
        JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
        DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH 96D7F3F5		contract DAO is DAOInterface, Token, TokenCreation {...
        EQ			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH [tag31]		contract DAO is DAOInterface, Token, TokenCreation {...
        JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
        DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH A1DA2FB9		contract DAO is DAOInterface, Token, TokenCreation {...
        EQ			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH [tag32]		contract DAO is DAOInterface, Token, TokenCreation {...
        JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
        DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH A3912EC8		contract DAO is DAOInterface, Token, TokenCreation {...
        EQ			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH [tag33]		contract DAO is DAOInterface, Token, TokenCreation {...
        JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
        DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH A9059CBB		contract DAO is DAOInterface, Token, TokenCreation {...
        EQ			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH [tag34]		contract DAO is DAOInterface, Token, TokenCreation {...
        JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
        DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH B7BC2C84		contract DAO is DAOInterface, Token, TokenCreation {...
        EQ			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH [tag35]		contract DAO is DAOInterface, Token, TokenCreation {...
        JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
        DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH BAAC5300		contract DAO is DAOInterface, Token, TokenCreation {...
        EQ			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH [tag36]		contract DAO is DAOInterface, Token, TokenCreation {...
        JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
        DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH BE7C29C1		contract DAO is DAOInterface, Token, TokenCreation {...
        EQ			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH [tag37]		contract DAO is DAOInterface, Token, TokenCreation {...
        JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
        DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH C9D27AFE		contract DAO is DAOInterface, Token, TokenCreation {...
        EQ			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH [tag38]		contract DAO is DAOInterface, Token, TokenCreation {...
        JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
        DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH CC9AE3F6		contract DAO is DAOInterface, Token, TokenCreation {...
        EQ			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH [tag39]		contract DAO is DAOInterface, Token, TokenCreation {...
        JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
        DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH CDEF91D0		contract DAO is DAOInterface, Token, TokenCreation {...
        EQ			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH [tag40]		contract DAO is DAOInterface, Token, TokenCreation {...
        JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
        DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH DBDE1988		contract DAO is DAOInterface, Token, TokenCreation {...
        EQ			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH [tag41]		contract DAO is DAOInterface, Token, TokenCreation {...
        JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
        DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH DD62ED3E		contract DAO is DAOInterface, Token, TokenCreation {...
        EQ			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH [tag42]		contract DAO is DAOInterface, Token, TokenCreation {...
        JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
        DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH E33734FD		contract DAO is DAOInterface, Token, TokenCreation {...
        EQ			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH [tag43]		contract DAO is DAOInterface, Token, TokenCreation {...
        JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
        DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH E5962195		contract DAO is DAOInterface, Token, TokenCreation {...
        EQ			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH [tag44]		contract DAO is DAOInterface, Token, TokenCreation {...
        JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
        DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH E66F53B7		contract DAO is DAOInterface, Token, TokenCreation {...
        EQ			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH [tag45]		contract DAO is DAOInterface, Token, TokenCreation {...
        JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
        DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH ECEB2945		contract DAO is DAOInterface, Token, TokenCreation {...
        EQ			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH [tag46]		contract DAO is DAOInterface, Token, TokenCreation {...
        JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
        DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH F8C80D26		contract DAO is DAOInterface, Token, TokenCreation {...
        EQ			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH [tag47]		contract DAO is DAOInterface, Token, TokenCreation {...
        JUMPI			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH [tag1]		contract DAO is DAOInterface, Token, TokenCreation {...
        JUMP			contract DAO is DAOInterface, Token, TokenCreation {...
      tag1: 
        JUMPDEST		contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH [tag48]		contract DAO is DAOInterface, Token, TokenCreation {...
      tag49: 
        JUMPDEST		function () returns (bool success) {...
        PUSH 0		bool success
        PUSH 34BC00		40 days
        PUSH F		closingTime
        PUSH 0		closingTime
        POP			closingTime
        SLOAD			closingTime
        ADD			closingTime + creationGracePeriod
        TIMESTAMP			now
        LT			now < closingTime + creationGracePeriod
        DUP1			now < closingTime + creationGracePeriod && msg.sender != address(extraBalance)
        ISZERO			now < closingTime + creationGracePeriod && msg.sender != address(extraBalance)
        PUSH [tag51]		now < closingTime + creationGracePeriod && msg.sender != address(extraBalance)
        JUMPI			now < closingTime + creationGracePeriod && msg.sender != address(extraBalance)
        POP			now < closingTime + creationGracePeriod && msg.sender != address(extraBalance)
        PUSH 12		extraBalance
        PUSH 0		extraBalance
        SWAP1			extraBalance
        SLOAD			extraBalance
        SWAP1			extraBalance
        PUSH 100		extraBalance
        EXP			extraBalance
        SWAP1			extraBalance
        DIV			extraBalance
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		extraBalance
        AND			extraBalance
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		msg.sender != address(extraBalance)
        AND			msg.sender != address(extraBalance)
        CALLER			msg.sender
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		msg.sender != address(extraBalance)
        AND			msg.sender != address(extraBalance)
        EQ			msg.sender != address(extraBalance)
        ISZERO			msg.sender != address(extraBalance)
      tag51: 
        JUMPDEST		now < closingTime + creationGracePeriod && msg.sender != address(extraBalance)
        ISZERO			if (now < closingTime + creationGracePeriod && msg.sender != address(extraBalance))...
        PUSH [tag52]		if (now < closingTime + creationGracePeriod && msg.sender != address(extraBalance))...
        JUMPI			if (now < closingTime + creationGracePeriod && msg.sender != address(extraBalance))...
        PUSH [tag53]		createTokenProxy(msg.sender)
        CALLER			msg.sender
        PUSH [tag54]		createTokenProxy
        JUMP	[in]		createTokenProxy(msg.sender)
      tag53: 
        JUMPDEST		createTokenProxy(msg.sender)
        SWAP1			return createTokenProxy(msg.sender)
        POP			return createTokenProxy(msg.sender)
        PUSH [tag50]		return createTokenProxy(msg.sender)
        JUMP			return createTokenProxy(msg.sender)
        PUSH [tag55]		if (now < closingTime + creationGracePeriod && msg.sender != address(extraBalance))...
        JUMP			if (now < closingTime + creationGracePeriod && msg.sender != address(extraBalance))...
      tag52: 
        JUMPDEST		if (now < closingTime + creationGracePeriod && msg.sender != address(extraBalance))...
        PUSH [tag56]		receiveEther()
        PUSH [tag57]		receiveEther
        JUMP	[in]		receiveEther()
      tag56: 
        JUMPDEST		receiveEther()
        SWAP1			return receiveEther()
        POP			return receiveEther()
        PUSH [tag50]		return receiveEther()
        JUMP			return receiveEther()
      tag55: 
        JUMPDEST		if (now < closingTime + creationGracePeriod && msg.sender != address(extraBalance))...
      tag50: 
        JUMPDEST		function () returns (bool success) {...
        SWAP1			function () returns (bool success) {...
        JUMP	[out]		function () returns (bool success) {...
      tag48: 
        JUMPDEST		contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH 40		contract DAO is DAOInterface, Token, TokenCreation {...
        MLOAD			contract DAO is DAOInterface, Token, TokenCreation {...
        DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
        DUP3			contract DAO is DAOInterface, Token, TokenCreation {...
        DUP2			contract DAO is DAOInterface, Token, TokenCreation {...
        MSTORE			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH 20		contract DAO is DAOInterface, Token, TokenCreation {...
        ADD			contract DAO is DAOInterface, Token, TokenCreation {...
        SWAP2			contract DAO is DAOInterface, Token, TokenCreation {...
        POP			contract DAO is DAOInterface, Token, TokenCreation {...
        POP			contract DAO is DAOInterface, Token, TokenCreation {...
        PUSH 40		contract DAO is DAOInterface, Token, TokenCreation {...
        MLOAD			contract DAO is DAOInterface, Token, TokenCreation {...
        DUP1			contract DAO is DAOInterface, Token, TokenCreation {...
        SWAP2			contract DAO is DAOInterface, Token, TokenCreation {...
        SUB			contract DAO is DAOInterface, Token, TokenCreation {...
        SWAP1			contract DAO is DAOInterface, Token, TokenCreation {...
        RETURN			contract DAO is DAOInterface, Token, TokenCreation {...
      tag2: 
        JUMPDEST		Proposal[] public proposals
        PUSH [tag58]		Proposal[] public proposals
        PUSH 4		Proposal[] public proposals
        DUP1			Proposal[] public proposals
        DUP1			Proposal[] public proposals
        CALLDATALOAD			Proposal[] public proposals
        SWAP1			Proposal[] public proposals
        PUSH 20		Proposal[] public proposals
        ADD			Proposal[] public proposals
        SWAP1			Proposal[] public proposals
        SWAP2			Proposal[] public proposals
        SWAP1			Proposal[] public proposals
        POP			Proposal[] public proposals
        POP			Proposal[] public proposals
        PUSH [tag59]		Proposal[] public proposals
        JUMP			Proposal[] public proposals
      tag58: 
        JUMPDEST		Proposal[] public proposals
        PUSH 40		Proposal[] public proposals
        MLOAD			Proposal[] public proposals
        DUP1			Proposal[] public proposals
        DUP14			Proposal[] public proposals
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		Proposal[] public proposals
        AND			Proposal[] public proposals
        DUP2			Proposal[] public proposals
        MSTORE			Proposal[] public proposals
        PUSH 20		Proposal[] public proposals
        ADD			Proposal[] public proposals
        DUP13			Proposal[] public proposals
        DUP2			Proposal[] public proposals
        MSTORE			Proposal[] public proposals
        PUSH 20		Proposal[] public proposals
        ADD			Proposal[] public proposals
        DUP1			Proposal[] public proposals
        PUSH 20		Proposal[] public proposals
        ADD			Proposal[] public proposals
        DUP12			Proposal[] public proposals
        DUP2			Proposal[] public proposals
        MSTORE			Proposal[] public proposals
        PUSH 20		Proposal[] public proposals
        ADD			Proposal[] public proposals
        DUP11			Proposal[] public proposals
        DUP2			Proposal[] public proposals
        MSTORE			Proposal[] public proposals
        PUSH 20		Proposal[] public proposals
        ADD			Proposal[] public proposals
        DUP10			Proposal[] public proposals
        DUP2			Proposal[] public proposals
        MSTORE			Proposal[] public proposals
        PUSH 20		Proposal[] public proposals
        ADD			Proposal[] public proposals
        DUP9			Proposal[] public proposals
        DUP2			Proposal[] public proposals
        MSTORE			Proposal[] public proposals
        PUSH 20		Proposal[] public proposals
        ADD			Proposal[] public proposals
        DUP8			Proposal[] public proposals
        DUP2			Proposal[] public proposals
        MSTORE			Proposal[] public proposals
        PUSH 20		Proposal[] public proposals
        ADD			Proposal[] public proposals
        DUP7			Proposal[] public proposals
        DUP2			Proposal[] public proposals
        MSTORE			Proposal[] public proposals
        PUSH 20		Proposal[] public proposals
        ADD			Proposal[] public proposals
        DUP6			Proposal[] public proposals
        DUP2			Proposal[] public proposals
        MSTORE			Proposal[] public proposals
        PUSH 20		Proposal[] public proposals
        ADD			Proposal[] public proposals
        DUP5			Proposal[] public proposals
        DUP2			Proposal[] public proposals
        MSTORE			Proposal[] public proposals
        PUSH 20		Proposal[] public proposals
        ADD			Proposal[] public proposals
        DUP4			Proposal[] public proposals
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		Proposal[] public proposals
        AND			Proposal[] public proposals
        DUP2			Proposal[] public proposals
        MSTORE			Proposal[] public proposals
        PUSH 20		Proposal[] public proposals
        ADD			Proposal[] public proposals
        DUP3			Proposal[] public proposals
        DUP2			Proposal[] public proposals
        SUB			Proposal[] public proposals
        DUP3			Proposal[] public proposals
        MSTORE			Proposal[] public proposals
        DUP13			Proposal[] public proposals
        DUP2			Proposal[] public proposals
        DUP2			Proposal[] public proposals
        SLOAD			Proposal[] public proposals
        PUSH 1		Proposal[] public proposals
        DUP2			Proposal[] public proposals
        PUSH 1		Proposal[] public proposals
        AND			Proposal[] public proposals
        ISZERO			Proposal[] public proposals
        PUSH 100		Proposal[] public proposals
        MUL			Proposal[] public proposals
        SUB			Proposal[] public proposals
        AND			Proposal[] public proposals
        PUSH 2		Proposal[] public proposals
        SWAP1			Proposal[] public proposals
        DIV			Proposal[] public proposals
        DUP2			Proposal[] public proposals
        MSTORE			Proposal[] public proposals
        PUSH 20		Proposal[] public proposals
        ADD			Proposal[] public proposals
        SWAP2			Proposal[] public proposals
        POP			Proposal[] public proposals
        DUP1			Proposal[] public proposals
        SLOAD			Proposal[] public proposals
        PUSH 1		Proposal[] public proposals
        DUP2			Proposal[] public proposals
        PUSH 1		Proposal[] public proposals
        AND			Proposal[] public proposals
        ISZERO			Proposal[] public proposals
        PUSH 100		Proposal[] public proposals
        MUL			Proposal[] public proposals
        SUB			Proposal[] public proposals
        AND			Proposal[] public proposals
        PUSH 2		Proposal[] public proposals
        SWAP1			Proposal[] public proposals
        DIV			Proposal[] public proposals
        DUP1			Proposal[] public proposals
        ISZERO			Proposal[] public proposals
        PUSH [tag60]		Proposal[] public proposals
        JUMPI			Proposal[] public proposals
        DUP1			Proposal[] public proposals
        PUSH 1F		Proposal[] public proposals
        LT			Proposal[] public proposals
        PUSH [tag61]		Proposal[] public proposals
        JUMPI			Proposal[] public proposals
        PUSH 100		Proposal[] public proposals
        DUP1			Proposal[] public proposals
        DUP4			Proposal[] public proposals
        SLOAD			Proposal[] public proposals
        DIV			Proposal[] public proposals
        MUL			Proposal[] public proposals
        DUP4			Proposal[] public proposals
        MSTORE			Proposal[] public proposals
        SWAP2			Proposal[] public proposals
        PUSH 20		Proposal[] public proposals
        ADD			Proposal[] public proposals
        SWAP2			Proposal[] public proposals
        PUSH [tag60]		Proposal[] public proposals
        JUMP			Proposal[] public proposals
      tag61: 
        JUMPDEST		Proposal[] public proposals
        DUP3			Proposal[] public proposals
        ADD			Proposal[] public proposals
        SWAP2			Proposal[] public proposals
        SWAP1			Proposal[] public proposals
        PUSH 0		Proposal[] public proposals
        MSTORE			Proposal[] public proposals
        PUSH 20		Proposal[] public proposals
        PUSH 0		Proposal[] public proposals
        SHA3			Proposal[] public proposals
        SWAP1			Proposal[] public proposals
      tag62: 
        JUMPDEST		Proposal[] public proposals
        DUP2			Proposal[] public proposals
        SLOAD			Proposal[] public proposals
        DUP2			Proposal[] public proposals
        MSTORE			Proposal[] public proposals
        SWAP1			Proposal[] public proposals
        PUSH 1		Proposal[] public proposals
        ADD			Proposal[] public proposals
        SWAP1			Proposal[] public proposals
        PUSH 20		Proposal[] public proposals
        ADD			Proposal[] public proposals
        DUP1			Proposal[] public proposals
        DUP4			Proposal[] public proposals
        GT			Proposal[] public proposals
        PUSH [tag62]		Proposal[] public proposals
        JUMPI			Proposal[] public proposals
        DUP3			Proposal[] public proposals
        SWAP1			Proposal[] public proposals
        SUB			Proposal[] public proposals
        PUSH 1F		Proposal[] public proposals
        AND			Proposal[] public proposals
        DUP3			Proposal[] public proposals
        ADD			Proposal[] public proposals
        SWAP2			Proposal[] public proposals
      tag60: 
        JUMPDEST		Proposal[] public proposals
        POP			Proposal[] public proposals
        POP			Proposal[] public proposals
        SWAP14			Proposal[] public proposals
        POP			Proposal[] public proposals
        POP			Proposal[] public proposals
        POP			Proposal[] public proposals
        POP			Proposal[] public proposals
        POP			Proposal[] public proposals
        POP			Proposal[] public proposals
        POP			Proposal[] public proposals
        POP			Proposal[] public proposals
        POP			Proposal[] public proposals
        POP			Proposal[] public proposals
        POP			Proposal[] public proposals
        POP			Proposal[] public proposals
        POP			Proposal[] public proposals
        POP			Proposal[] public proposals
        PUSH 40		Proposal[] public proposals
        MLOAD			Proposal[] public proposals
        DUP1			Proposal[] public proposals
        SWAP2			Proposal[] public proposals
        SUB			Proposal[] public proposals
        SWAP1			Proposal[] public proposals
        RETURN			Proposal[] public proposals
      tag3: 
        JUMPDEST		function approve(address _spender, uint256 _amount) returns (bool success) {...
        PUSH [tag63]		function approve(address _spender, uint256 _amount) returns (bool success) {...
        PUSH 4		function approve(address _spender, uint256 _amount) returns (bool success) {...
        DUP1			function approve(address _spender, uint256 _amount) returns (bool success) {...
        DUP1			function approve(address _spender, uint256 _amount) returns (bool success) {...
        CALLDATALOAD			function approve(address _spender, uint256 _amount) returns (bool success) {...
        SWAP1			function approve(address _spender, uint256 _amount) returns (bool success) {...
        PUSH 20		function approve(address _spender, uint256 _amount) returns (bool success) {...
        ADD			function approve(address _spender, uint256 _amount) returns (bool success) {...
        SWAP1			function approve(address _spender, uint256 _amount) returns (bool success) {...
        SWAP2			function approve(address _spender, uint256 _amount) returns (bool success) {...
        SWAP1			function approve(address _spender, uint256 _amount) returns (bool success) {...
        DUP1			function approve(address _spender, uint256 _amount) returns (bool success) {...
        CALLDATALOAD			function approve(address _spender, uint256 _amount) returns (bool success) {...
        SWAP1			function approve(address _spender, uint256 _amount) returns (bool success) {...
        PUSH 20		function approve(address _spender, uint256 _amount) returns (bool success) {...
        ADD			function approve(address _spender, uint256 _amount) returns (bool success) {...
        SWAP1			function approve(address _spender, uint256 _amount) returns (bool success) {...
        SWAP2			function approve(address _spender, uint256 _amount) returns (bool success) {...
        SWAP1			function approve(address _spender, uint256 _amount) returns (bool success) {...
        POP			function approve(address _spender, uint256 _amount) returns (bool success) {...
        POP			function approve(address _spender, uint256 _amount) returns (bool success) {...
        PUSH [tag64]		function approve(address _spender, uint256 _amount) returns (bool success) {...
        JUMP			function approve(address _spender, uint256 _amount) returns (bool success) {...
      tag63: 
        JUMPDEST		function approve(address _spender, uint256 _amount) returns (bool success) {...
        PUSH 40		function approve(address _spender, uint256 _amount) returns (bool success) {...
        MLOAD			function approve(address _spender, uint256 _amount) returns (bool success) {...
        DUP1			function approve(address _spender, uint256 _amount) returns (bool success) {...
        DUP3			function approve(address _spender, uint256 _amount) returns (bool success) {...
        DUP2			function approve(address _spender, uint256 _amount) returns (bool success) {...
        MSTORE			function approve(address _spender, uint256 _amount) returns (bool success) {...
        PUSH 20		function approve(address _spender, uint256 _amount) returns (bool success) {...
        ADD			function approve(address _spender, uint256 _amount) returns (bool success) {...
        SWAP2			function approve(address _spender, uint256 _amount) returns (bool success) {...
        POP			function approve(address _spender, uint256 _amount) returns (bool success) {...
        POP			function approve(address _spender, uint256 _amount) returns (bool success) {...
        PUSH 40		function approve(address _spender, uint256 _amount) returns (bool success) {...
        MLOAD			function approve(address _spender, uint256 _amount) returns (bool success) {...
        DUP1			function approve(address _spender, uint256 _amount) returns (bool success) {...
        SWAP2			function approve(address _spender, uint256 _amount) returns (bool success) {...
        SUB			function approve(address _spender, uint256 _amount) returns (bool success) {...
        SWAP1			function approve(address _spender, uint256 _amount) returns (bool success) {...
        RETURN			function approve(address _spender, uint256 _amount) returns (bool success) {...
      tag4: 
        JUMPDEST		uint public minTokensToCreate
        PUSH [tag65]		uint public minTokensToCreate
        PUSH 4		uint public minTokensToCreate
        DUP1			uint public minTokensToCreate
        POP			uint public minTokensToCreate
        POP			uint public minTokensToCreate
        PUSH [tag66]		uint public minTokensToCreate
        JUMP			uint public minTokensToCreate
      tag65: 
        JUMPDEST		uint public minTokensToCreate
        PUSH 40		uint public minTokensToCreate
        MLOAD			uint public minTokensToCreate
        DUP1			uint public minTokensToCreate
        DUP3			uint public minTokensToCreate
        DUP2			uint public minTokensToCreate
        MSTORE			uint public minTokensToCreate
        PUSH 20		uint public minTokensToCreate
        ADD			uint public minTokensToCreate
        SWAP2			uint public minTokensToCreate
        POP			uint public minTokensToCreate
        POP			uint public minTokensToCreate
        PUSH 40		uint public minTokensToCreate
        MLOAD			uint public minTokensToCreate
        DUP1			uint public minTokensToCreate
        SWAP2			uint public minTokensToCreate
        SUB			uint public minTokensToCreate
        SWAP1			uint public minTokensToCreate
        RETURN			uint public minTokensToCreate
      tag5: 
        JUMPDEST		ManagedAccount public rewardAccount
        PUSH [tag67]		ManagedAccount public rewardAccount
        PUSH 4		ManagedAccount public rewardAccount
        DUP1			ManagedAccount public rewardAccount
        POP			ManagedAccount public rewardAccount
        POP			ManagedAccount public rewardAccount
        PUSH [tag68]		ManagedAccount public rewardAccount
        JUMP			ManagedAccount public rewardAccount
      tag67: 
        JUMPDEST		ManagedAccount public rewardAccount
        PUSH 40		ManagedAccount public rewardAccount
        MLOAD			ManagedAccount public rewardAccount
        DUP1			ManagedAccount public rewardAccount
        DUP3			ManagedAccount public rewardAccount
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		ManagedAccount public rewardAccount
        AND			ManagedAccount public rewardAccount
        DUP2			ManagedAccount public rewardAccount
        MSTORE			ManagedAccount public rewardAccount
        PUSH 20		ManagedAccount public rewardAccount
        ADD			ManagedAccount public rewardAccount
        SWAP2			ManagedAccount public rewardAccount
        POP			ManagedAccount public rewardAccount
        POP			ManagedAccount public rewardAccount
        PUSH 40		ManagedAccount public rewardAccount
        MLOAD			ManagedAccount public rewardAccount
        DUP1			ManagedAccount public rewardAccount
        SWAP2			ManagedAccount public rewardAccount
        SUB			ManagedAccount public rewardAccount
        SWAP1			ManagedAccount public rewardAccount
        RETURN			ManagedAccount public rewardAccount
      tag6: 
        JUMPDEST		DAO_Creator public daoCreator
        PUSH [tag69]		DAO_Creator public daoCreator
        PUSH 4		DAO_Creator public daoCreator
        DUP1			DAO_Creator public daoCreator
        POP			DAO_Creator public daoCreator
        POP			DAO_Creator public daoCreator
        PUSH [tag70]		DAO_Creator public daoCreator
        JUMP			DAO_Creator public daoCreator
      tag69: 
        JUMPDEST		DAO_Creator public daoCreator
        PUSH 40		DAO_Creator public daoCreator
        MLOAD			DAO_Creator public daoCreator
        DUP1			DAO_Creator public daoCreator
        DUP3			DAO_Creator public daoCreator
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		DAO_Creator public daoCreator
        AND			DAO_Creator public daoCreator
        DUP2			DAO_Creator public daoCreator
        MSTORE			DAO_Creator public daoCreator
        PUSH 20		DAO_Creator public daoCreator
        ADD			DAO_Creator public daoCreator
        SWAP2			DAO_Creator public daoCreator
        POP			DAO_Creator public daoCreator
        POP			DAO_Creator public daoCreator
        PUSH 40		DAO_Creator public daoCreator
        MLOAD			DAO_Creator public daoCreator
        DUP1			DAO_Creator public daoCreator
        SWAP2			DAO_Creator public daoCreator
        SUB			DAO_Creator public daoCreator
        SWAP1			DAO_Creator public daoCreator
        RETURN			DAO_Creator public daoCreator
      tag7: 
        JUMPDEST		uint256 public totalSupply
        PUSH [tag71]		uint256 public totalSupply
        PUSH 4		uint256 public totalSupply
        DUP1			uint256 public totalSupply
        POP			uint256 public totalSupply
        POP			uint256 public totalSupply
        PUSH [tag72]		uint256 public totalSupply
        JUMP			uint256 public totalSupply
      tag71: 
        JUMPDEST		uint256 public totalSupply
        PUSH 40		uint256 public totalSupply
        MLOAD			uint256 public totalSupply
        DUP1			uint256 public totalSupply
        DUP3			uint256 public totalSupply
        DUP2			uint256 public totalSupply
        MSTORE			uint256 public totalSupply
        PUSH 20		uint256 public totalSupply
        ADD			uint256 public totalSupply
        SWAP2			uint256 public totalSupply
        POP			uint256 public totalSupply
        POP			uint256 public totalSupply
        PUSH 40		uint256 public totalSupply
        MLOAD			uint256 public totalSupply
        DUP1			uint256 public totalSupply
        SWAP2			uint256 public totalSupply
        SUB			uint256 public totalSupply
        SWAP1			uint256 public totalSupply
        RETURN			uint256 public totalSupply
      tag8: 
        JUMPDEST		function divisor() constant returns (uint divisor) {...
        PUSH [tag73]		function divisor() constant returns (uint divisor) {...
        PUSH 4		function divisor() constant returns (uint divisor) {...
        DUP1			function divisor() constant returns (uint divisor) {...
        POP			function divisor() constant returns (uint divisor) {...
        POP			function divisor() constant returns (uint divisor) {...
        PUSH [tag74]		function divisor() constant returns (uint divisor) {...
        JUMP			function divisor() constant returns (uint divisor) {...
      tag73: 
        JUMPDEST		function divisor() constant returns (uint divisor) {...
        PUSH 40		function divisor() constant returns (uint divisor) {...
        MLOAD			function divisor() constant returns (uint divisor) {...
        DUP1			function divisor() constant returns (uint divisor) {...
        DUP3			function divisor() constant returns (uint divisor) {...
        DUP2			function divisor() constant returns (uint divisor) {...
        MSTORE			function divisor() constant returns (uint divisor) {...
        PUSH 20		function divisor() constant returns (uint divisor) {...
        ADD			function divisor() constant returns (uint divisor) {...
        SWAP2			function divisor() constant returns (uint divisor) {...
        POP			function divisor() constant returns (uint divisor) {...
        POP			function divisor() constant returns (uint divisor) {...
        PUSH 40		function divisor() constant returns (uint divisor) {...
        MLOAD			function divisor() constant returns (uint divisor) {...
        DUP1			function divisor() constant returns (uint divisor) {...
        SWAP2			function divisor() constant returns (uint divisor) {...
        SUB			function divisor() constant returns (uint divisor) {...
        SWAP1			function divisor() constant returns (uint divisor) {...
        RETURN			function divisor() constant returns (uint divisor) {...
      tag9: 
        JUMPDEST		ManagedAccount public extraBalance
        PUSH [tag75]		ManagedAccount public extraBalance
        PUSH 4		ManagedAccount public extraBalance
        DUP1			ManagedAccount public extraBalance
        POP			ManagedAccount public extraBalance
        POP			ManagedAccount public extraBalance
        PUSH [tag76]		ManagedAccount public extraBalance
        JUMP			ManagedAccount public extraBalance
      tag75: 
        JUMPDEST		ManagedAccount public extraBalance
        PUSH 40		ManagedAccount public extraBalance
        MLOAD			ManagedAccount public extraBalance
        DUP1			ManagedAccount public extraBalance
        DUP3			ManagedAccount public extraBalance
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		ManagedAccount public extraBalance
        AND			ManagedAccount public extraBalance
        DUP2			ManagedAccount public extraBalance
        MSTORE			ManagedAccount public extraBalance
        PUSH 20		ManagedAccount public extraBalance
        ADD			ManagedAccount public extraBalance
        SWAP2			ManagedAccount public extraBalance
        POP			ManagedAccount public extraBalance
        POP			ManagedAccount public extraBalance
        PUSH 40		ManagedAccount public extraBalance
        MLOAD			ManagedAccount public extraBalance
        DUP1			ManagedAccount public extraBalance
        SWAP2			ManagedAccount public extraBalance
        SUB			ManagedAccount public extraBalance
        SWAP1			ManagedAccount public extraBalance
        RETURN			ManagedAccount public extraBalance
      tag10: 
        JUMPDEST		function executeProposal(...
        PUSH [tag77]		function executeProposal(...
        PUSH 4		function executeProposal(...
        DUP1			function executeProposal(...
        DUP1			function executeProposal(...
        CALLDATALOAD			function executeProposal(...
        SWAP1			function executeProposal(...
        PUSH 20		function executeProposal(...
        ADD			function executeProposal(...
        SWAP1			function executeProposal(...
        SWAP2			function executeProposal(...
        SWAP1			function executeProposal(...
        DUP1			function executeProposal(...
        CALLDATALOAD			function executeProposal(...
        SWAP1			function executeProposal(...
        PUSH 20		function executeProposal(...
        ADD			function executeProposal(...
        SWAP1			function executeProposal(...
        DUP3			function executeProposal(...
        ADD			function executeProposal(...
        DUP1			function executeProposal(...
        CALLDATALOAD			function executeProposal(...
        SWAP1			function executeProposal(...
        PUSH 20		function executeProposal(...
        ADD			function executeProposal(...
        SWAP2			function executeProposal(...
        SWAP2			function executeProposal(...
        SWAP1			function executeProposal(...
        DUP1			function executeProposal(...
        DUP1			function executeProposal(...
        PUSH 1F		function executeProposal(...
        ADD			function executeProposal(...
        PUSH 20		function executeProposal(...
        DUP1			function executeProposal(...
        SWAP2			function executeProposal(...
        DIV			function executeProposal(...
        MUL			function executeProposal(...
        PUSH 20		function executeProposal(...
        ADD			function executeProposal(...
        PUSH 40		function executeProposal(...
        MLOAD			function executeProposal(...
        SWAP1			function executeProposal(...
        DUP2			function executeProposal(...
        ADD			function executeProposal(...
        PUSH 40		function executeProposal(...
        MSTORE			function executeProposal(...
        DUP1			function executeProposal(...
        SWAP4			function executeProposal(...
        SWAP3			function executeProposal(...
        SWAP2			function executeProposal(...
        SWAP1			function executeProposal(...
        DUP2			function executeProposal(...
        DUP2			function executeProposal(...
        MSTORE			function executeProposal(...
        PUSH 20		function executeProposal(...
        ADD			function executeProposal(...
        DUP4			function executeProposal(...
        DUP4			function executeProposal(...
        DUP1			function executeProposal(...
        DUP3			function executeProposal(...
        DUP5			function executeProposal(...
        CALLDATACOPY			function executeProposal(...
        DUP3			function executeProposal(...
        ADD			function executeProposal(...
        SWAP2			function executeProposal(...
        POP			function executeProposal(...
        POP			function executeProposal(...
        POP			function executeProposal(...
        POP			function executeProposal(...
        POP			function executeProposal(...
        POP			function executeProposal(...
        SWAP1			function executeProposal(...
        SWAP1			function executeProposal(...
        SWAP2			function executeProposal(...
        SWAP1			function executeProposal(...
        POP			function executeProposal(...
        POP			function executeProposal(...
        PUSH [tag78]		function executeProposal(...
        JUMP			function executeProposal(...
      tag77: 
        JUMPDEST		function executeProposal(...
        PUSH 40		function executeProposal(...
        MLOAD			function executeProposal(...
        DUP1			function executeProposal(...
        DUP3			function executeProposal(...
        DUP2			function executeProposal(...
        MSTORE			function executeProposal(...
        PUSH 20		function executeProposal(...
        ADD			function executeProposal(...
        SWAP2			function executeProposal(...
        POP			function executeProposal(...
        POP			function executeProposal(...
        PUSH 40		function executeProposal(...
        MLOAD			function executeProposal(...
        DUP1			function executeProposal(...
        SWAP2			function executeProposal(...
        SUB			function executeProposal(...
        SWAP1			function executeProposal(...
        RETURN			function executeProposal(...
      tag11: 
        JUMPDEST		function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
        PUSH [tag79]		function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
        PUSH 4		function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
        DUP1			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
        DUP1			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
        CALLDATALOAD			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
        SWAP1			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
        PUSH 20		function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
        ADD			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
        SWAP1			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
        SWAP2			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
        SWAP1			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
        DUP1			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
        CALLDATALOAD			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
        SWAP1			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
        PUSH 20		function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
        ADD			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
        SWAP1			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
        SWAP2			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
        SWAP1			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
        DUP1			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
        CALLDATALOAD			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
        SWAP1			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
        PUSH 20		function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
        ADD			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
        SWAP1			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
        SWAP2			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
        SWAP1			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
        POP			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
        POP			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
        PUSH [tag80]		function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
        JUMP			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
      tag79: 
        JUMPDEST		function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
        PUSH 40		function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
        MLOAD			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
        DUP1			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
        DUP3			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
        DUP2			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
        MSTORE			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
        PUSH 20		function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
        ADD			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
        SWAP2			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
        POP			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
        POP			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
        PUSH 40		function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
        MLOAD			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
        DUP1			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
        SWAP2			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
        SUB			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
        SWAP1			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
        RETURN			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
      tag12: 
        JUMPDEST		function unblockMe() returns (bool) {...
        PUSH [tag81]		function unblockMe() returns (bool) {...
        PUSH 4		function unblockMe() returns (bool) {...
        DUP1			function unblockMe() returns (bool) {...
        POP			function unblockMe() returns (bool) {...
        POP			function unblockMe() returns (bool) {...
        PUSH [tag82]		function unblockMe() returns (bool) {...
        JUMP			function unblockMe() returns (bool) {...
      tag81: 
        JUMPDEST		function unblockMe() returns (bool) {...
        PUSH 40		function unblockMe() returns (bool) {...
        MLOAD			function unblockMe() returns (bool) {...
        DUP1			function unblockMe() returns (bool) {...
        DUP3			function unblockMe() returns (bool) {...
        DUP2			function unblockMe() returns (bool) {...
        MSTORE			function unblockMe() returns (bool) {...
        PUSH 20		function unblockMe() returns (bool) {...
        ADD			function unblockMe() returns (bool) {...
        SWAP2			function unblockMe() returns (bool) {...
        POP			function unblockMe() returns (bool) {...
        POP			function unblockMe() returns (bool) {...
        PUSH 40		function unblockMe() returns (bool) {...
        MLOAD			function unblockMe() returns (bool) {...
        DUP1			function unblockMe() returns (bool) {...
        SWAP2			function unblockMe() returns (bool) {...
        SUB			function unblockMe() returns (bool) {...
        SWAP1			function unblockMe() returns (bool) {...
        RETURN			function unblockMe() returns (bool) {...
      tag13: 
        JUMPDEST		uint public totalRewardToken
        PUSH [tag83]		uint public totalRewardToken
        PUSH 4		uint public totalRewardToken
        DUP1			uint public totalRewardToken
        POP			uint public totalRewardToken
        POP			uint public totalRewardToken
        PUSH [tag84]		uint public totalRewardToken
        JUMP			uint public totalRewardToken
      tag83: 
        JUMPDEST		uint public totalRewardToken
        PUSH 40		uint public totalRewardToken
        MLOAD			uint public totalRewardToken
        DUP1			uint public totalRewardToken
        DUP3			uint public totalRewardToken
        DUP2			uint public totalRewardToken
        MSTORE			uint public totalRewardToken
        PUSH 20		uint public totalRewardToken
        ADD			uint public totalRewardToken
        SWAP2			uint public totalRewardToken
        POP			uint public totalRewardToken
        POP			uint public totalRewardToken
        PUSH 40		uint public totalRewardToken
        MLOAD			uint public totalRewardToken
        DUP1			uint public totalRewardToken
        SWAP2			uint public totalRewardToken
        SUB			uint public totalRewardToken
        SWAP1			uint public totalRewardToken
        RETURN			uint public totalRewardToken
      tag14: 
        JUMPDEST		function actualBalance() constant returns (uint _actualBalance) {...
        PUSH [tag85]		function actualBalance() constant returns (uint _actualBalance) {...
        PUSH 4		function actualBalance() constant returns (uint _actualBalance) {...
        DUP1			function actualBalance() constant returns (uint _actualBalance) {...
        POP			function actualBalance() constant returns (uint _actualBalance) {...
        POP			function actualBalance() constant returns (uint _actualBalance) {...
        PUSH [tag86]		function actualBalance() constant returns (uint _actualBalance) {...
        JUMP			function actualBalance() constant returns (uint _actualBalance) {...
      tag85: 
        JUMPDEST		function actualBalance() constant returns (uint _actualBalance) {...
        PUSH 40		function actualBalance() constant returns (uint _actualBalance) {...
        MLOAD			function actualBalance() constant returns (uint _actualBalance) {...
        DUP1			function actualBalance() constant returns (uint _actualBalance) {...
        DUP3			function actualBalance() constant returns (uint _actualBalance) {...
        DUP2			function actualBalance() constant returns (uint _actualBalance) {...
        MSTORE			function actualBalance() constant returns (uint _actualBalance) {...
        PUSH 20		function actualBalance() constant returns (uint _actualBalance) {...
        ADD			function actualBalance() constant returns (uint _actualBalance) {...
        SWAP2			function actualBalance() constant returns (uint _actualBalance) {...
        POP			function actualBalance() constant returns (uint _actualBalance) {...
        POP			function actualBalance() constant returns (uint _actualBalance) {...
        PUSH 40		function actualBalance() constant returns (uint _actualBalance) {...
        MLOAD			function actualBalance() constant returns (uint _actualBalance) {...
        DUP1			function actualBalance() constant returns (uint _actualBalance) {...
        SWAP2			function actualBalance() constant returns (uint _actualBalance) {...
        SUB			function actualBalance() constant returns (uint _actualBalance) {...
        SWAP1			function actualBalance() constant returns (uint _actualBalance) {...
        RETURN			function actualBalance() constant returns (uint _actualBalance) {...
      tag15: 
        JUMPDEST		uint public closingTime
        PUSH [tag87]		uint public closingTime
        PUSH 4		uint public closingTime
        DUP1			uint public closingTime
        POP			uint public closingTime
        POP			uint public closingTime
        PUSH [tag88]		uint public closingTime
        JUMP			uint public closingTime
      tag87: 
        JUMPDEST		uint public closingTime
        PUSH 40		uint public closingTime
        MLOAD			uint public closingTime
        DUP1			uint public closingTime
        DUP3			uint public closingTime
        DUP2			uint public closingTime
        MSTORE			uint public closingTime
        PUSH 20		uint public closingTime
        ADD			uint public closingTime
        SWAP2			uint public closingTime
        POP			uint public closingTime
        POP			uint public closingTime
        PUSH 40		uint public closingTime
        MLOAD			uint public closingTime
        DUP1			uint public closingTime
        SWAP2			uint public closingTime
        SUB			uint public closingTime
        SWAP1			uint public closingTime
        RETURN			uint public closingTime
      tag16: 
        JUMPDEST		mapping (address => bool) public allowedRecipients
        PUSH [tag89]		mapping (address => bool) public allowedRecipients
        PUSH 4		mapping (address => bool) public allowedRecipients
        DUP1			mapping (address => bool) public allowedRecipients
        DUP1			mapping (address => bool) public allowedRecipients
        CALLDATALOAD			mapping (address => bool) public allowedRecipients
        SWAP1			mapping (address => bool) public allowedRecipients
        PUSH 20		mapping (address => bool) public allowedRecipients
        ADD			mapping (address => bool) public allowedRecipients
        SWAP1			mapping (address => bool) public allowedRecipients
        SWAP2			mapping (address => bool) public allowedRecipients
        SWAP1			mapping (address => bool) public allowedRecipients
        POP			mapping (address => bool) public allowedRecipients
        POP			mapping (address => bool) public allowedRecipients
        PUSH [tag90]		mapping (address => bool) public allowedRecipients
        JUMP			mapping (address => bool) public allowedRecipients
      tag89: 
        JUMPDEST		mapping (address => bool) public allowedRecipients
        PUSH 40		mapping (address => bool) public allowedRecipients
        MLOAD			mapping (address => bool) public allowedRecipients
        DUP1			mapping (address => bool) public allowedRecipients
        DUP3			mapping (address => bool) public allowedRecipients
        DUP2			mapping (address => bool) public allowedRecipients
        MSTORE			mapping (address => bool) public allowedRecipients
        PUSH 20		mapping (address => bool) public allowedRecipients
        ADD			mapping (address => bool) public allowedRecipients
        SWAP2			mapping (address => bool) public allowedRecipients
        POP			mapping (address => bool) public allowedRecipients
        POP			mapping (address => bool) public allowedRecipients
        PUSH 40		mapping (address => bool) public allowedRecipients
        MLOAD			mapping (address => bool) public allowedRecipients
        DUP1			mapping (address => bool) public allowedRecipients
        SWAP2			mapping (address => bool) public allowedRecipients
        SUB			mapping (address => bool) public allowedRecipients
        SWAP1			mapping (address => bool) public allowedRecipients
        RETURN			mapping (address => bool) public allowedRecipients
      tag17: 
        JUMPDEST		function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
        PUSH [tag91]		function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
        PUSH 4		function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
        DUP1			function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
        DUP1			function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
        CALLDATALOAD			function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
        SWAP1			function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
        PUSH 20		function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
        ADD			function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
        SWAP1			function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
        SWAP2			function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
        SWAP1			function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
        DUP1			function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
        CALLDATALOAD			function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
        SWAP1			function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
        PUSH 20		function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
        ADD			function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
        SWAP1			function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
        SWAP2			function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
        SWAP1			function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
        POP			function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
        POP			function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
        PUSH [tag92]		function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
        JUMP			function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
      tag91: 
        JUMPDEST		function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
        PUSH 40		function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
        MLOAD			function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
        DUP1			function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
        DUP3			function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
        DUP2			function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
        MSTORE			function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
        PUSH 20		function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
        ADD			function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
        SWAP2			function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
        POP			function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
        POP			function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
        PUSH 40		function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
        MLOAD			function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
        DUP1			function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
        SWAP2			function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
        SUB			function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
        SWAP1			function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
        RETURN			function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
      tag18: 
        JUMPDEST		function refund() noEther {...
        PUSH [tag93]		function refund() noEther {...
        PUSH 4		function refund() noEther {...
        DUP1			function refund() noEther {...
        POP			function refund() noEther {...
        POP			function refund() noEther {...
        PUSH [tag94]		function refund() noEther {...
        JUMP			function refund() noEther {...
      tag93: 
        JUMPDEST		function refund() noEther {...
        STOP			function refund() noEther {...
      tag19: 
        JUMPDEST		function newProposal(...
        PUSH [tag95]		function newProposal(...
        PUSH 4		function newProposal(...
        DUP1			function newProposal(...
        DUP1			function newProposal(...
        CALLDATALOAD			function newProposal(...
        SWAP1			function newProposal(...
        PUSH 20		function newProposal(...
        ADD			function newProposal(...
        SWAP1			function newProposal(...
        SWAP2			function newProposal(...
        SWAP1			function newProposal(...
        DUP1			function newProposal(...
        CALLDATALOAD			function newProposal(...
        SWAP1			function newProposal(...
        PUSH 20		function newProposal(...
        ADD			function newProposal(...
        SWAP1			function newProposal(...
        SWAP2			function newProposal(...
        SWAP1			function newProposal(...
        DUP1			function newProposal(...
        CALLDATALOAD			function newProposal(...
        SWAP1			function newProposal(...
        PUSH 20		function newProposal(...
        ADD			function newProposal(...
        SWAP1			function newProposal(...
        DUP3			function newProposal(...
        ADD			function newProposal(...
        DUP1			function newProposal(...
        CALLDATALOAD			function newProposal(...
        SWAP1			function newProposal(...
        PUSH 20		function newProposal(...
        ADD			function newProposal(...
        SWAP2			function newProposal(...
        SWAP2			function newProposal(...
        SWAP1			function newProposal(...
        DUP1			function newProposal(...
        DUP1			function newProposal(...
        PUSH 1F		function newProposal(...
        ADD			function newProposal(...
        PUSH 20		function newProposal(...
        DUP1			function newProposal(...
        SWAP2			function newProposal(...
        DIV			function newProposal(...
        MUL			function newProposal(...
        PUSH 20		function newProposal(...
        ADD			function newProposal(...
        PUSH 40		function newProposal(...
        MLOAD			function newProposal(...
        SWAP1			function newProposal(...
        DUP2			function newProposal(...
        ADD			function newProposal(...
        PUSH 40		function newProposal(...
        MSTORE			function newProposal(...
        DUP1			function newProposal(...
        SWAP4			function newProposal(...
        SWAP3			function newProposal(...
        SWAP2			function newProposal(...
        SWAP1			function newProposal(...
        DUP2			function newProposal(...
        DUP2			function newProposal(...
        MSTORE			function newProposal(...
        PUSH 20		function newProposal(...
        ADD			function newProposal(...
        DUP4			function newProposal(...
        DUP4			function newProposal(...
        DUP1			function newProposal(...
        DUP3			function newProposal(...
        DUP5			function newProposal(...
        CALLDATACOPY			function newProposal(...
        DUP3			function newProposal(...
        ADD			function newProposal(...
        SWAP2			function newProposal(...
        POP			function newProposal(...
        POP			function newProposal(...
        POP			function newProposal(...
        POP			function newProposal(...
        POP			function newProposal(...
        POP			function newProposal(...
        SWAP1			function newProposal(...
        SWAP1			function newProposal(...
        SWAP2			function newProposal(...
        SWAP1			function newProposal(...
        DUP1			function newProposal(...
        CALLDATALOAD			function newProposal(...
        SWAP1			function newProposal(...
        PUSH 20		function newProposal(...
        ADD			function newProposal(...
        SWAP1			function newProposal(...
        DUP3			function newProposal(...
        ADD			function newProposal(...
        DUP1			function newProposal(...
        CALLDATALOAD			function newProposal(...
        SWAP1			function newProposal(...
        PUSH 20		function newProposal(...
        ADD			function newProposal(...
        SWAP2			function newProposal(...
        SWAP2			function newProposal(...
        SWAP1			function newProposal(...
        DUP1			function newProposal(...
        DUP1			function newProposal(...
        PUSH 1F		function newProposal(...
        ADD			function newProposal(...
        PUSH 20		function newProposal(...
        DUP1			function newProposal(...
        SWAP2			function newProposal(...
        DIV			function newProposal(...
        MUL			function newProposal(...
        PUSH 20		function newProposal(...
        ADD			function newProposal(...
        PUSH 40		function newProposal(...
        MLOAD			function newProposal(...
        SWAP1			function newProposal(...
        DUP2			function newProposal(...
        ADD			function newProposal(...
        PUSH 40		function newProposal(...
        MSTORE			function newProposal(...
        DUP1			function newProposal(...
        SWAP4			function newProposal(...
        SWAP3			function newProposal(...
        SWAP2			function newProposal(...
        SWAP1			function newProposal(...
        DUP2			function newProposal(...
        DUP2			function newProposal(...
        MSTORE			function newProposal(...
        PUSH 20		function newProposal(...
        ADD			function newProposal(...
        DUP4			function newProposal(...
        DUP4			function newProposal(...
        DUP1			function newProposal(...
        DUP3			function newProposal(...
        DUP5			function newProposal(...
        CALLDATACOPY			function newProposal(...
        DUP3			function newProposal(...
        ADD			function newProposal(...
        SWAP2			function newProposal(...
        POP			function newProposal(...
        POP			function newProposal(...
        POP			function newProposal(...
        POP			function newProposal(...
        POP			function newProposal(...
        POP			function newProposal(...
        SWAP1			function newProposal(...
        SWAP1			function newProposal(...
        SWAP2			function newProposal(...
        SWAP1			function newProposal(...
        DUP1			function newProposal(...
        CALLDATALOAD			function newProposal(...
        SWAP1			function newProposal(...
        PUSH 20		function newProposal(...
        ADD			function newProposal(...
        SWAP1			function newProposal(...
        SWAP2			function newProposal(...
        SWAP1			function newProposal(...
        DUP1			function newProposal(...
        CALLDATALOAD			function newProposal(...
        SWAP1			function newProposal(...
        PUSH 20		function newProposal(...
        ADD			function newProposal(...
        SWAP1			function newProposal(...
        SWAP2			function newProposal(...
        SWAP1			function newProposal(...
        POP			function newProposal(...
        POP			function newProposal(...
        PUSH [tag96]		function newProposal(...
        JUMP			function newProposal(...
      tag95: 
        JUMPDEST		function newProposal(...
        PUSH 40		function newProposal(...
        MLOAD			function newProposal(...
        DUP1			function newProposal(...
        DUP3			function newProposal(...
        DUP2			function newProposal(...
        MSTORE			function newProposal(...
        PUSH 20		function newProposal(...
        ADD			function newProposal(...
        SWAP2			function newProposal(...
        POP			function newProposal(...
        POP			function newProposal(...
        PUSH 40		function newProposal(...
        MLOAD			function newProposal(...
        DUP1			function newProposal(...
        SWAP2			function newProposal(...
        SUB			function newProposal(...
        SWAP1			function newProposal(...
        RETURN			function newProposal(...
      tag20: 
        JUMPDEST		mapping (address => uint) public DAOpaidOut
        PUSH [tag97]		mapping (address => uint) public DAOpaidOut
        PUSH 4		mapping (address => uint) public DAOpaidOut
        DUP1			mapping (address => uint) public DAOpaidOut
        DUP1			mapping (address => uint) public DAOpaidOut
        CALLDATALOAD			mapping (address => uint) public DAOpaidOut
        SWAP1			mapping (address => uint) public DAOpaidOut
        PUSH 20		mapping (address => uint) public DAOpaidOut
        ADD			mapping (address => uint) public DAOpaidOut
        SWAP1			mapping (address => uint) public DAOpaidOut
        SWAP2			mapping (address => uint) public DAOpaidOut
        SWAP1			mapping (address => uint) public DAOpaidOut
        POP			mapping (address => uint) public DAOpaidOut
        POP			mapping (address => uint) public DAOpaidOut
        PUSH [tag98]		mapping (address => uint) public DAOpaidOut
        JUMP			mapping (address => uint) public DAOpaidOut
      tag97: 
        JUMPDEST		mapping (address => uint) public DAOpaidOut
        PUSH 40		mapping (address => uint) public DAOpaidOut
        MLOAD			mapping (address => uint) public DAOpaidOut
        DUP1			mapping (address => uint) public DAOpaidOut
        DUP3			mapping (address => uint) public DAOpaidOut
        DUP2			mapping (address => uint) public DAOpaidOut
        MSTORE			mapping (address => uint) public DAOpaidOut
        PUSH 20		mapping (address => uint) public DAOpaidOut
        ADD			mapping (address => uint) public DAOpaidOut
        SWAP2			mapping (address => uint) public DAOpaidOut
        POP			mapping (address => uint) public DAOpaidOut
        POP			mapping (address => uint) public DAOpaidOut
        PUSH 40		mapping (address => uint) public DAOpaidOut
        MLOAD			mapping (address => uint) public DAOpaidOut
        DUP1			mapping (address => uint) public DAOpaidOut
        SWAP2			mapping (address => uint) public DAOpaidOut
        SUB			mapping (address => uint) public DAOpaidOut
        SWAP1			mapping (address => uint) public DAOpaidOut
        RETURN			mapping (address => uint) public DAOpaidOut
      tag21: 
        JUMPDEST		uint public minQuorumDivisor
        PUSH [tag99]		uint public minQuorumDivisor
        PUSH 4		uint public minQuorumDivisor
        DUP1			uint public minQuorumDivisor
        POP			uint public minQuorumDivisor
        POP			uint public minQuorumDivisor
        PUSH [tag100]		uint public minQuorumDivisor
        JUMP			uint public minQuorumDivisor
      tag99: 
        JUMPDEST		uint public minQuorumDivisor
        PUSH 40		uint public minQuorumDivisor
        MLOAD			uint public minQuorumDivisor
        DUP1			uint public minQuorumDivisor
        DUP3			uint public minQuorumDivisor
        DUP2			uint public minQuorumDivisor
        MSTORE			uint public minQuorumDivisor
        PUSH 20		uint public minQuorumDivisor
        ADD			uint public minQuorumDivisor
        SWAP2			uint public minQuorumDivisor
        POP			uint public minQuorumDivisor
        POP			uint public minQuorumDivisor
        PUSH 40		uint public minQuorumDivisor
        MLOAD			uint public minQuorumDivisor
        DUP1			uint public minQuorumDivisor
        SWAP2			uint public minQuorumDivisor
        SUB			uint public minQuorumDivisor
        SWAP1			uint public minQuorumDivisor
        RETURN			uint public minQuorumDivisor
      tag22: 
        JUMPDEST		function newContract(address _newContract){...
        PUSH [tag101]		function newContract(address _newContract){...
        PUSH 4		function newContract(address _newContract){...
        DUP1			function newContract(address _newContract){...
        DUP1			function newContract(address _newContract){...
        CALLDATALOAD			function newContract(address _newContract){...
        SWAP1			function newContract(address _newContract){...
        PUSH 20		function newContract(address _newContract){...
        ADD			function newContract(address _newContract){...
        SWAP1			function newContract(address _newContract){...
        SWAP2			function newContract(address _newContract){...
        SWAP1			function newContract(address _newContract){...
        POP			function newContract(address _newContract){...
        POP			function newContract(address _newContract){...
        PUSH [tag102]		function newContract(address _newContract){...
        JUMP			function newContract(address _newContract){...
      tag101: 
        JUMPDEST		function newContract(address _newContract){...
        STOP			function newContract(address _newContract){...
      tag23: 
        JUMPDEST		function balanceOf(address _owner) constant returns (uint256 balance) {...
        PUSH [tag103]		function balanceOf(address _owner) constant returns (uint256 balance) {...
        PUSH 4		function balanceOf(address _owner) constant returns (uint256 balance) {...
        DUP1			function balanceOf(address _owner) constant returns (uint256 balance) {...
        DUP1			function balanceOf(address _owner) constant returns (uint256 balance) {...
        CALLDATALOAD			function balanceOf(address _owner) constant returns (uint256 balance) {...
        SWAP1			function balanceOf(address _owner) constant returns (uint256 balance) {...
        PUSH 20		function balanceOf(address _owner) constant returns (uint256 balance) {...
        ADD			function balanceOf(address _owner) constant returns (uint256 balance) {...
        SWAP1			function balanceOf(address _owner) constant returns (uint256 balance) {...
        SWAP2			function balanceOf(address _owner) constant returns (uint256 balance) {...
        SWAP1			function balanceOf(address _owner) constant returns (uint256 balance) {...
        POP			function balanceOf(address _owner) constant returns (uint256 balance) {...
        POP			function balanceOf(address _owner) constant returns (uint256 balance) {...
        PUSH [tag104]		function balanceOf(address _owner) constant returns (uint256 balance) {...
        JUMP			function balanceOf(address _owner) constant returns (uint256 balance) {...
      tag103: 
        JUMPDEST		function balanceOf(address _owner) constant returns (uint256 balance) {...
        PUSH 40		function balanceOf(address _owner) constant returns (uint256 balance) {...
        MLOAD			function balanceOf(address _owner) constant returns (uint256 balance) {...
        DUP1			function balanceOf(address _owner) constant returns (uint256 balance) {...
        DUP3			function balanceOf(address _owner) constant returns (uint256 balance) {...
        DUP2			function balanceOf(address _owner) constant returns (uint256 balance) {...
        MSTORE			function balanceOf(address _owner) constant returns (uint256 balance) {...
        PUSH 20		function balanceOf(address _owner) constant returns (uint256 balance) {...
        ADD			function balanceOf(address _owner) constant returns (uint256 balance) {...
        SWAP2			function balanceOf(address _owner) constant returns (uint256 balance) {...
        POP			function balanceOf(address _owner) constant returns (uint256 balance) {...
        POP			function balanceOf(address _owner) constant returns (uint256 balance) {...
        PUSH 40		function balanceOf(address _owner) constant returns (uint256 balance) {...
        MLOAD			function balanceOf(address _owner) constant returns (uint256 balance) {...
        DUP1			function balanceOf(address _owner) constant returns (uint256 balance) {...
        SWAP2			function balanceOf(address _owner) constant returns (uint256 balance) {...
        SUB			function balanceOf(address _owner) constant returns (uint256 balance) {...
        SWAP1			function balanceOf(address _owner) constant returns (uint256 balance) {...
        RETURN			function balanceOf(address _owner) constant returns (uint256 balance) {...
      tag24: 
        JUMPDEST		function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
        PUSH [tag105]		function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
        PUSH 4		function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
        DUP1			function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
        DUP1			function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
        CALLDATALOAD			function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
        SWAP1			function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
        PUSH 20		function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
        ADD			function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
        SWAP1			function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
        SWAP2			function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
        SWAP1			function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
        DUP1			function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
        CALLDATALOAD			function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
        SWAP1			function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
        PUSH 20		function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
        ADD			function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
        SWAP1			function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
        SWAP2			function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
        SWAP1			function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
        POP			function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
        POP			function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
        PUSH [tag106]		function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
        JUMP			function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
      tag105: 
        JUMPDEST		function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
        PUSH 40		function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
        MLOAD			function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
        DUP1			function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
        DUP3			function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
        DUP2			function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
        MSTORE			function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
        PUSH 20		function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
        ADD			function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
        SWAP2			function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
        POP			function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
        POP			function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
        PUSH 40		function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
        MLOAD			function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
        DUP1			function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
        SWAP2			function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
        SUB			function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
        SWAP1			function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
        RETURN			function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
      tag25: 
        JUMPDEST		function halveMinQuorum() returns (bool _success) {...
        PUSH [tag107]		function halveMinQuorum() returns (bool _success) {...
        PUSH 4		function halveMinQuorum() returns (bool _success) {...
        DUP1			function halveMinQuorum() returns (bool _success) {...
        POP			function halveMinQuorum() returns (bool _success) {...
        POP			function halveMinQuorum() returns (bool _success) {...
        PUSH [tag108]		function halveMinQuorum() returns (bool _success) {...
        JUMP			function halveMinQuorum() returns (bool _success) {...
      tag107: 
        JUMPDEST		function halveMinQuorum() returns (bool _success) {...
        PUSH 40		function halveMinQuorum() returns (bool _success) {...
        MLOAD			function halveMinQuorum() returns (bool _success) {...
        DUP1			function halveMinQuorum() returns (bool _success) {...
        DUP3			function halveMinQuorum() returns (bool _success) {...
        DUP2			function halveMinQuorum() returns (bool _success) {...
        MSTORE			function halveMinQuorum() returns (bool _success) {...
        PUSH 20		function halveMinQuorum() returns (bool _success) {...
        ADD			function halveMinQuorum() returns (bool _success) {...
        SWAP2			function halveMinQuorum() returns (bool _success) {...
        POP			function halveMinQuorum() returns (bool _success) {...
        POP			function halveMinQuorum() returns (bool _success) {...
        PUSH 40		function halveMinQuorum() returns (bool _success) {...
        MLOAD			function halveMinQuorum() returns (bool _success) {...
        DUP1			function halveMinQuorum() returns (bool _success) {...
        SWAP2			function halveMinQuorum() returns (bool _success) {...
        SUB			function halveMinQuorum() returns (bool _success) {...
        SWAP1			function halveMinQuorum() returns (bool _success) {...
        RETURN			function halveMinQuorum() returns (bool _success) {...
      tag26: 
        JUMPDEST		mapping (address => uint) public paidOut
        PUSH [tag109]		mapping (address => uint) public paidOut
        PUSH 4		mapping (address => uint) public paidOut
        DUP1			mapping (address => uint) public paidOut
        DUP1			mapping (address => uint) public paidOut
        CALLDATALOAD			mapping (address => uint) public paidOut
        SWAP1			mapping (address => uint) public paidOut
        PUSH 20		mapping (address => uint) public paidOut
        ADD			mapping (address => uint) public paidOut
        SWAP1			mapping (address => uint) public paidOut
        SWAP2			mapping (address => uint) public paidOut
        SWAP1			mapping (address => uint) public paidOut
        POP			mapping (address => uint) public paidOut
        POP			mapping (address => uint) public paidOut
        PUSH [tag110]		mapping (address => uint) public paidOut
        JUMP			mapping (address => uint) public paidOut
      tag109: 
        JUMPDEST		mapping (address => uint) public paidOut
        PUSH 40		mapping (address => uint) public paidOut
        MLOAD			mapping (address => uint) public paidOut
        DUP1			mapping (address => uint) public paidOut
        DUP3			mapping (address => uint) public paidOut
        DUP2			mapping (address => uint) public paidOut
        MSTORE			mapping (address => uint) public paidOut
        PUSH 20		mapping (address => uint) public paidOut
        ADD			mapping (address => uint) public paidOut
        SWAP2			mapping (address => uint) public paidOut
        POP			mapping (address => uint) public paidOut
        POP			mapping (address => uint) public paidOut
        PUSH 40		mapping (address => uint) public paidOut
        MLOAD			mapping (address => uint) public paidOut
        DUP1			mapping (address => uint) public paidOut
        SWAP2			mapping (address => uint) public paidOut
        SUB			mapping (address => uint) public paidOut
        SWAP1			mapping (address => uint) public paidOut
        RETURN			mapping (address => uint) public paidOut
      tag27: 
        JUMPDEST		function splitDAO(...
        PUSH [tag111]		function splitDAO(...
        PUSH 4		function splitDAO(...
        DUP1			function splitDAO(...
        DUP1			function splitDAO(...
        CALLDATALOAD			function splitDAO(...
        SWAP1			function splitDAO(...
        PUSH 20		function splitDAO(...
        ADD			function splitDAO(...
        SWAP1			function splitDAO(...
        SWAP2			function splitDAO(...
        SWAP1			function splitDAO(...
        DUP1			function splitDAO(...
        CALLDATALOAD			function splitDAO(...
        SWAP1			function splitDAO(...
        PUSH 20		function splitDAO(...
        ADD			function splitDAO(...
        SWAP1			function splitDAO(...
        SWAP2			function splitDAO(...
        SWAP1			function splitDAO(...
        POP			function splitDAO(...
        POP			function splitDAO(...
        PUSH [tag112]		function splitDAO(...
        JUMP			function splitDAO(...
      tag111: 
        JUMPDEST		function splitDAO(...
        PUSH 40		function splitDAO(...
        MLOAD			function splitDAO(...
        DUP1			function splitDAO(...
        DUP3			function splitDAO(...
        DUP2			function splitDAO(...
        MSTORE			function splitDAO(...
        PUSH 20		function splitDAO(...
        ADD			function splitDAO(...
        SWAP2			function splitDAO(...
        POP			function splitDAO(...
        POP			function splitDAO(...
        PUSH 40		function splitDAO(...
        MLOAD			function splitDAO(...
        DUP1			function splitDAO(...
        SWAP2			function splitDAO(...
        SUB			function splitDAO(...
        SWAP1			function splitDAO(...
        RETURN			function splitDAO(...
      tag28: 
        JUMPDEST		ManagedAccount public DAOrewardAccount
        PUSH [tag113]		ManagedAccount public DAOrewardAccount
        PUSH 4		ManagedAccount public DAOrewardAccount
        DUP1			ManagedAccount public DAOrewardAccount
        POP			ManagedAccount public DAOrewardAccount
        POP			ManagedAccount public DAOrewardAccount
        PUSH [tag114]		ManagedAccount public DAOrewardAccount
        JUMP			ManagedAccount public DAOrewardAccount
      tag113: 
        JUMPDEST		ManagedAccount public DAOrewardAccount
        PUSH 40		ManagedAccount public DAOrewardAccount
        MLOAD			ManagedAccount public DAOrewardAccount
        DUP1			ManagedAccount public DAOrewardAccount
        DUP3			ManagedAccount public DAOrewardAccount
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		ManagedAccount public DAOrewardAccount
        AND			ManagedAccount public DAOrewardAccount
        DUP2			ManagedAccount public DAOrewardAccount
        MSTORE			ManagedAccount public DAOrewardAccount
        PUSH 20		ManagedAccount public DAOrewardAccount
        ADD			ManagedAccount public DAOrewardAccount
        SWAP2			ManagedAccount public DAOrewardAccount
        POP			ManagedAccount public DAOrewardAccount
        POP			ManagedAccount public DAOrewardAccount
        PUSH 40		ManagedAccount public DAOrewardAccount
        MLOAD			ManagedAccount public DAOrewardAccount
        DUP1			ManagedAccount public DAOrewardAccount
        SWAP2			ManagedAccount public DAOrewardAccount
        SUB			ManagedAccount public DAOrewardAccount
        SWAP1			ManagedAccount public DAOrewardAccount
        RETURN			ManagedAccount public DAOrewardAccount
      tag29: 
        JUMPDEST		uint public proposalDeposit
        PUSH [tag115]		uint public proposalDeposit
        PUSH 4		uint public proposalDeposit
        DUP1			uint public proposalDeposit
        POP			uint public proposalDeposit
        POP			uint public proposalDeposit
        PUSH [tag116]		uint public proposalDeposit
        JUMP			uint public proposalDeposit
      tag115: 
        JUMPDEST		uint public proposalDeposit
        PUSH 40		uint public proposalDeposit
        MLOAD			uint public proposalDeposit
        DUP1			uint public proposalDeposit
        DUP3			uint public proposalDeposit
        DUP2			uint public proposalDeposit
        MSTORE			uint public proposalDeposit
        PUSH 20		uint public proposalDeposit
        ADD			uint public proposalDeposit
        SWAP2			uint public proposalDeposit
        POP			uint public proposalDeposit
        POP			uint public proposalDeposit
        PUSH 40		uint public proposalDeposit
        MLOAD			uint public proposalDeposit
        DUP1			uint public proposalDeposit
        SWAP2			uint public proposalDeposit
        SUB			uint public proposalDeposit
        SWAP1			uint public proposalDeposit
        RETURN			uint public proposalDeposit
      tag30: 
        JUMPDEST		function numberOfProposals() constant returns (uint _numberOfProposals) {...
        PUSH [tag117]		function numberOfProposals() constant returns (uint _numberOfProposals) {...
        PUSH 4		function numberOfProposals() constant returns (uint _numberOfProposals) {...
        DUP1			function numberOfProposals() constant returns (uint _numberOfProposals) {...
        POP			function numberOfProposals() constant returns (uint _numberOfProposals) {...
        POP			function numberOfProposals() constant returns (uint _numberOfProposals) {...
        PUSH [tag118]		function numberOfProposals() constant returns (uint _numberOfProposals) {...
        JUMP			function numberOfProposals() constant returns (uint _numberOfProposals) {...
      tag117: 
        JUMPDEST		function numberOfProposals() constant returns (uint _numberOfProposals) {...
        PUSH 40		function numberOfProposals() constant returns (uint _numberOfProposals) {...
        MLOAD			function numberOfProposals() constant returns (uint _numberOfProposals) {...
        DUP1			function numberOfProposals() constant returns (uint _numberOfProposals) {...
        DUP3			function numberOfProposals() constant returns (uint _numberOfProposals) {...
        DUP2			function numberOfProposals() constant returns (uint _numberOfProposals) {...
        MSTORE			function numberOfProposals() constant returns (uint _numberOfProposals) {...
        PUSH 20		function numberOfProposals() constant returns (uint _numberOfProposals) {...
        ADD			function numberOfProposals() constant returns (uint _numberOfProposals) {...
        SWAP2			function numberOfProposals() constant returns (uint _numberOfProposals) {...
        POP			function numberOfProposals() constant returns (uint _numberOfProposals) {...
        POP			function numberOfProposals() constant returns (uint _numberOfProposals) {...
        PUSH 40		function numberOfProposals() constant returns (uint _numberOfProposals) {...
        MLOAD			function numberOfProposals() constant returns (uint _numberOfProposals) {...
        DUP1			function numberOfProposals() constant returns (uint _numberOfProposals) {...
        SWAP2			function numberOfProposals() constant returns (uint _numberOfProposals) {...
        SUB			function numberOfProposals() constant returns (uint _numberOfProposals) {...
        SWAP1			function numberOfProposals() constant returns (uint _numberOfProposals) {...
        RETURN			function numberOfProposals() constant returns (uint _numberOfProposals) {...
      tag31: 
        JUMPDEST		uint  public lastTimeMinQuorumMet
        PUSH [tag119]		uint  public lastTimeMinQuorumMet
        PUSH 4		uint  public lastTimeMinQuorumMet
        DUP1			uint  public lastTimeMinQuorumMet
        POP			uint  public lastTimeMinQuorumMet
        POP			uint  public lastTimeMinQuorumMet
        PUSH [tag120]		uint  public lastTimeMinQuorumMet
        JUMP			uint  public lastTimeMinQuorumMet
      tag119: 
        JUMPDEST		uint  public lastTimeMinQuorumMet
        PUSH 40		uint  public lastTimeMinQuorumMet
        MLOAD			uint  public lastTimeMinQuorumMet
        DUP1			uint  public lastTimeMinQuorumMet
        DUP3			uint  public lastTimeMinQuorumMet
        DUP2			uint  public lastTimeMinQuorumMet
        MSTORE			uint  public lastTimeMinQuorumMet
        PUSH 20		uint  public lastTimeMinQuorumMet
        ADD			uint  public lastTimeMinQuorumMet
        SWAP2			uint  public lastTimeMinQuorumMet
        POP			uint  public lastTimeMinQuorumMet
        POP			uint  public lastTimeMinQuorumMet
        PUSH 40		uint  public lastTimeMinQuorumMet
        MLOAD			uint  public lastTimeMinQuorumMet
        DUP1			uint  public lastTimeMinQuorumMet
        SWAP2			uint  public lastTimeMinQuorumMet
        SUB			uint  public lastTimeMinQuorumMet
        SWAP1			uint  public lastTimeMinQuorumMet
        RETURN			uint  public lastTimeMinQuorumMet
      tag32: 
        JUMPDEST		function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
        PUSH [tag121]		function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
        PUSH 4		function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
        DUP1			function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
        DUP1			function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
        CALLDATALOAD			function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
        SWAP1			function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
        PUSH 20		function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
        ADD			function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
        SWAP1			function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
        SWAP2			function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
        SWAP1			function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
        POP			function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
        POP			function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
        PUSH [tag122]		function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
        JUMP			function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
      tag121: 
        JUMPDEST		function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
        PUSH 40		function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
        MLOAD			function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
        DUP1			function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
        DUP3			function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
        DUP2			function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
        MSTORE			function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
        PUSH 20		function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
        ADD			function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
        SWAP2			function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
        POP			function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
        POP			function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
        PUSH 40		function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
        MLOAD			function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
        DUP1			function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
        SWAP2			function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
        SUB			function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
        SWAP1			function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
        RETURN			function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
      tag33: 
        JUMPDEST		function receiveEther() returns (bool) {...
        PUSH [tag123]		function receiveEther() returns (bool) {...
        PUSH 4		function receiveEther() returns (bool) {...
        DUP1			function receiveEther() returns (bool) {...
        POP			function receiveEther() returns (bool) {...
        POP			function receiveEther() returns (bool) {...
        PUSH [tag57]		function receiveEther() returns (bool) {...
        JUMP			function receiveEther() returns (bool) {...
      tag123: 
        JUMPDEST		function receiveEther() returns (bool) {...
        PUSH 40		function receiveEther() returns (bool) {...
        MLOAD			function receiveEther() returns (bool) {...
        DUP1			function receiveEther() returns (bool) {...
        DUP3			function receiveEther() returns (bool) {...
        DUP2			function receiveEther() returns (bool) {...
        MSTORE			function receiveEther() returns (bool) {...
        PUSH 20		function receiveEther() returns (bool) {...
        ADD			function receiveEther() returns (bool) {...
        SWAP2			function receiveEther() returns (bool) {...
        POP			function receiveEther() returns (bool) {...
        POP			function receiveEther() returns (bool) {...
        PUSH 40		function receiveEther() returns (bool) {...
        MLOAD			function receiveEther() returns (bool) {...
        DUP1			function receiveEther() returns (bool) {...
        SWAP2			function receiveEther() returns (bool) {...
        SUB			function receiveEther() returns (bool) {...
        SWAP1			function receiveEther() returns (bool) {...
        RETURN			function receiveEther() returns (bool) {...
      tag34: 
        JUMPDEST		function transfer(address _to, uint256 _value) returns (bool success) {...
        PUSH [tag124]		function transfer(address _to, uint256 _value) returns (bool success) {...
        PUSH 4		function transfer(address _to, uint256 _value) returns (bool success) {...
        DUP1			function transfer(address _to, uint256 _value) returns (bool success) {...
        DUP1			function transfer(address _to, uint256 _value) returns (bool success) {...
        CALLDATALOAD			function transfer(address _to, uint256 _value) returns (bool success) {...
        SWAP1			function transfer(address _to, uint256 _value) returns (bool success) {...
        PUSH 20		function transfer(address _to, uint256 _value) returns (bool success) {...
        ADD			function transfer(address _to, uint256 _value) returns (bool success) {...
        SWAP1			function transfer(address _to, uint256 _value) returns (bool success) {...
        SWAP2			function transfer(address _to, uint256 _value) returns (bool success) {...
        SWAP1			function transfer(address _to, uint256 _value) returns (bool success) {...
        DUP1			function transfer(address _to, uint256 _value) returns (bool success) {...
        CALLDATALOAD			function transfer(address _to, uint256 _value) returns (bool success) {...
        SWAP1			function transfer(address _to, uint256 _value) returns (bool success) {...
        PUSH 20		function transfer(address _to, uint256 _value) returns (bool success) {...
        ADD			function transfer(address _to, uint256 _value) returns (bool success) {...
        SWAP1			function transfer(address _to, uint256 _value) returns (bool success) {...
        SWAP2			function transfer(address _to, uint256 _value) returns (bool success) {...
        SWAP1			function transfer(address _to, uint256 _value) returns (bool success) {...
        POP			function transfer(address _to, uint256 _value) returns (bool success) {...
        POP			function transfer(address _to, uint256 _value) returns (bool success) {...
        PUSH [tag125]		function transfer(address _to, uint256 _value) returns (bool success) {...
        JUMP			function transfer(address _to, uint256 _value) returns (bool success) {...
      tag124: 
        JUMPDEST		function transfer(address _to, uint256 _value) returns (bool success) {...
        PUSH 40		function transfer(address _to, uint256 _value) returns (bool success) {...
        MLOAD			function transfer(address _to, uint256 _value) returns (bool success) {...
        DUP1			function transfer(address _to, uint256 _value) returns (bool success) {...
        DUP3			function transfer(address _to, uint256 _value) returns (bool success) {...
        DUP2			function transfer(address _to, uint256 _value) returns (bool success) {...
        MSTORE			function transfer(address _to, uint256 _value) returns (bool success) {...
        PUSH 20		function transfer(address _to, uint256 _value) returns (bool success) {...
        ADD			function transfer(address _to, uint256 _value) returns (bool success) {...
        SWAP2			function transfer(address _to, uint256 _value) returns (bool success) {...
        POP			function transfer(address _to, uint256 _value) returns (bool success) {...
        POP			function transfer(address _to, uint256 _value) returns (bool success) {...
        PUSH 40		function transfer(address _to, uint256 _value) returns (bool success) {...
        MLOAD			function transfer(address _to, uint256 _value) returns (bool success) {...
        DUP1			function transfer(address _to, uint256 _value) returns (bool success) {...
        SWAP2			function transfer(address _to, uint256 _value) returns (bool success) {...
        SUB			function transfer(address _to, uint256 _value) returns (bool success) {...
        SWAP1			function transfer(address _to, uint256 _value) returns (bool success) {...
        RETURN			function transfer(address _to, uint256 _value) returns (bool success) {...
      tag35: 
        JUMPDEST		bool public isFueled
        PUSH [tag126]		bool public isFueled
        PUSH 4		bool public isFueled
        DUP1			bool public isFueled
        POP			bool public isFueled
        POP			bool public isFueled
        PUSH [tag127]		bool public isFueled
        JUMP			bool public isFueled
      tag126: 
        JUMPDEST		bool public isFueled
        PUSH 40		bool public isFueled
        MLOAD			bool public isFueled
        DUP1			bool public isFueled
        DUP3			bool public isFueled
        DUP2			bool public isFueled
        MSTORE			bool public isFueled
        PUSH 20		bool public isFueled
        ADD			bool public isFueled
        SWAP2			bool public isFueled
        POP			bool public isFueled
        POP			bool public isFueled
        PUSH 40		bool public isFueled
        MLOAD			bool public isFueled
        DUP1			bool public isFueled
        SWAP2			bool public isFueled
        SUB			bool public isFueled
        SWAP1			bool public isFueled
        RETURN			bool public isFueled
      tag36: 
        JUMPDEST		function createTokenProxy(address _tokenHolder) returns (bool success) {...
        PUSH [tag128]		function createTokenProxy(address _tokenHolder) returns (bool success) {...
        PUSH 4		function createTokenProxy(address _tokenHolder) returns (bool success) {...
        DUP1			function createTokenProxy(address _tokenHolder) returns (bool success) {...
        DUP1			function createTokenProxy(address _tokenHolder) returns (bool success) {...
        CALLDATALOAD			function createTokenProxy(address _tokenHolder) returns (bool success) {...
        SWAP1			function createTokenProxy(address _tokenHolder) returns (bool success) {...
        PUSH 20		function createTokenProxy(address _tokenHolder) returns (bool success) {...
        ADD			function createTokenProxy(address _tokenHolder) returns (bool success) {...
        SWAP1			function createTokenProxy(address _tokenHolder) returns (bool success) {...
        SWAP2			function createTokenProxy(address _tokenHolder) returns (bool success) {...
        SWAP1			function createTokenProxy(address _tokenHolder) returns (bool success) {...
        POP			function createTokenProxy(address _tokenHolder) returns (bool success) {...
        POP			function createTokenProxy(address _tokenHolder) returns (bool success) {...
        PUSH [tag54]		function createTokenProxy(address _tokenHolder) returns (bool success) {...
        JUMP			function createTokenProxy(address _tokenHolder) returns (bool success) {...
      tag128: 
        JUMPDEST		function createTokenProxy(address _tokenHolder) returns (bool success) {...
        PUSH 40		function createTokenProxy(address _tokenHolder) returns (bool success) {...
        MLOAD			function createTokenProxy(address _tokenHolder) returns (bool success) {...
        DUP1			function createTokenProxy(address _tokenHolder) returns (bool success) {...
        DUP3			function createTokenProxy(address _tokenHolder) returns (bool success) {...
        DUP2			function createTokenProxy(address _tokenHolder) returns (bool success) {...
        MSTORE			function createTokenProxy(address _tokenHolder) returns (bool success) {...
        PUSH 20		function createTokenProxy(address _tokenHolder) returns (bool success) {...
        ADD			function createTokenProxy(address _tokenHolder) returns (bool success) {...
        SWAP2			function createTokenProxy(address _tokenHolder) returns (bool success) {...
        POP			function createTokenProxy(address _tokenHolder) returns (bool success) {...
        POP			function createTokenProxy(address _tokenHolder) returns (bool success) {...
        PUSH 40		function createTokenProxy(address _tokenHolder) returns (bool success) {...
        MLOAD			function createTokenProxy(address _tokenHolder) returns (bool success) {...
        DUP1			function createTokenProxy(address _tokenHolder) returns (bool success) {...
        SWAP2			function createTokenProxy(address _tokenHolder) returns (bool success) {...
        SUB			function createTokenProxy(address _tokenHolder) returns (bool success) {...
        SWAP1			function createTokenProxy(address _tokenHolder) returns (bool success) {...
        RETURN			function createTokenProxy(address _tokenHolder) returns (bool success) {...
      tag37: 
        JUMPDEST		function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
        PUSH [tag129]		function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
        PUSH 4		function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
        DUP1			function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
        DUP1			function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
        CALLDATALOAD			function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
        SWAP1			function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
        PUSH 20		function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
        ADD			function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
        SWAP1			function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
        SWAP2			function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
        SWAP1			function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
        POP			function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
        POP			function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
        PUSH [tag130]		function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
        JUMP			function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
      tag129: 
        JUMPDEST		function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
        PUSH 40		function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
        MLOAD			function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
        DUP1			function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
        DUP3			function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
        AND			function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
        DUP2			function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
        MSTORE			function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
        PUSH 20		function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
        ADD			function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
        SWAP2			function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
        POP			function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
        POP			function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
        PUSH 40		function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
        MLOAD			function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
        DUP1			function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
        SWAP2			function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
        SUB			function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
        SWAP1			function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
        RETURN			function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
      tag38: 
        JUMPDEST		function vote(...
        PUSH [tag131]		function vote(...
        PUSH 4		function vote(...
        DUP1			function vote(...
        DUP1			function vote(...
        CALLDATALOAD			function vote(...
        SWAP1			function vote(...
        PUSH 20		function vote(...
        ADD			function vote(...
        SWAP1			function vote(...
        SWAP2			function vote(...
        SWAP1			function vote(...
        DUP1			function vote(...
        CALLDATALOAD			function vote(...
        SWAP1			function vote(...
        PUSH 20		function vote(...
        ADD			function vote(...
        SWAP1			function vote(...
        SWAP2			function vote(...
        SWAP1			function vote(...
        POP			function vote(...
        POP			function vote(...
        PUSH [tag132]		function vote(...
        JUMP			function vote(...
      tag131: 
        JUMPDEST		function vote(...
        PUSH 40		function vote(...
        MLOAD			function vote(...
        DUP1			function vote(...
        DUP3			function vote(...
        DUP2			function vote(...
        MSTORE			function vote(...
        PUSH 20		function vote(...
        ADD			function vote(...
        SWAP2			function vote(...
        POP			function vote(...
        POP			function vote(...
        PUSH 40		function vote(...
        MLOAD			function vote(...
        DUP1			function vote(...
        SWAP2			function vote(...
        SUB			function vote(...
        SWAP1			function vote(...
        RETURN			function vote(...
      tag39: 
        JUMPDEST		function getMyReward() noEther returns (bool _success) {...
        PUSH [tag133]		function getMyReward() noEther returns (bool _success) {...
        PUSH 4		function getMyReward() noEther returns (bool _success) {...
        DUP1			function getMyReward() noEther returns (bool _success) {...
        POP			function getMyReward() noEther returns (bool _success) {...
        POP			function getMyReward() noEther returns (bool _success) {...
        PUSH [tag134]		function getMyReward() noEther returns (bool _success) {...
        JUMP			function getMyReward() noEther returns (bool _success) {...
      tag133: 
        JUMPDEST		function getMyReward() noEther returns (bool _success) {...
        PUSH 40		function getMyReward() noEther returns (bool _success) {...
        MLOAD			function getMyReward() noEther returns (bool _success) {...
        DUP1			function getMyReward() noEther returns (bool _success) {...
        DUP3			function getMyReward() noEther returns (bool _success) {...
        DUP2			function getMyReward() noEther returns (bool _success) {...
        MSTORE			function getMyReward() noEther returns (bool _success) {...
        PUSH 20		function getMyReward() noEther returns (bool _success) {...
        ADD			function getMyReward() noEther returns (bool _success) {...
        SWAP2			function getMyReward() noEther returns (bool _success) {...
        POP			function getMyReward() noEther returns (bool _success) {...
        POP			function getMyReward() noEther returns (bool _success) {...
        PUSH 40		function getMyReward() noEther returns (bool _success) {...
        MLOAD			function getMyReward() noEther returns (bool _success) {...
        DUP1			function getMyReward() noEther returns (bool _success) {...
        SWAP2			function getMyReward() noEther returns (bool _success) {...
        SUB			function getMyReward() noEther returns (bool _success) {...
        SWAP1			function getMyReward() noEther returns (bool _success) {...
        RETURN			function getMyReward() noEther returns (bool _success) {...
      tag40: 
        JUMPDEST		mapping (address => uint) public rewardToken
        PUSH [tag135]		mapping (address => uint) public rewardToken
        PUSH 4		mapping (address => uint) public rewardToken
        DUP1			mapping (address => uint) public rewardToken
        DUP1			mapping (address => uint) public rewardToken
        CALLDATALOAD			mapping (address => uint) public rewardToken
        SWAP1			mapping (address => uint) public rewardToken
        PUSH 20		mapping (address => uint) public rewardToken
        ADD			mapping (address => uint) public rewardToken
        SWAP1			mapping (address => uint) public rewardToken
        SWAP2			mapping (address => uint) public rewardToken
        SWAP1			mapping (address => uint) public rewardToken
        POP			mapping (address => uint) public rewardToken
        POP			mapping (address => uint) public rewardToken
        PUSH [tag136]		mapping (address => uint) public rewardToken
        JUMP			mapping (address => uint) public rewardToken
      tag135: 
        JUMPDEST		mapping (address => uint) public rewardToken
        PUSH 40		mapping (address => uint) public rewardToken
        MLOAD			mapping (address => uint) public rewardToken
        DUP1			mapping (address => uint) public rewardToken
        DUP3			mapping (address => uint) public rewardToken
        DUP2			mapping (address => uint) public rewardToken
        MSTORE			mapping (address => uint) public rewardToken
        PUSH 20		mapping (address => uint) public rewardToken
        ADD			mapping (address => uint) public rewardToken
        SWAP2			mapping (address => uint) public rewardToken
        POP			mapping (address => uint) public rewardToken
        POP			mapping (address => uint) public rewardToken
        PUSH 40		mapping (address => uint) public rewardToken
        MLOAD			mapping (address => uint) public rewardToken
        DUP1			mapping (address => uint) public rewardToken
        SWAP2			mapping (address => uint) public rewardToken
        SUB			mapping (address => uint) public rewardToken
        SWAP1			mapping (address => uint) public rewardToken
        RETURN			mapping (address => uint) public rewardToken
      tag41: 
        JUMPDEST		function transferFromWithoutReward(...
        PUSH [tag137]		function transferFromWithoutReward(...
        PUSH 4		function transferFromWithoutReward(...
        DUP1			function transferFromWithoutReward(...
        DUP1			function transferFromWithoutReward(...
        CALLDATALOAD			function transferFromWithoutReward(...
        SWAP1			function transferFromWithoutReward(...
        PUSH 20		function transferFromWithoutReward(...
        ADD			function transferFromWithoutReward(...
        SWAP1			function transferFromWithoutReward(...
        SWAP2			function transferFromWithoutReward(...
        SWAP1			function transferFromWithoutReward(...
        DUP1			function transferFromWithoutReward(...
        CALLDATALOAD			function transferFromWithoutReward(...
        SWAP1			function transferFromWithoutReward(...
        PUSH 20		function transferFromWithoutReward(...
        ADD			function transferFromWithoutReward(...
        SWAP1			function transferFromWithoutReward(...
        SWAP2			function transferFromWithoutReward(...
        SWAP1			function transferFromWithoutReward(...
        DUP1			function transferFromWithoutReward(...
        CALLDATALOAD			function transferFromWithoutReward(...
        SWAP1			function transferFromWithoutReward(...
        PUSH 20		function transferFromWithoutReward(...
        ADD			function transferFromWithoutReward(...
        SWAP1			function transferFromWithoutReward(...
        SWAP2			function transferFromWithoutReward(...
        SWAP1			function transferFromWithoutReward(...
        POP			function transferFromWithoutReward(...
        POP			function transferFromWithoutReward(...
        PUSH [tag138]		function transferFromWithoutReward(...
        JUMP			function transferFromWithoutReward(...
      tag137: 
        JUMPDEST		function transferFromWithoutReward(...
        PUSH 40		function transferFromWithoutReward(...
        MLOAD			function transferFromWithoutReward(...
        DUP1			function transferFromWithoutReward(...
        DUP3			function transferFromWithoutReward(...
        DUP2			function transferFromWithoutReward(...
        MSTORE			function transferFromWithoutReward(...
        PUSH 20		function transferFromWithoutReward(...
        ADD			function transferFromWithoutReward(...
        SWAP2			function transferFromWithoutReward(...
        POP			function transferFromWithoutReward(...
        POP			function transferFromWithoutReward(...
        PUSH 40		function transferFromWithoutReward(...
        MLOAD			function transferFromWithoutReward(...
        DUP1			function transferFromWithoutReward(...
        SWAP2			function transferFromWithoutReward(...
        SUB			function transferFromWithoutReward(...
        SWAP1			function transferFromWithoutReward(...
        RETURN			function transferFromWithoutReward(...
      tag42: 
        JUMPDEST		function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
        PUSH [tag139]		function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
        PUSH 4		function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
        DUP1			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
        DUP1			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
        CALLDATALOAD			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
        SWAP1			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
        PUSH 20		function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
        ADD			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
        SWAP1			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
        SWAP2			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
        SWAP1			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
        DUP1			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
        CALLDATALOAD			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
        SWAP1			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
        PUSH 20		function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
        ADD			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
        SWAP1			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
        SWAP2			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
        SWAP1			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
        POP			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
        POP			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
        PUSH [tag140]		function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
        JUMP			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
      tag139: 
        JUMPDEST		function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
        PUSH 40		function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
        MLOAD			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
        DUP1			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
        DUP3			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
        DUP2			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
        MSTORE			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
        PUSH 20		function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
        ADD			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
        SWAP2			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
        POP			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
        POP			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
        PUSH 40		function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
        MLOAD			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
        DUP1			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
        SWAP2			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
        SUB			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
        SWAP1			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
        RETURN			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
      tag43: 
        JUMPDEST		function changeProposalDeposit(uint _proposalDeposit) noEther external {...
        PUSH [tag141]		function changeProposalDeposit(uint _proposalDeposit) noEther external {...
        PUSH 4		function changeProposalDeposit(uint _proposalDeposit) noEther external {...
        DUP1			function changeProposalDeposit(uint _proposalDeposit) noEther external {...
        DUP1			function changeProposalDeposit(uint _proposalDeposit) noEther external {...
        CALLDATALOAD			function changeProposalDeposit(uint _proposalDeposit) noEther external {...
        SWAP1			function changeProposalDeposit(uint _proposalDeposit) noEther external {...
        PUSH 20		function changeProposalDeposit(uint _proposalDeposit) noEther external {...
        ADD			function changeProposalDeposit(uint _proposalDeposit) noEther external {...
        SWAP1			function changeProposalDeposit(uint _proposalDeposit) noEther external {...
        SWAP2			function changeProposalDeposit(uint _proposalDeposit) noEther external {...
        SWAP1			function changeProposalDeposit(uint _proposalDeposit) noEther external {...
        POP			function changeProposalDeposit(uint _proposalDeposit) noEther external {...
        POP			function changeProposalDeposit(uint _proposalDeposit) noEther external {...
        PUSH [tag142]		function changeProposalDeposit(uint _proposalDeposit) noEther external {...
        JUMP			function changeProposalDeposit(uint _proposalDeposit) noEther external {...
      tag141: 
        JUMPDEST		function changeProposalDeposit(uint _proposalDeposit) noEther external {...
        STOP			function changeProposalDeposit(uint _proposalDeposit) noEther external {...
      tag44: 
        JUMPDEST		mapping (address => uint) public blocked
        PUSH [tag143]		mapping (address => uint) public blocked
        PUSH 4		mapping (address => uint) public blocked
        DUP1			mapping (address => uint) public blocked
        DUP1			mapping (address => uint) public blocked
        CALLDATALOAD			mapping (address => uint) public blocked
        SWAP1			mapping (address => uint) public blocked
        PUSH 20		mapping (address => uint) public blocked
        ADD			mapping (address => uint) public blocked
        SWAP1			mapping (address => uint) public blocked
        SWAP2			mapping (address => uint) public blocked
        SWAP1			mapping (address => uint) public blocked
        POP			mapping (address => uint) public blocked
        POP			mapping (address => uint) public blocked
        PUSH [tag144]		mapping (address => uint) public blocked
        JUMP			mapping (address => uint) public blocked
      tag143: 
        JUMPDEST		mapping (address => uint) public blocked
        PUSH 40		mapping (address => uint) public blocked
        MLOAD			mapping (address => uint) public blocked
        DUP1			mapping (address => uint) public blocked
        DUP3			mapping (address => uint) public blocked
        DUP2			mapping (address => uint) public blocked
        MSTORE			mapping (address => uint) public blocked
        PUSH 20		mapping (address => uint) public blocked
        ADD			mapping (address => uint) public blocked
        SWAP2			mapping (address => uint) public blocked
        POP			mapping (address => uint) public blocked
        POP			mapping (address => uint) public blocked
        PUSH 40		mapping (address => uint) public blocked
        MLOAD			mapping (address => uint) public blocked
        DUP1			mapping (address => uint) public blocked
        SWAP2			mapping (address => uint) public blocked
        SUB			mapping (address => uint) public blocked
        SWAP1			mapping (address => uint) public blocked
        RETURN			mapping (address => uint) public blocked
      tag45: 
        JUMPDEST		address public curator
        PUSH [tag145]		address public curator
        PUSH 4		address public curator
        DUP1			address public curator
        POP			address public curator
        POP			address public curator
        PUSH [tag146]		address public curator
        JUMP			address public curator
      tag145: 
        JUMPDEST		address public curator
        PUSH 40		address public curator
        MLOAD			address public curator
        DUP1			address public curator
        DUP3			address public curator
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		address public curator
        AND			address public curator
        DUP2			address public curator
        MSTORE			address public curator
        PUSH 20		address public curator
        ADD			address public curator
        SWAP2			address public curator
        POP			address public curator
        POP			address public curator
        PUSH 40		address public curator
        MLOAD			address public curator
        DUP1			address public curator
        SWAP2			address public curator
        SUB			address public curator
        SWAP1			address public curator
        RETURN			address public curator
      tag46: 
        JUMPDEST		function checkProposalCode(...
        PUSH [tag147]		function checkProposalCode(...
        PUSH 4		function checkProposalCode(...
        DUP1			function checkProposalCode(...
        DUP1			function checkProposalCode(...
        CALLDATALOAD			function checkProposalCode(...
        SWAP1			function checkProposalCode(...
        PUSH 20		function checkProposalCode(...
        ADD			function checkProposalCode(...
        SWAP1			function checkProposalCode(...
        SWAP2			function checkProposalCode(...
        SWAP1			function checkProposalCode(...
        DUP1			function checkProposalCode(...
        CALLDATALOAD			function checkProposalCode(...
        SWAP1			function checkProposalCode(...
        PUSH 20		function checkProposalCode(...
        ADD			function checkProposalCode(...
        SWAP1			function checkProposalCode(...
        SWAP2			function checkProposalCode(...
        SWAP1			function checkProposalCode(...
        DUP1			function checkProposalCode(...
        CALLDATALOAD			function checkProposalCode(...
        SWAP1			function checkProposalCode(...
        PUSH 20		function checkProposalCode(...
        ADD			function checkProposalCode(...
        SWAP1			function checkProposalCode(...
        SWAP2			function checkProposalCode(...
        SWAP1			function checkProposalCode(...
        DUP1			function checkProposalCode(...
        CALLDATALOAD			function checkProposalCode(...
        SWAP1			function checkProposalCode(...
        PUSH 20		function checkProposalCode(...
        ADD			function checkProposalCode(...
        SWAP1			function checkProposalCode(...
        DUP3			function checkProposalCode(...
        ADD			function checkProposalCode(...
        DUP1			function checkProposalCode(...
        CALLDATALOAD			function checkProposalCode(...
        SWAP1			function checkProposalCode(...
        PUSH 20		function checkProposalCode(...
        ADD			function checkProposalCode(...
        SWAP2			function checkProposalCode(...
        SWAP2			function checkProposalCode(...
        SWAP1			function checkProposalCode(...
        DUP1			function checkProposalCode(...
        DUP1			function checkProposalCode(...
        PUSH 1F		function checkProposalCode(...
        ADD			function checkProposalCode(...
        PUSH 20		function checkProposalCode(...
        DUP1			function checkProposalCode(...
        SWAP2			function checkProposalCode(...
        DIV			function checkProposalCode(...
        MUL			function checkProposalCode(...
        PUSH 20		function checkProposalCode(...
        ADD			function checkProposalCode(...
        PUSH 40		function checkProposalCode(...
        MLOAD			function checkProposalCode(...
        SWAP1			function checkProposalCode(...
        DUP2			function checkProposalCode(...
        ADD			function checkProposalCode(...
        PUSH 40		function checkProposalCode(...
        MSTORE			function checkProposalCode(...
        DUP1			function checkProposalCode(...
        SWAP4			function checkProposalCode(...
        SWAP3			function checkProposalCode(...
        SWAP2			function checkProposalCode(...
        SWAP1			function checkProposalCode(...
        DUP2			function checkProposalCode(...
        DUP2			function checkProposalCode(...
        MSTORE			function checkProposalCode(...
        PUSH 20		function checkProposalCode(...
        ADD			function checkProposalCode(...
        DUP4			function checkProposalCode(...
        DUP4			function checkProposalCode(...
        DUP1			function checkProposalCode(...
        DUP3			function checkProposalCode(...
        DUP5			function checkProposalCode(...
        CALLDATACOPY			function checkProposalCode(...
        DUP3			function checkProposalCode(...
        ADD			function checkProposalCode(...
        SWAP2			function checkProposalCode(...
        POP			function checkProposalCode(...
        POP			function checkProposalCode(...
        POP			function checkProposalCode(...
        POP			function checkProposalCode(...
        POP			function checkProposalCode(...
        POP			function checkProposalCode(...
        SWAP1			function checkProposalCode(...
        SWAP1			function checkProposalCode(...
        SWAP2			function checkProposalCode(...
        SWAP1			function checkProposalCode(...
        POP			function checkProposalCode(...
        POP			function checkProposalCode(...
        PUSH [tag148]		function checkProposalCode(...
        JUMP			function checkProposalCode(...
      tag147: 
        JUMPDEST		function checkProposalCode(...
        PUSH 40		function checkProposalCode(...
        MLOAD			function checkProposalCode(...
        DUP1			function checkProposalCode(...
        DUP3			function checkProposalCode(...
        DUP2			function checkProposalCode(...
        MSTORE			function checkProposalCode(...
        PUSH 20		function checkProposalCode(...
        ADD			function checkProposalCode(...
        SWAP2			function checkProposalCode(...
        POP			function checkProposalCode(...
        POP			function checkProposalCode(...
        PUSH 40		function checkProposalCode(...
        MLOAD			function checkProposalCode(...
        DUP1			function checkProposalCode(...
        SWAP2			function checkProposalCode(...
        SUB			function checkProposalCode(...
        SWAP1			function checkProposalCode(...
        RETURN			function checkProposalCode(...
      tag47: 
        JUMPDEST		address public privateCreation
        PUSH [tag149]		address public privateCreation
        PUSH 4		address public privateCreation
        DUP1			address public privateCreation
        POP			address public privateCreation
        POP			address public privateCreation
        PUSH [tag150]		address public privateCreation
        JUMP			address public privateCreation
      tag149: 
        JUMPDEST		address public privateCreation
        PUSH 40		address public privateCreation
        MLOAD			address public privateCreation
        DUP1			address public privateCreation
        DUP3			address public privateCreation
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		address public privateCreation
        AND			address public privateCreation
        DUP2			address public privateCreation
        MSTORE			address public privateCreation
        PUSH 20		address public privateCreation
        ADD			address public privateCreation
        SWAP2			address public privateCreation
        POP			address public privateCreation
        POP			address public privateCreation
        PUSH 40		address public privateCreation
        MLOAD			address public privateCreation
        DUP1			address public privateCreation
        SWAP2			address public privateCreation
        SUB			address public privateCreation
        SWAP1			address public privateCreation
        RETURN			address public privateCreation
      tag64: 
        JUMPDEST		function approve(address _spender, uint256 _amount) returns (bool success) {...
        PUSH 0		bool success
        DUP2			_amount
        PUSH 15		allowed
        PUSH 0		allowed
        POP			allowed
        PUSH 0		allowed[msg.sender]
        CALLER			msg.sender
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		allowed[msg.sender]
        AND			allowed[msg.sender]
        DUP2			allowed[msg.sender]
        MSTORE			allowed[msg.sender]
        PUSH 20		allowed[msg.sender]
        ADD			allowed[msg.sender]
        SWAP1			allowed[msg.sender]
        DUP2			allowed[msg.sender]
        MSTORE			allowed[msg.sender]
        PUSH 20		allowed[msg.sender]
        ADD			allowed[msg.sender]
        PUSH 0		allowed[msg.sender]
        SHA3			allowed[msg.sender]
        PUSH 0		allowed[msg.sender]
        POP			allowed[msg.sender]
        PUSH 0		allowed[msg.sender][_spender]
        DUP6			_spender
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		allowed[msg.sender][_spender]
        AND			allowed[msg.sender][_spender]
        DUP2			allowed[msg.sender][_spender]
        MSTORE			allowed[msg.sender][_spender]
        PUSH 20		allowed[msg.sender][_spender]
        ADD			allowed[msg.sender][_spender]
        SWAP1			allowed[msg.sender][_spender]
        DUP2			allowed[msg.sender][_spender]
        MSTORE			allowed[msg.sender][_spender]
        PUSH 20		allowed[msg.sender][_spender]
        ADD			allowed[msg.sender][_spender]
        PUSH 0		allowed[msg.sender][_spender]
        SHA3			allowed[msg.sender][_spender]
        PUSH 0		allowed[msg.sender][_spender]
        POP			allowed[msg.sender][_spender] = _amount
        DUP2			allowed[msg.sender][_spender] = _amount
        SWAP1			allowed[msg.sender][_spender] = _amount
        SSTORE			allowed[msg.sender][_spender] = _amount
        POP			allowed[msg.sender][_spender] = _amount
        DUP3			_spender
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		Approval(msg.sender, _spender, _amount)
        AND			Approval(msg.sender, _spender, _amount)
        CALLER			msg.sender
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		Approval(msg.sender, _spender, _amount)
        AND			Approval(msg.sender, _spender, _amount)
        PUSH 8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925		Approval(msg.sender, _spender, _amount)
        DUP5			_amount
        PUSH 40		Approval(msg.sender, _spender, _amount)
        MLOAD			Approval(msg.sender, _spender, _amount)
        DUP1			Approval(msg.sender, _spender, _amount)
        DUP3			Approval(msg.sender, _spender, _amount)
        DUP2			Approval(msg.sender, _spender, _amount)
        MSTORE			Approval(msg.sender, _spender, _amount)
        PUSH 20		Approval(msg.sender, _spender, _amount)
        ADD			Approval(msg.sender, _spender, _amount)
        SWAP2			Approval(msg.sender, _spender, _amount)
        POP			Approval(msg.sender, _spender, _amount)
        POP			Approval(msg.sender, _spender, _amount)
        PUSH 40		Approval(msg.sender, _spender, _amount)
        MLOAD			Approval(msg.sender, _spender, _amount)
        DUP1			Approval(msg.sender, _spender, _amount)
        SWAP2			Approval(msg.sender, _spender, _amount)
        SUB			Approval(msg.sender, _spender, _amount)
        SWAP1			Approval(msg.sender, _spender, _amount)
        LOG3			Approval(msg.sender, _spender, _amount)
        PUSH 1		true
        SWAP1			return true
        POP			return true
        PUSH [tag151]		return true
        JUMP			return true
      tag151: 
        JUMPDEST		function approve(address _spender, uint256 _amount) returns (bool success) {...
        SWAP3			function approve(address _spender, uint256 _amount) returns (bool success) {...
        SWAP2			function approve(address _spender, uint256 _amount) returns (bool success) {...
        POP			function approve(address _spender, uint256 _amount) returns (bool success) {...
        POP			function approve(address _spender, uint256 _amount) returns (bool success) {...
        JUMP	[out]		function approve(address _spender, uint256 _amount) returns (bool success) {...
      tag140: 
        JUMPDEST		function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
        PUSH 0		uint256 remaining
        PUSH 15		allowed
        PUSH 0		allowed
        POP			allowed
        PUSH 0		allowed[_owner]
        DUP5			_owner
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		allowed[_owner]
        AND			allowed[_owner]
        DUP2			allowed[_owner]
        MSTORE			allowed[_owner]
        PUSH 20		allowed[_owner]
        ADD			allowed[_owner]
        SWAP1			allowed[_owner]
        DUP2			allowed[_owner]
        MSTORE			allowed[_owner]
        PUSH 20		allowed[_owner]
        ADD			allowed[_owner]
        PUSH 0		allowed[_owner]
        SHA3			allowed[_owner]
        PUSH 0		allowed[_owner]
        POP			allowed[_owner]
        PUSH 0		allowed[_owner][_spender]
        DUP4			_spender
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		allowed[_owner][_spender]
        AND			allowed[_owner][_spender]
        DUP2			allowed[_owner][_spender]
        MSTORE			allowed[_owner][_spender]
        PUSH 20		allowed[_owner][_spender]
        ADD			allowed[_owner][_spender]
        SWAP1			allowed[_owner][_spender]
        DUP2			allowed[_owner][_spender]
        MSTORE			allowed[_owner][_spender]
        PUSH 20		allowed[_owner][_spender]
        ADD			allowed[_owner][_spender]
        PUSH 0		allowed[_owner][_spender]
        SHA3			allowed[_owner][_spender]
        PUSH 0		allowed[_owner][_spender]
        POP			allowed[_owner][_spender]
        SLOAD			allowed[_owner][_spender]
        SWAP1			return allowed[_owner][_spender]
        POP			return allowed[_owner][_spender]
        PUSH [tag152]		return allowed[_owner][_spender]
        JUMP			return allowed[_owner][_spender]
      tag152: 
        JUMPDEST		function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
        SWAP3			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
        SWAP2			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
        POP			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
        POP			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
        JUMP	[out]		function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
      tag88: 
        JUMPDEST		uint public closingTime
        PUSH F		uint public closingTime
        PUSH 0		uint public closingTime
        POP			uint public closingTime
        SLOAD			uint public closingTime
        DUP2			uint public closingTime
        JUMP	[out]		uint public closingTime
      tag66: 
        JUMPDEST		uint public minTokensToCreate
        PUSH 10		uint public minTokensToCreate
        PUSH 0		uint public minTokensToCreate
        POP			uint public minTokensToCreate
        SLOAD			uint public minTokensToCreate
        DUP2			uint public minTokensToCreate
        JUMP	[out]		uint public minTokensToCreate
      tag127: 
        JUMPDEST		bool public isFueled
        PUSH 11		bool public isFueled
        PUSH 0		bool public isFueled
        SWAP1			bool public isFueled
        SLOAD			bool public isFueled
        SWAP1			bool public isFueled
        PUSH 100		bool public isFueled
        EXP			bool public isFueled
        SWAP1			bool public isFueled
        DIV			bool public isFueled
        PUSH FF		bool public isFueled
        AND			bool public isFueled
        DUP2			bool public isFueled
        JUMP	[out]		bool public isFueled
      tag150: 
        JUMPDEST		address public privateCreation
        PUSH 11		address public privateCreation
        PUSH 1		address public privateCreation
        SWAP1			address public privateCreation
        SLOAD			address public privateCreation
        SWAP1			address public privateCreation
        PUSH 100		address public privateCreation
        EXP			address public privateCreation
        SWAP1			address public privateCreation
        DIV			address public privateCreation
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		address public privateCreation
        AND			address public privateCreation
        DUP2			address public privateCreation
        JUMP	[out]		address public privateCreation
      tag76: 
        JUMPDEST		ManagedAccount public extraBalance
        PUSH 12		ManagedAccount public extraBalance
        PUSH 0		ManagedAccount public extraBalance
        SWAP1			ManagedAccount public extraBalance
        SLOAD			ManagedAccount public extraBalance
        SWAP1			ManagedAccount public extraBalance
        PUSH 100		ManagedAccount public extraBalance
        EXP			ManagedAccount public extraBalance
        SWAP1			ManagedAccount public extraBalance
        DIV			ManagedAccount public extraBalance
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		ManagedAccount public extraBalance
        AND			ManagedAccount public extraBalance
        DUP2			ManagedAccount public extraBalance
        JUMP	[out]		ManagedAccount public extraBalance
      tag54: 
        JUMPDEST		function createTokenProxy(address _tokenHolder) returns (bool success) {...
        PUSH 0		bool success
        PUSH 0		uint token
        PUSH F		closingTime
        PUSH 0		closingTime
        POP			closingTime
        SLOAD			closingTime
        TIMESTAMP			now
        LT			now < closingTime
        DUP1			now < closingTime && msg.value > 0
        ISZERO			now < closingTime && msg.value > 0
        PUSH [tag154]		now < closingTime && msg.value > 0
        JUMPI			now < closingTime && msg.value > 0
        POP			now < closingTime && msg.value > 0
        PUSH 0		0
        CALLVALUE			msg.value
        GT			msg.value > 0
      tag154: 
        JUMPDEST		now < closingTime && msg.value > 0
        DUP1			now < closingTime && msg.value > 0...
        ISZERO			now < closingTime && msg.value > 0...
        PUSH [tag155]		now < closingTime && msg.value > 0...
        JUMPI			now < closingTime && msg.value > 0...
        POP			now < closingTime && msg.value > 0...
        PUSH 0		0
        PUSH 11		privateCreation
        PUSH 1		privateCreation
        SWAP1			privateCreation
        SLOAD			privateCreation
        SWAP1			privateCreation
        PUSH 100		privateCreation
        EXP			privateCreation
        SWAP1			privateCreation
        DIV			privateCreation
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		privateCreation
        AND			privateCreation
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		privateCreation == 0
        AND			privateCreation == 0
        EQ			privateCreation == 0
        DUP1			privateCreation == 0 || privateCreation == msg.sender
        PUSH [tag156]		privateCreation == 0 || privateCreation == msg.sender
        JUMPI			privateCreation == 0 || privateCreation == msg.sender
        POP			privateCreation == 0 || privateCreation == msg.sender
        CALLER			msg.sender
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		privateCreation == msg.sender
        AND			privateCreation == msg.sender
        PUSH 11		privateCreation
        PUSH 1		privateCreation
        SWAP1			privateCreation
        SLOAD			privateCreation
        SWAP1			privateCreation
        PUSH 100		privateCreation
        EXP			privateCreation
        SWAP1			privateCreation
        DIV			privateCreation
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		privateCreation
        AND			privateCreation
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		privateCreation == msg.sender
        AND			privateCreation == msg.sender
        EQ			privateCreation == msg.sender
      tag156: 
        JUMPDEST		privateCreation == 0 || privateCreation == msg.sender
      tag155: 
        JUMPDEST		now < closingTime && msg.value > 0...
        ISZERO			if (now < closingTime && msg.value > 0...
        PUSH [tag157]		if (now < closingTime && msg.value > 0...
        JUMPI			if (now < closingTime && msg.value > 0...
        PUSH [tag158]		divisor()
        PUSH [tag74]		divisor
        JUMP	[in]		divisor()
      tag158: 
        JUMPDEST		divisor()
        PUSH 14		20
        CALLVALUE			msg.value
        MUL			msg.value * 20
        DIV			(msg.value * 20) / divisor()
        SWAP1			uint token = (msg.value * 20) / divisor()
        POP			uint token = (msg.value * 20) / divisor()
        PUSH 12		extraBalance
        PUSH 0		extraBalance
        SWAP1			extraBalance
        SLOAD			extraBalance
        SWAP1			extraBalance
        PUSH 100		extraBalance
        EXP			extraBalance
        SWAP1			extraBalance
        DIV			extraBalance
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		extraBalance
        AND			extraBalance
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		extraBalance.call
        AND			extraBalance.call
        DUP2			token
        CALLVALUE			msg.value
        SUB			msg.value - token
        PUSH 40		extraBalance.call.value(msg.value - token)()
        MLOAD			extraBalance.call.value(msg.value - token)()
        DUP1			extraBalance.call.value(msg.value - token)()
        SWAP1			extraBalance.call.value(msg.value - token)()
        POP			extraBalance.call.value(msg.value - token)()
        PUSH 0		extraBalance.call.value(msg.value - token)()
        PUSH 40		extraBalance.call.value(msg.value - token)()
        MLOAD			extraBalance.call.value(msg.value - token)()
        DUP1			extraBalance.call.value(msg.value - token)()
        DUP4			extraBalance.call.value(msg.value - token)()
        SUB			extraBalance.call.value(msg.value - token)()
        DUP2			extraBalance.call.value(msg.value - token)()
        DUP6			extraBalance.call.value(msg.value - token)()
        DUP8			extraBalance.call.value(msg.value - token)()
        PUSH 8502		extraBalance.call.value(msg.value - token)()
        GAS			extraBalance.call.value(msg.value - token)()
        SUB			extraBalance.call.value(msg.value - token)()
        CALL			extraBalance.call.value(msg.value - token)()
        SWAP3			extraBalance.call.value(msg.value - token)()
        POP			extraBalance.call.value(msg.value - token)()
        POP			extraBalance.call.value(msg.value - token)()
        POP			extraBalance.call.value(msg.value - token)()
        POP			extraBalance.call.value(msg.value - token)()
        DUP1			token
        PUSH 14		balances
        PUSH 0		balances
        POP			balances
        PUSH 0		balances[_tokenHolder]
        DUP6			_tokenHolder
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		balances[_tokenHolder]
        AND			balances[_tokenHolder]
        DUP2			balances[_tokenHolder]
        MSTORE			balances[_tokenHolder]
        PUSH 20		balances[_tokenHolder]
        ADD			balances[_tokenHolder]
        SWAP1			balances[_tokenHolder]
        DUP2			balances[_tokenHolder]
        MSTORE			balances[_tokenHolder]
        PUSH 20		balances[_tokenHolder]
        ADD			balances[_tokenHolder]
        PUSH 0		balances[_tokenHolder]
        SHA3			balances[_tokenHolder]
        PUSH 0		balances[_tokenHolder]
        DUP3			balances[_tokenHolder] += token
        DUP3			balances[_tokenHolder] += token
        DUP3			balances[_tokenHolder] += token
        POP			balances[_tokenHolder] += token
        SLOAD			balances[_tokenHolder] += token
        ADD			balances[_tokenHolder] += token
        SWAP3			balances[_tokenHolder] += token
        POP			balances[_tokenHolder] += token
        POP			balances[_tokenHolder] += token
        DUP2			balances[_tokenHolder] += token
        SWAP1			balances[_tokenHolder] += token
        SSTORE			balances[_tokenHolder] += token
        POP			balances[_tokenHolder] += token
        DUP1			token
        PUSH 16		totalSupply
        PUSH 0		totalSupply
        DUP3			totalSupply += token
        DUP3			totalSupply += token
        DUP3			totalSupply += token
        POP			totalSupply += token
        SLOAD			totalSupply += token
        ADD			totalSupply += token
        SWAP3			totalSupply += token
        POP			totalSupply += token
        POP			totalSupply += token
        DUP2			totalSupply += token
        SWAP1			totalSupply += token
        SSTORE			totalSupply += token
        POP			totalSupply += token
        CALLVALUE			msg.value
        PUSH 13		weiGiven
        PUSH 0		weiGiven
        POP			weiGiven
        PUSH 0		weiGiven[_tokenHolder]
        DUP6			_tokenHolder
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		weiGiven[_tokenHolder]
        AND			weiGiven[_tokenHolder]
        DUP2			weiGiven[_tokenHolder]
        MSTORE			weiGiven[_tokenHolder]
        PUSH 20		weiGiven[_tokenHolder]
        ADD			weiGiven[_tokenHolder]
        SWAP1			weiGiven[_tokenHolder]
        DUP2			weiGiven[_tokenHolder]
        MSTORE			weiGiven[_tokenHolder]
        PUSH 20		weiGiven[_tokenHolder]
        ADD			weiGiven[_tokenHolder]
        PUSH 0		weiGiven[_tokenHolder]
        SHA3			weiGiven[_tokenHolder]
        PUSH 0		weiGiven[_tokenHolder]
        DUP3			weiGiven[_tokenHolder] += msg.value
        DUP3			weiGiven[_tokenHolder] += msg.value
        DUP3			weiGiven[_tokenHolder] += msg.value
        POP			weiGiven[_tokenHolder] += msg.value
        SLOAD			weiGiven[_tokenHolder] += msg.value
        ADD			weiGiven[_tokenHolder] += msg.value
        SWAP3			weiGiven[_tokenHolder] += msg.value
        POP			weiGiven[_tokenHolder] += msg.value
        POP			weiGiven[_tokenHolder] += msg.value
        DUP2			weiGiven[_tokenHolder] += msg.value
        SWAP1			weiGiven[_tokenHolder] += msg.value
        SSTORE			weiGiven[_tokenHolder] += msg.value
        POP			weiGiven[_tokenHolder] += msg.value
        DUP3			_tokenHolder
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		CreatedToken(_tokenHolder, token)
        AND			CreatedToken(_tokenHolder, token)
        PUSH DBCCB92686EFCEAFB9BB7E0394DF7F58F71B954061B81AFB57109BF247D3D75A		CreatedToken(_tokenHolder, token)
        DUP3			token
        PUSH 40		CreatedToken(_tokenHolder, token)
        MLOAD			CreatedToken(_tokenHolder, token)
        DUP1			CreatedToken(_tokenHolder, token)
        DUP3			CreatedToken(_tokenHolder, token)
        DUP2			CreatedToken(_tokenHolder, token)
        MSTORE			CreatedToken(_tokenHolder, token)
        PUSH 20		CreatedToken(_tokenHolder, token)
        ADD			CreatedToken(_tokenHolder, token)
        SWAP2			CreatedToken(_tokenHolder, token)
        POP			CreatedToken(_tokenHolder, token)
        POP			CreatedToken(_tokenHolder, token)
        PUSH 40		CreatedToken(_tokenHolder, token)
        MLOAD			CreatedToken(_tokenHolder, token)
        DUP1			CreatedToken(_tokenHolder, token)
        SWAP2			CreatedToken(_tokenHolder, token)
        SUB			CreatedToken(_tokenHolder, token)
        SWAP1			CreatedToken(_tokenHolder, token)
        LOG2			CreatedToken(_tokenHolder, token)
        PUSH 10		minTokensToCreate
        PUSH 0		minTokensToCreate
        POP			minTokensToCreate
        SLOAD			minTokensToCreate
        PUSH 16		totalSupply
        PUSH 0		totalSupply
        POP			totalSupply
        SLOAD			totalSupply
        LT			totalSupply >= minTokensToCreate
        ISZERO			totalSupply >= minTokensToCreate
        DUP1			totalSupply >= minTokensToCreate && !isFueled
        ISZERO			totalSupply >= minTokensToCreate && !isFueled
        PUSH [tag159]		totalSupply >= minTokensToCreate && !isFueled
        JUMPI			totalSupply >= minTokensToCreate && !isFueled
        POP			totalSupply >= minTokensToCreate && !isFueled
        PUSH 11		isFueled
        PUSH 0		isFueled
        SWAP1			isFueled
        SLOAD			isFueled
        SWAP1			isFueled
        PUSH 100		isFueled
        EXP			isFueled
        SWAP1			isFueled
        DIV			isFueled
        PUSH FF		isFueled
        AND			isFueled
        ISZERO			!isFueled
      tag159: 
        JUMPDEST		totalSupply >= minTokensToCreate && !isFueled
        ISZERO			if (totalSupply >= minTokensToCreate && !isFueled) {...
        PUSH [tag160]		if (totalSupply >= minTokensToCreate && !isFueled) {...
        JUMPI			if (totalSupply >= minTokensToCreate && !isFueled) {...
        PUSH 1		true
        PUSH 11		isFueled
        PUSH 0		isFueled
        PUSH 100		isFueled = true
        EXP			isFueled = true
        DUP2			isFueled = true
        SLOAD			isFueled = true
        DUP2			isFueled = true
        PUSH FF		isFueled = true
        MUL			isFueled = true
        NOT			isFueled = true
        AND			isFueled = true
        SWAP1			isFueled = true
        DUP4			isFueled = true
        MUL			isFueled = true
        OR			isFueled = true
        SWAP1			isFueled = true
        SSTORE			isFueled = true
        POP			isFueled = true
        PUSH F381A3E2428FDDA36615919E8D9C35878D9EB0CF85AC6EDF575088E80E4C147E		FuelingToDate(totalSupply)
        PUSH 16		totalSupply
        PUSH 0		totalSupply
        POP			totalSupply
        SLOAD			totalSupply
        PUSH 40		FuelingToDate(totalSupply)
        MLOAD			FuelingToDate(totalSupply)
        DUP1			FuelingToDate(totalSupply)
        DUP3			FuelingToDate(totalSupply)
        DUP2			FuelingToDate(totalSupply)
        MSTORE			FuelingToDate(totalSupply)
        PUSH 20		FuelingToDate(totalSupply)
        ADD			FuelingToDate(totalSupply)
        SWAP2			FuelingToDate(totalSupply)
        POP			FuelingToDate(totalSupply)
        POP			FuelingToDate(totalSupply)
        PUSH 40		FuelingToDate(totalSupply)
        MLOAD			FuelingToDate(totalSupply)
        DUP1			FuelingToDate(totalSupply)
        SWAP2			FuelingToDate(totalSupply)
        SUB			FuelingToDate(totalSupply)
        SWAP1			FuelingToDate(totalSupply)
        LOG1			FuelingToDate(totalSupply)
      tag160: 
        JUMPDEST		if (totalSupply >= minTokensToCreate && !isFueled) {...
        PUSH 1		true
        SWAP2			return true
        POP			return true
        PUSH [tag153]		return true
        JUMP			return true
      tag157: 
        JUMPDEST		if (now < closingTime && msg.value > 0...
        PUSH [ErrorTag]		throw
        JUMP			throw
      tag153: 
        JUMPDEST		function createTokenProxy(address _tokenHolder) returns (bool success) {...
        POP			function createTokenProxy(address _tokenHolder) returns (bool success) {...
        SWAP2			function createTokenProxy(address _tokenHolder) returns (bool success) {...
        SWAP1			function createTokenProxy(address _tokenHolder) returns (bool success) {...
        POP			function createTokenProxy(address _tokenHolder) returns (bool success) {...
        JUMP	[out]		function createTokenProxy(address _tokenHolder) returns (bool success) {...
      tag94: 
        JUMPDEST		function refund() noEther {...
        PUSH 0		0
        CALLVALUE			msg.value
        GT			msg.value > 0
        ISZERO			if (msg.value > 0) throw
        PUSH [tag162]		if (msg.value > 0) throw
        JUMPI			if (msg.value > 0) throw
        PUSH [ErrorTag]		throw
        JUMP			throw
      tag162: 
        JUMPDEST		if (msg.value > 0) throw
        PUSH F		closingTime
        PUSH 0		closingTime
        POP			closingTime
        SLOAD			closingTime
        TIMESTAMP			now
        GT			now > closingTime
        DUP1			now > closingTime && !isFueled
        ISZERO			now > closingTime && !isFueled
        PUSH [tag163]		now > closingTime && !isFueled
        JUMPI			now > closingTime && !isFueled
        POP			now > closingTime && !isFueled
        PUSH 11		isFueled
        PUSH 0		isFueled
        SWAP1			isFueled
        SLOAD			isFueled
        SWAP1			isFueled
        PUSH 100		isFueled
        EXP			isFueled
        SWAP1			isFueled
        DIV			isFueled
        PUSH FF		isFueled
        AND			isFueled
        ISZERO			!isFueled
      tag163: 
        JUMPDEST		now > closingTime && !isFueled
        ISZERO			if (now > closingTime && !isFueled) {...
        PUSH [tag164]		if (now > closingTime && !isFueled) {...
        JUMPI			if (now > closingTime && !isFueled) {...
        PUSH 12		extraBalance
        PUSH 0		extraBalance
        SWAP1			extraBalance
        SLOAD			extraBalance
        SWAP1			extraBalance
        PUSH 100		extraBalance
        EXP			extraBalance
        SWAP1			extraBalance
        DIV			extraBalance
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		extraBalance
        AND			extraBalance
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		extraBalance.accumulatedInput
        AND			extraBalance.accumulatedInput
        PUSH D2CC718F		extraBalance.accumulatedInput
        PUSH 40		extraBalance.accumulatedInput()
        MLOAD			extraBalance.accumulatedInput()
        DUP2			extraBalance.accumulatedInput()
        PUSH 100000000000000000000000000000000000000000000000000000000		extraBalance.accumulatedInput()
        MUL			extraBalance.accumulatedInput()
        DUP2			extraBalance.accumulatedInput()
        MSTORE			extraBalance.accumulatedInput()
        PUSH 4		extraBalance.accumulatedInput()
        ADD			extraBalance.accumulatedInput()
        DUP1			extraBalance.accumulatedInput()
        SWAP1			extraBalance.accumulatedInput()
        POP			extraBalance.accumulatedInput()
        PUSH 20		extraBalance.accumulatedInput()
        PUSH 40		extraBalance.accumulatedInput()
        MLOAD			extraBalance.accumulatedInput()
        DUP1			extraBalance.accumulatedInput()
        DUP4			extraBalance.accumulatedInput()
        SUB			extraBalance.accumulatedInput()
        DUP2			extraBalance.accumulatedInput()
        PUSH 0		extraBalance.accumulatedInput()
        DUP8			extraBalance.accumulatedInput()
        PUSH 61DA		extraBalance.accumulatedInput()
        GAS			extraBalance.accumulatedInput()
        SUB			extraBalance.accumulatedInput()
        CALL			extraBalance.accumulatedInput()
        ISZERO			extraBalance.accumulatedInput()
        PUSH [ErrorTag]		extraBalance.accumulatedInput()
        JUMPI			extraBalance.accumulatedInput()
        POP			extraBalance.accumulatedInput()
        POP			extraBalance.accumulatedInput()
        POP			extraBalance.accumulatedInput()
        PUSH 40		extraBalance.accumulatedInput()
        MLOAD			extraBalance.accumulatedInput()
        DUP1			extraBalance.accumulatedInput()
        MLOAD			extraBalance.accumulatedInput()
        SWAP1			extraBalance.accumulatedInput()
        PUSH 20		extraBalance.accumulatedInput()
        ADD			extraBalance.accumulatedInput()
        POP			extraBalance.accumulatedInput()
        PUSH 12		extraBalance
        PUSH 0		extraBalance
        SWAP1			extraBalance
        SLOAD			extraBalance
        SWAP1			extraBalance
        PUSH 100		extraBalance
        EXP			extraBalance
        SWAP1			extraBalance
        DIV			extraBalance
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		extraBalance
        AND			extraBalance
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		extraBalance.balance
        AND			extraBalance.balance
        BALANCE			extraBalance.balance
        LT			extraBalance.balance >= extraBalance.accumulatedInput()
        ISZERO			extraBalance.balance >= extraBalance.accumulatedInput()
        ISZERO			if (extraBalance.balance >= extraBalance.accumulatedInput())...
        PUSH [tag165]		if (extraBalance.balance >= extraBalance.accumulatedInput())...
        JUMPI			if (extraBalance.balance >= extraBalance.accumulatedInput())...
        PUSH 12		extraBalance
        PUSH 0		extraBalance
        SWAP1			extraBalance
        SLOAD			extraBalance
        SWAP1			extraBalance
        PUSH 100		extraBalance
        EXP			extraBalance
        SWAP1			extraBalance
        DIV			extraBalance
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		extraBalance
        AND			extraBalance
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		extraBalance.payOut
        AND			extraBalance.payOut
        PUSH 221038A		extraBalance.payOut
        ADDRESS			this
        PUSH 12		extraBalance
        PUSH 0		extraBalance
        SWAP1			extraBalance
        SLOAD			extraBalance
        SWAP1			extraBalance
        PUSH 100		extraBalance
        EXP			extraBalance
        SWAP1			extraBalance
        DIV			extraBalance
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		extraBalance
        AND			extraBalance
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		extraBalance.accumulatedInput
        AND			extraBalance.accumulatedInput
        PUSH D2CC718F		extraBalance.accumulatedInput
        PUSH 40		extraBalance.accumulatedInput()
        MLOAD			extraBalance.accumulatedInput()
        DUP2			extraBalance.accumulatedInput()
        PUSH 100000000000000000000000000000000000000000000000000000000		extraBalance.accumulatedInput()
        MUL			extraBalance.accumulatedInput()
        DUP2			extraBalance.accumulatedInput()
        MSTORE			extraBalance.accumulatedInput()
        PUSH 4		extraBalance.accumulatedInput()
        ADD			extraBalance.accumulatedInput()
        DUP1			extraBalance.accumulatedInput()
        SWAP1			extraBalance.accumulatedInput()
        POP			extraBalance.accumulatedInput()
        PUSH 20		extraBalance.accumulatedInput()
        PUSH 40		extraBalance.accumulatedInput()
        MLOAD			extraBalance.accumulatedInput()
        DUP1			extraBalance.accumulatedInput()
        DUP4			extraBalance.accumulatedInput()
        SUB			extraBalance.accumulatedInput()
        DUP2			extraBalance.accumulatedInput()
        PUSH 0		extraBalance.accumulatedInput()
        DUP8			extraBalance.accumulatedInput()
        PUSH 61DA		extraBalance.accumulatedInput()
        GAS			extraBalance.accumulatedInput()
        SUB			extraBalance.accumulatedInput()
        CALL			extraBalance.accumulatedInput()
        ISZERO			extraBalance.accumulatedInput()
        PUSH [ErrorTag]		extraBalance.accumulatedInput()
        JUMPI			extraBalance.accumulatedInput()
        POP			extraBalance.accumulatedInput()
        POP			extraBalance.accumulatedInput()
        POP			extraBalance.accumulatedInput()
        PUSH 40		extraBalance.accumulatedInput()
        MLOAD			extraBalance.accumulatedInput()
        DUP1			extraBalance.accumulatedInput()
        MLOAD			extraBalance.accumulatedInput()
        SWAP1			extraBalance.accumulatedInput()
        PUSH 20		extraBalance.accumulatedInput()
        ADD			extraBalance.accumulatedInput()
        POP			extraBalance.accumulatedInput()
        PUSH 40		extraBalance.payOut(address(this), extraBalance.accumulatedInput())
        MLOAD			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
        DUP4			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
        PUSH 100000000000000000000000000000000000000000000000000000000		extraBalance.payOut(address(this), extraBalance.accumulatedInput())
        MUL			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
        DUP2			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
        MSTORE			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
        PUSH 4		extraBalance.payOut(address(this), extraBalance.accumulatedInput())
        ADD			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
        DUP1			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
        DUP4			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		extraBalance.payOut(address(this), extraBalance.accumulatedInput())
        AND			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
        DUP2			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
        MSTORE			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
        PUSH 20		extraBalance.payOut(address(this), extraBalance.accumulatedInput())
        ADD			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
        DUP3			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
        DUP2			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
        MSTORE			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
        PUSH 20		extraBalance.payOut(address(this), extraBalance.accumulatedInput())
        ADD			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
        SWAP3			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
        POP			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
        POP			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
        POP			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
        PUSH 20		extraBalance.payOut(address(this), extraBalance.accumulatedInput())
        PUSH 40		extraBalance.payOut(address(this), extraBalance.accumulatedInput())
        MLOAD			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
        DUP1			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
        DUP4			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
        SUB			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
        DUP2			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
        PUSH 0		extraBalance.payOut(address(this), extraBalance.accumulatedInput())
        DUP8			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
        PUSH 61DA		extraBalance.payOut(address(this), extraBalance.accumulatedInput())
        GAS			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
        SUB			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
        CALL			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
        ISZERO			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
        PUSH [ErrorTag]		extraBalance.payOut(address(this), extraBalance.accumulatedInput())
        JUMPI			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
        POP			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
        POP			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
        POP			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
        PUSH 40		extraBalance.payOut(address(this), extraBalance.accumulatedInput())
        MLOAD			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
        DUP1			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
        MLOAD			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
        SWAP1			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
        PUSH 20		extraBalance.payOut(address(this), extraBalance.accumulatedInput())
        ADD			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
        POP			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
        POP			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
      tag165: 
        JUMPDEST		if (extraBalance.balance >= extraBalance.accumulatedInput())...
        CALLER			msg.sender
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		msg.sender.call
        AND			msg.sender.call
        PUSH 13		weiGiven
        PUSH 0		weiGiven
        POP			weiGiven
        PUSH 0		weiGiven[msg.sender]
        CALLER			msg.sender
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		weiGiven[msg.sender]
        AND			weiGiven[msg.sender]
        DUP2			weiGiven[msg.sender]
        MSTORE			weiGiven[msg.sender]
        PUSH 20		weiGiven[msg.sender]
        ADD			weiGiven[msg.sender]
        SWAP1			weiGiven[msg.sender]
        DUP2			weiGiven[msg.sender]
        MSTORE			weiGiven[msg.sender]
        PUSH 20		weiGiven[msg.sender]
        ADD			weiGiven[msg.sender]
        PUSH 0		weiGiven[msg.sender]
        SHA3			weiGiven[msg.sender]
        PUSH 0		weiGiven[msg.sender]
        POP			weiGiven[msg.sender]
        SLOAD			weiGiven[msg.sender]
        PUSH 40		msg.sender.call.value(weiGiven[msg.sender])()
        MLOAD			msg.sender.call.value(weiGiven[msg.sender])()
        DUP1			msg.sender.call.value(weiGiven[msg.sender])()
        SWAP1			msg.sender.call.value(weiGiven[msg.sender])()
        POP			msg.sender.call.value(weiGiven[msg.sender])()
        PUSH 0		msg.sender.call.value(weiGiven[msg.sender])()
        PUSH 40		msg.sender.call.value(weiGiven[msg.sender])()
        MLOAD			msg.sender.call.value(weiGiven[msg.sender])()
        DUP1			msg.sender.call.value(weiGiven[msg.sender])()
        DUP4			msg.sender.call.value(weiGiven[msg.sender])()
        SUB			msg.sender.call.value(weiGiven[msg.sender])()
        DUP2			msg.sender.call.value(weiGiven[msg.sender])()
        DUP6			msg.sender.call.value(weiGiven[msg.sender])()
        DUP8			msg.sender.call.value(weiGiven[msg.sender])()
        PUSH 8502		msg.sender.call.value(weiGiven[msg.sender])()
        GAS			msg.sender.call.value(weiGiven[msg.sender])()
        SUB			msg.sender.call.value(weiGiven[msg.sender])()
        CALL			msg.sender.call.value(weiGiven[msg.sender])()
        SWAP3			msg.sender.call.value(weiGiven[msg.sender])()
        POP			msg.sender.call.value(weiGiven[msg.sender])()
        POP			msg.sender.call.value(weiGiven[msg.sender])()
        POP			msg.sender.call.value(weiGiven[msg.sender])()
        ISZERO			if (msg.sender.call.value(weiGiven[msg.sender])()) {...
        PUSH [tag166]		if (msg.sender.call.value(weiGiven[msg.sender])()) {...
        JUMPI			if (msg.sender.call.value(weiGiven[msg.sender])()) {...
        CALLER			msg.sender
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		Refund(msg.sender, weiGiven[msg.sender])
        AND			Refund(msg.sender, weiGiven[msg.sender])
        PUSH BB28353E4598C3B9199101A66E0989549B659A59A54D2C27FBB183F1932C8E6D		Refund(msg.sender, weiGiven[msg.sender])
        PUSH 13		weiGiven
        PUSH 0		weiGiven
        POP			weiGiven
        PUSH 0		weiGiven[msg.sender]
        CALLER			msg.sender
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		weiGiven[msg.sender]
        AND			weiGiven[msg.sender]
        DUP2			weiGiven[msg.sender]
        MSTORE			weiGiven[msg.sender]
        PUSH 20		weiGiven[msg.sender]
        ADD			weiGiven[msg.sender]
        SWAP1			weiGiven[msg.sender]
        DUP2			weiGiven[msg.sender]
        MSTORE			weiGiven[msg.sender]
        PUSH 20		weiGiven[msg.sender]
        ADD			weiGiven[msg.sender]
        PUSH 0		weiGiven[msg.sender]
        SHA3			weiGiven[msg.sender]
        PUSH 0		weiGiven[msg.sender]
        POP			weiGiven[msg.sender]
        SLOAD			weiGiven[msg.sender]
        PUSH 40		Refund(msg.sender, weiGiven[msg.sender])
        MLOAD			Refund(msg.sender, weiGiven[msg.sender])
        DUP1			Refund(msg.sender, weiGiven[msg.sender])
        DUP3			Refund(msg.sender, weiGiven[msg.sender])
        DUP2			Refund(msg.sender, weiGiven[msg.sender])
        MSTORE			Refund(msg.sender, weiGiven[msg.sender])
        PUSH 20		Refund(msg.sender, weiGiven[msg.sender])
        ADD			Refund(msg.sender, weiGiven[msg.sender])
        SWAP2			Refund(msg.sender, weiGiven[msg.sender])
        POP			Refund(msg.sender, weiGiven[msg.sender])
        POP			Refund(msg.sender, weiGiven[msg.sender])
        PUSH 40		Refund(msg.sender, weiGiven[msg.sender])
        MLOAD			Refund(msg.sender, weiGiven[msg.sender])
        DUP1			Refund(msg.sender, weiGiven[msg.sender])
        SWAP2			Refund(msg.sender, weiGiven[msg.sender])
        SUB			Refund(msg.sender, weiGiven[msg.sender])
        SWAP1			Refund(msg.sender, weiGiven[msg.sender])
        LOG2			Refund(msg.sender, weiGiven[msg.sender])
        PUSH 14		balances
        PUSH 0		balances
        POP			balances
        PUSH 0		balances[msg.sender]
        CALLER			msg.sender
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		balances[msg.sender]
        AND			balances[msg.sender]
        DUP2			balances[msg.sender]
        MSTORE			balances[msg.sender]
        PUSH 20		balances[msg.sender]
        ADD			balances[msg.sender]
        SWAP1			balances[msg.sender]
        DUP2			balances[msg.sender]
        MSTORE			balances[msg.sender]
        PUSH 20		balances[msg.sender]
        ADD			balances[msg.sender]
        PUSH 0		balances[msg.sender]
        SHA3			balances[msg.sender]
        PUSH 0		balances[msg.sender]
        POP			balances[msg.sender]
        SLOAD			balances[msg.sender]
        PUSH 16		totalSupply
        PUSH 0		totalSupply
        DUP3			totalSupply -= balances[msg.sender]
        DUP3			totalSupply -= balances[msg.sender]
        DUP3			totalSupply -= balances[msg.sender]
        POP			totalSupply -= balances[msg.sender]
        SLOAD			totalSupply -= balances[msg.sender]
        SUB			totalSupply -= balances[msg.sender]
        SWAP3			totalSupply -= balances[msg.sender]
        POP			totalSupply -= balances[msg.sender]
        POP			totalSupply -= balances[msg.sender]
        DUP2			totalSupply -= balances[msg.sender]
        SWAP1			totalSupply -= balances[msg.sender]
        SSTORE			totalSupply -= balances[msg.sender]
        POP			totalSupply -= balances[msg.sender]
        PUSH 0		0
        PUSH 14		balances
        PUSH 0		balances
        POP			balances
        PUSH 0		balances[msg.sender]
        CALLER			msg.sender
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		balances[msg.sender]
        AND			balances[msg.sender]
        DUP2			balances[msg.sender]
        MSTORE			balances[msg.sender]
        PUSH 20		balances[msg.sender]
        ADD			balances[msg.sender]
        SWAP1			balances[msg.sender]
        DUP2			balances[msg.sender]
        MSTORE			balances[msg.sender]
        PUSH 20		balances[msg.sender]
        ADD			balances[msg.sender]
        PUSH 0		balances[msg.sender]
        SHA3			balances[msg.sender]
        PUSH 0		balances[msg.sender]
        POP			balances[msg.sender] = 0
        DUP2			balances[msg.sender] = 0
        SWAP1			balances[msg.sender] = 0
        SSTORE			balances[msg.sender] = 0
        POP			balances[msg.sender] = 0
        PUSH 0		0
        PUSH 13		weiGiven
        PUSH 0		weiGiven
        POP			weiGiven
        PUSH 0		weiGiven[msg.sender]
        CALLER			msg.sender
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		weiGiven[msg.sender]
        AND			weiGiven[msg.sender]
        DUP2			weiGiven[msg.sender]
        MSTORE			weiGiven[msg.sender]
        PUSH 20		weiGiven[msg.sender]
        ADD			weiGiven[msg.sender]
        SWAP1			weiGiven[msg.sender]
        DUP2			weiGiven[msg.sender]
        MSTORE			weiGiven[msg.sender]
        PUSH 20		weiGiven[msg.sender]
        ADD			weiGiven[msg.sender]
        PUSH 0		weiGiven[msg.sender]
        SHA3			weiGiven[msg.sender]
        PUSH 0		weiGiven[msg.sender]
        POP			weiGiven[msg.sender] = 0
        DUP2			weiGiven[msg.sender] = 0
        SWAP1			weiGiven[msg.sender] = 0
        SSTORE			weiGiven[msg.sender] = 0
        POP			weiGiven[msg.sender] = 0
      tag166: 
        JUMPDEST		if (msg.sender.call.value(weiGiven[msg.sender])()) {...
      tag164: 
        JUMPDEST		if (now > closingTime && !isFueled) {...
      tag161: 
        JUMPDEST		function refund() noEther {...
        JUMP	[out]		function refund() noEther {...
      tag74: 
        JUMPDEST		function divisor() constant returns (uint divisor) {...
        PUSH 0		uint divisor
        TIMESTAMP			now
        PUSH 127500		2 weeks
        PUSH F		closingTime
        PUSH 0		closingTime
        POP			closingTime
        SLOAD			closingTime
        SUB			closingTime - 2 weeks
        GT			closingTime - 2 weeks > now
        ISZERO			if (closingTime - 2 weeks > now) {...
        PUSH [tag168]		if (closingTime - 2 weeks > now) {...
        JUMPI			if (closingTime - 2 weeks > now) {...
        PUSH 14		20
        SWAP1			return 20
        POP			return 20
        PUSH [tag167]		return 20
        JUMP			return 20
        PUSH [tag169]		if (closingTime - 2 weeks > now) {...
        JUMP			if (closingTime - 2 weeks > now) {...
      tag168: 
        JUMPDEST		if (closingTime - 2 weeks > now) {...
        TIMESTAMP			now
        PUSH 54600		4 days
        PUSH F		closingTime
        PUSH 0		closingTime
        POP			closingTime
        SLOAD			closingTime
        SUB			closingTime - 4 days
        GT			closingTime - 4 days > now
        ISZERO			if (closingTime - 4 days > now) {...
        PUSH [tag170]		if (closingTime - 4 days > now) {...
        JUMPI			if (closingTime - 4 days > now) {...
        PUSH 15180		1 days
        PUSH 127500		2 weeks
        PUSH F		closingTime
        PUSH 0		closingTime
        POP			closingTime
        SLOAD			closingTime
        SUB			closingTime - 2 weeks
        TIMESTAMP			now
        SUB			now - (closingTime - 2 weeks)
        DIV			(now - (closingTime - 2 weeks)) / (1 days)
        PUSH 14		20
        ADD			20 + (now - (closingTime - 2 weeks)) / (1 days)
        SWAP1			return (20 + (now - (closingTime - 2 weeks)) / (1 days))
        POP			return (20 + (now - (closingTime - 2 weeks)) / (1 days))
        PUSH [tag167]		return (20 + (now - (closingTime - 2 weeks)) / (1 days))
        JUMP			return (20 + (now - (closingTime - 2 weeks)) / (1 days))
        PUSH [tag171]		if (closingTime - 4 days > now) {...
        JUMP			if (closingTime - 4 days > now) {...
      tag170: 
        JUMPDEST		if (closingTime - 4 days > now) {...
        PUSH 1E		30
        SWAP1			return 30
        POP			return 30
        PUSH [tag167]		return 30
        JUMP			return 30
      tag171: 
        JUMPDEST		if (closingTime - 4 days > now) {...
      tag169: 
        JUMPDEST		if (closingTime - 2 weeks > now) {...
      tag167: 
        JUMPDEST		function divisor() constant returns (uint divisor) {...
        SWAP1			function divisor() constant returns (uint divisor) {...
        JUMP	[out]		function divisor() constant returns (uint divisor) {...
      tag59: 
        JUMPDEST		Proposal[] public proposals
        PUSH 0		Proposal[] public proposals
        PUSH 0		Proposal[] public proposals
        POP			Proposal[] public proposals
        DUP2			Proposal[] public proposals
        DUP2			Proposal[] public proposals
        SLOAD			Proposal[] public proposals
        DUP2			Proposal[] public proposals
        LT			Proposal[] public proposals
        ISZERO			Proposal[] public proposals
        PUSH [ErrorTag]		Proposal[] public proposals
        JUMPI			Proposal[] public proposals
        SWAP1			Proposal[] public proposals
        PUSH 0		Proposal[] public proposals
        MSTORE			Proposal[] public proposals
        PUSH 20		Proposal[] public proposals
        PUSH 0		Proposal[] public proposals
        SHA3			Proposal[] public proposals
        SWAP1			Proposal[] public proposals
        PUSH E		Proposal[] public proposals
        MUL			Proposal[] public proposals
        ADD			Proposal[] public proposals
        PUSH 0		Proposal[] public proposals
      tag172: 
        JUMPDEST		Proposal[] public proposals
        SWAP2			Proposal[] public proposals
        POP			Proposal[] public proposals
        SWAP1			Proposal[] public proposals
        POP			Proposal[] public proposals
        DUP1			Proposal[] public proposals
        PUSH 0		Proposal[] public proposals
        ADD			Proposal[] public proposals
        PUSH 0		Proposal[] public proposals
        SWAP1			Proposal[] public proposals
        SLOAD			Proposal[] public proposals
        SWAP1			Proposal[] public proposals
        PUSH 100		Proposal[] public proposals
        EXP			Proposal[] public proposals
        SWAP1			Proposal[] public proposals
        DIV			Proposal[] public proposals
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		Proposal[] public proposals
        AND			Proposal[] public proposals
        SWAP1			Proposal[] public proposals
        DUP1			Proposal[] public proposals
        PUSH 1		Proposal[] public proposals
        ADD			Proposal[] public proposals
        PUSH 0		Proposal[] public proposals
        POP			Proposal[] public proposals
        SLOAD			Proposal[] public proposals
        SWAP1			Proposal[] public proposals
        DUP1			Proposal[] public proposals
        PUSH 2		Proposal[] public proposals
        ADD			Proposal[] public proposals
        PUSH 0		Proposal[] public proposals
        POP			Proposal[] public proposals
        SWAP1			Proposal[] public proposals
        DUP1			Proposal[] public proposals
        PUSH 3		Proposal[] public proposals
        ADD			Proposal[] public proposals
        PUSH 0		Proposal[] public proposals
        POP			Proposal[] public proposals
        SLOAD			Proposal[] public proposals
        SWAP1			Proposal[] public proposals
        DUP1			Proposal[] public proposals
        PUSH 4		Proposal[] public proposals
        ADD			Proposal[] public proposals
        PUSH 0		Proposal[] public proposals
        SWAP1			Proposal[] public proposals
        SLOAD			Proposal[] public proposals
        SWAP1			Proposal[] public proposals
        PUSH 100		Proposal[] public proposals
        EXP			Proposal[] public proposals
        SWAP1			Proposal[] public proposals
        DIV			Proposal[] public proposals
        PUSH FF		Proposal[] public proposals
        AND			Proposal[] public proposals
        SWAP1			Proposal[] public proposals
        DUP1			Proposal[] public proposals
        PUSH 4		Proposal[] public proposals
        ADD			Proposal[] public proposals
        PUSH 1		Proposal[] public proposals
        SWAP1			Proposal[] public proposals
        SLOAD			Proposal[] public proposals
        SWAP1			Proposal[] public proposals
        PUSH 100		Proposal[] public proposals
        EXP			Proposal[] public proposals
        SWAP1			Proposal[] public proposals
        DIV			Proposal[] public proposals
        PUSH FF		Proposal[] public proposals
        AND			Proposal[] public proposals
        SWAP1			Proposal[] public proposals
        DUP1			Proposal[] public proposals
        PUSH 5		Proposal[] public proposals
        ADD			Proposal[] public proposals
        PUSH 0		Proposal[] public proposals
        POP			Proposal[] public proposals
        SLOAD			Proposal[] public proposals
        SWAP1			Proposal[] public proposals
        DUP1			Proposal[] public proposals
        PUSH 6		Proposal[] public proposals
        ADD			Proposal[] public proposals
        PUSH 0		Proposal[] public proposals
        POP			Proposal[] public proposals
        SLOAD			Proposal[] public proposals
        SWAP1			Proposal[] public proposals
        DUP1			Proposal[] public proposals
        PUSH 7		Proposal[] public proposals
        ADD			Proposal[] public proposals
        PUSH 0		Proposal[] public proposals
        SWAP1			Proposal[] public proposals
        SLOAD			Proposal[] public proposals
        SWAP1			Proposal[] public proposals
        PUSH 100		Proposal[] public proposals
        EXP			Proposal[] public proposals
        SWAP1			Proposal[] public proposals
        DIV			Proposal[] public proposals
        PUSH FF		Proposal[] public proposals
        AND			Proposal[] public proposals
        SWAP1			Proposal[] public proposals
        DUP1			Proposal[] public proposals
        PUSH 9		Proposal[] public proposals
        ADD			Proposal[] public proposals
        PUSH 0		Proposal[] public proposals
        POP			Proposal[] public proposals
        SLOAD			Proposal[] public proposals
        SWAP1			Proposal[] public proposals
        DUP1			Proposal[] public proposals
        PUSH A		Proposal[] public proposals
        ADD			Proposal[] public proposals
        PUSH 0		Proposal[] public proposals
        POP			Proposal[] public proposals
        SLOAD			Proposal[] public proposals
        SWAP1			Proposal[] public proposals
        DUP1			Proposal[] public proposals
        PUSH D		Proposal[] public proposals
        ADD			Proposal[] public proposals
        PUSH 0		Proposal[] public proposals
        SWAP1			Proposal[] public proposals
        SLOAD			Proposal[] public proposals
        SWAP1			Proposal[] public proposals
        PUSH 100		Proposal[] public proposals
        EXP			Proposal[] public proposals
        SWAP1			Proposal[] public proposals
        DIV			Proposal[] public proposals
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		Proposal[] public proposals
        AND			Proposal[] public proposals
        SWAP1			Proposal[] public proposals
        POP			Proposal[] public proposals
        DUP13			Proposal[] public proposals
        JUMP	[out]		Proposal[] public proposals
      tag100: 
        JUMPDEST		uint public minQuorumDivisor
        PUSH 1		uint public minQuorumDivisor
        PUSH 0		uint public minQuorumDivisor
        POP			uint public minQuorumDivisor
        SLOAD			uint public minQuorumDivisor
        DUP2			uint public minQuorumDivisor
        JUMP	[out]		uint public minQuorumDivisor
      tag120: 
        JUMPDEST		uint  public lastTimeMinQuorumMet
        PUSH 2		uint  public lastTimeMinQuorumMet
        PUSH 0		uint  public lastTimeMinQuorumMet
        POP			uint  public lastTimeMinQuorumMet
        SLOAD			uint  public lastTimeMinQuorumMet
        DUP2			uint  public lastTimeMinQuorumMet
        JUMP	[out]		uint  public lastTimeMinQuorumMet
      tag146: 
        JUMPDEST		address public curator
        PUSH 3		address public curator
        PUSH 0		address public curator
        SWAP1			address public curator
        SLOAD			address public curator
        SWAP1			address public curator
        PUSH 100		address public curator
        EXP			address public curator
        SWAP1			address public curator
        DIV			address public curator
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		address public curator
        AND			address public curator
        DUP2			address public curator
        JUMP	[out]		address public curator
      tag90: 
        JUMPDEST		mapping (address => bool) public allowedRecipients
        PUSH 4		mapping (address => bool) public allowedRecipients
        PUSH 0		mapping (address => bool) public allowedRecipients
        POP			mapping (address => bool) public allowedRecipients
        PUSH 20		mapping (address => bool) public allowedRecipients
        MSTORE			mapping (address => bool) public allowedRecipients
        DUP1			mapping (address => bool) public allowedRecipients
        PUSH 0		mapping (address => bool) public allowedRecipients
        MSTORE			mapping (address => bool) public allowedRecipients
        PUSH 40		mapping (address => bool) public allowedRecipients
        PUSH 0		mapping (address => bool) public allowedRecipients
        SHA3			mapping (address => bool) public allowedRecipients
        PUSH 0		mapping (address => bool) public allowedRecipients
        SWAP2			mapping (address => bool) public allowedRecipients
        POP			mapping (address => bool) public allowedRecipients
        SWAP1			mapping (address => bool) public allowedRecipients
        SWAP1			mapping (address => bool) public allowedRecipients
        SLOAD			mapping (address => bool) public allowedRecipients
        SWAP1			mapping (address => bool) public allowedRecipients
        PUSH 100		mapping (address => bool) public allowedRecipients
        EXP			mapping (address => bool) public allowedRecipients
        SWAP1			mapping (address => bool) public allowedRecipients
        DIV			mapping (address => bool) public allowedRecipients
        PUSH FF		mapping (address => bool) public allowedRecipients
        AND			mapping (address => bool) public allowedRecipients
        DUP2			mapping (address => bool) public allowedRecipients
        JUMP	[out]		mapping (address => bool) public allowedRecipients
      tag136: 
        JUMPDEST		mapping (address => uint) public rewardToken
        PUSH 5		mapping (address => uint) public rewardToken
        PUSH 0		mapping (address => uint) public rewardToken
        POP			mapping (address => uint) public rewardToken
        PUSH 20		mapping (address => uint) public rewardToken
        MSTORE			mapping (address => uint) public rewardToken
        DUP1			mapping (address => uint) public rewardToken
        PUSH 0		mapping (address => uint) public rewardToken
        MSTORE			mapping (address => uint) public rewardToken
        PUSH 40		mapping (address => uint) public rewardToken
        PUSH 0		mapping (address => uint) public rewardToken
        SHA3			mapping (address => uint) public rewardToken
        PUSH 0		mapping (address => uint) public rewardToken
        SWAP2			mapping (address => uint) public rewardToken
        POP			mapping (address => uint) public rewardToken
        SWAP1			mapping (address => uint) public rewardToken
        POP			mapping (address => uint) public rewardToken
        SLOAD			mapping (address => uint) public rewardToken
        DUP2			mapping (address => uint) public rewardToken
        JUMP	[out]		mapping (address => uint) public rewardToken
      tag84: 
        JUMPDEST		uint public totalRewardToken
        PUSH 6		uint public totalRewardToken
        PUSH 0		uint public totalRewardToken
        POP			uint public totalRewardToken
        SLOAD			uint public totalRewardToken
        DUP2			uint public totalRewardToken
        JUMP	[out]		uint public totalRewardToken
      tag68: 
        JUMPDEST		ManagedAccount public rewardAccount
        PUSH 7		ManagedAccount public rewardAccount
        PUSH 0		ManagedAccount public rewardAccount
        SWAP1			ManagedAccount public rewardAccount
        SLOAD			ManagedAccount public rewardAccount
        SWAP1			ManagedAccount public rewardAccount
        PUSH 100		ManagedAccount public rewardAccount
        EXP			ManagedAccount public rewardAccount
        SWAP1			ManagedAccount public rewardAccount
        DIV			ManagedAccount public rewardAccount
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		ManagedAccount public rewardAccount
        AND			ManagedAccount public rewardAccount
        DUP2			ManagedAccount public rewardAccount
        JUMP	[out]		ManagedAccount public rewardAccount
      tag114: 
        JUMPDEST		ManagedAccount public DAOrewardAccount
        PUSH 8		ManagedAccount public DAOrewardAccount
        PUSH 0		ManagedAccount public DAOrewardAccount
        SWAP1			ManagedAccount public DAOrewardAccount
        SLOAD			ManagedAccount public DAOrewardAccount
        SWAP1			ManagedAccount public DAOrewardAccount
        PUSH 100		ManagedAccount public DAOrewardAccount
        EXP			ManagedAccount public DAOrewardAccount
        SWAP1			ManagedAccount public DAOrewardAccount
        DIV			ManagedAccount public DAOrewardAccount
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		ManagedAccount public DAOrewardAccount
        AND			ManagedAccount public DAOrewardAccount
        DUP2			ManagedAccount public DAOrewardAccount
        JUMP	[out]		ManagedAccount public DAOrewardAccount
      tag98: 
        JUMPDEST		mapping (address => uint) public DAOpaidOut
        PUSH 9		mapping (address => uint) public DAOpaidOut
        PUSH 0		mapping (address => uint) public DAOpaidOut
        POP			mapping (address => uint) public DAOpaidOut
        PUSH 20		mapping (address => uint) public DAOpaidOut
        MSTORE			mapping (address => uint) public DAOpaidOut
        DUP1			mapping (address => uint) public DAOpaidOut
        PUSH 0		mapping (address => uint) public DAOpaidOut
        MSTORE			mapping (address => uint) public DAOpaidOut
        PUSH 40		mapping (address => uint) public DAOpaidOut
        PUSH 0		mapping (address => uint) public DAOpaidOut
        SHA3			mapping (address => uint) public DAOpaidOut
        PUSH 0		mapping (address => uint) public DAOpaidOut
        SWAP2			mapping (address => uint) public DAOpaidOut
        POP			mapping (address => uint) public DAOpaidOut
        SWAP1			mapping (address => uint) public DAOpaidOut
        POP			mapping (address => uint) public DAOpaidOut
        SLOAD			mapping (address => uint) public DAOpaidOut
        DUP2			mapping (address => uint) public DAOpaidOut
        JUMP	[out]		mapping (address => uint) public DAOpaidOut
      tag110: 
        JUMPDEST		mapping (address => uint) public paidOut
        PUSH A		mapping (address => uint) public paidOut
        PUSH 0		mapping (address => uint) public paidOut
        POP			mapping (address => uint) public paidOut
        PUSH 20		mapping (address => uint) public paidOut
        MSTORE			mapping (address => uint) public paidOut
        DUP1			mapping (address => uint) public paidOut
        PUSH 0		mapping (address => uint) public paidOut
        MSTORE			mapping (address => uint) public paidOut
        PUSH 40		mapping (address => uint) public paidOut
        PUSH 0		mapping (address => uint) public paidOut
        SHA3			mapping (address => uint) public paidOut
        PUSH 0		mapping (address => uint) public paidOut
        SWAP2			mapping (address => uint) public paidOut
        POP			mapping (address => uint) public paidOut
        SWAP1			mapping (address => uint) public paidOut
        POP			mapping (address => uint) public paidOut
        SLOAD			mapping (address => uint) public paidOut
        DUP2			mapping (address => uint) public paidOut
        JUMP	[out]		mapping (address => uint) public paidOut
      tag144: 
        JUMPDEST		mapping (address => uint) public blocked
        PUSH B		mapping (address => uint) public blocked
        PUSH 0		mapping (address => uint) public blocked
        POP			mapping (address => uint) public blocked
        PUSH 20		mapping (address => uint) public blocked
        MSTORE			mapping (address => uint) public blocked
        DUP1			mapping (address => uint) public blocked
        PUSH 0		mapping (address => uint) public blocked
        MSTORE			mapping (address => uint) public blocked
        PUSH 40		mapping (address => uint) public blocked
        PUSH 0		mapping (address => uint) public blocked
        SHA3			mapping (address => uint) public blocked
        PUSH 0		mapping (address => uint) public blocked
        SWAP2			mapping (address => uint) public blocked
        POP			mapping (address => uint) public blocked
        SWAP1			mapping (address => uint) public blocked
        POP			mapping (address => uint) public blocked
        SLOAD			mapping (address => uint) public blocked
        DUP2			mapping (address => uint) public blocked
        JUMP	[out]		mapping (address => uint) public blocked
      tag116: 
        JUMPDEST		uint public proposalDeposit
        PUSH C		uint public proposalDeposit
        PUSH 0		uint public proposalDeposit
        POP			uint public proposalDeposit
        SLOAD			uint public proposalDeposit
        DUP2			uint public proposalDeposit
        JUMP	[out]		uint public proposalDeposit
      tag70: 
        JUMPDEST		DAO_Creator public daoCreator
        PUSH E		DAO_Creator public daoCreator
        PUSH 0		DAO_Creator public daoCreator
        SWAP1			DAO_Creator public daoCreator
        SLOAD			DAO_Creator public daoCreator
        SWAP1			DAO_Creator public daoCreator
        PUSH 100		DAO_Creator public daoCreator
        EXP			DAO_Creator public daoCreator
        SWAP1			DAO_Creator public daoCreator
        DIV			DAO_Creator public daoCreator
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		DAO_Creator public daoCreator
        AND			DAO_Creator public daoCreator
        DUP2			DAO_Creator public daoCreator
        JUMP	[out]		DAO_Creator public daoCreator
      tag57: 
        JUMPDEST		function receiveEther() returns (bool) {...
        PUSH 0		bool
        PUSH 1		true
        SWAP1			return true
        POP			return true
        PUSH [tag173]		return true
        JUMP			return true
      tag173: 
        JUMPDEST		function receiveEther() returns (bool) {...
        SWAP1			function receiveEther() returns (bool) {...
        JUMP	[out]		function receiveEther() returns (bool) {...
      tag96: 
        JUMPDEST		function newProposal(...
        PUSH 0		uint _proposalID
        PUSH 0		Proposal p
        PUSH 0		0
        PUSH [tag175]		balanceOf(msg.sender)
        CALLER			msg.sender
        PUSH [tag104]		balanceOf
        JUMP	[in]		balanceOf(msg.sender)
      tag175: 
        JUMPDEST		balanceOf(msg.sender)
        EQ			balanceOf(msg.sender) == 0
        ISZERO			if (balanceOf(msg.sender) == 0) throw
        PUSH [tag176]		if (balanceOf(msg.sender) == 0) throw
        JUMPI			if (balanceOf(msg.sender) == 0) throw
        PUSH [ErrorTag]		throw
        JUMP			throw
      tag176: 
        JUMPDEST		if (balanceOf(msg.sender) == 0) throw
        DUP3			_newCurator
        DUP1			_newCurator && (...
        ISZERO			_newCurator && (...
        PUSH [tag177]		_newCurator && (...
        JUMPI			_newCurator && (...
        POP			_newCurator && (...
        PUSH 0		0
        DUP8			_amount
        EQ			_amount != 0
        ISZERO			_amount != 0
        DUP1			_amount != 0...
        PUSH [tag178]		_amount != 0...
        JUMPI			_amount != 0...
        POP			_amount != 0...
        PUSH 0		0
        DUP6			_transactionData
        MLOAD			_transactionData.length
        EQ			_transactionData.length != 0
        ISZERO			_transactionData.length != 0
      tag178: 
        JUMPDEST		_amount != 0...
        DUP1			_amount != 0...
        PUSH [tag179]		_amount != 0...
        JUMPI			_amount != 0...
        POP			_amount != 0...
        PUSH 3		curator
        PUSH 0		curator
        SWAP1			curator
        SLOAD			curator
        SWAP1			curator
        PUSH 100		curator
        EXP			curator
        SWAP1			curator
        DIV			curator
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		curator
        AND			curator
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		_recipient == curator
        AND			_recipient == curator
        DUP9			_recipient
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		_recipient == curator
        AND			_recipient == curator
        EQ			_recipient == curator
      tag179: 
        JUMPDEST		_amount != 0...
        DUP1			_amount != 0...
        PUSH [tag180]		_amount != 0...
        JUMPI			_amount != 0...
        POP			_amount != 0...
        PUSH 0		0
        CALLVALUE			msg.value
        GT			msg.value > 0
      tag180: 
        JUMPDEST		_amount != 0...
        DUP1			_amount != 0...
        PUSH [tag181]		_amount != 0...
        JUMPI			_amount != 0...
        POP			_amount != 0...
        PUSH 93A80		1 weeks
        DUP5			_debatingPeriod
        LT			_debatingPeriod < minSplitDebatePeriod
      tag181: 
        JUMPDEST		_amount != 0...
      tag177: 
        JUMPDEST		_newCurator && (...
        ISZERO			if (_newCurator && (...
        PUSH [tag182]		if (_newCurator && (...
        JUMPI			if (_newCurator && (...
        PUSH [ErrorTag]		throw
        JUMP			throw
        PUSH [tag183]		if (_newCurator && (...
        JUMP			if (_newCurator && (...
      tag182: 
        JUMPDEST		if (_newCurator && (...
        DUP3			_newCurator
        ISZERO			!_newCurator
        DUP1			!_newCurator...
        ISZERO			!_newCurator...
        PUSH [tag184]		!_newCurator...
        JUMPI			!_newCurator...
        POP			!_newCurator...
        PUSH [tag185]		isRecipientAllowed(_recipient)
        DUP9			_recipient
        PUSH [tag186]		isRecipientAllowed
        JUMP	[in]		isRecipientAllowed(_recipient)
      tag185: 
        JUMPDEST		isRecipientAllowed(_recipient)
        ISZERO			!isRecipientAllowed(_recipient)
        DUP1			!isRecipientAllowed(_recipient) || (_debatingPeriod <  minProposalDebatePeriod)
        PUSH [tag187]		!isRecipientAllowed(_recipient) || (_debatingPeriod <  minProposalDebatePeriod)
        JUMPI			!isRecipientAllowed(_recipient) || (_debatingPeriod <  minProposalDebatePeriod)
        POP			!isRecipientAllowed(_recipient) || (_debatingPeriod <  minProposalDebatePeriod)
        PUSH 127500		2 weeks
        DUP5			_debatingPeriod
        LT			_debatingPeriod <  minProposalDebatePeriod
      tag187: 
        JUMPDEST		!isRecipientAllowed(_recipient) || (_debatingPeriod <  minProposalDebatePeriod)
      tag184: 
        JUMPDEST		!_newCurator...
        ISZERO			if (...
        PUSH [tag188]		if (...
        JUMPI			if (...
        PUSH [ErrorTag]		throw
        JUMP			throw
      tag188: 
        JUMPDEST		if (...
      tag183: 
        JUMPDEST		if (_newCurator && (...
        PUSH 49D400		8 weeks
        DUP5			_debatingPeriod
        GT			_debatingPeriod > 8 weeks
        ISZERO			if (_debatingPeriod > 8 weeks)...
        PUSH [tag189]		if (_debatingPeriod > 8 weeks)...
        JUMPI			if (_debatingPeriod > 8 weeks)...
        PUSH [ErrorTag]		throw
        JUMP			throw
      tag189: 
        JUMPDEST		if (_debatingPeriod > 8 weeks)...
        PUSH 11		isFueled
        PUSH 0		isFueled
        SWAP1			isFueled
        SLOAD			isFueled
        SWAP1			isFueled
        PUSH 100		isFueled
        EXP			isFueled
        SWAP1			isFueled
        DIV			isFueled
        PUSH FF		isFueled
        AND			isFueled
        ISZERO			!isFueled
        DUP1			!isFueled...
        PUSH [tag190]		!isFueled...
        JUMPI			!isFueled...
        POP			!isFueled...
        PUSH F		closingTime
        PUSH 0		closingTime
        POP			closingTime
        SLOAD			closingTime
        TIMESTAMP			now
        LT			now < closingTime
      tag190: 
        JUMPDEST		!isFueled...
        DUP1			!isFueled...
        PUSH [tag191]		!isFueled...
        JUMPI			!isFueled...
        POP			!isFueled...
        PUSH C		proposalDeposit
        PUSH 0		proposalDeposit
        POP			proposalDeposit
        SLOAD			proposalDeposit
        CALLVALUE			msg.value
        LT			msg.value < proposalDeposit
        DUP1			msg.value < proposalDeposit && !_newCurator
        ISZERO			msg.value < proposalDeposit && !_newCurator
        PUSH [tag192]		msg.value < proposalDeposit && !_newCurator
        JUMPI			msg.value < proposalDeposit && !_newCurator
        POP			msg.value < proposalDeposit && !_newCurator
        DUP3			_newCurator
        ISZERO			!_newCurator
      tag192: 
        JUMPDEST		msg.value < proposalDeposit && !_newCurator
      tag191: 
        JUMPDEST		!isFueled...
        ISZERO			if (!isFueled...
        PUSH [tag193]		if (!isFueled...
        JUMPI			if (!isFueled...
        PUSH [ErrorTag]		throw
        JUMP			throw
      tag193: 
        JUMPDEST		if (!isFueled...
        TIMESTAMP			now
        DUP5			_debatingPeriod
        TIMESTAMP			now
        ADD			now + _debatingPeriod
        LT			now + _debatingPeriod < now
        ISZERO			if (now + _debatingPeriod < now) // prevents overflow...
        PUSH [tag194]		if (now + _debatingPeriod < now) // prevents overflow...
        JUMPI			if (now + _debatingPeriod < now) // prevents overflow...
        PUSH [ErrorTag]		throw
        JUMP			throw
      tag194: 
        JUMPDEST		if (now + _debatingPeriod < now) // prevents overflow...
        ADDRESS			this
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		msg.sender == address(this)
        AND			msg.sender == address(this)
        CALLER			msg.sender
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		msg.sender == address(this)
        AND			msg.sender == address(this)
        EQ			msg.sender == address(this)
        ISZERO			if (msg.sender == address(this))...
        PUSH [tag195]		if (msg.sender == address(this))...
        JUMPI			if (msg.sender == address(this))...
        PUSH [ErrorTag]		throw
        JUMP			throw
      tag195: 
        JUMPDEST		if (msg.sender == address(this))...
        PUSH 0		proposals
        PUSH 0		proposals
        POP			proposals
        DUP1			proposals.length++
        SLOAD			proposals.length++
        DUP1			proposals.length++
        SWAP2			proposals.length++
        SWAP1			proposals.length++
        PUSH 1		proposals.length++
        ADD			proposals.length++
        SWAP1			proposals.length++
        SWAP1			proposals.length++
        DUP2			proposals.length++
        SLOAD			proposals.length++
        DUP2			proposals.length++
        DUP4			proposals.length++
        SSTORE			proposals.length++
        DUP2			proposals.length++
        DUP2			proposals.length++
        ISZERO			proposals.length++
        GT			proposals.length++
        PUSH [tag196]		proposals.length++
        JUMPI			proposals.length++
        PUSH E		proposals.length++
        MUL			proposals.length++
        DUP2			proposals.length++
        PUSH E		proposals.length++
        MUL			proposals.length++
        DUP4			proposals.length++
        PUSH 0		proposals.length++
        MSTORE			proposals.length++
        PUSH 20		proposals.length++
        PUSH 0		proposals.length++
        SHA3			proposals.length++
        SWAP2			proposals.length++
        DUP3			proposals.length++
        ADD			proposals.length++
        SWAP2			proposals.length++
        ADD			proposals.length++
        PUSH [tag197]		proposals.length++
        SWAP2			proposals.length++
        SWAP1			proposals.length++
        PUSH [tag198]		proposals.length++
        JUMP			proposals.length++
      tag198: 
        JUMPDEST		proposals.length++
        DUP1			proposals.length++
        DUP3			proposals.length++
        GT			proposals.length++
        ISZERO			proposals.length++
        PUSH [tag199]		proposals.length++
        JUMPI			proposals.length++
        PUSH 0		proposals.length++
        PUSH 0		proposals.length++
        DUP3			proposals.length++
        ADD			proposals.length++
        PUSH 0		proposals.length++
        PUSH 100		proposals.length++
        EXP			proposals.length++
        DUP2			proposals.length++
        SLOAD			proposals.length++
        SWAP1			proposals.length++
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		proposals.length++
        MUL			proposals.length++
        NOT			proposals.length++
        AND			proposals.length++
        SWAP1			proposals.length++
        SSTORE			proposals.length++
        PUSH 1		proposals.length++
        DUP3			proposals.length++
        ADD			proposals.length++
        PUSH 0		proposals.length++
        POP			proposals.length++
        PUSH 0		proposals.length++
        SWAP1			proposals.length++
        SSTORE			proposals.length++
        PUSH 2		proposals.length++
        DUP3			proposals.length++
        ADD			proposals.length++
        PUSH 0		proposals.length++
        POP			proposals.length++
        DUP1			proposals.length++
        SLOAD			proposals.length++
        PUSH 1		proposals.length++
        DUP2			proposals.length++
        PUSH 1		proposals.length++
        AND			proposals.length++
        ISZERO			proposals.length++
        PUSH 100		proposals.length++
        MUL			proposals.length++
        SUB			proposals.length++
        AND			proposals.length++
        PUSH 2		proposals.length++
        SWAP1			proposals.length++
        DIV			proposals.length++
        PUSH 0		proposals.length++
        DUP3			proposals.length++
        SSTORE			proposals.length++
        DUP1			proposals.length++
        PUSH 1F		proposals.length++
        LT			proposals.length++
        PUSH [tag201]		proposals.length++
        JUMPI			proposals.length++
        POP			proposals.length++
        PUSH [tag200]		proposals.length++
        JUMP			proposals.length++
      tag201: 
        JUMPDEST		proposals.length++
        PUSH 1F		proposals.length++
        ADD			proposals.length++
        PUSH 20		proposals.length++
        SWAP1			proposals.length++
        DIV			proposals.length++
        SWAP1			proposals.length++
        PUSH 0		proposals.length++
        MSTORE			proposals.length++
        PUSH 20		proposals.length++
        PUSH 0		proposals.length++
        SHA3			proposals.length++
        SWAP1			proposals.length++
        DUP2			proposals.length++
        ADD			proposals.length++
        SWAP1			proposals.length++
        PUSH [tag202]		proposals.length++
        SWAP2			proposals.length++
        SWAP1			proposals.length++
        PUSH [tag203]		proposals.length++
        JUMP			proposals.length++
      tag203: 
        JUMPDEST		proposals.length++
        DUP1			proposals.length++
        DUP3			proposals.length++
        GT			proposals.length++
        ISZERO			proposals.length++
        PUSH [tag204]		proposals.length++
        JUMPI			proposals.length++
        PUSH 0		proposals.length++
        DUP2			proposals.length++
        DUP2			proposals.length++
        POP			proposals.length++
        PUSH 0		proposals.length++
        SWAP1			proposals.length++
        SSTORE			proposals.length++
        POP			proposals.length++
        PUSH 1		proposals.length++
        ADD			proposals.length++
        PUSH [tag203]		proposals.length++
        JUMP			proposals.length++
      tag204: 
        JUMPDEST		proposals.length++
        POP			proposals.length++
        SWAP1			proposals.length++
        JUMP			proposals.length++
      tag202: 
        JUMPDEST		proposals.length++
      tag200: 
        JUMPDEST		proposals.length++
        POP			proposals.length++
        PUSH 3		proposals.length++
        DUP3			proposals.length++
        ADD			proposals.length++
        PUSH 0		proposals.length++
        POP			proposals.length++
        PUSH 0		proposals.length++
        SWAP1			proposals.length++
        SSTORE			proposals.length++
        PUSH 4		proposals.length++
        DUP3			proposals.length++
        ADD			proposals.length++
        PUSH 0		proposals.length++
        PUSH 100		proposals.length++
        EXP			proposals.length++
        DUP2			proposals.length++
        SLOAD			proposals.length++
        SWAP1			proposals.length++
        PUSH FF		proposals.length++
        MUL			proposals.length++
        NOT			proposals.length++
        AND			proposals.length++
        SWAP1			proposals.length++
        SSTORE			proposals.length++
        PUSH 4		proposals.length++
        DUP3			proposals.length++
        ADD			proposals.length++
        PUSH 1		proposals.length++
        PUSH 100		proposals.length++
        EXP			proposals.length++
        DUP2			proposals.length++
        SLOAD			proposals.length++
        SWAP1			proposals.length++
        PUSH FF		proposals.length++
        MUL			proposals.length++
        NOT			proposals.length++
        AND			proposals.length++
        SWAP1			proposals.length++
        SSTORE			proposals.length++
        PUSH 5		proposals.length++
        DUP3			proposals.length++
        ADD			proposals.length++
        PUSH 0		proposals.length++
        POP			proposals.length++
        PUSH 0		proposals.length++
        SWAP1			proposals.length++
        SSTORE			proposals.length++
        PUSH 6		proposals.length++
        DUP3			proposals.length++
        ADD			proposals.length++
        PUSH 0		proposals.length++
        POP			proposals.length++
        PUSH 0		proposals.length++
        SWAP1			proposals.length++
        SSTORE			proposals.length++
        PUSH 7		proposals.length++
        DUP3			proposals.length++
        ADD			proposals.length++
        PUSH 0		proposals.length++
        PUSH 100		proposals.length++
        EXP			proposals.length++
        DUP2			proposals.length++
        SLOAD			proposals.length++
        SWAP1			proposals.length++
        PUSH FF		proposals.length++
        MUL			proposals.length++
        NOT			proposals.length++
        AND			proposals.length++
        SWAP1			proposals.length++
        SSTORE			proposals.length++
        PUSH 8		proposals.length++
        DUP3			proposals.length++
        ADD			proposals.length++
        PUSH 0		proposals.length++
        POP			proposals.length++
        DUP1			proposals.length++
        SLOAD			proposals.length++
        PUSH 0		proposals.length++
        DUP3			proposals.length++
        SSTORE			proposals.length++
        PUSH 4		proposals.length++
        MUL			proposals.length++
        SWAP1			proposals.length++
        PUSH 0		proposals.length++
        MSTORE			proposals.length++
        PUSH 20		proposals.length++
        PUSH 0		proposals.length++
        SHA3			proposals.length++
        SWAP1			proposals.length++
        DUP2			proposals.length++
        ADD			proposals.length++
        SWAP1			proposals.length++
        PUSH [tag206]		proposals.length++
        SWAP2			proposals.length++
        SWAP1			proposals.length++
        PUSH [tag207]		proposals.length++
        JUMP			proposals.length++
      tag207: 
        JUMPDEST		proposals.length++
        DUP1			proposals.length++
        DUP3			proposals.length++
        GT			proposals.length++
        ISZERO			proposals.length++
        PUSH [tag208]		proposals.length++
        JUMPI			proposals.length++
        PUSH 0		proposals.length++
        PUSH 0		proposals.length++
        DUP3			proposals.length++
        ADD			proposals.length++
        PUSH 0		proposals.length++
        POP			proposals.length++
        PUSH 0		proposals.length++
        SWAP1			proposals.length++
        SSTORE			proposals.length++
        PUSH 1		proposals.length++
        DUP3			proposals.length++
        ADD			proposals.length++
        PUSH 0		proposals.length++
        POP			proposals.length++
        PUSH 0		proposals.length++
        SWAP1			proposals.length++
        SSTORE			proposals.length++
        PUSH 2		proposals.length++
        DUP3			proposals.length++
        ADD			proposals.length++
        PUSH 0		proposals.length++
        POP			proposals.length++
        PUSH 0		proposals.length++
        SWAP1			proposals.length++
        SSTORE			proposals.length++
        PUSH 3		proposals.length++
        DUP3			proposals.length++
        ADD			proposals.length++
        PUSH 0		proposals.length++
        PUSH 100		proposals.length++
        EXP			proposals.length++
        DUP2			proposals.length++
        SLOAD			proposals.length++
        SWAP1			proposals.length++
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		proposals.length++
        MUL			proposals.length++
        NOT			proposals.length++
        AND			proposals.length++
        SWAP1			proposals.length++
        SSTORE			proposals.length++
        POP			proposals.length++
        PUSH 1		proposals.length++
        ADD			proposals.length++
        PUSH [tag207]		proposals.length++
        JUMP			proposals.length++
      tag208: 
        JUMPDEST		proposals.length++
        POP			proposals.length++
        SWAP1			proposals.length++
        JUMP			proposals.length++
      tag206: 
        JUMPDEST		proposals.length++
      tag205: 
        JUMPDEST		proposals.length++
        POP			proposals.length++
        PUSH 9		proposals.length++
        DUP3			proposals.length++
        ADD			proposals.length++
        PUSH 0		proposals.length++
        POP			proposals.length++
        PUSH 0		proposals.length++
        SWAP1			proposals.length++
        SSTORE			proposals.length++
        PUSH A		proposals.length++
        DUP3			proposals.length++
        ADD			proposals.length++
        PUSH 0		proposals.length++
        POP			proposals.length++
        PUSH 0		proposals.length++
        SWAP1			proposals.length++
        SSTORE			proposals.length++
        PUSH D		proposals.length++
        DUP3			proposals.length++
        ADD			proposals.length++
        PUSH 0		proposals.length++
        PUSH 100		proposals.length++
        EXP			proposals.length++
        DUP2			proposals.length++
        SLOAD			proposals.length++
        SWAP1			proposals.length++
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		proposals.length++
        MUL			proposals.length++
        NOT			proposals.length++
        AND			proposals.length++
        SWAP1			proposals.length++
        SSTORE			proposals.length++
        POP			proposals.length++
        PUSH 1		proposals.length++
        ADD			proposals.length++
        PUSH [tag198]		proposals.length++
        JUMP			proposals.length++
      tag199: 
        JUMPDEST		proposals.length++
        POP			proposals.length++
        SWAP1			proposals.length++
        JUMP			proposals.length++
      tag197: 
        JUMPDEST		proposals.length++
      tag196: 
        JUMPDEST		proposals.length++
        POP			proposals.length++
        POP			proposals.length++
        POP			proposals.length++
        SWAP2			_proposalID = proposals.length++
        POP			_proposalID = proposals.length++
        DUP2			_proposalID = proposals.length++
        POP			_proposalID = proposals.length++
        PUSH 0		proposals
        PUSH 0		proposals
        POP			proposals
        DUP3			_proposalID
        DUP2			proposals[_proposalID]
        SLOAD			proposals[_proposalID]
        DUP2			proposals[_proposalID]
        LT			proposals[_proposalID]
        ISZERO			proposals[_proposalID]
        PUSH [ErrorTag]		proposals[_proposalID]
        JUMPI			proposals[_proposalID]
        SWAP1			proposals[_proposalID]
        PUSH 0		proposals[_proposalID]
        MSTORE			proposals[_proposalID]
        PUSH 20		proposals[_proposalID]
        PUSH 0		proposals[_proposalID]
        SHA3			proposals[_proposalID]
        SWAP1			proposals[_proposalID]
        PUSH E		proposals[_proposalID]
        MUL			proposals[_proposalID]
        ADD			proposals[_proposalID]
        PUSH 0		proposals[_proposalID]
      tag209: 
        JUMPDEST		proposals[_proposalID]
        POP			proposals[_proposalID]
        SWAP1			Proposal p = proposals[_proposalID]
        POP			Proposal p = proposals[_proposalID]
        DUP8			_recipient
        DUP2			p
        PUSH 0		p.recipient
        ADD			p.recipient
        PUSH 0		p.recipient
        PUSH 100		p.recipient = _recipient
        EXP			p.recipient = _recipient
        DUP2			p.recipient = _recipient
        SLOAD			p.recipient = _recipient
        DUP2			p.recipient = _recipient
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.recipient = _recipient
        MUL			p.recipient = _recipient
        NOT			p.recipient = _recipient
        AND			p.recipient = _recipient
        SWAP1			p.recipient = _recipient
        DUP4			p.recipient = _recipient
        MUL			p.recipient = _recipient
        OR			p.recipient = _recipient
        SWAP1			p.recipient = _recipient
        SSTORE			p.recipient = _recipient
        POP			p.recipient = _recipient
        DUP7			_amount
        DUP2			p
        PUSH 1		p.amount
        ADD			p.amount
        PUSH 0		p.amount
        POP			p.amount = _amount
        DUP2			p.amount = _amount
        SWAP1			p.amount = _amount
        SSTORE			p.amount = _amount
        POP			p.amount = _amount
        DUP6			_description
        DUP2			p
        PUSH 2		p.description
        ADD			p.description
        PUSH 0		p.description
        POP			p.description = _description
        SWAP1			p.description = _description
        DUP1			p.description = _description
        MLOAD			p.description = _description
        SWAP1			p.description = _description
        PUSH 20		p.description = _description
        ADD			p.description = _description
        SWAP1			p.description = _description
        DUP3			p.description = _description
        DUP1			p.description = _description
        SLOAD			p.description = _description
        PUSH 1		p.description = _description
        DUP2			p.description = _description
        PUSH 1		p.description = _description
        AND			p.description = _description
        ISZERO			p.description = _description
        PUSH 100		p.description = _description
        MUL			p.description = _description
        SUB			p.description = _description
        AND			p.description = _description
        PUSH 2		p.description = _description
        SWAP1			p.description = _description
        DIV			p.description = _description
        SWAP1			p.description = _description
        PUSH 0		p.description = _description
        MSTORE			p.description = _description
        PUSH 20		p.description = _description
        PUSH 0		p.description = _description
        SHA3			p.description = _description
        SWAP1			p.description = _description
        PUSH 1F		p.description = _description
        ADD			p.description = _description
        PUSH 20		p.description = _description
        SWAP1			p.description = _description
        DIV			p.description = _description
        DUP2			p.description = _description
        ADD			p.description = _description
        SWAP3			p.description = _description
        DUP3			p.description = _description
        PUSH 1F		p.description = _description
        LT			p.description = _description
        PUSH [tag211]		p.description = _description
        JUMPI			p.description = _description
        DUP1			p.description = _description
        MLOAD			p.description = _description
        PUSH FF		p.description = _description
        NOT			p.description = _description
        AND			p.description = _description
        DUP4			p.description = _description
        DUP1			p.description = _description
        ADD			p.description = _description
        OR			p.description = _description
        DUP6			p.description = _description
        SSTORE			p.description = _description
        PUSH [tag210]		p.description = _description
        JUMP			p.description = _description
      tag211: 
        JUMPDEST		p.description = _description
        DUP3			p.description = _description
        DUP1			p.description = _description
        ADD			p.description = _description
        PUSH 1		p.description = _description
        ADD			p.description = _description
        DUP6			p.description = _description
        SSTORE			p.description = _description
        DUP3			p.description = _description
        ISZERO			p.description = _description
        PUSH [tag210]		p.description = _description
        JUMPI			p.description = _description
        SWAP2			p.description = _description
        DUP3			p.description = _description
        ADD			p.description = _description
      tag212: 
        JUMPDEST		p.description = _description
        DUP3			p.description = _description
        DUP2			p.description = _description
        GT			p.description = _description
        ISZERO			p.description = _description
        PUSH [tag213]		p.description = _description
        JUMPI			p.description = _description
        DUP3			p.description = _description
        MLOAD			p.description = _description
        DUP3			p.description = _description
        PUSH 0		p.description = _description
        POP			p.description = _description
        SSTORE			p.description = _description
        SWAP2			p.description = _description
        PUSH 20		p.description = _description
        ADD			p.description = _description
        SWAP2			p.description = _description
        SWAP1			p.description = _description
        PUSH 1		p.description = _description
        ADD			p.description = _description
        SWAP1			p.description = _description
        PUSH [tag212]		p.description = _description
        JUMP			p.description = _description
      tag213: 
        JUMPDEST		p.description = _description
      tag210: 
        JUMPDEST		p.description = _description
        POP			p.description = _description
        SWAP1			p.description = _description
        POP			p.description = _description
        PUSH [tag214]		p.description = _description
        SWAP2			p.description = _description
        SWAP1			p.description = _description
        PUSH [tag215]		p.description = _description
        JUMP			p.description = _description
      tag215: 
        JUMPDEST		p.description = _description
        DUP1			p.description = _description
        DUP3			p.description = _description
        GT			p.description = _description
        ISZERO			p.description = _description
        PUSH [tag216]		p.description = _description
        JUMPI			p.description = _description
        PUSH 0		p.description = _description
        DUP2			p.description = _description
        DUP2			p.description = _description
        POP			p.description = _description
        PUSH 0		p.description = _description
        SWAP1			p.description = _description
        SSTORE			p.description = _description
        POP			p.description = _description
        PUSH 1		p.description = _description
        ADD			p.description = _description
        PUSH [tag215]		p.description = _description
        JUMP			p.description = _description
      tag216: 
        JUMPDEST		p.description = _description
        POP			p.description = _description
        SWAP1			p.description = _description
        JUMP			p.description = _description
      tag214: 
        JUMPDEST		p.description = _description
        POP			p.description = _description
        POP			p.description = _description
        DUP8			_recipient
        DUP8			_amount
        DUP7			_transactionData
        PUSH 40		sha3(_recipient, _amount, _transactionData)
        MLOAD			sha3(_recipient, _amount, _transactionData)
        DUP1			sha3(_recipient, _amount, _transactionData)
        DUP5			sha3(_recipient, _amount, _transactionData)
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		sha3(_recipient, _amount, _transactionData)
        AND			sha3(_recipient, _amount, _transactionData)
        PUSH 1000000000000000000000000		sha3(_recipient, _amount, _transactionData)
        MUL			sha3(_recipient, _amount, _transactionData)
        DUP2			sha3(_recipient, _amount, _transactionData)
        MSTORE			sha3(_recipient, _amount, _transactionData)
        PUSH 14		sha3(_recipient, _amount, _transactionData)
        ADD			sha3(_recipient, _amount, _transactionData)
        DUP4			sha3(_recipient, _amount, _transactionData)
        DUP2			sha3(_recipient, _amount, _transactionData)
        MSTORE			sha3(_recipient, _amount, _transactionData)
        PUSH 20		sha3(_recipient, _amount, _transactionData)
        ADD			sha3(_recipient, _amount, _transactionData)
        DUP3			sha3(_recipient, _amount, _transactionData)
        DUP1			sha3(_recipient, _amount, _transactionData)
        MLOAD			sha3(_recipient, _amount, _transactionData)
        SWAP1			sha3(_recipient, _amount, _transactionData)
        PUSH 20		sha3(_recipient, _amount, _transactionData)
        ADD			sha3(_recipient, _amount, _transactionData)
        SWAP1			sha3(_recipient, _amount, _transactionData)
        DUP1			sha3(_recipient, _amount, _transactionData)
        DUP4			sha3(_recipient, _amount, _transactionData)
        DUP4			sha3(_recipient, _amount, _transactionData)
        DUP3			sha3(_recipient, _amount, _transactionData)
        SWAP1			sha3(_recipient, _amount, _transactionData)
        PUSH 0		sha3(_recipient, _amount, _transactionData)
        PUSH 4		sha3(_recipient, _amount, _transactionData)
        PUSH 20		sha3(_recipient, _amount, _transactionData)
        DUP5			sha3(_recipient, _amount, _transactionData)
        PUSH 1F		sha3(_recipient, _amount, _transactionData)
        ADD			sha3(_recipient, _amount, _transactionData)
        DIV			sha3(_recipient, _amount, _transactionData)
        PUSH F		sha3(_recipient, _amount, _transactionData)
        MUL			sha3(_recipient, _amount, _transactionData)
        PUSH 3		sha3(_recipient, _amount, _transactionData)
        ADD			sha3(_recipient, _amount, _transactionData)
        CALL			sha3(_recipient, _amount, _transactionData)
        POP			sha3(_recipient, _amount, _transactionData)
        SWAP1			sha3(_recipient, _amount, _transactionData)
        POP			sha3(_recipient, _amount, _transactionData)
        ADD			sha3(_recipient, _amount, _transactionData)
        SWAP4			sha3(_recipient, _amount, _transactionData)
        POP			sha3(_recipient, _amount, _transactionData)
        POP			sha3(_recipient, _amount, _transactionData)
        POP			sha3(_recipient, _amount, _transactionData)
        POP			sha3(_recipient, _amount, _transactionData)
        PUSH 40		sha3(_recipient, _amount, _transactionData)
        MLOAD			sha3(_recipient, _amount, _transactionData)
        DUP1			sha3(_recipient, _amount, _transactionData)
        SWAP2			sha3(_recipient, _amount, _transactionData)
        SUB			sha3(_recipient, _amount, _transactionData)
        SWAP1			sha3(_recipient, _amount, _transactionData)
        SHA3			sha3(_recipient, _amount, _transactionData)
        DUP2			p
        PUSH 5		p.proposalHash
        ADD			p.proposalHash
        PUSH 0		p.proposalHash
        POP			p.proposalHash = sha3(_recipient, _amount, _transactionData)
        DUP2			p.proposalHash = sha3(_recipient, _amount, _transactionData)
        SWAP1			p.proposalHash = sha3(_recipient, _amount, _transactionData)
        SSTORE			p.proposalHash = sha3(_recipient, _amount, _transactionData)
        POP			p.proposalHash = sha3(_recipient, _amount, _transactionData)
        DUP4			_debatingPeriod
        TIMESTAMP			now
        ADD			now + _debatingPeriod
        DUP2			p
        PUSH 3		p.votingDeadline
        ADD			p.votingDeadline
        PUSH 0		p.votingDeadline
        POP			p.votingDeadline = now + _debatingPeriod
        DUP2			p.votingDeadline = now + _debatingPeriod
        SWAP1			p.votingDeadline = now + _debatingPeriod
        SSTORE			p.votingDeadline = now + _debatingPeriod
        POP			p.votingDeadline = now + _debatingPeriod
        PUSH 1		true
        DUP2			p
        PUSH 4		p.open
        ADD			p.open
        PUSH 0		p.open
        PUSH 100		p.open = true
        EXP			p.open = true
        DUP2			p.open = true
        SLOAD			p.open = true
        DUP2			p.open = true
        PUSH FF		p.open = true
        MUL			p.open = true
        NOT			p.open = true
        AND			p.open = true
        SWAP1			p.open = true
        DUP4			p.open = true
        MUL			p.open = true
        OR			p.open = true
        SWAP1			p.open = true
        SSTORE			p.open = true
        POP			p.open = true
        DUP3			_newCurator
        DUP2			p
        PUSH 7		p.newCurator
        ADD			p.newCurator
        PUSH 0		p.newCurator
        PUSH 100		p.newCurator = _newCurator
        EXP			p.newCurator = _newCurator
        DUP2			p.newCurator = _newCurator
        SLOAD			p.newCurator = _newCurator
        DUP2			p.newCurator = _newCurator
        PUSH FF		p.newCurator = _newCurator
        MUL			p.newCurator = _newCurator
        NOT			p.newCurator = _newCurator
        AND			p.newCurator = _newCurator
        SWAP1			p.newCurator = _newCurator
        DUP4			p.newCurator = _newCurator
        MUL			p.newCurator = _newCurator
        OR			p.newCurator = _newCurator
        SWAP1			p.newCurator = _newCurator
        SSTORE			p.newCurator = _newCurator
        POP			p.newCurator = _newCurator
        DUP3			_newCurator
        ISZERO			if (_newCurator)...
        PUSH [tag217]		if (_newCurator)...
        JUMPI			if (_newCurator)...
        DUP1			p
        PUSH 8		p.splitData
        ADD			p.splitData
        PUSH 0		p.splitData
        POP			p.splitData
        DUP1			p.splitData.length++
        SLOAD			p.splitData.length++
        DUP1			p.splitData.length++
        SWAP2			p.splitData.length++
        SWAP1			p.splitData.length++
        PUSH 1		p.splitData.length++
        ADD			p.splitData.length++
        SWAP1			p.splitData.length++
        SWAP1			p.splitData.length++
        DUP2			p.splitData.length++
        SLOAD			p.splitData.length++
        DUP2			p.splitData.length++
        DUP4			p.splitData.length++
        SSTORE			p.splitData.length++
        DUP2			p.splitData.length++
        DUP2			p.splitData.length++
        ISZERO			p.splitData.length++
        GT			p.splitData.length++
        PUSH [tag218]		p.splitData.length++
        JUMPI			p.splitData.length++
        PUSH 4		p.splitData.length++
        MUL			p.splitData.length++
        DUP2			p.splitData.length++
        PUSH 4		p.splitData.length++
        MUL			p.splitData.length++
        DUP4			p.splitData.length++
        PUSH 0		p.splitData.length++
        MSTORE			p.splitData.length++
        PUSH 20		p.splitData.length++
        PUSH 0		p.splitData.length++
        SHA3			p.splitData.length++
        SWAP2			p.splitData.length++
        DUP3			p.splitData.length++
        ADD			p.splitData.length++
        SWAP2			p.splitData.length++
        ADD			p.splitData.length++
        PUSH [tag219]		p.splitData.length++
        SWAP2			p.splitData.length++
        SWAP1			p.splitData.length++
        PUSH [tag220]		p.splitData.length++
        JUMP			p.splitData.length++
      tag220: 
        JUMPDEST		p.splitData.length++
        DUP1			p.splitData.length++
        DUP3			p.splitData.length++
        GT			p.splitData.length++
        ISZERO			p.splitData.length++
        PUSH [tag221]		p.splitData.length++
        JUMPI			p.splitData.length++
        PUSH 0		p.splitData.length++
        PUSH 0		p.splitData.length++
        DUP3			p.splitData.length++
        ADD			p.splitData.length++
        PUSH 0		p.splitData.length++
        POP			p.splitData.length++
        PUSH 0		p.splitData.length++
        SWAP1			p.splitData.length++
        SSTORE			p.splitData.length++
        PUSH 1		p.splitData.length++
        DUP3			p.splitData.length++
        ADD			p.splitData.length++
        PUSH 0		p.splitData.length++
        POP			p.splitData.length++
        PUSH 0		p.splitData.length++
        SWAP1			p.splitData.length++
        SSTORE			p.splitData.length++
        PUSH 2		p.splitData.length++
        DUP3			p.splitData.length++
        ADD			p.splitData.length++
        PUSH 0		p.splitData.length++
        POP			p.splitData.length++
        PUSH 0		p.splitData.length++
        SWAP1			p.splitData.length++
        SSTORE			p.splitData.length++
        PUSH 3		p.splitData.length++
        DUP3			p.splitData.length++
        ADD			p.splitData.length++
        PUSH 0		p.splitData.length++
        PUSH 100		p.splitData.length++
        EXP			p.splitData.length++
        DUP2			p.splitData.length++
        SLOAD			p.splitData.length++
        SWAP1			p.splitData.length++
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.splitData.length++
        MUL			p.splitData.length++
        NOT			p.splitData.length++
        AND			p.splitData.length++
        SWAP1			p.splitData.length++
        SSTORE			p.splitData.length++
        POP			p.splitData.length++
        PUSH 1		p.splitData.length++
        ADD			p.splitData.length++
        PUSH [tag220]		p.splitData.length++
        JUMP			p.splitData.length++
      tag221: 
        JUMPDEST		p.splitData.length++
        POP			p.splitData.length++
        SWAP1			p.splitData.length++
        JUMP			p.splitData.length++
      tag219: 
        JUMPDEST		p.splitData.length++
      tag218: 
        JUMPDEST		p.splitData.length++
        POP			p.splitData.length++
        POP			p.splitData.length++
        POP			p.splitData.length++
        POP			p.splitData.length++
      tag217: 
        JUMPDEST		if (_newCurator)...
        CALLER			msg.sender
        DUP2			p
        PUSH D		p.creator
        ADD			p.creator
        PUSH 0		p.creator
        PUSH 100		p.creator = msg.sender
        EXP			p.creator = msg.sender
        DUP2			p.creator = msg.sender
        SLOAD			p.creator = msg.sender
        DUP2			p.creator = msg.sender
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.creator = msg.sender
        MUL			p.creator = msg.sender
        NOT			p.creator = msg.sender
        AND			p.creator = msg.sender
        SWAP1			p.creator = msg.sender
        DUP4			p.creator = msg.sender
        MUL			p.creator = msg.sender
        OR			p.creator = msg.sender
        SWAP1			p.creator = msg.sender
        SSTORE			p.creator = msg.sender
        POP			p.creator = msg.sender
        CALLVALUE			msg.value
        DUP2			p
        PUSH 6		p.proposalDeposit
        ADD			p.proposalDeposit
        PUSH 0		p.proposalDeposit
        POP			p.proposalDeposit = msg.value
        DUP2			p.proposalDeposit = msg.value
        SWAP1			p.proposalDeposit = msg.value
        SSTORE			p.proposalDeposit = msg.value
        POP			p.proposalDeposit = msg.value
        CALLVALUE			msg.value
        PUSH D		sumOfProposalDeposits
        PUSH 0		sumOfProposalDeposits
        DUP3			sumOfProposalDeposits += msg.value
        DUP3			sumOfProposalDeposits += msg.value
        DUP3			sumOfProposalDeposits += msg.value
        POP			sumOfProposalDeposits += msg.value
        SLOAD			sumOfProposalDeposits += msg.value
        ADD			sumOfProposalDeposits += msg.value
        SWAP3			sumOfProposalDeposits += msg.value
        POP			sumOfProposalDeposits += msg.value
        POP			sumOfProposalDeposits += msg.value
        DUP2			sumOfProposalDeposits += msg.value
        SWAP1			sumOfProposalDeposits += msg.value
        SSTORE			sumOfProposalDeposits += msg.value
        POP			sumOfProposalDeposits += msg.value
        DUP2			_proposalID
        PUSH 5790DE2C279E58269B93B12828F56FD5F2BC8AD15E61CE08572585C81A38756F		ProposalAdded(...
        DUP10			_recipient
        DUP10			_amount
        DUP7			_newCurator
        DUP11			_description
        PUSH 40		ProposalAdded(...
        MLOAD			ProposalAdded(...
        DUP1			ProposalAdded(...
        DUP6			ProposalAdded(...
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		ProposalAdded(...
        AND			ProposalAdded(...
        DUP2			ProposalAdded(...
        MSTORE			ProposalAdded(...
        PUSH 20		ProposalAdded(...
        ADD			ProposalAdded(...
        DUP5			ProposalAdded(...
        DUP2			ProposalAdded(...
        MSTORE			ProposalAdded(...
        PUSH 20		ProposalAdded(...
        ADD			ProposalAdded(...
        DUP4			ProposalAdded(...
        DUP2			ProposalAdded(...
        MSTORE			ProposalAdded(...
        PUSH 20		ProposalAdded(...
        ADD			ProposalAdded(...
        DUP1			ProposalAdded(...
        PUSH 20		ProposalAdded(...
        ADD			ProposalAdded(...
        DUP3			ProposalAdded(...
        DUP2			ProposalAdded(...
        SUB			ProposalAdded(...
        DUP3			ProposalAdded(...
        MSTORE			ProposalAdded(...
        DUP4			ProposalAdded(...
        DUP2			ProposalAdded(...
        DUP2			ProposalAdded(...
        MLOAD			ProposalAdded(...
        DUP2			ProposalAdded(...
        MSTORE			ProposalAdded(...
        PUSH 20		ProposalAdded(...
        ADD			ProposalAdded(...
        SWAP2			ProposalAdded(...
        POP			ProposalAdded(...
        DUP1			ProposalAdded(...
        MLOAD			ProposalAdded(...
        SWAP1			ProposalAdded(...
        PUSH 20		ProposalAdded(...
        ADD			ProposalAdded(...
        SWAP1			ProposalAdded(...
        DUP1			ProposalAdded(...
        DUP4			ProposalAdded(...
        DUP4			ProposalAdded(...
        DUP3			ProposalAdded(...
        SWAP1			ProposalAdded(...
        PUSH 0		ProposalAdded(...
        PUSH 4		ProposalAdded(...
        PUSH 20		ProposalAdded(...
        DUP5			ProposalAdded(...
        PUSH 1F		ProposalAdded(...
        ADD			ProposalAdded(...
        DIV			ProposalAdded(...
        PUSH F		ProposalAdded(...
        MUL			ProposalAdded(...
        PUSH 3		ProposalAdded(...
        ADD			ProposalAdded(...
        CALL			ProposalAdded(...
        POP			ProposalAdded(...
        SWAP1			ProposalAdded(...
        POP			ProposalAdded(...
        SWAP1			ProposalAdded(...
        DUP2			ProposalAdded(...
        ADD			ProposalAdded(...
        SWAP1			ProposalAdded(...
        PUSH 1F		ProposalAdded(...
        AND			ProposalAdded(...
        DUP1			ProposalAdded(...
        ISZERO			ProposalAdded(...
        PUSH [tag222]		ProposalAdded(...
        JUMPI			ProposalAdded(...
        DUP1			ProposalAdded(...
        DUP3			ProposalAdded(...
        SUB			ProposalAdded(...
        DUP1			ProposalAdded(...
        MLOAD			ProposalAdded(...
        PUSH 1		ProposalAdded(...
        DUP4			ProposalAdded(...
        PUSH 20		ProposalAdded(...
        SUB			ProposalAdded(...
        PUSH 100		ProposalAdded(...
        EXP			ProposalAdded(...
        SUB			ProposalAdded(...
        NOT			ProposalAdded(...
        AND			ProposalAdded(...
        DUP2			ProposalAdded(...
        MSTORE			ProposalAdded(...
        PUSH 20		ProposalAdded(...
        ADD			ProposalAdded(...
        SWAP2			ProposalAdded(...
        POP			ProposalAdded(...
      tag222: 
        JUMPDEST		ProposalAdded(...
        POP			ProposalAdded(...
        SWAP6			ProposalAdded(...
        POP			ProposalAdded(...
        POP			ProposalAdded(...
        POP			ProposalAdded(...
        POP			ProposalAdded(...
        POP			ProposalAdded(...
        POP			ProposalAdded(...
        PUSH 40		ProposalAdded(...
        MLOAD			ProposalAdded(...
        DUP1			ProposalAdded(...
        SWAP2			ProposalAdded(...
        SUB			ProposalAdded(...
        SWAP1			ProposalAdded(...
        LOG2			ProposalAdded(...
      tag174: 
        JUMPDEST		function newProposal(...
        POP			function newProposal(...
        SWAP7			function newProposal(...
        SWAP6			function newProposal(...
        POP			function newProposal(...
        POP			function newProposal(...
        POP			function newProposal(...
        POP			function newProposal(...
        POP			function newProposal(...
        POP			function newProposal(...
        JUMP	[out]		function newProposal(...
      tag148: 
        JUMPDEST		function checkProposalCode(...
        PUSH 0		bool _codeChecksOut
        PUSH 0		Proposal p
        PUSH 0		0
        CALLVALUE			msg.value
        GT			msg.value > 0
        ISZERO			if (msg.value > 0) throw
        PUSH [tag224]		if (msg.value > 0) throw
        JUMPI			if (msg.value > 0) throw
        PUSH [ErrorTag]		throw
        JUMP			throw
      tag224: 
        JUMPDEST		if (msg.value > 0) throw
        PUSH 0		proposals
        PUSH 0		proposals
        POP			proposals
        DUP7			_proposalID
        DUP2			proposals[_proposalID]
        SLOAD			proposals[_proposalID]
        DUP2			proposals[_proposalID]
        LT			proposals[_proposalID]
        ISZERO			proposals[_proposalID]
        PUSH [ErrorTag]		proposals[_proposalID]
        JUMPI			proposals[_proposalID]
        SWAP1			proposals[_proposalID]
        PUSH 0		proposals[_proposalID]
        MSTORE			proposals[_proposalID]
        PUSH 20		proposals[_proposalID]
        PUSH 0		proposals[_proposalID]
        SHA3			proposals[_proposalID]
        SWAP1			proposals[_proposalID]
        PUSH E		proposals[_proposalID]
        MUL			proposals[_proposalID]
        ADD			proposals[_proposalID]
        PUSH 0		proposals[_proposalID]
      tag225: 
        JUMPDEST		proposals[_proposalID]
        POP			proposals[_proposalID]
        SWAP1			Proposal p = proposals[_proposalID]
        POP			Proposal p = proposals[_proposalID]
        DUP5			_recipient
        DUP5			_amount
        DUP5			_transactionData
        PUSH 40		sha3(_recipient, _amount, _transactionData)
        MLOAD			sha3(_recipient, _amount, _transactionData)
        DUP1			sha3(_recipient, _amount, _transactionData)
        DUP5			sha3(_recipient, _amount, _transactionData)
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		sha3(_recipient, _amount, _transactionData)
        AND			sha3(_recipient, _amount, _transactionData)
        PUSH 1000000000000000000000000		sha3(_recipient, _amount, _transactionData)
        MUL			sha3(_recipient, _amount, _transactionData)
        DUP2			sha3(_recipient, _amount, _transactionData)
        MSTORE			sha3(_recipient, _amount, _transactionData)
        PUSH 14		sha3(_recipient, _amount, _transactionData)
        ADD			sha3(_recipient, _amount, _transactionData)
        DUP4			sha3(_recipient, _amount, _transactionData)
        DUP2			sha3(_recipient, _amount, _transactionData)
        MSTORE			sha3(_recipient, _amount, _transactionData)
        PUSH 20		sha3(_recipient, _amount, _transactionData)
        ADD			sha3(_recipient, _amount, _transactionData)
        DUP3			sha3(_recipient, _amount, _transactionData)
        DUP1			sha3(_recipient, _amount, _transactionData)
        MLOAD			sha3(_recipient, _amount, _transactionData)
        SWAP1			sha3(_recipient, _amount, _transactionData)
        PUSH 20		sha3(_recipient, _amount, _transactionData)
        ADD			sha3(_recipient, _amount, _transactionData)
        SWAP1			sha3(_recipient, _amount, _transactionData)
        DUP1			sha3(_recipient, _amount, _transactionData)
        DUP4			sha3(_recipient, _amount, _transactionData)
        DUP4			sha3(_recipient, _amount, _transactionData)
        DUP3			sha3(_recipient, _amount, _transactionData)
        SWAP1			sha3(_recipient, _amount, _transactionData)
        PUSH 0		sha3(_recipient, _amount, _transactionData)
        PUSH 4		sha3(_recipient, _amount, _transactionData)
        PUSH 20		sha3(_recipient, _amount, _transactionData)
        DUP5			sha3(_recipient, _amount, _transactionData)
        PUSH 1F		sha3(_recipient, _amount, _transactionData)
        ADD			sha3(_recipient, _amount, _transactionData)
        DIV			sha3(_recipient, _amount, _transactionData)
        PUSH F		sha3(_recipient, _amount, _transactionData)
        MUL			sha3(_recipient, _amount, _transactionData)
        PUSH 3		sha3(_recipient, _amount, _transactionData)
        ADD			sha3(_recipient, _amount, _transactionData)
        CALL			sha3(_recipient, _amount, _transactionData)
        POP			sha3(_recipient, _amount, _transactionData)
        SWAP1			sha3(_recipient, _amount, _transactionData)
        POP			sha3(_recipient, _amount, _transactionData)
        ADD			sha3(_recipient, _amount, _transactionData)
        SWAP4			sha3(_recipient, _amount, _transactionData)
        POP			sha3(_recipient, _amount, _transactionData)
        POP			sha3(_recipient, _amount, _transactionData)
        POP			sha3(_recipient, _amount, _transactionData)
        POP			sha3(_recipient, _amount, _transactionData)
        PUSH 40		sha3(_recipient, _amount, _transactionData)
        MLOAD			sha3(_recipient, _amount, _transactionData)
        DUP1			sha3(_recipient, _amount, _transactionData)
        SWAP2			sha3(_recipient, _amount, _transactionData)
        SUB			sha3(_recipient, _amount, _transactionData)
        SWAP1			sha3(_recipient, _amount, _transactionData)
        SHA3			sha3(_recipient, _amount, _transactionData)
        DUP2			p
        PUSH 5		p.proposalHash
        ADD			p.proposalHash
        PUSH 0		p.proposalHash
        POP			p.proposalHash
        SLOAD			p.proposalHash
        EQ			p.proposalHash == sha3(_recipient, _amount, _transactionData)
        SWAP2			return p.proposalHash == sha3(_recipient, _amount, _transactionData)
        POP			return p.proposalHash == sha3(_recipient, _amount, _transactionData)
        PUSH [tag223]		return p.proposalHash == sha3(_recipient, _amount, _transactionData)
        JUMP			return p.proposalHash == sha3(_recipient, _amount, _transactionData)
      tag223: 
        JUMPDEST		function checkProposalCode(...
        POP			function checkProposalCode(...
        SWAP5			function checkProposalCode(...
        SWAP4			function checkProposalCode(...
        POP			function checkProposalCode(...
        POP			function checkProposalCode(...
        POP			function checkProposalCode(...
        POP			function checkProposalCode(...
        JUMP	[out]		function checkProposalCode(...
      tag132: 
        JUMPDEST		function vote(...
        PUSH 0		uint _voteID
        PUSH 0		Proposal p
        PUSH 0		0
        PUSH [tag227]		balanceOf(msg.sender)
        CALLER			msg.sender
        PUSH [tag104]		balanceOf
        JUMP	[in]		balanceOf(msg.sender)
      tag227: 
        JUMPDEST		balanceOf(msg.sender)
        EQ			balanceOf(msg.sender) == 0
        ISZERO			if (balanceOf(msg.sender) == 0) throw
        PUSH [tag228]		if (balanceOf(msg.sender) == 0) throw
        JUMPI			if (balanceOf(msg.sender) == 0) throw
        PUSH [ErrorTag]		throw
        JUMP			throw
      tag228: 
        JUMPDEST		if (balanceOf(msg.sender) == 0) throw
        PUSH 0		0
        CALLVALUE			msg.value
        GT			msg.value > 0
        ISZERO			if (msg.value > 0) throw
        PUSH [tag229]		if (msg.value > 0) throw
        JUMPI			if (msg.value > 0) throw
        PUSH [ErrorTag]		throw
        JUMP			throw
      tag229: 
        JUMPDEST		if (msg.value > 0) throw
        PUSH 0		proposals
        PUSH 0		proposals
        POP			proposals
        DUP5			_proposalID
        DUP2			proposals[_proposalID]
        SLOAD			proposals[_proposalID]
        DUP2			proposals[_proposalID]
        LT			proposals[_proposalID]
        ISZERO			proposals[_proposalID]
        PUSH [ErrorTag]		proposals[_proposalID]
        JUMPI			proposals[_proposalID]
        SWAP1			proposals[_proposalID]
        PUSH 0		proposals[_proposalID]
        MSTORE			proposals[_proposalID]
        PUSH 20		proposals[_proposalID]
        PUSH 0		proposals[_proposalID]
        SHA3			proposals[_proposalID]
        SWAP1			proposals[_proposalID]
        PUSH E		proposals[_proposalID]
        MUL			proposals[_proposalID]
        ADD			proposals[_proposalID]
        PUSH 0		proposals[_proposalID]
      tag230: 
        JUMPDEST		proposals[_proposalID]
        POP			proposals[_proposalID]
        SWAP1			Proposal p = proposals[_proposalID]
        POP			Proposal p = proposals[_proposalID]
        DUP1			p
        PUSH B		p.votedYes
        ADD			p.votedYes
        PUSH 0		p.votedYes
        POP			p.votedYes
        PUSH 0		p.votedYes[msg.sender]
        CALLER			msg.sender
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.votedYes[msg.sender]
        AND			p.votedYes[msg.sender]
        DUP2			p.votedYes[msg.sender]
        MSTORE			p.votedYes[msg.sender]
        PUSH 20		p.votedYes[msg.sender]
        ADD			p.votedYes[msg.sender]
        SWAP1			p.votedYes[msg.sender]
        DUP2			p.votedYes[msg.sender]
        MSTORE			p.votedYes[msg.sender]
        PUSH 20		p.votedYes[msg.sender]
        ADD			p.votedYes[msg.sender]
        PUSH 0		p.votedYes[msg.sender]
        SHA3			p.votedYes[msg.sender]
        PUSH 0		p.votedYes[msg.sender]
        SWAP1			p.votedYes[msg.sender]
        SLOAD			p.votedYes[msg.sender]
        SWAP1			p.votedYes[msg.sender]
        PUSH 100		p.votedYes[msg.sender]
        EXP			p.votedYes[msg.sender]
        SWAP1			p.votedYes[msg.sender]
        DIV			p.votedYes[msg.sender]
        PUSH FF		p.votedYes[msg.sender]
        AND			p.votedYes[msg.sender]
        DUP1			p.votedYes[msg.sender]...
        PUSH [tag231]		p.votedYes[msg.sender]...
        JUMPI			p.votedYes[msg.sender]...
        POP			p.votedYes[msg.sender]...
        DUP1			p
        PUSH C		p.votedNo
        ADD			p.votedNo
        PUSH 0		p.votedNo
        POP			p.votedNo
        PUSH 0		p.votedNo[msg.sender]
        CALLER			msg.sender
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.votedNo[msg.sender]
        AND			p.votedNo[msg.sender]
        DUP2			p.votedNo[msg.sender]
        MSTORE			p.votedNo[msg.sender]
        PUSH 20		p.votedNo[msg.sender]
        ADD			p.votedNo[msg.sender]
        SWAP1			p.votedNo[msg.sender]
        DUP2			p.votedNo[msg.sender]
        MSTORE			p.votedNo[msg.sender]
        PUSH 20		p.votedNo[msg.sender]
        ADD			p.votedNo[msg.sender]
        PUSH 0		p.votedNo[msg.sender]
        SHA3			p.votedNo[msg.sender]
        PUSH 0		p.votedNo[msg.sender]
        SWAP1			p.votedNo[msg.sender]
        SLOAD			p.votedNo[msg.sender]
        SWAP1			p.votedNo[msg.sender]
        PUSH 100		p.votedNo[msg.sender]
        EXP			p.votedNo[msg.sender]
        SWAP1			p.votedNo[msg.sender]
        DIV			p.votedNo[msg.sender]
        PUSH FF		p.votedNo[msg.sender]
        AND			p.votedNo[msg.sender]
      tag231: 
        JUMPDEST		p.votedYes[msg.sender]...
        DUP1			p.votedYes[msg.sender]...
        PUSH [tag232]		p.votedYes[msg.sender]...
        JUMPI			p.votedYes[msg.sender]...
        POP			p.votedYes[msg.sender]...
        DUP1			p
        PUSH 3		p.votingDeadline
        ADD			p.votingDeadline
        PUSH 0		p.votingDeadline
        POP			p.votingDeadline
        SLOAD			p.votingDeadline
        TIMESTAMP			now
        LT			now >= p.votingDeadline
        ISZERO			now >= p.votingDeadline
      tag232: 
        JUMPDEST		p.votedYes[msg.sender]...
        ISZERO			if (p.votedYes[msg.sender]...
        PUSH [tag233]		if (p.votedYes[msg.sender]...
        JUMPI			if (p.votedYes[msg.sender]...
        PUSH [ErrorTag]		throw
        JUMP			throw
      tag233: 
        JUMPDEST		if (p.votedYes[msg.sender]...
        DUP3			_supportsProposal
        ISZERO			if (_supportsProposal) {...
        PUSH [tag234]		if (_supportsProposal) {...
        JUMPI			if (_supportsProposal) {...
        PUSH 14		balances
        PUSH 0		balances
        POP			balances
        PUSH 0		balances[msg.sender]
        CALLER			msg.sender
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		balances[msg.sender]
        AND			balances[msg.sender]
        DUP2			balances[msg.sender]
        MSTORE			balances[msg.sender]
        PUSH 20		balances[msg.sender]
        ADD			balances[msg.sender]
        SWAP1			balances[msg.sender]
        DUP2			balances[msg.sender]
        MSTORE			balances[msg.sender]
        PUSH 20		balances[msg.sender]
        ADD			balances[msg.sender]
        PUSH 0		balances[msg.sender]
        SHA3			balances[msg.sender]
        PUSH 0		balances[msg.sender]
        POP			balances[msg.sender]
        SLOAD			balances[msg.sender]
        DUP2			p
        PUSH 9		p.yea
        ADD			p.yea
        PUSH 0		p.yea
        DUP3			p.yea += balances[msg.sender]
        DUP3			p.yea += balances[msg.sender]
        DUP3			p.yea += balances[msg.sender]
        POP			p.yea += balances[msg.sender]
        SLOAD			p.yea += balances[msg.sender]
        ADD			p.yea += balances[msg.sender]
        SWAP3			p.yea += balances[msg.sender]
        POP			p.yea += balances[msg.sender]
        POP			p.yea += balances[msg.sender]
        DUP2			p.yea += balances[msg.sender]
        SWAP1			p.yea += balances[msg.sender]
        SSTORE			p.yea += balances[msg.sender]
        POP			p.yea += balances[msg.sender]
        PUSH 1		true
        DUP2			p
        PUSH B		p.votedYes
        ADD			p.votedYes
        PUSH 0		p.votedYes
        POP			p.votedYes
        PUSH 0		p.votedYes[msg.sender]
        CALLER			msg.sender
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.votedYes[msg.sender]
        AND			p.votedYes[msg.sender]
        DUP2			p.votedYes[msg.sender]
        MSTORE			p.votedYes[msg.sender]
        PUSH 20		p.votedYes[msg.sender]
        ADD			p.votedYes[msg.sender]
        SWAP1			p.votedYes[msg.sender]
        DUP2			p.votedYes[msg.sender]
        MSTORE			p.votedYes[msg.sender]
        PUSH 20		p.votedYes[msg.sender]
        ADD			p.votedYes[msg.sender]
        PUSH 0		p.votedYes[msg.sender]
        SHA3			p.votedYes[msg.sender]
        PUSH 0		p.votedYes[msg.sender]
        PUSH 100		p.votedYes[msg.sender] = true
        EXP			p.votedYes[msg.sender] = true
        DUP2			p.votedYes[msg.sender] = true
        SLOAD			p.votedYes[msg.sender] = true
        DUP2			p.votedYes[msg.sender] = true
        PUSH FF		p.votedYes[msg.sender] = true
        MUL			p.votedYes[msg.sender] = true
        NOT			p.votedYes[msg.sender] = true
        AND			p.votedYes[msg.sender] = true
        SWAP1			p.votedYes[msg.sender] = true
        DUP4			p.votedYes[msg.sender] = true
        MUL			p.votedYes[msg.sender] = true
        OR			p.votedYes[msg.sender] = true
        SWAP1			p.votedYes[msg.sender] = true
        SSTORE			p.votedYes[msg.sender] = true
        POP			p.votedYes[msg.sender] = true
        PUSH [tag235]		if (_supportsProposal) {...
        JUMP			if (_supportsProposal) {...
      tag234: 
        JUMPDEST		if (_supportsProposal) {...
        PUSH 14		balances
        PUSH 0		balances
        POP			balances
        PUSH 0		balances[msg.sender]
        CALLER			msg.sender
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		balances[msg.sender]
        AND			balances[msg.sender]
        DUP2			balances[msg.sender]
        MSTORE			balances[msg.sender]
        PUSH 20		balances[msg.sender]
        ADD			balances[msg.sender]
        SWAP1			balances[msg.sender]
        DUP2			balances[msg.sender]
        MSTORE			balances[msg.sender]
        PUSH 20		balances[msg.sender]
        ADD			balances[msg.sender]
        PUSH 0		balances[msg.sender]
        SHA3			balances[msg.sender]
        PUSH 0		balances[msg.sender]
        POP			balances[msg.sender]
        SLOAD			balances[msg.sender]
        DUP2			p
        PUSH A		p.nay
        ADD			p.nay
        PUSH 0		p.nay
        DUP3			p.nay += balances[msg.sender]
        DUP3			p.nay += balances[msg.sender]
        DUP3			p.nay += balances[msg.sender]
        POP			p.nay += balances[msg.sender]
        SLOAD			p.nay += balances[msg.sender]
        ADD			p.nay += balances[msg.sender]
        SWAP3			p.nay += balances[msg.sender]
        POP			p.nay += balances[msg.sender]
        POP			p.nay += balances[msg.sender]
        DUP2			p.nay += balances[msg.sender]
        SWAP1			p.nay += balances[msg.sender]
        SSTORE			p.nay += balances[msg.sender]
        POP			p.nay += balances[msg.sender]
        PUSH 1		true
        DUP2			p
        PUSH C		p.votedNo
        ADD			p.votedNo
        PUSH 0		p.votedNo
        POP			p.votedNo
        PUSH 0		p.votedNo[msg.sender]
        CALLER			msg.sender
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.votedNo[msg.sender]
        AND			p.votedNo[msg.sender]
        DUP2			p.votedNo[msg.sender]
        MSTORE			p.votedNo[msg.sender]
        PUSH 20		p.votedNo[msg.sender]
        ADD			p.votedNo[msg.sender]
        SWAP1			p.votedNo[msg.sender]
        DUP2			p.votedNo[msg.sender]
        MSTORE			p.votedNo[msg.sender]
        PUSH 20		p.votedNo[msg.sender]
        ADD			p.votedNo[msg.sender]
        PUSH 0		p.votedNo[msg.sender]
        SHA3			p.votedNo[msg.sender]
        PUSH 0		p.votedNo[msg.sender]
        PUSH 100		p.votedNo[msg.sender] = true
        EXP			p.votedNo[msg.sender] = true
        DUP2			p.votedNo[msg.sender] = true
        SLOAD			p.votedNo[msg.sender] = true
        DUP2			p.votedNo[msg.sender] = true
        PUSH FF		p.votedNo[msg.sender] = true
        MUL			p.votedNo[msg.sender] = true
        NOT			p.votedNo[msg.sender] = true
        AND			p.votedNo[msg.sender] = true
        SWAP1			p.votedNo[msg.sender] = true
        DUP4			p.votedNo[msg.sender] = true
        MUL			p.votedNo[msg.sender] = true
        OR			p.votedNo[msg.sender] = true
        SWAP1			p.votedNo[msg.sender] = true
        SSTORE			p.votedNo[msg.sender] = true
        POP			p.votedNo[msg.sender] = true
      tag235: 
        JUMPDEST		if (_supportsProposal) {...
        PUSH 0		0
        PUSH B		blocked
        PUSH 0		blocked
        POP			blocked
        PUSH 0		blocked[msg.sender]
        CALLER			msg.sender
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		blocked[msg.sender]
        AND			blocked[msg.sender]
        DUP2			blocked[msg.sender]
        MSTORE			blocked[msg.sender]
        PUSH 20		blocked[msg.sender]
        ADD			blocked[msg.sender]
        SWAP1			blocked[msg.sender]
        DUP2			blocked[msg.sender]
        MSTORE			blocked[msg.sender]
        PUSH 20		blocked[msg.sender]
        ADD			blocked[msg.sender]
        PUSH 0		blocked[msg.sender]
        SHA3			blocked[msg.sender]
        PUSH 0		blocked[msg.sender]
        POP			blocked[msg.sender]
        SLOAD			blocked[msg.sender]
        EQ			blocked[msg.sender] == 0
        ISZERO			if (blocked[msg.sender] == 0) {...
        PUSH [tag236]		if (blocked[msg.sender] == 0) {...
        JUMPI			if (blocked[msg.sender] == 0) {...
        DUP4			_proposalID
        PUSH B		blocked
        PUSH 0		blocked
        POP			blocked
        PUSH 0		blocked[msg.sender]
        CALLER			msg.sender
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		blocked[msg.sender]
        AND			blocked[msg.sender]
        DUP2			blocked[msg.sender]
        MSTORE			blocked[msg.sender]
        PUSH 20		blocked[msg.sender]
        ADD			blocked[msg.sender]
        SWAP1			blocked[msg.sender]
        DUP2			blocked[msg.sender]
        MSTORE			blocked[msg.sender]
        PUSH 20		blocked[msg.sender]
        ADD			blocked[msg.sender]
        PUSH 0		blocked[msg.sender]
        SHA3			blocked[msg.sender]
        PUSH 0		blocked[msg.sender]
        POP			blocked[msg.sender] = _proposalID
        DUP2			blocked[msg.sender] = _proposalID
        SWAP1			blocked[msg.sender] = _proposalID
        SSTORE			blocked[msg.sender] = _proposalID
        POP			blocked[msg.sender] = _proposalID
        PUSH [tag237]		if (blocked[msg.sender] == 0) {...
        JUMP			if (blocked[msg.sender] == 0) {...
      tag236: 
        JUMPDEST		if (blocked[msg.sender] == 0) {...
        PUSH 0		proposals
        PUSH 0		proposals
        POP			proposals
        PUSH B		blocked
        PUSH 0		blocked
        POP			blocked
        PUSH 0		blocked[msg.sender]
        CALLER			msg.sender
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		blocked[msg.sender]
        AND			blocked[msg.sender]
        DUP2			blocked[msg.sender]
        MSTORE			blocked[msg.sender]
        PUSH 20		blocked[msg.sender]
        ADD			blocked[msg.sender]
        SWAP1			blocked[msg.sender]
        DUP2			blocked[msg.sender]
        MSTORE			blocked[msg.sender]
        PUSH 20		blocked[msg.sender]
        ADD			blocked[msg.sender]
        PUSH 0		blocked[msg.sender]
        SHA3			blocked[msg.sender]
        PUSH 0		blocked[msg.sender]
        POP			blocked[msg.sender]
        SLOAD			blocked[msg.sender]
        DUP2			proposals[blocked[msg.sender]]
        SLOAD			proposals[blocked[msg.sender]]
        DUP2			proposals[blocked[msg.sender]]
        LT			proposals[blocked[msg.sender]]
        ISZERO			proposals[blocked[msg.sender]]
        PUSH [ErrorTag]		proposals[blocked[msg.sender]]
        JUMPI			proposals[blocked[msg.sender]]
        SWAP1			proposals[blocked[msg.sender]]
        PUSH 0		proposals[blocked[msg.sender]]
        MSTORE			proposals[blocked[msg.sender]]
        PUSH 20		proposals[blocked[msg.sender]]
        PUSH 0		proposals[blocked[msg.sender]]
        SHA3			proposals[blocked[msg.sender]]
        SWAP1			proposals[blocked[msg.sender]]
        PUSH E		proposals[blocked[msg.sender]]
        MUL			proposals[blocked[msg.sender]]
        ADD			proposals[blocked[msg.sender]]
        PUSH 0		proposals[blocked[msg.sender]]
      tag238: 
        JUMPDEST		proposals[blocked[msg.sender]]
        POP			proposals[blocked[msg.sender]]
        PUSH 3		proposals[blocked[msg.sender]].votingDeadline
        ADD			proposals[blocked[msg.sender]].votingDeadline
        PUSH 0		proposals[blocked[msg.sender]].votingDeadline
        POP			proposals[blocked[msg.sender]].votingDeadline
        SLOAD			proposals[blocked[msg.sender]].votingDeadline
        DUP2			p
        PUSH 3		p.votingDeadline
        ADD			p.votingDeadline
        PUSH 0		p.votingDeadline
        POP			p.votingDeadline
        SLOAD			p.votingDeadline
        GT			p.votingDeadline > proposals[blocked[msg.sender]].votingDeadline
        ISZERO			if (p.votingDeadline > proposals[blocked[msg.sender]].votingDeadline) {...
        PUSH [tag239]		if (p.votingDeadline > proposals[blocked[msg.sender]].votingDeadline) {...
        JUMPI			if (p.votingDeadline > proposals[blocked[msg.sender]].votingDeadline) {...
        DUP4			_proposalID
        PUSH B		blocked
        PUSH 0		blocked
        POP			blocked
        PUSH 0		blocked[msg.sender]
        CALLER			msg.sender
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		blocked[msg.sender]
        AND			blocked[msg.sender]
        DUP2			blocked[msg.sender]
        MSTORE			blocked[msg.sender]
        PUSH 20		blocked[msg.sender]
        ADD			blocked[msg.sender]
        SWAP1			blocked[msg.sender]
        DUP2			blocked[msg.sender]
        MSTORE			blocked[msg.sender]
        PUSH 20		blocked[msg.sender]
        ADD			blocked[msg.sender]
        PUSH 0		blocked[msg.sender]
        SHA3			blocked[msg.sender]
        PUSH 0		blocked[msg.sender]
        POP			blocked[msg.sender] = _proposalID
        DUP2			blocked[msg.sender] = _proposalID
        SWAP1			blocked[msg.sender] = _proposalID
        SSTORE			blocked[msg.sender] = _proposalID
        POP			blocked[msg.sender] = _proposalID
      tag239: 
        JUMPDEST		if (p.votingDeadline > proposals[blocked[msg.sender]].votingDeadline) {...
      tag237: 
        JUMPDEST		if (blocked[msg.sender] == 0) {...
        CALLER			msg.sender
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		Voted(_proposalID, _supportsProposal, msg.sender)
        AND			Voted(_proposalID, _supportsProposal, msg.sender)
        DUP5			_proposalID
        PUSH 86ABFCE99B7DD908BEC0169288797F85049EC73CBE046ED9DE818FAB3A497AE0		Voted(_proposalID, _supportsProposal, msg.sender)
        DUP6			_supportsProposal
        PUSH 40		Voted(_proposalID, _supportsProposal, msg.sender)
        MLOAD			Voted(_proposalID, _supportsProposal, msg.sender)
        DUP1			Voted(_proposalID, _supportsProposal, msg.sender)
        DUP3			Voted(_proposalID, _supportsProposal, msg.sender)
        DUP2			Voted(_proposalID, _supportsProposal, msg.sender)
        MSTORE			Voted(_proposalID, _supportsProposal, msg.sender)
        PUSH 20		Voted(_proposalID, _supportsProposal, msg.sender)
        ADD			Voted(_proposalID, _supportsProposal, msg.sender)
        SWAP2			Voted(_proposalID, _supportsProposal, msg.sender)
        POP			Voted(_proposalID, _supportsProposal, msg.sender)
        POP			Voted(_proposalID, _supportsProposal, msg.sender)
        PUSH 40		Voted(_proposalID, _supportsProposal, msg.sender)
        MLOAD			Voted(_proposalID, _supportsProposal, msg.sender)
        DUP1			Voted(_proposalID, _supportsProposal, msg.sender)
        SWAP2			Voted(_proposalID, _supportsProposal, msg.sender)
        SUB			Voted(_proposalID, _supportsProposal, msg.sender)
        SWAP1			Voted(_proposalID, _supportsProposal, msg.sender)
        LOG3			Voted(_proposalID, _supportsProposal, msg.sender)
      tag226: 
        JUMPDEST		function vote(...
        POP			function vote(...
        SWAP3			function vote(...
        SWAP2			function vote(...
        POP			function vote(...
        POP			function vote(...
        JUMP	[out]		function vote(...
      tag78: 
        JUMPDEST		function executeProposal(...
        PUSH 0		bool _success
        PUSH 0		Proposal p
        PUSH 0		uint waitPeriod
        PUSH 0		bool proposalCheck
        PUSH 0		uint quorum
        PUSH 0		0
        CALLVALUE			msg.value
        GT			msg.value > 0
        ISZERO			if (msg.value > 0) throw
        PUSH [tag241]		if (msg.value > 0) throw
        JUMPI			if (msg.value > 0) throw
        PUSH [ErrorTag]		throw
        JUMP			throw
      tag241: 
        JUMPDEST		if (msg.value > 0) throw
        PUSH 0		proposals
        PUSH 0		proposals
        POP			proposals
        DUP8			_proposalID
        DUP2			proposals[_proposalID]
        SLOAD			proposals[_proposalID]
        DUP2			proposals[_proposalID]
        LT			proposals[_proposalID]
        ISZERO			proposals[_proposalID]
        PUSH [ErrorTag]		proposals[_proposalID]
        JUMPI			proposals[_proposalID]
        SWAP1			proposals[_proposalID]
        PUSH 0		proposals[_proposalID]
        MSTORE			proposals[_proposalID]
        PUSH 20		proposals[_proposalID]
        PUSH 0		proposals[_proposalID]
        SHA3			proposals[_proposalID]
        SWAP1			proposals[_proposalID]
        PUSH E		proposals[_proposalID]
        MUL			proposals[_proposalID]
        ADD			proposals[_proposalID]
        PUSH 0		proposals[_proposalID]
      tag242: 
        JUMPDEST		proposals[_proposalID]
        POP			proposals[_proposalID]
        SWAP4			Proposal p = proposals[_proposalID]
        POP			Proposal p = proposals[_proposalID]
        DUP4			p
        PUSH 7		p.newCurator
        ADD			p.newCurator
        PUSH 0		p.newCurator
        SWAP1			p.newCurator
        SLOAD			p.newCurator
        SWAP1			p.newCurator
        PUSH 100		p.newCurator
        EXP			p.newCurator
        SWAP1			p.newCurator
        DIV			p.newCurator
        PUSH FF		p.newCurator
        AND			p.newCurator
        PUSH [tag243]		p.newCurator...
        JUMPI			p.newCurator...
        PUSH D2F00		10 days
        PUSH [tag244]		p.newCurator...
        JUMP			p.newCurator...
      tag243: 
        JUMPDEST		p.newCurator...
        PUSH 239880		27 days
      tag244: 
        JUMPDEST		p.newCurator...
        SWAP3			uint waitPeriod = p.newCurator...
        POP			uint waitPeriod = p.newCurator...
        DUP4			p
        PUSH 4		p.open
        ADD			p.open
        PUSH 0		p.open
        SWAP1			p.open
        SLOAD			p.open
        SWAP1			p.open
        PUSH 100		p.open
        EXP			p.open
        SWAP1			p.open
        DIV			p.open
        PUSH FF		p.open
        AND			p.open
        DUP1			p.open && now > p.votingDeadline + waitPeriod
        ISZERO			p.open && now > p.votingDeadline + waitPeriod
        PUSH [tag245]		p.open && now > p.votingDeadline + waitPeriod
        JUMPI			p.open && now > p.votingDeadline + waitPeriod
        POP			p.open && now > p.votingDeadline + waitPeriod
        DUP3			waitPeriod
        DUP5			p
        PUSH 3		p.votingDeadline
        ADD			p.votingDeadline
        PUSH 0		p.votingDeadline
        POP			p.votingDeadline
        SLOAD			p.votingDeadline
        ADD			p.votingDeadline + waitPeriod
        TIMESTAMP			now
        GT			now > p.votingDeadline + waitPeriod
      tag245: 
        JUMPDEST		p.open && now > p.votingDeadline + waitPeriod
        ISZERO			if (p.open && now > p.votingDeadline + waitPeriod) {...
        PUSH [tag246]		if (p.open && now > p.votingDeadline + waitPeriod) {...
        JUMPI			if (p.open && now > p.votingDeadline + waitPeriod) {...
        PUSH [tag247]		closeProposal(_proposalID)
        DUP8			_proposalID
        PUSH [tag248]		closeProposal
        JUMP	[in]		closeProposal(_proposalID)
      tag247: 
        JUMPDEST		closeProposal(_proposalID)
        PUSH [tag240]		return;
        JUMP			return;
      tag246: 
        JUMPDEST		if (p.open && now > p.votingDeadline + waitPeriod) {...
        DUP4			p
        PUSH 3		p.votingDeadline
        ADD			p.votingDeadline
        PUSH 0		p.votingDeadline
        POP			p.votingDeadline
        SLOAD			p.votingDeadline
        TIMESTAMP			now
        LT			now < p.votingDeadline
        DUP1			now < p.votingDeadline  // has the voting deadline arrived?...
        PUSH [tag249]		now < p.votingDeadline  // has the voting deadline arrived?...
        JUMPI			now < p.votingDeadline  // has the voting deadline arrived?...
        POP			now < p.votingDeadline  // has the voting deadline arrived?...
        DUP4			p
        PUSH 4		p.open
        ADD			p.open
        PUSH 0		p.open
        SWAP1			p.open
        SLOAD			p.open
        SWAP1			p.open
        PUSH 100		p.open
        EXP			p.open
        SWAP1			p.open
        DIV			p.open
        PUSH FF		p.open
        AND			p.open
        ISZERO			!p.open
      tag249: 
        JUMPDEST		now < p.votingDeadline  // has the voting deadline arrived?...
        DUP1			now < p.votingDeadline  // has the voting deadline arrived?...
        PUSH [tag250]		now < p.votingDeadline  // has the voting deadline arrived?...
        JUMPI			now < p.votingDeadline  // has the voting deadline arrived?...
        POP			now < p.votingDeadline  // has the voting deadline arrived?...
        DUP4			p
        PUSH 0		p.recipient
        ADD			p.recipient
        PUSH 0		p.recipient
        SWAP1			p.recipient
        SLOAD			p.recipient
        SWAP1			p.recipient
        PUSH 100		p.recipient
        EXP			p.recipient
        SWAP1			p.recipient
        DIV			p.recipient
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.recipient
        AND			p.recipient
        DUP5			p
        PUSH 1		p.amount
        ADD			p.amount
        PUSH 0		p.amount
        POP			p.amount
        SLOAD			p.amount
        DUP8			_transactionData
        PUSH 40		sha3(p.recipient, p.amount, _transactionData)
        MLOAD			sha3(p.recipient, p.amount, _transactionData)
        DUP1			sha3(p.recipient, p.amount, _transactionData)
        DUP5			sha3(p.recipient, p.amount, _transactionData)
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		sha3(p.recipient, p.amount, _transactionData)
        AND			sha3(p.recipient, p.amount, _transactionData)
        PUSH 1000000000000000000000000		sha3(p.recipient, p.amount, _transactionData)
        MUL			sha3(p.recipient, p.amount, _transactionData)
        DUP2			sha3(p.recipient, p.amount, _transactionData)
        MSTORE			sha3(p.recipient, p.amount, _transactionData)
        PUSH 14		sha3(p.recipient, p.amount, _transactionData)
        ADD			sha3(p.recipient, p.amount, _transactionData)
        DUP4			sha3(p.recipient, p.amount, _transactionData)
        DUP2			sha3(p.recipient, p.amount, _transactionData)
        MSTORE			sha3(p.recipient, p.amount, _transactionData)
        PUSH 20		sha3(p.recipient, p.amount, _transactionData)
        ADD			sha3(p.recipient, p.amount, _transactionData)
        DUP3			sha3(p.recipient, p.amount, _transactionData)
        DUP1			sha3(p.recipient, p.amount, _transactionData)
        MLOAD			sha3(p.recipient, p.amount, _transactionData)
        SWAP1			sha3(p.recipient, p.amount, _transactionData)
        PUSH 20		sha3(p.recipient, p.amount, _transactionData)
        ADD			sha3(p.recipient, p.amount, _transactionData)
        SWAP1			sha3(p.recipient, p.amount, _transactionData)
        DUP1			sha3(p.recipient, p.amount, _transactionData)
        DUP4			sha3(p.recipient, p.amount, _transactionData)
        DUP4			sha3(p.recipient, p.amount, _transactionData)
        DUP3			sha3(p.recipient, p.amount, _transactionData)
        SWAP1			sha3(p.recipient, p.amount, _transactionData)
        PUSH 0		sha3(p.recipient, p.amount, _transactionData)
        PUSH 4		sha3(p.recipient, p.amount, _transactionData)
        PUSH 20		sha3(p.recipient, p.amount, _transactionData)
        DUP5			sha3(p.recipient, p.amount, _transactionData)
        PUSH 1F		sha3(p.recipient, p.amount, _transactionData)
        ADD			sha3(p.recipient, p.amount, _transactionData)
        DIV			sha3(p.recipient, p.amount, _transactionData)
        PUSH F		sha3(p.recipient, p.amount, _transactionData)
        MUL			sha3(p.recipient, p.amount, _transactionData)
        PUSH 3		sha3(p.recipient, p.amount, _transactionData)
        ADD			sha3(p.recipient, p.amount, _transactionData)
        CALL			sha3(p.recipient, p.amount, _transactionData)
        POP			sha3(p.recipient, p.amount, _transactionData)
        SWAP1			sha3(p.recipient, p.amount, _transactionData)
        POP			sha3(p.recipient, p.amount, _transactionData)
        ADD			sha3(p.recipient, p.amount, _transactionData)
        SWAP4			sha3(p.recipient, p.amount, _transactionData)
        POP			sha3(p.recipient, p.amount, _transactionData)
        POP			sha3(p.recipient, p.amount, _transactionData)
        POP			sha3(p.recipient, p.amount, _transactionData)
        POP			sha3(p.recipient, p.amount, _transactionData)
        PUSH 40		sha3(p.recipient, p.amount, _transactionData)
        MLOAD			sha3(p.recipient, p.amount, _transactionData)
        DUP1			sha3(p.recipient, p.amount, _transactionData)
        SWAP2			sha3(p.recipient, p.amount, _transactionData)
        SUB			sha3(p.recipient, p.amount, _transactionData)
        SWAP1			sha3(p.recipient, p.amount, _transactionData)
        SHA3			sha3(p.recipient, p.amount, _transactionData)
        DUP5			p
        PUSH 5		p.proposalHash
        ADD			p.proposalHash
        PUSH 0		p.proposalHash
        POP			p.proposalHash
        SLOAD			p.proposalHash
        EQ			p.proposalHash != sha3(p.recipient, p.amount, _transactionData)
        ISZERO			p.proposalHash != sha3(p.recipient, p.amount, _transactionData)
      tag250: 
        JUMPDEST		now < p.votingDeadline  // has the voting deadline arrived?...
        ISZERO			if (now < p.votingDeadline  // has the voting deadline arrived?...
        PUSH [tag251]		if (now < p.votingDeadline  // has the voting deadline arrived?...
        JUMPI			if (now < p.votingDeadline  // has the voting deadline arrived?...
        PUSH [ErrorTag]		throw
        JUMP			throw
      tag251: 
        JUMPDEST		if (now < p.votingDeadline  // has the voting deadline arrived?...
        PUSH [tag252]		isRecipientAllowed(p.recipient)
        DUP5			p
        PUSH 0		p.recipient
        ADD			p.recipient
        PUSH 0		p.recipient
        SWAP1			p.recipient
        SLOAD			p.recipient
        SWAP1			p.recipient
        PUSH 100		p.recipient
        EXP			p.recipient
        SWAP1			p.recipient
        DIV			p.recipient
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.recipient
        AND			p.recipient
        PUSH [tag186]		isRecipientAllowed
        JUMP	[in]		isRecipientAllowed(p.recipient)
      tag252: 
        JUMPDEST		isRecipientAllowed(p.recipient)
        ISZERO			!isRecipientAllowed(p.recipient)
        ISZERO			if (!isRecipientAllowed(p.recipient)) {...
        PUSH [tag253]		if (!isRecipientAllowed(p.recipient)) {...
        JUMPI			if (!isRecipientAllowed(p.recipient)) {...
        PUSH [tag254]		closeProposal(_proposalID)
        DUP8			_proposalID
        PUSH [tag248]		closeProposal
        JUMP	[in]		closeProposal(_proposalID)
      tag254: 
        JUMPDEST		closeProposal(_proposalID)
        DUP4			p
        PUSH D		p.creator
        ADD			p.creator
        PUSH 0		p.creator
        SWAP1			p.creator
        SLOAD			p.creator
        SWAP1			p.creator
        PUSH 100		p.creator
        EXP			p.creator
        SWAP1			p.creator
        DIV			p.creator
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.creator
        AND			p.creator
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.creator.send
        AND			p.creator.send
        PUSH 0		p.creator.send(p.proposalDeposit)
        DUP6			p
        PUSH 6		p.proposalDeposit
        ADD			p.proposalDeposit
        PUSH 0		p.proposalDeposit
        POP			p.proposalDeposit
        SLOAD			p.proposalDeposit
        PUSH 40		p.creator.send(p.proposalDeposit)
        MLOAD			p.creator.send(p.proposalDeposit)
        DUP1			p.creator.send(p.proposalDeposit)
        SWAP1			p.creator.send(p.proposalDeposit)
        POP			p.creator.send(p.proposalDeposit)
        PUSH 0		p.creator.send(p.proposalDeposit)
        PUSH 40		p.creator.send(p.proposalDeposit)
        MLOAD			p.creator.send(p.proposalDeposit)
        DUP1			p.creator.send(p.proposalDeposit)
        DUP4			p.creator.send(p.proposalDeposit)
        SUB			p.creator.send(p.proposalDeposit)
        DUP2			p.creator.send(p.proposalDeposit)
        DUP6			p.creator.send(p.proposalDeposit)
        DUP9			p.creator.send(p.proposalDeposit)
        DUP9			p.creator.send(p.proposalDeposit)
        CALL			p.creator.send(p.proposalDeposit)
        SWAP4			p.creator.send(p.proposalDeposit)
        POP			p.creator.send(p.proposalDeposit)
        POP			p.creator.send(p.proposalDeposit)
        POP			p.creator.send(p.proposalDeposit)
        POP			p.creator.send(p.proposalDeposit)
        POP			p.creator.send(p.proposalDeposit)
        PUSH [tag240]		return;
        JUMP			return;
      tag253: 
        JUMPDEST		if (!isRecipientAllowed(p.recipient)) {...
        PUSH 1		true
        SWAP2			bool proposalCheck = true
        POP			bool proposalCheck = true
        PUSH [tag255]		actualBalance()
        PUSH [tag86]		actualBalance
        JUMP	[in]		actualBalance()
      tag255: 
        JUMPDEST		actualBalance()
        DUP5			p
        PUSH 1		p.amount
        ADD			p.amount
        PUSH 0		p.amount
        POP			p.amount
        SLOAD			p.amount
        GT			p.amount > actualBalance()
        ISZERO			if (p.amount > actualBalance())...
        PUSH [tag256]		if (p.amount > actualBalance())...
        JUMPI			if (p.amount > actualBalance())...
        PUSH 0		false
        SWAP2			proposalCheck = false
        POP			proposalCheck = false
        DUP2			proposalCheck = false
        POP			proposalCheck = false
      tag256: 
        JUMPDEST		if (p.amount > actualBalance())...
        DUP4			p
        PUSH A		p.nay
        ADD			p.nay
        PUSH 0		p.nay
        POP			p.nay
        SLOAD			p.nay
        DUP5			p
        PUSH 9		p.yea
        ADD			p.yea
        PUSH 0		p.yea
        POP			p.yea
        SLOAD			p.yea
        ADD			p.yea + p.nay
        SWAP1			uint quorum = p.yea + p.nay
        POP			uint quorum = p.yea + p.nay
        PUSH 4		4
        DUP7			_transactionData
        MLOAD			_transactionData.length
        LT			_transactionData.length >= 4
        ISZERO			_transactionData.length >= 4
        DUP1			_transactionData.length >= 4 && _transactionData[0] == 0x68
        ISZERO			_transactionData.length >= 4 && _transactionData[0] == 0x68
        PUSH [tag257]		_transactionData.length >= 4 && _transactionData[0] == 0x68
        JUMPI			_transactionData.length >= 4 && _transactionData[0] == 0x68
        POP			_transactionData.length >= 4 && _transactionData[0] == 0x68
        PUSH 68		0x68
        PUSH 100000000000000000000000000000000000000000000000000000000000000		_transactionData[0] == 0x68
        MUL			_transactionData[0] == 0x68
        DUP7			_transactionData
        PUSH 0		0
        DUP2			_transactionData[0]
        MLOAD			_transactionData[0]
        DUP2			_transactionData[0]
        LT			_transactionData[0]
        ISZERO			_transactionData[0]
        PUSH [ErrorTag]		_transactionData[0]
        JUMPI			_transactionData[0]
        SWAP1			_transactionData[0]
        PUSH 20		_transactionData[0]
        ADD			_transactionData[0]
        ADD			_transactionData[0]
        MLOAD			_transactionData[0]
        PUSH 100000000000000000000000000000000000000000000000000000000000000		_transactionData[0]
        SWAP1			_transactionData[0]
        DIV			_transactionData[0]
        PUSH 100000000000000000000000000000000000000000000000000000000000000		_transactionData[0]
        MUL			_transactionData[0]
        EQ			_transactionData[0] == 0x68
      tag257: 
        JUMPDEST		_transactionData.length >= 4 && _transactionData[0] == 0x68
        DUP1			_transactionData.length >= 4 && _transactionData[0] == 0x68...
        ISZERO			_transactionData.length >= 4 && _transactionData[0] == 0x68...
        PUSH [tag258]		_transactionData.length >= 4 && _transactionData[0] == 0x68...
        JUMPI			_transactionData.length >= 4 && _transactionData[0] == 0x68...
        POP			_transactionData.length >= 4 && _transactionData[0] == 0x68...
        PUSH 37		0x37
        PUSH 100000000000000000000000000000000000000000000000000000000000000		_transactionData[1] == 0x37
        MUL			_transactionData[1] == 0x37
        DUP7			_transactionData
        PUSH 1		1
        DUP2			_transactionData[1]
        MLOAD			_transactionData[1]
        DUP2			_transactionData[1]
        LT			_transactionData[1]
        ISZERO			_transactionData[1]
        PUSH [ErrorTag]		_transactionData[1]
        JUMPI			_transactionData[1]
        SWAP1			_transactionData[1]
        PUSH 20		_transactionData[1]
        ADD			_transactionData[1]
        ADD			_transactionData[1]
        MLOAD			_transactionData[1]
        PUSH 100000000000000000000000000000000000000000000000000000000000000		_transactionData[1]
        SWAP1			_transactionData[1]
        DIV			_transactionData[1]
        PUSH 100000000000000000000000000000000000000000000000000000000000000		_transactionData[1]
        MUL			_transactionData[1]
        EQ			_transactionData[1] == 0x37
      tag258: 
        JUMPDEST		_transactionData.length >= 4 && _transactionData[0] == 0x68...
        DUP1			_transactionData.length >= 4 && _transactionData[0] == 0x68...
        ISZERO			_transactionData.length >= 4 && _transactionData[0] == 0x68...
        PUSH [tag259]		_transactionData.length >= 4 && _transactionData[0] == 0x68...
        JUMPI			_transactionData.length >= 4 && _transactionData[0] == 0x68...
        POP			_transactionData.length >= 4 && _transactionData[0] == 0x68...
        PUSH FF		0xff
        PUSH 100000000000000000000000000000000000000000000000000000000000000		_transactionData[2] == 0xff
        MUL			_transactionData[2] == 0xff
        DUP7			_transactionData
        PUSH 2		2
        DUP2			_transactionData[2]
        MLOAD			_transactionData[2]
        DUP2			_transactionData[2]
        LT			_transactionData[2]
        ISZERO			_transactionData[2]
        PUSH [ErrorTag]		_transactionData[2]
        JUMPI			_transactionData[2]
        SWAP1			_transactionData[2]
        PUSH 20		_transactionData[2]
        ADD			_transactionData[2]
        ADD			_transactionData[2]
        MLOAD			_transactionData[2]
        PUSH 100000000000000000000000000000000000000000000000000000000000000		_transactionData[2]
        SWAP1			_transactionData[2]
        DIV			_transactionData[2]
        PUSH 100000000000000000000000000000000000000000000000000000000000000		_transactionData[2]
        MUL			_transactionData[2]
        EQ			_transactionData[2] == 0xff
      tag259: 
        JUMPDEST		_transactionData.length >= 4 && _transactionData[0] == 0x68...
        DUP1			_transactionData.length >= 4 && _transactionData[0] == 0x68...
        ISZERO			_transactionData.length >= 4 && _transactionData[0] == 0x68...
        PUSH [tag260]		_transactionData.length >= 4 && _transactionData[0] == 0x68...
        JUMPI			_transactionData.length >= 4 && _transactionData[0] == 0x68...
        POP			_transactionData.length >= 4 && _transactionData[0] == 0x68...
        PUSH 1E		0x1e
        PUSH 100000000000000000000000000000000000000000000000000000000000000		_transactionData[3] == 0x1e
        MUL			_transactionData[3] == 0x1e
        DUP7			_transactionData
        PUSH 3		3
        DUP2			_transactionData[3]
        MLOAD			_transactionData[3]
        DUP2			_transactionData[3]
        LT			_transactionData[3]
        ISZERO			_transactionData[3]
        PUSH [ErrorTag]		_transactionData[3]
        JUMPI			_transactionData[3]
        SWAP1			_transactionData[3]
        PUSH 20		_transactionData[3]
        ADD			_transactionData[3]
        ADD			_transactionData[3]
        MLOAD			_transactionData[3]
        PUSH 100000000000000000000000000000000000000000000000000000000000000		_transactionData[3]
        SWAP1			_transactionData[3]
        DIV			_transactionData[3]
        PUSH 100000000000000000000000000000000000000000000000000000000000000		_transactionData[3]
        MUL			_transactionData[3]
        EQ			_transactionData[3] == 0x1e
      tag260: 
        JUMPDEST		_transactionData.length >= 4 && _transactionData[0] == 0x68...
        DUP1			_transactionData.length >= 4 && _transactionData[0] == 0x68...
        ISZERO			_transactionData.length >= 4 && _transactionData[0] == 0x68...
        PUSH [tag261]		_transactionData.length >= 4 && _transactionData[0] == 0x68...
        JUMPI			_transactionData.length >= 4 && _transactionData[0] == 0x68...
        POP			_transactionData.length >= 4 && _transactionData[0] == 0x68...
        PUSH [tag262]		minQuorum(actualBalance() + rewardToken[address(this)])
        PUSH 5		rewardToken
        PUSH 0		rewardToken
        POP			rewardToken
        PUSH 0		rewardToken[address(this)]
        ADDRESS			this
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		rewardToken[address(this)]
        AND			rewardToken[address(this)]
        DUP2			rewardToken[address(this)]
        MSTORE			rewardToken[address(this)]
        PUSH 20		rewardToken[address(this)]
        ADD			rewardToken[address(this)]
        SWAP1			rewardToken[address(this)]
        DUP2			rewardToken[address(this)]
        MSTORE			rewardToken[address(this)]
        PUSH 20		rewardToken[address(this)]
        ADD			rewardToken[address(this)]
        PUSH 0		rewardToken[address(this)]
        SHA3			rewardToken[address(this)]
        PUSH 0		rewardToken[address(this)]
        POP			rewardToken[address(this)]
        SLOAD			rewardToken[address(this)]
        PUSH [tag263]		actualBalance()
        PUSH [tag86]		actualBalance
        JUMP	[in]		actualBalance()
      tag263: 
        JUMPDEST		actualBalance()
        ADD			actualBalance() + rewardToken[address(this)]
        PUSH [tag264]		minQuorum
        JUMP	[in]		minQuorum(actualBalance() + rewardToken[address(this)])
      tag262: 
        JUMPDEST		minQuorum(actualBalance() + rewardToken[address(this)])
        DUP2			quorum
        LT			quorum < minQuorum(actualBalance() + rewardToken[address(this)])
      tag261: 
        JUMPDEST		_transactionData.length >= 4 && _transactionData[0] == 0x68...
        ISZERO			if (_transactionData.length >= 4 && _transactionData[0] == 0x68...
        PUSH [tag265]		if (_transactionData.length >= 4 && _transactionData[0] == 0x68...
        JUMPI			if (_transactionData.length >= 4 && _transactionData[0] == 0x68...
        PUSH 0		false
        SWAP2			proposalCheck = false
        POP			proposalCheck = false
        DUP2			proposalCheck = false
        POP			proposalCheck = false
      tag265: 
        JUMPDEST		if (_transactionData.length >= 4 && _transactionData[0] == 0x68...
        PUSH [tag266]		minQuorum(p.amount)
        DUP5			p
        PUSH 1		p.amount
        ADD			p.amount
        PUSH 0		p.amount
        POP			p.amount
        SLOAD			p.amount
        PUSH [tag264]		minQuorum
        JUMP	[in]		minQuorum(p.amount)
      tag266: 
        JUMPDEST		minQuorum(p.amount)
        DUP2			quorum
        LT			quorum >= minQuorum(p.amount)
        ISZERO			quorum >= minQuorum(p.amount)
        ISZERO			if (quorum >= minQuorum(p.amount)) {...
        PUSH [tag267]		if (quorum >= minQuorum(p.amount)) {...
        JUMPI			if (quorum >= minQuorum(p.amount)) {...
        DUP4			p
        PUSH D		p.creator
        ADD			p.creator
        PUSH 0		p.creator
        SWAP1			p.creator
        SLOAD			p.creator
        SWAP1			p.creator
        PUSH 100		p.creator
        EXP			p.creator
        SWAP1			p.creator
        DIV			p.creator
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.creator
        AND			p.creator
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.creator.send
        AND			p.creator.send
        PUSH 0		p.creator.send(p.proposalDeposit)
        DUP6			p
        PUSH 6		p.proposalDeposit
        ADD			p.proposalDeposit
        PUSH 0		p.proposalDeposit
        POP			p.proposalDeposit
        SLOAD			p.proposalDeposit
        PUSH 40		p.creator.send(p.proposalDeposit)
        MLOAD			p.creator.send(p.proposalDeposit)
        DUP1			p.creator.send(p.proposalDeposit)
        SWAP1			p.creator.send(p.proposalDeposit)
        POP			p.creator.send(p.proposalDeposit)
        PUSH 0		p.creator.send(p.proposalDeposit)
        PUSH 40		p.creator.send(p.proposalDeposit)
        MLOAD			p.creator.send(p.proposalDeposit)
        DUP1			p.creator.send(p.proposalDeposit)
        DUP4			p.creator.send(p.proposalDeposit)
        SUB			p.creator.send(p.proposalDeposit)
        DUP2			p.creator.send(p.proposalDeposit)
        DUP6			p.creator.send(p.proposalDeposit)
        DUP9			p.creator.send(p.proposalDeposit)
        DUP9			p.creator.send(p.proposalDeposit)
        CALL			p.creator.send(p.proposalDeposit)
        SWAP4			p.creator.send(p.proposalDeposit)
        POP			p.creator.send(p.proposalDeposit)
        POP			p.creator.send(p.proposalDeposit)
        POP			p.creator.send(p.proposalDeposit)
        POP			p.creator.send(p.proposalDeposit)
        ISZERO			!p.creator.send(p.proposalDeposit)
        ISZERO			if (!p.creator.send(p.proposalDeposit))...
        PUSH [tag268]		if (!p.creator.send(p.proposalDeposit))...
        JUMPI			if (!p.creator.send(p.proposalDeposit))...
        PUSH [ErrorTag]		throw
        JUMP			throw
      tag268: 
        JUMPDEST		if (!p.creator.send(p.proposalDeposit))...
        TIMESTAMP			now
        PUSH 2		lastTimeMinQuorumMet
        PUSH 0		lastTimeMinQuorumMet
        POP			lastTimeMinQuorumMet = now
        DUP2			lastTimeMinQuorumMet = now
        SWAP1			lastTimeMinQuorumMet = now
        SSTORE			lastTimeMinQuorumMet = now
        POP			lastTimeMinQuorumMet = now
        PUSH 5		5
        PUSH 16		totalSupply
        PUSH 0		totalSupply
        POP			totalSupply
        SLOAD			totalSupply
        DIV			totalSupply / 5
        DUP2			quorum
        GT			quorum > totalSupply / 5
        ISZERO			if (quorum > totalSupply / 5)...
        PUSH [tag269]		if (quorum > totalSupply / 5)...
        JUMPI			if (quorum > totalSupply / 5)...
        PUSH 5		5
        PUSH 1		minQuorumDivisor
        PUSH 0		minQuorumDivisor
        POP			minQuorumDivisor = 5
        DUP2			minQuorumDivisor = 5
        SWAP1			minQuorumDivisor = 5
        SSTORE			minQuorumDivisor = 5
        POP			minQuorumDivisor = 5
      tag269: 
        JUMPDEST		if (quorum > totalSupply / 5)...
      tag267: 
        JUMPDEST		if (quorum >= minQuorum(p.amount)) {...
        PUSH [tag270]		minQuorum(p.amount)
        DUP5			p
        PUSH 1		p.amount
        ADD			p.amount
        PUSH 0		p.amount
        POP			p.amount
        SLOAD			p.amount
        PUSH [tag264]		minQuorum
        JUMP	[in]		minQuorum(p.amount)
      tag270: 
        JUMPDEST		minQuorum(p.amount)
        DUP2			quorum
        LT			quorum >= minQuorum(p.amount)
        ISZERO			quorum >= minQuorum(p.amount)
        DUP1			quorum >= minQuorum(p.amount) && p.yea > p.nay
        ISZERO			quorum >= minQuorum(p.amount) && p.yea > p.nay
        PUSH [tag271]		quorum >= minQuorum(p.amount) && p.yea > p.nay
        JUMPI			quorum >= minQuorum(p.amount) && p.yea > p.nay
        POP			quorum >= minQuorum(p.amount) && p.yea > p.nay
        DUP4			p
        PUSH A		p.nay
        ADD			p.nay
        PUSH 0		p.nay
        POP			p.nay
        SLOAD			p.nay
        DUP5			p
        PUSH 9		p.yea
        ADD			p.yea
        PUSH 0		p.yea
        POP			p.yea
        SLOAD			p.yea
        GT			p.yea > p.nay
      tag271: 
        JUMPDEST		quorum >= minQuorum(p.amount) && p.yea > p.nay
        DUP1			quorum >= minQuorum(p.amount) && p.yea > p.nay && proposalCheck
        ISZERO			quorum >= minQuorum(p.amount) && p.yea > p.nay && proposalCheck
        PUSH [tag272]		quorum >= minQuorum(p.amount) && p.yea > p.nay && proposalCheck
        JUMPI			quorum >= minQuorum(p.amount) && p.yea > p.nay && proposalCheck
        POP			quorum >= minQuorum(p.amount) && p.yea > p.nay && proposalCheck
        DUP2			proposalCheck
      tag272: 
        JUMPDEST		quorum >= minQuorum(p.amount) && p.yea > p.nay && proposalCheck
        ISZERO			if (quorum >= minQuorum(p.amount) && p.yea > p.nay && proposalCheck) {...
        PUSH [tag273]		if (quorum >= minQuorum(p.amount) && p.yea > p.nay && proposalCheck) {...
        JUMPI			if (quorum >= minQuorum(p.amount) && p.yea > p.nay && proposalCheck) {...
        DUP4			p
        PUSH 0		p.recipient
        ADD			p.recipient
        PUSH 0		p.recipient
        SWAP1			p.recipient
        SLOAD			p.recipient
        SWAP1			p.recipient
        PUSH 100		p.recipient
        EXP			p.recipient
        SWAP1			p.recipient
        DIV			p.recipient
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.recipient
        AND			p.recipient
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.recipient.call
        AND			p.recipient.call
        DUP5			p
        PUSH 1		p.amount
        ADD			p.amount
        PUSH 0		p.amount
        POP			p.amount
        SLOAD			p.amount
        DUP8			_transactionData
        PUSH 40		p.recipient.call.value(p.amount)(_transactionData)
        MLOAD			p.recipient.call.value(p.amount)(_transactionData)
        DUP1			p.recipient.call.value(p.amount)(_transactionData)
        DUP3			p.recipient.call.value(p.amount)(_transactionData)
        DUP1			p.recipient.call.value(p.amount)(_transactionData)
        MLOAD			p.recipient.call.value(p.amount)(_transactionData)
        SWAP1			p.recipient.call.value(p.amount)(_transactionData)
        PUSH 20		p.recipient.call.value(p.amount)(_transactionData)
        ADD			p.recipient.call.value(p.amount)(_transactionData)
        SWAP1			p.recipient.call.value(p.amount)(_transactionData)
        DUP1			p.recipient.call.value(p.amount)(_transactionData)
        DUP4			p.recipient.call.value(p.amount)(_transactionData)
        DUP4			p.recipient.call.value(p.amount)(_transactionData)
        DUP3			p.recipient.call.value(p.amount)(_transactionData)
        SWAP1			p.recipient.call.value(p.amount)(_transactionData)
        PUSH 0		p.recipient.call.value(p.amount)(_transactionData)
        PUSH 4		p.recipient.call.value(p.amount)(_transactionData)
        PUSH 20		p.recipient.call.value(p.amount)(_transactionData)
        DUP5			p.recipient.call.value(p.amount)(_transactionData)
        PUSH 1F		p.recipient.call.value(p.amount)(_transactionData)
        ADD			p.recipient.call.value(p.amount)(_transactionData)
        DIV			p.recipient.call.value(p.amount)(_transactionData)
        PUSH F		p.recipient.call.value(p.amount)(_transactionData)
        MUL			p.recipient.call.value(p.amount)(_transactionData)
        PUSH 3		p.recipient.call.value(p.amount)(_transactionData)
        ADD			p.recipient.call.value(p.amount)(_transactionData)
        CALL			p.recipient.call.value(p.amount)(_transactionData)
        POP			p.recipient.call.value(p.amount)(_transactionData)
        SWAP1			p.recipient.call.value(p.amount)(_transactionData)
        POP			p.recipient.call.value(p.amount)(_transactionData)
        SWAP1			p.recipient.call.value(p.amount)(_transactionData)
        DUP2			p.recipient.call.value(p.amount)(_transactionData)
        ADD			p.recipient.call.value(p.amount)(_transactionData)
        SWAP1			p.recipient.call.value(p.amount)(_transactionData)
        PUSH 1F		p.recipient.call.value(p.amount)(_transactionData)
        AND			p.recipient.call.value(p.amount)(_transactionData)
        DUP1			p.recipient.call.value(p.amount)(_transactionData)
        ISZERO			p.recipient.call.value(p.amount)(_transactionData)
        PUSH [tag274]		p.recipient.call.value(p.amount)(_transactionData)
        JUMPI			p.recipient.call.value(p.amount)(_transactionData)
        DUP1			p.recipient.call.value(p.amount)(_transactionData)
        DUP3			p.recipient.call.value(p.amount)(_transactionData)
        SUB			p.recipient.call.value(p.amount)(_transactionData)
        DUP1			p.recipient.call.value(p.amount)(_transactionData)
        MLOAD			p.recipient.call.value(p.amount)(_transactionData)
        PUSH 1		p.recipient.call.value(p.amount)(_transactionData)
        DUP4			p.recipient.call.value(p.amount)(_transactionData)
        PUSH 20		p.recipient.call.value(p.amount)(_transactionData)
        SUB			p.recipient.call.value(p.amount)(_transactionData)
        PUSH 100		p.recipient.call.value(p.amount)(_transactionData)
        EXP			p.recipient.call.value(p.amount)(_transactionData)
        SUB			p.recipient.call.value(p.amount)(_transactionData)
        NOT			p.recipient.call.value(p.amount)(_transactionData)
        AND			p.recipient.call.value(p.amount)(_transactionData)
        DUP2			p.recipient.call.value(p.amount)(_transactionData)
        MSTORE			p.recipient.call.value(p.amount)(_transactionData)
        PUSH 20		p.recipient.call.value(p.amount)(_transactionData)
        ADD			p.recipient.call.value(p.amount)(_transactionData)
        SWAP2			p.recipient.call.value(p.amount)(_transactionData)
        POP			p.recipient.call.value(p.amount)(_transactionData)
      tag274: 
        JUMPDEST		p.recipient.call.value(p.amount)(_transactionData)
        POP			p.recipient.call.value(p.amount)(_transactionData)
        SWAP2			p.recipient.call.value(p.amount)(_transactionData)
        POP			p.recipient.call.value(p.amount)(_transactionData)
        POP			p.recipient.call.value(p.amount)(_transactionData)
        PUSH 0		p.recipient.call.value(p.amount)(_transactionData)
        PUSH 40		p.recipient.call.value(p.amount)(_transactionData)
        MLOAD			p.recipient.call.value(p.amount)(_transactionData)
        DUP1			p.recipient.call.value(p.amount)(_transactionData)
        DUP4			p.recipient.call.value(p.amount)(_transactionData)
        SUB			p.recipient.call.value(p.amount)(_transactionData)
        DUP2			p.recipient.call.value(p.amount)(_transactionData)
        DUP6			p.recipient.call.value(p.amount)(_transactionData)
        DUP8			p.recipient.call.value(p.amount)(_transactionData)
        PUSH 8502		p.recipient.call.value(p.amount)(_transactionData)
        GAS			p.recipient.call.value(p.amount)(_transactionData)
        SUB			p.recipient.call.value(p.amount)(_transactionData)
        CALL			p.recipient.call.value(p.amount)(_transactionData)
        SWAP3			p.recipient.call.value(p.amount)(_transactionData)
        POP			p.recipient.call.value(p.amount)(_transactionData)
        POP			p.recipient.call.value(p.amount)(_transactionData)
        POP			p.recipient.call.value(p.amount)(_transactionData)
        ISZERO			!p.recipient.call.value(p.amount)(_transactionData)
        ISZERO			if (!p.recipient.call.value(p.amount)(_transactionData))...
        PUSH [tag275]		if (!p.recipient.call.value(p.amount)(_transactionData))...
        JUMPI			if (!p.recipient.call.value(p.amount)(_transactionData))...
        PUSH [ErrorTag]		throw
        JUMP			throw
      tag275: 
        JUMPDEST		if (!p.recipient.call.value(p.amount)(_transactionData))...
        PUSH 1		true
        DUP5			p
        PUSH 4		p.proposalPassed
        ADD			p.proposalPassed
        PUSH 1		p.proposalPassed
        PUSH 100		p.proposalPassed = true
        EXP			p.proposalPassed = true
        DUP2			p.proposalPassed = true
        SLOAD			p.proposalPassed = true
        DUP2			p.proposalPassed = true
        PUSH FF		p.proposalPassed = true
        MUL			p.proposalPassed = true
        NOT			p.proposalPassed = true
        AND			p.proposalPassed = true
        SWAP1			p.proposalPassed = true
        DUP4			p.proposalPassed = true
        MUL			p.proposalPassed = true
        OR			p.proposalPassed = true
        SWAP1			p.proposalPassed = true
        SSTORE			p.proposalPassed = true
        POP			p.proposalPassed = true
        PUSH 1		true
        SWAP5			_success = true
        POP			_success = true
        DUP5			_success = true
        POP			_success = true
        ADDRESS			this
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.recipient != address(this)
        AND			p.recipient != address(this)
        DUP5			p
        PUSH 0		p.recipient
        ADD			p.recipient
        PUSH 0		p.recipient
        SWAP1			p.recipient
        SLOAD			p.recipient
        SWAP1			p.recipient
        PUSH 100		p.recipient
        EXP			p.recipient
        SWAP1			p.recipient
        DIV			p.recipient
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.recipient
        AND			p.recipient
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.recipient != address(this)
        AND			p.recipient != address(this)
        EQ			p.recipient != address(this)
        ISZERO			p.recipient != address(this)
        DUP1			p.recipient != address(this) && p.recipient != address(rewardAccount)
        ISZERO			p.recipient != address(this) && p.recipient != address(rewardAccount)
        PUSH [tag276]		p.recipient != address(this) && p.recipient != address(rewardAccount)
        JUMPI			p.recipient != address(this) && p.recipient != address(rewardAccount)
        POP			p.recipient != address(this) && p.recipient != address(rewardAccount)
        PUSH 7		rewardAccount
        PUSH 0		rewardAccount
        SWAP1			rewardAccount
        SLOAD			rewardAccount
        SWAP1			rewardAccount
        PUSH 100		rewardAccount
        EXP			rewardAccount
        SWAP1			rewardAccount
        DIV			rewardAccount
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		rewardAccount
        AND			rewardAccount
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.recipient != address(rewardAccount)
        AND			p.recipient != address(rewardAccount)
        DUP5			p
        PUSH 0		p.recipient
        ADD			p.recipient
        PUSH 0		p.recipient
        SWAP1			p.recipient
        SLOAD			p.recipient
        SWAP1			p.recipient
        PUSH 100		p.recipient
        EXP			p.recipient
        SWAP1			p.recipient
        DIV			p.recipient
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.recipient
        AND			p.recipient
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.recipient != address(rewardAccount)
        AND			p.recipient != address(rewardAccount)
        EQ			p.recipient != address(rewardAccount)
        ISZERO			p.recipient != address(rewardAccount)
      tag276: 
        JUMPDEST		p.recipient != address(this) && p.recipient != address(rewardAccount)
        DUP1			p.recipient != address(this) && p.recipient != address(rewardAccount)...
        ISZERO			p.recipient != address(this) && p.recipient != address(rewardAccount)...
        PUSH [tag277]		p.recipient != address(this) && p.recipient != address(rewardAccount)...
        JUMPI			p.recipient != address(this) && p.recipient != address(rewardAccount)...
        POP			p.recipient != address(this) && p.recipient != address(rewardAccount)...
        PUSH 8		DAOrewardAccount
        PUSH 0		DAOrewardAccount
        SWAP1			DAOrewardAccount
        SLOAD			DAOrewardAccount
        SWAP1			DAOrewardAccount
        PUSH 100		DAOrewardAccount
        EXP			DAOrewardAccount
        SWAP1			DAOrewardAccount
        DIV			DAOrewardAccount
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		DAOrewardAccount
        AND			DAOrewardAccount
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.recipient != address(DAOrewardAccount)
        AND			p.recipient != address(DAOrewardAccount)
        DUP5			p
        PUSH 0		p.recipient
        ADD			p.recipient
        PUSH 0		p.recipient
        SWAP1			p.recipient
        SLOAD			p.recipient
        SWAP1			p.recipient
        PUSH 100		p.recipient
        EXP			p.recipient
        SWAP1			p.recipient
        DIV			p.recipient
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.recipient
        AND			p.recipient
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.recipient != address(DAOrewardAccount)
        AND			p.recipient != address(DAOrewardAccount)
        EQ			p.recipient != address(DAOrewardAccount)
        ISZERO			p.recipient != address(DAOrewardAccount)
      tag277: 
        JUMPDEST		p.recipient != address(this) && p.recipient != address(rewardAccount)...
        DUP1			p.recipient != address(this) && p.recipient != address(rewardAccount)...
        ISZERO			p.recipient != address(this) && p.recipient != address(rewardAccount)...
        PUSH [tag278]		p.recipient != address(this) && p.recipient != address(rewardAccount)...
        JUMPI			p.recipient != address(this) && p.recipient != address(rewardAccount)...
        POP			p.recipient != address(this) && p.recipient != address(rewardAccount)...
        PUSH 12		extraBalance
        PUSH 0		extraBalance
        SWAP1			extraBalance
        SLOAD			extraBalance
        SWAP1			extraBalance
        PUSH 100		extraBalance
        EXP			extraBalance
        SWAP1			extraBalance
        DIV			extraBalance
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		extraBalance
        AND			extraBalance
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.recipient != address(extraBalance)
        AND			p.recipient != address(extraBalance)
        DUP5			p
        PUSH 0		p.recipient
        ADD			p.recipient
        PUSH 0		p.recipient
        SWAP1			p.recipient
        SLOAD			p.recipient
        SWAP1			p.recipient
        PUSH 100		p.recipient
        EXP			p.recipient
        SWAP1			p.recipient
        DIV			p.recipient
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.recipient
        AND			p.recipient
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.recipient != address(extraBalance)
        AND			p.recipient != address(extraBalance)
        EQ			p.recipient != address(extraBalance)
        ISZERO			p.recipient != address(extraBalance)
      tag278: 
        JUMPDEST		p.recipient != address(this) && p.recipient != address(rewardAccount)...
        DUP1			p.recipient != address(this) && p.recipient != address(rewardAccount)...
        ISZERO			p.recipient != address(this) && p.recipient != address(rewardAccount)...
        PUSH [tag279]		p.recipient != address(this) && p.recipient != address(rewardAccount)...
        JUMPI			p.recipient != address(this) && p.recipient != address(rewardAccount)...
        POP			p.recipient != address(this) && p.recipient != address(rewardAccount)...
        PUSH 3		curator
        PUSH 0		curator
        SWAP1			curator
        SLOAD			curator
        SWAP1			curator
        PUSH 100		curator
        EXP			curator
        SWAP1			curator
        DIV			curator
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		curator
        AND			curator
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.recipient != address(curator)
        AND			p.recipient != address(curator)
        DUP5			p
        PUSH 0		p.recipient
        ADD			p.recipient
        PUSH 0		p.recipient
        SWAP1			p.recipient
        SLOAD			p.recipient
        SWAP1			p.recipient
        PUSH 100		p.recipient
        EXP			p.recipient
        SWAP1			p.recipient
        DIV			p.recipient
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.recipient
        AND			p.recipient
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.recipient != address(curator)
        AND			p.recipient != address(curator)
        EQ			p.recipient != address(curator)
        ISZERO			p.recipient != address(curator)
      tag279: 
        JUMPDEST		p.recipient != address(this) && p.recipient != address(rewardAccount)...
        ISZERO			if (p.recipient != address(this) && p.recipient != address(rewardAccount)...
        PUSH [tag280]		if (p.recipient != address(this) && p.recipient != address(rewardAccount)...
        JUMPI			if (p.recipient != address(this) && p.recipient != address(rewardAccount)...
        DUP4			p
        PUSH 1		p.amount
        ADD			p.amount
        PUSH 0		p.amount
        POP			p.amount
        SLOAD			p.amount
        PUSH 5		rewardToken
        PUSH 0		rewardToken
        POP			rewardToken
        PUSH 0		rewardToken[address(this)]
        ADDRESS			this
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		rewardToken[address(this)]
        AND			rewardToken[address(this)]
        DUP2			rewardToken[address(this)]
        MSTORE			rewardToken[address(this)]
        PUSH 20		rewardToken[address(this)]
        ADD			rewardToken[address(this)]
        SWAP1			rewardToken[address(this)]
        DUP2			rewardToken[address(this)]
        MSTORE			rewardToken[address(this)]
        PUSH 20		rewardToken[address(this)]
        ADD			rewardToken[address(this)]
        PUSH 0		rewardToken[address(this)]
        SHA3			rewardToken[address(this)]
        PUSH 0		rewardToken[address(this)]
        DUP3			rewardToken[address(this)] += p.amount
        DUP3			rewardToken[address(this)] += p.amount
        DUP3			rewardToken[address(this)] += p.amount
        POP			rewardToken[address(this)] += p.amount
        SLOAD			rewardToken[address(this)] += p.amount
        ADD			rewardToken[address(this)] += p.amount
        SWAP3			rewardToken[address(this)] += p.amount
        POP			rewardToken[address(this)] += p.amount
        POP			rewardToken[address(this)] += p.amount
        DUP2			rewardToken[address(this)] += p.amount
        SWAP1			rewardToken[address(this)] += p.amount
        SSTORE			rewardToken[address(this)] += p.amount
        POP			rewardToken[address(this)] += p.amount
        DUP4			p
        PUSH 1		p.amount
        ADD			p.amount
        PUSH 0		p.amount
        POP			p.amount
        SLOAD			p.amount
        PUSH 6		totalRewardToken
        PUSH 0		totalRewardToken
        DUP3			totalRewardToken += p.amount
        DUP3			totalRewardToken += p.amount
        DUP3			totalRewardToken += p.amount
        POP			totalRewardToken += p.amount
        SLOAD			totalRewardToken += p.amount
        ADD			totalRewardToken += p.amount
        SWAP3			totalRewardToken += p.amount
        POP			totalRewardToken += p.amount
        POP			totalRewardToken += p.amount
        DUP2			totalRewardToken += p.amount
        SWAP1			totalRewardToken += p.amount
        SSTORE			totalRewardToken += p.amount
        POP			totalRewardToken += p.amount
      tag280: 
        JUMPDEST		if (p.recipient != address(this) && p.recipient != address(rewardAccount)...
      tag273: 
        JUMPDEST		if (quorum >= minQuorum(p.amount) && p.yea > p.nay && proposalCheck) {...
        PUSH [tag281]		closeProposal(_proposalID)
        DUP8			_proposalID
        PUSH [tag248]		closeProposal
        JUMP	[in]		closeProposal(_proposalID)
      tag281: 
        JUMPDEST		closeProposal(_proposalID)
        DUP7			_proposalID
        PUSH DFC78BDCA8E3E0B18C16C5C99323C6CB9EB5E00AFDE190B4E7273F5158702B07		ProposalTallied(_proposalID, _success, quorum)
        DUP7			_success
        DUP4			quorum
        PUSH 40		ProposalTallied(_proposalID, _success, quorum)
        MLOAD			ProposalTallied(_proposalID, _success, quorum)
        DUP1			ProposalTallied(_proposalID, _success, quorum)
        DUP4			ProposalTallied(_proposalID, _success, quorum)
        DUP2			ProposalTallied(_proposalID, _success, quorum)
        MSTORE			ProposalTallied(_proposalID, _success, quorum)
        PUSH 20		ProposalTallied(_proposalID, _success, quorum)
        ADD			ProposalTallied(_proposalID, _success, quorum)
        DUP3			ProposalTallied(_proposalID, _success, quorum)
        DUP2			ProposalTallied(_proposalID, _success, quorum)
        MSTORE			ProposalTallied(_proposalID, _success, quorum)
        PUSH 20		ProposalTallied(_proposalID, _success, quorum)
        ADD			ProposalTallied(_proposalID, _success, quorum)
        SWAP3			ProposalTallied(_proposalID, _success, quorum)
        POP			ProposalTallied(_proposalID, _success, quorum)
        POP			ProposalTallied(_proposalID, _success, quorum)
        POP			ProposalTallied(_proposalID, _success, quorum)
        PUSH 40		ProposalTallied(_proposalID, _success, quorum)
        MLOAD			ProposalTallied(_proposalID, _success, quorum)
        DUP1			ProposalTallied(_proposalID, _success, quorum)
        SWAP2			ProposalTallied(_proposalID, _success, quorum)
        SUB			ProposalTallied(_proposalID, _success, quorum)
        SWAP1			ProposalTallied(_proposalID, _success, quorum)
        LOG2			ProposalTallied(_proposalID, _success, quorum)
      tag240: 
        JUMPDEST		function executeProposal(...
        POP			function executeProposal(...
        POP			function executeProposal(...
        POP			function executeProposal(...
        POP			function executeProposal(...
        SWAP3			function executeProposal(...
        SWAP2			function executeProposal(...
        POP			function executeProposal(...
        POP			function executeProposal(...
        JUMP	[out]		function executeProposal(...
      tag112: 
        JUMPDEST		function splitDAO(...
        PUSH 0		bool _success
        PUSH 0		Proposal p
        PUSH 0		uint fundsToBeMoved
        PUSH 0		uint rewardTokenToBeMoved
        PUSH 0		uint paidOutToBeMoved
        PUSH 0		0
        CALLVALUE			msg.value
        GT			msg.value > 0
        ISZERO			if (msg.value > 0) throw
        PUSH [tag283]		if (msg.value > 0) throw
        JUMPI			if (msg.value > 0) throw
        PUSH [ErrorTag]		throw
        JUMP			throw
      tag283: 
        JUMPDEST		if (msg.value > 0) throw
        PUSH 0		0
        PUSH [tag284]		balanceOf(msg.sender)
        CALLER			msg.sender
        PUSH [tag104]		balanceOf
        JUMP	[in]		balanceOf(msg.sender)
      tag284: 
        JUMPDEST		balanceOf(msg.sender)
        EQ			balanceOf(msg.sender) == 0
        ISZERO			if (balanceOf(msg.sender) == 0) throw
        PUSH [tag285]		if (balanceOf(msg.sender) == 0) throw
        JUMPI			if (balanceOf(msg.sender) == 0) throw
        PUSH [ErrorTag]		throw
        JUMP			throw
      tag285: 
        JUMPDEST		if (balanceOf(msg.sender) == 0) throw
        PUSH 0		proposals
        PUSH 0		proposals
        POP			proposals
        DUP8			_proposalID
        DUP2			proposals[_proposalID]
        SLOAD			proposals[_proposalID]
        DUP2			proposals[_proposalID]
        LT			proposals[_proposalID]
        ISZERO			proposals[_proposalID]
        PUSH [ErrorTag]		proposals[_proposalID]
        JUMPI			proposals[_proposalID]
        SWAP1			proposals[_proposalID]
        PUSH 0		proposals[_proposalID]
        MSTORE			proposals[_proposalID]
        PUSH 20		proposals[_proposalID]
        PUSH 0		proposals[_proposalID]
        SHA3			proposals[_proposalID]
        SWAP1			proposals[_proposalID]
        PUSH E		proposals[_proposalID]
        MUL			proposals[_proposalID]
        ADD			proposals[_proposalID]
        PUSH 0		proposals[_proposalID]
      tag286: 
        JUMPDEST		proposals[_proposalID]
        POP			proposals[_proposalID]
        SWAP4			Proposal p = proposals[_proposalID]
        POP			Proposal p = proposals[_proposalID]
        DUP4			p
        PUSH 3		p.votingDeadline
        ADD			p.votingDeadline
        PUSH 0		p.votingDeadline
        POP			p.votingDeadline
        SLOAD			p.votingDeadline
        TIMESTAMP			now
        LT			now < p.votingDeadline
        DUP1			now < p.votingDeadline  // has the voting deadline arrived?...
        PUSH [tag287]		now < p.votingDeadline  // has the voting deadline arrived?...
        JUMPI			now < p.votingDeadline  // has the voting deadline arrived?...
        POP			now < p.votingDeadline  // has the voting deadline arrived?...
        PUSH 239880		27 days
        DUP5			p
        PUSH 3		p.votingDeadline
        ADD			p.votingDeadline
        PUSH 0		p.votingDeadline
        POP			p.votingDeadline
        SLOAD			p.votingDeadline
        ADD			p.votingDeadline + splitExecutionPeriod
        TIMESTAMP			now
        GT			now > p.votingDeadline + splitExecutionPeriod
      tag287: 
        JUMPDEST		now < p.votingDeadline  // has the voting deadline arrived?...
        DUP1			now < p.votingDeadline  // has the voting deadline arrived?...
        PUSH [tag288]		now < p.votingDeadline  // has the voting deadline arrived?...
        JUMPI			now < p.votingDeadline  // has the voting deadline arrived?...
        POP			now < p.votingDeadline  // has the voting deadline arrived?...
        DUP6			_newCurator
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.recipient != _newCurator
        AND			p.recipient != _newCurator
        DUP5			p
        PUSH 0		p.recipient
        ADD			p.recipient
        PUSH 0		p.recipient
        SWAP1			p.recipient
        SLOAD			p.recipient
        SWAP1			p.recipient
        PUSH 100		p.recipient
        EXP			p.recipient
        SWAP1			p.recipient
        DIV			p.recipient
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.recipient
        AND			p.recipient
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.recipient != _newCurator
        AND			p.recipient != _newCurator
        EQ			p.recipient != _newCurator
        ISZERO			p.recipient != _newCurator
      tag288: 
        JUMPDEST		now < p.votingDeadline  // has the voting deadline arrived?...
        DUP1			now < p.votingDeadline  // has the voting deadline arrived?...
        PUSH [tag289]		now < p.votingDeadline  // has the voting deadline arrived?...
        JUMPI			now < p.votingDeadline  // has the voting deadline arrived?...
        POP			now < p.votingDeadline  // has the voting deadline arrived?...
        DUP4			p
        PUSH 7		p.newCurator
        ADD			p.newCurator
        PUSH 0		p.newCurator
        SWAP1			p.newCurator
        SLOAD			p.newCurator
        SWAP1			p.newCurator
        PUSH 100		p.newCurator
        EXP			p.newCurator
        SWAP1			p.newCurator
        DIV			p.newCurator
        PUSH FF		p.newCurator
        AND			p.newCurator
        ISZERO			!p.newCurator
      tag289: 
        JUMPDEST		now < p.votingDeadline  // has the voting deadline arrived?...
        DUP1			now < p.votingDeadline  // has the voting deadline arrived?...
        PUSH [tag290]		now < p.votingDeadline  // has the voting deadline arrived?...
        JUMPI			now < p.votingDeadline  // has the voting deadline arrived?...
        POP			now < p.votingDeadline  // has the voting deadline arrived?...
        DUP4			p
        PUSH B		p.votedYes
        ADD			p.votedYes
        PUSH 0		p.votedYes
        POP			p.votedYes
        PUSH 0		p.votedYes[msg.sender]
        CALLER			msg.sender
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.votedYes[msg.sender]
        AND			p.votedYes[msg.sender]
        DUP2			p.votedYes[msg.sender]
        MSTORE			p.votedYes[msg.sender]
        PUSH 20		p.votedYes[msg.sender]
        ADD			p.votedYes[msg.sender]
        SWAP1			p.votedYes[msg.sender]
        DUP2			p.votedYes[msg.sender]
        MSTORE			p.votedYes[msg.sender]
        PUSH 20		p.votedYes[msg.sender]
        ADD			p.votedYes[msg.sender]
        PUSH 0		p.votedYes[msg.sender]
        SHA3			p.votedYes[msg.sender]
        PUSH 0		p.votedYes[msg.sender]
        SWAP1			p.votedYes[msg.sender]
        SLOAD			p.votedYes[msg.sender]
        SWAP1			p.votedYes[msg.sender]
        PUSH 100		p.votedYes[msg.sender]
        EXP			p.votedYes[msg.sender]
        SWAP1			p.votedYes[msg.sender]
        DIV			p.votedYes[msg.sender]
        PUSH FF		p.votedYes[msg.sender]
        AND			p.votedYes[msg.sender]
        ISZERO			!p.votedYes[msg.sender]
      tag290: 
        JUMPDEST		now < p.votingDeadline  // has the voting deadline arrived?...
        DUP1			now < p.votingDeadline  // has the voting deadline arrived?...
        PUSH [tag291]		now < p.votingDeadline  // has the voting deadline arrived?...
        JUMPI			now < p.votingDeadline  // has the voting deadline arrived?...
        POP			now < p.votingDeadline  // has the voting deadline arrived?...
        DUP7			_proposalID
        PUSH B		blocked
        PUSH 0		blocked
        POP			blocked
        PUSH 0		blocked[msg.sender]
        CALLER			msg.sender
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		blocked[msg.sender]
        AND			blocked[msg.sender]
        DUP2			blocked[msg.sender]
        MSTORE			blocked[msg.sender]
        PUSH 20		blocked[msg.sender]
        ADD			blocked[msg.sender]
        SWAP1			blocked[msg.sender]
        DUP2			blocked[msg.sender]
        MSTORE			blocked[msg.sender]
        PUSH 20		blocked[msg.sender]
        ADD			blocked[msg.sender]
        PUSH 0		blocked[msg.sender]
        SHA3			blocked[msg.sender]
        PUSH 0		blocked[msg.sender]
        POP			blocked[msg.sender]
        SLOAD			blocked[msg.sender]
        EQ			blocked[msg.sender] != _proposalID
        ISZERO			blocked[msg.sender] != _proposalID
        DUP1			blocked[msg.sender] != _proposalID && blocked[msg.sender] != 0
        ISZERO			blocked[msg.sender] != _proposalID && blocked[msg.sender] != 0
        PUSH [tag292]		blocked[msg.sender] != _proposalID && blocked[msg.sender] != 0
        JUMPI			blocked[msg.sender] != _proposalID && blocked[msg.sender] != 0
        POP			blocked[msg.sender] != _proposalID && blocked[msg.sender] != 0
        PUSH 0		0
        PUSH B		blocked
        PUSH 0		blocked
        POP			blocked
        PUSH 0		blocked[msg.sender]
        CALLER			msg.sender
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		blocked[msg.sender]
        AND			blocked[msg.sender]
        DUP2			blocked[msg.sender]
        MSTORE			blocked[msg.sender]
        PUSH 20		blocked[msg.sender]
        ADD			blocked[msg.sender]
        SWAP1			blocked[msg.sender]
        DUP2			blocked[msg.sender]
        MSTORE			blocked[msg.sender]
        PUSH 20		blocked[msg.sender]
        ADD			blocked[msg.sender]
        PUSH 0		blocked[msg.sender]
        SHA3			blocked[msg.sender]
        PUSH 0		blocked[msg.sender]
        POP			blocked[msg.sender]
        SLOAD			blocked[msg.sender]
        EQ			blocked[msg.sender] != 0
        ISZERO			blocked[msg.sender] != 0
      tag292: 
        JUMPDEST		blocked[msg.sender] != _proposalID && blocked[msg.sender] != 0
      tag291: 
        JUMPDEST		now < p.votingDeadline  // has the voting deadline arrived?...
        ISZERO			if (now < p.votingDeadline  // has the voting deadline arrived?...
        PUSH [tag293]		if (now < p.votingDeadline  // has the voting deadline arrived?...
        JUMPI			if (now < p.votingDeadline  // has the voting deadline arrived?...
        PUSH [ErrorTag]		throw
        JUMP			throw
      tag293: 
        JUMPDEST		if (now < p.votingDeadline  // has the voting deadline arrived?...
        PUSH 0		0
        DUP5			p
        PUSH 8		p.splitData
        ADD			p.splitData
        PUSH 0		p.splitData
        POP			p.splitData
        PUSH 0		0
        DUP2			p.splitData[0]
        SLOAD			p.splitData[0]
        DUP2			p.splitData[0]
        LT			p.splitData[0]
        ISZERO			p.splitData[0]
        PUSH [ErrorTag]		p.splitData[0]
        JUMPI			p.splitData[0]
        SWAP1			p.splitData[0]
        PUSH 0		p.splitData[0]
        MSTORE			p.splitData[0]
        PUSH 20		p.splitData[0]
        PUSH 0		p.splitData[0]
        SHA3			p.splitData[0]
        SWAP1			p.splitData[0]
        PUSH 4		p.splitData[0]
        MUL			p.splitData[0]
        ADD			p.splitData[0]
        PUSH 0		p.splitData[0]
      tag294: 
        JUMPDEST		p.splitData[0]
        POP			p.splitData[0]
        PUSH 3		p.splitData[0].newDAO
        ADD			p.splitData[0].newDAO
        PUSH 0		p.splitData[0].newDAO
        SWAP1			p.splitData[0].newDAO
        SLOAD			p.splitData[0].newDAO
        SWAP1			p.splitData[0].newDAO
        PUSH 100		p.splitData[0].newDAO
        EXP			p.splitData[0].newDAO
        SWAP1			p.splitData[0].newDAO
        DIV			p.splitData[0].newDAO
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.splitData[0].newDAO
        AND			p.splitData[0].newDAO
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		address(p.splitData[0].newDAO) == 0
        AND			address(p.splitData[0].newDAO) == 0
        EQ			address(p.splitData[0].newDAO) == 0
        ISZERO			if (address(p.splitData[0].newDAO) == 0) {...
        PUSH [tag295]		if (address(p.splitData[0].newDAO) == 0) {...
        JUMPI			if (address(p.splitData[0].newDAO) == 0) {...
        PUSH [tag296]		createNewDAO(_newCurator)
        DUP7			_newCurator
        PUSH [tag297]		createNewDAO
        JUMP	[in]		createNewDAO(_newCurator)
      tag296: 
        JUMPDEST		createNewDAO(_newCurator)
        DUP5			p
        PUSH 8		p.splitData
        ADD			p.splitData
        PUSH 0		p.splitData
        POP			p.splitData
        PUSH 0		0
        DUP2			p.splitData[0]
        SLOAD			p.splitData[0]
        DUP2			p.splitData[0]
        LT			p.splitData[0]
        ISZERO			p.splitData[0]
        PUSH [ErrorTag]		p.splitData[0]
        JUMPI			p.splitData[0]
        SWAP1			p.splitData[0]
        PUSH 0		p.splitData[0]
        MSTORE			p.splitData[0]
        PUSH 20		p.splitData[0]
        PUSH 0		p.splitData[0]
        SHA3			p.splitData[0]
        SWAP1			p.splitData[0]
        PUSH 4		p.splitData[0]
        MUL			p.splitData[0]
        ADD			p.splitData[0]
        PUSH 0		p.splitData[0]
      tag298: 
        JUMPDEST		p.splitData[0]
        POP			p.splitData[0]
        PUSH 3		p.splitData[0].newDAO
        ADD			p.splitData[0].newDAO
        PUSH 0		p.splitData[0].newDAO
        PUSH 100		p.splitData[0].newDAO = createNewDAO(_newCurator)
        EXP			p.splitData[0].newDAO = createNewDAO(_newCurator)
        DUP2			p.splitData[0].newDAO = createNewDAO(_newCurator)
        SLOAD			p.splitData[0].newDAO = createNewDAO(_newCurator)
        DUP2			p.splitData[0].newDAO = createNewDAO(_newCurator)
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.splitData[0].newDAO = createNewDAO(_newCurator)
        MUL			p.splitData[0].newDAO = createNewDAO(_newCurator)
        NOT			p.splitData[0].newDAO = createNewDAO(_newCurator)
        AND			p.splitData[0].newDAO = createNewDAO(_newCurator)
        SWAP1			p.splitData[0].newDAO = createNewDAO(_newCurator)
        DUP4			p.splitData[0].newDAO = createNewDAO(_newCurator)
        MUL			p.splitData[0].newDAO = createNewDAO(_newCurator)
        OR			p.splitData[0].newDAO = createNewDAO(_newCurator)
        SWAP1			p.splitData[0].newDAO = createNewDAO(_newCurator)
        SSTORE			p.splitData[0].newDAO = createNewDAO(_newCurator)
        POP			p.splitData[0].newDAO = createNewDAO(_newCurator)
        PUSH 0		0
        DUP5			p
        PUSH 8		p.splitData
        ADD			p.splitData
        PUSH 0		p.splitData
        POP			p.splitData
        PUSH 0		0
        DUP2			p.splitData[0]
        SLOAD			p.splitData[0]
        DUP2			p.splitData[0]
        LT			p.splitData[0]
        ISZERO			p.splitData[0]
        PUSH [ErrorTag]		p.splitData[0]
        JUMPI			p.splitData[0]
        SWAP1			p.splitData[0]
        PUSH 0		p.splitData[0]
        MSTORE			p.splitData[0]
        PUSH 20		p.splitData[0]
        PUSH 0		p.splitData[0]
        SHA3			p.splitData[0]
        SWAP1			p.splitData[0]
        PUSH 4		p.splitData[0]
        MUL			p.splitData[0]
        ADD			p.splitData[0]
        PUSH 0		p.splitData[0]
      tag299: 
        JUMPDEST		p.splitData[0]
        POP			p.splitData[0]
        PUSH 3		p.splitData[0].newDAO
        ADD			p.splitData[0].newDAO
        PUSH 0		p.splitData[0].newDAO
        SWAP1			p.splitData[0].newDAO
        SLOAD			p.splitData[0].newDAO
        SWAP1			p.splitData[0].newDAO
        PUSH 100		p.splitData[0].newDAO
        EXP			p.splitData[0].newDAO
        SWAP1			p.splitData[0].newDAO
        DIV			p.splitData[0].newDAO
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.splitData[0].newDAO
        AND			p.splitData[0].newDAO
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		address(p.splitData[0].newDAO) == 0
        AND			address(p.splitData[0].newDAO) == 0
        EQ			address(p.splitData[0].newDAO) == 0
        ISZERO			if (address(p.splitData[0].newDAO) == 0)...
        PUSH [tag300]		if (address(p.splitData[0].newDAO) == 0)...
        JUMPI			if (address(p.splitData[0].newDAO) == 0)...
        PUSH [ErrorTag]		throw
        JUMP			throw
      tag300: 
        JUMPDEST		if (address(p.splitData[0].newDAO) == 0)...
        PUSH D		sumOfProposalDeposits
        PUSH 0		sumOfProposalDeposits
        POP			sumOfProposalDeposits
        SLOAD			sumOfProposalDeposits
        ADDRESS			this
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		this.balance
        AND			this.balance
        BALANCE			this.balance
        LT			this.balance < sumOfProposalDeposits
        ISZERO			if (this.balance < sumOfProposalDeposits)...
        PUSH [tag301]		if (this.balance < sumOfProposalDeposits)...
        JUMPI			if (this.balance < sumOfProposalDeposits)...
        PUSH [ErrorTag]		throw
        JUMP			throw
      tag301: 
        JUMPDEST		if (this.balance < sumOfProposalDeposits)...
        PUSH [tag302]		actualBalance()
        PUSH [tag86]		actualBalance
        JUMP	[in]		actualBalance()
      tag302: 
        JUMPDEST		actualBalance()
        DUP5			p
        PUSH 8		p.splitData
        ADD			p.splitData
        PUSH 0		p.splitData
        POP			p.splitData
        PUSH 0		0
        DUP2			p.splitData[0]
        SLOAD			p.splitData[0]
        DUP2			p.splitData[0]
        LT			p.splitData[0]
        ISZERO			p.splitData[0]
        PUSH [ErrorTag]		p.splitData[0]
        JUMPI			p.splitData[0]
        SWAP1			p.splitData[0]
        PUSH 0		p.splitData[0]
        MSTORE			p.splitData[0]
        PUSH 20		p.splitData[0]
        PUSH 0		p.splitData[0]
        SHA3			p.splitData[0]
        SWAP1			p.splitData[0]
        PUSH 4		p.splitData[0]
        MUL			p.splitData[0]
        ADD			p.splitData[0]
        PUSH 0		p.splitData[0]
      tag303: 
        JUMPDEST		p.splitData[0]
        POP			p.splitData[0]
        PUSH 0		p.splitData[0].splitBalance
        ADD			p.splitData[0].splitBalance
        PUSH 0		p.splitData[0].splitBalance
        POP			p.splitData[0].splitBalance = actualBalance()
        DUP2			p.splitData[0].splitBalance = actualBalance()
        SWAP1			p.splitData[0].splitBalance = actualBalance()
        SSTORE			p.splitData[0].splitBalance = actualBalance()
        POP			p.splitData[0].splitBalance = actualBalance()
        PUSH 5		rewardToken
        PUSH 0		rewardToken
        POP			rewardToken
        PUSH 0		rewardToken[address(this)]
        ADDRESS			this
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		rewardToken[address(this)]
        AND			rewardToken[address(this)]
        DUP2			rewardToken[address(this)]
        MSTORE			rewardToken[address(this)]
        PUSH 20		rewardToken[address(this)]
        ADD			rewardToken[address(this)]
        SWAP1			rewardToken[address(this)]
        DUP2			rewardToken[address(this)]
        MSTORE			rewardToken[address(this)]
        PUSH 20		rewardToken[address(this)]
        ADD			rewardToken[address(this)]
        PUSH 0		rewardToken[address(this)]
        SHA3			rewardToken[address(this)]
        PUSH 0		rewardToken[address(this)]
        POP			rewardToken[address(this)]
        SLOAD			rewardToken[address(this)]
        DUP5			p
        PUSH 8		p.splitData
        ADD			p.splitData
        PUSH 0		p.splitData
        POP			p.splitData
        PUSH 0		0
        DUP2			p.splitData[0]
        SLOAD			p.splitData[0]
        DUP2			p.splitData[0]
        LT			p.splitData[0]
        ISZERO			p.splitData[0]
        PUSH [ErrorTag]		p.splitData[0]
        JUMPI			p.splitData[0]
        SWAP1			p.splitData[0]
        PUSH 0		p.splitData[0]
        MSTORE			p.splitData[0]
        PUSH 20		p.splitData[0]
        PUSH 0		p.splitData[0]
        SHA3			p.splitData[0]
        SWAP1			p.splitData[0]
        PUSH 4		p.splitData[0]
        MUL			p.splitData[0]
        ADD			p.splitData[0]
        PUSH 0		p.splitData[0]
      tag304: 
        JUMPDEST		p.splitData[0]
        POP			p.splitData[0]
        PUSH 2		p.splitData[0].rewardToken
        ADD			p.splitData[0].rewardToken
        PUSH 0		p.splitData[0].rewardToken
        POP			p.splitData[0].rewardToken = rewardToken[address(this)]
        DUP2			p.splitData[0].rewardToken = rewardToken[address(this)]
        SWAP1			p.splitData[0].rewardToken = rewardToken[address(this)]
        SSTORE			p.splitData[0].rewardToken = rewardToken[address(this)]
        POP			p.splitData[0].rewardToken = rewardToken[address(this)]
        PUSH 16		totalSupply
        PUSH 0		totalSupply
        POP			totalSupply
        SLOAD			totalSupply
        DUP5			p
        PUSH 8		p.splitData
        ADD			p.splitData
        PUSH 0		p.splitData
        POP			p.splitData
        PUSH 0		0
        DUP2			p.splitData[0]
        SLOAD			p.splitData[0]
        DUP2			p.splitData[0]
        LT			p.splitData[0]
        ISZERO			p.splitData[0]
        PUSH [ErrorTag]		p.splitData[0]
        JUMPI			p.splitData[0]
        SWAP1			p.splitData[0]
        PUSH 0		p.splitData[0]
        MSTORE			p.splitData[0]
        PUSH 20		p.splitData[0]
        PUSH 0		p.splitData[0]
        SHA3			p.splitData[0]
        SWAP1			p.splitData[0]
        PUSH 4		p.splitData[0]
        MUL			p.splitData[0]
        ADD			p.splitData[0]
        PUSH 0		p.splitData[0]
      tag305: 
        JUMPDEST		p.splitData[0]
        POP			p.splitData[0]
        PUSH 1		p.splitData[0].totalSupply
        ADD			p.splitData[0].totalSupply
        PUSH 0		p.splitData[0].totalSupply
        POP			p.splitData[0].totalSupply = totalSupply
        DUP2			p.splitData[0].totalSupply = totalSupply
        SWAP1			p.splitData[0].totalSupply = totalSupply
        SSTORE			p.splitData[0].totalSupply = totalSupply
        POP			p.splitData[0].totalSupply = totalSupply
        PUSH 1		true
        DUP5			p
        PUSH 4		p.proposalPassed
        ADD			p.proposalPassed
        PUSH 1		p.proposalPassed
        PUSH 100		p.proposalPassed = true
        EXP			p.proposalPassed = true
        DUP2			p.proposalPassed = true
        SLOAD			p.proposalPassed = true
        DUP2			p.proposalPassed = true
        PUSH FF		p.proposalPassed = true
        MUL			p.proposalPassed = true
        NOT			p.proposalPassed = true
        AND			p.proposalPassed = true
        SWAP1			p.proposalPassed = true
        DUP4			p.proposalPassed = true
        MUL			p.proposalPassed = true
        OR			p.proposalPassed = true
        SWAP1			p.proposalPassed = true
        SSTORE			p.proposalPassed = true
        POP			p.proposalPassed = true
      tag295: 
        JUMPDEST		if (address(p.splitData[0].newDAO) == 0) {...
        DUP4			p
        PUSH 8		p.splitData
        ADD			p.splitData
        PUSH 0		p.splitData
        POP			p.splitData
        PUSH 0		0
        DUP2			p.splitData[0]
        SLOAD			p.splitData[0]
        DUP2			p.splitData[0]
        LT			p.splitData[0]
        ISZERO			p.splitData[0]
        PUSH [ErrorTag]		p.splitData[0]
        JUMPI			p.splitData[0]
        SWAP1			p.splitData[0]
        PUSH 0		p.splitData[0]
        MSTORE			p.splitData[0]
        PUSH 20		p.splitData[0]
        PUSH 0		p.splitData[0]
        SHA3			p.splitData[0]
        SWAP1			p.splitData[0]
        PUSH 4		p.splitData[0]
        MUL			p.splitData[0]
        ADD			p.splitData[0]
        PUSH 0		p.splitData[0]
      tag306: 
        JUMPDEST		p.splitData[0]
        POP			p.splitData[0]
        PUSH 1		p.splitData[0].totalSupply
        ADD			p.splitData[0].totalSupply
        PUSH 0		p.splitData[0].totalSupply
        POP			p.splitData[0].totalSupply
        SLOAD			p.splitData[0].totalSupply
        DUP5			p
        PUSH 8		p.splitData
        ADD			p.splitData
        PUSH 0		p.splitData
        POP			p.splitData
        PUSH 0		0
        DUP2			p.splitData[0]
        SLOAD			p.splitData[0]
        DUP2			p.splitData[0]
        LT			p.splitData[0]
        ISZERO			p.splitData[0]
        PUSH [ErrorTag]		p.splitData[0]
        JUMPI			p.splitData[0]
        SWAP1			p.splitData[0]
        PUSH 0		p.splitData[0]
        MSTORE			p.splitData[0]
        PUSH 20		p.splitData[0]
        PUSH 0		p.splitData[0]
        SHA3			p.splitData[0]
        SWAP1			p.splitData[0]
        PUSH 4		p.splitData[0]
        MUL			p.splitData[0]
        ADD			p.splitData[0]
        PUSH 0		p.splitData[0]
      tag307: 
        JUMPDEST		p.splitData[0]
        POP			p.splitData[0]
        PUSH 0		p.splitData[0].splitBalance
        ADD			p.splitData[0].splitBalance
        PUSH 0		p.splitData[0].splitBalance
        POP			p.splitData[0].splitBalance
        SLOAD			p.splitData[0].splitBalance
        PUSH 14		balances
        PUSH 0		balances
        POP			balances
        PUSH 0		balances[msg.sender]
        CALLER			msg.sender
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		balances[msg.sender]
        AND			balances[msg.sender]
        DUP2			balances[msg.sender]
        MSTORE			balances[msg.sender]
        PUSH 20		balances[msg.sender]
        ADD			balances[msg.sender]
        SWAP1			balances[msg.sender]
        DUP2			balances[msg.sender]
        MSTORE			balances[msg.sender]
        PUSH 20		balances[msg.sender]
        ADD			balances[msg.sender]
        PUSH 0		balances[msg.sender]
        SHA3			balances[msg.sender]
        PUSH 0		balances[msg.sender]
        POP			balances[msg.sender]
        SLOAD			balances[msg.sender]
        MUL			balances[msg.sender] * p.splitData[0].splitBalance
        DIV			(balances[msg.sender] * p.splitData[0].splitBalance) /...
        SWAP3			uint fundsToBeMoved =...
        POP			uint fundsToBeMoved =...
        PUSH 0		false
        DUP5			p
        PUSH 8		p.splitData
        ADD			p.splitData
        PUSH 0		p.splitData
        POP			p.splitData
        PUSH 0		0
        DUP2			p.splitData[0]
        SLOAD			p.splitData[0]
        DUP2			p.splitData[0]
        LT			p.splitData[0]
        ISZERO			p.splitData[0]
        PUSH [ErrorTag]		p.splitData[0]
        JUMPI			p.splitData[0]
        SWAP1			p.splitData[0]
        PUSH 0		p.splitData[0]
        MSTORE			p.splitData[0]
        PUSH 20		p.splitData[0]
        PUSH 0		p.splitData[0]
        SHA3			p.splitData[0]
        SWAP1			p.splitData[0]
        PUSH 4		p.splitData[0]
        MUL			p.splitData[0]
        ADD			p.splitData[0]
        PUSH 0		p.splitData[0]
      tag308: 
        JUMPDEST		p.splitData[0]
        POP			p.splitData[0]
        PUSH 3		p.splitData[0].newDAO
        ADD			p.splitData[0].newDAO
        PUSH 0		p.splitData[0].newDAO
        SWAP1			p.splitData[0].newDAO
        SLOAD			p.splitData[0].newDAO
        SWAP1			p.splitData[0].newDAO
        PUSH 100		p.splitData[0].newDAO
        EXP			p.splitData[0].newDAO
        SWAP1			p.splitData[0].newDAO
        DIV			p.splitData[0].newDAO
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.splitData[0].newDAO
        AND			p.splitData[0].newDAO
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.splitData[0].newDAO.createTokenProxy
        AND			p.splitData[0].newDAO.createTokenProxy
        PUSH BAAC5300		p.splitData[0].newDAO.createTokenProxy
        DUP6			fundsToBeMoved
        CALLER			msg.sender
        PUSH 40		p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
        MLOAD			p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
        DUP4			p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
        PUSH 100000000000000000000000000000000000000000000000000000000		p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
        MUL			p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
        DUP2			p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
        MSTORE			p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
        PUSH 4		p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
        ADD			p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
        DUP1			p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
        DUP3			p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
        AND			p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
        DUP2			p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
        MSTORE			p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
        PUSH 20		p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
        ADD			p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
        SWAP2			p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
        POP			p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
        POP			p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
        PUSH 20		p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
        PUSH 40		p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
        MLOAD			p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
        DUP1			p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
        DUP4			p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
        SUB			p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
        DUP2			p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
        DUP6			p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
        DUP9			p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
        PUSH 8502		p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
        GAS			p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
        SUB			p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
        CALL			p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
        ISZERO			p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
        PUSH [ErrorTag]		p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
        JUMPI			p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
        POP			p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
        POP			p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
        POP			p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
        POP			p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
        PUSH 40		p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
        MLOAD			p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
        DUP1			p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
        MLOAD			p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
        SWAP1			p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
        PUSH 20		p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
        ADD			p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
        POP			p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender)
        EQ			p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender) == false
        ISZERO			if (p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender) == false)...
        PUSH [tag309]		if (p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender) == false)...
        JUMPI			if (p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender) == false)...
        PUSH [ErrorTag]		throw
        JUMP			throw
      tag309: 
        JUMPDEST		if (p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender) == false)...
        DUP4			p
        PUSH 8		p.splitData
        ADD			p.splitData
        PUSH 0		p.splitData
        POP			p.splitData
        PUSH 0		0
        DUP2			p.splitData[0]
        SLOAD			p.splitData[0]
        DUP2			p.splitData[0]
        LT			p.splitData[0]
        ISZERO			p.splitData[0]
        PUSH [ErrorTag]		p.splitData[0]
        JUMPI			p.splitData[0]
        SWAP1			p.splitData[0]
        PUSH 0		p.splitData[0]
        MSTORE			p.splitData[0]
        PUSH 20		p.splitData[0]
        PUSH 0		p.splitData[0]
        SHA3			p.splitData[0]
        SWAP1			p.splitData[0]
        PUSH 4		p.splitData[0]
        MUL			p.splitData[0]
        ADD			p.splitData[0]
        PUSH 0		p.splitData[0]
      tag310: 
        JUMPDEST		p.splitData[0]
        POP			p.splitData[0]
        PUSH 1		p.splitData[0].totalSupply
        ADD			p.splitData[0].totalSupply
        PUSH 0		p.splitData[0].totalSupply
        POP			p.splitData[0].totalSupply
        SLOAD			p.splitData[0].totalSupply
        DUP5			p
        PUSH 8		p.splitData
        ADD			p.splitData
        PUSH 0		p.splitData
        POP			p.splitData
        PUSH 0		0
        DUP2			p.splitData[0]
        SLOAD			p.splitData[0]
        DUP2			p.splitData[0]
        LT			p.splitData[0]
        ISZERO			p.splitData[0]
        PUSH [ErrorTag]		p.splitData[0]
        JUMPI			p.splitData[0]
        SWAP1			p.splitData[0]
        PUSH 0		p.splitData[0]
        MSTORE			p.splitData[0]
        PUSH 20		p.splitData[0]
        PUSH 0		p.splitData[0]
        SHA3			p.splitData[0]
        SWAP1			p.splitData[0]
        PUSH 4		p.splitData[0]
        MUL			p.splitData[0]
        ADD			p.splitData[0]
        PUSH 0		p.splitData[0]
      tag311: 
        JUMPDEST		p.splitData[0]
        POP			p.splitData[0]
        PUSH 2		p.splitData[0].rewardToken
        ADD			p.splitData[0].rewardToken
        PUSH 0		p.splitData[0].rewardToken
        POP			p.splitData[0].rewardToken
        SLOAD			p.splitData[0].rewardToken
        PUSH 14		balances
        PUSH 0		balances
        POP			balances
        PUSH 0		balances[msg.sender]
        CALLER			msg.sender
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		balances[msg.sender]
        AND			balances[msg.sender]
        DUP2			balances[msg.sender]
        MSTORE			balances[msg.sender]
        PUSH 20		balances[msg.sender]
        ADD			balances[msg.sender]
        SWAP1			balances[msg.sender]
        DUP2			balances[msg.sender]
        MSTORE			balances[msg.sender]
        PUSH 20		balances[msg.sender]
        ADD			balances[msg.sender]
        PUSH 0		balances[msg.sender]
        SHA3			balances[msg.sender]
        PUSH 0		balances[msg.sender]
        POP			balances[msg.sender]
        SLOAD			balances[msg.sender]
        MUL			balances[msg.sender] * p.splitData[0].rewardToken
        DIV			(balances[msg.sender] * p.splitData[0].rewardToken) /...
        SWAP2			uint rewardTokenToBeMoved =...
        POP			uint rewardTokenToBeMoved =...
        PUSH 5		rewardToken
        PUSH 0		rewardToken
        POP			rewardToken
        PUSH 0		rewardToken[address(this)]
        ADDRESS			this
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		rewardToken[address(this)]
        AND			rewardToken[address(this)]
        DUP2			rewardToken[address(this)]
        MSTORE			rewardToken[address(this)]
        PUSH 20		rewardToken[address(this)]
        ADD			rewardToken[address(this)]
        SWAP1			rewardToken[address(this)]
        DUP2			rewardToken[address(this)]
        MSTORE			rewardToken[address(this)]
        PUSH 20		rewardToken[address(this)]
        ADD			rewardToken[address(this)]
        PUSH 0		rewardToken[address(this)]
        SHA3			rewardToken[address(this)]
        PUSH 0		rewardToken[address(this)]
        POP			rewardToken[address(this)]
        SLOAD			rewardToken[address(this)]
        DUP3			rewardTokenToBeMoved
        PUSH 9		DAOpaidOut
        PUSH 0		DAOpaidOut
        POP			DAOpaidOut
        PUSH 0		DAOpaidOut[address(this)]
        ADDRESS			this
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		DAOpaidOut[address(this)]
        AND			DAOpaidOut[address(this)]
        DUP2			DAOpaidOut[address(this)]
        MSTORE			DAOpaidOut[address(this)]
        PUSH 20		DAOpaidOut[address(this)]
        ADD			DAOpaidOut[address(this)]
        SWAP1			DAOpaidOut[address(this)]
        DUP2			DAOpaidOut[address(this)]
        MSTORE			DAOpaidOut[address(this)]
        PUSH 20		DAOpaidOut[address(this)]
        ADD			DAOpaidOut[address(this)]
        PUSH 0		DAOpaidOut[address(this)]
        SHA3			DAOpaidOut[address(this)]
        PUSH 0		DAOpaidOut[address(this)]
        POP			DAOpaidOut[address(this)]
        SLOAD			DAOpaidOut[address(this)]
        MUL			DAOpaidOut[address(this)] * rewardTokenToBeMoved
        DIV			DAOpaidOut[address(this)] * rewardTokenToBeMoved /...
        SWAP1			uint paidOutToBeMoved = DAOpaidOut[address(this)] * rewardTokenToBeMoved /...
        POP			uint paidOutToBeMoved = DAOpaidOut[address(this)] * rewardTokenToBeMoved /...
        DUP2			rewardTokenToBeMoved
        PUSH 5		rewardToken
        PUSH 0		rewardToken
        POP			rewardToken
        PUSH 0		rewardToken[address(p.splitData[0].newDAO)]
        DUP7			p
        PUSH 8		p.splitData
        ADD			p.splitData
        PUSH 0		p.splitData
        POP			p.splitData
        PUSH 0		0
        DUP2			p.splitData[0]
        SLOAD			p.splitData[0]
        DUP2			p.splitData[0]
        LT			p.splitData[0]
        ISZERO			p.splitData[0]
        PUSH [ErrorTag]		p.splitData[0]
        JUMPI			p.splitData[0]
        SWAP1			p.splitData[0]
        PUSH 0		p.splitData[0]
        MSTORE			p.splitData[0]
        PUSH 20		p.splitData[0]
        PUSH 0		p.splitData[0]
        SHA3			p.splitData[0]
        SWAP1			p.splitData[0]
        PUSH 4		p.splitData[0]
        MUL			p.splitData[0]
        ADD			p.splitData[0]
        PUSH 0		p.splitData[0]
      tag312: 
        JUMPDEST		p.splitData[0]
        POP			p.splitData[0]
        PUSH 3		p.splitData[0].newDAO
        ADD			p.splitData[0].newDAO
        PUSH 0		p.splitData[0].newDAO
        SWAP1			p.splitData[0].newDAO
        SLOAD			p.splitData[0].newDAO
        SWAP1			p.splitData[0].newDAO
        PUSH 100		p.splitData[0].newDAO
        EXP			p.splitData[0].newDAO
        SWAP1			p.splitData[0].newDAO
        DIV			p.splitData[0].newDAO
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.splitData[0].newDAO
        AND			p.splitData[0].newDAO
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		rewardToken[address(p.splitData[0].newDAO)]
        AND			rewardToken[address(p.splitData[0].newDAO)]
        DUP2			rewardToken[address(p.splitData[0].newDAO)]
        MSTORE			rewardToken[address(p.splitData[0].newDAO)]
        PUSH 20		rewardToken[address(p.splitData[0].newDAO)]
        ADD			rewardToken[address(p.splitData[0].newDAO)]
        SWAP1			rewardToken[address(p.splitData[0].newDAO)]
        DUP2			rewardToken[address(p.splitData[0].newDAO)]
        MSTORE			rewardToken[address(p.splitData[0].newDAO)]
        PUSH 20		rewardToken[address(p.splitData[0].newDAO)]
        ADD			rewardToken[address(p.splitData[0].newDAO)]
        PUSH 0		rewardToken[address(p.splitData[0].newDAO)]
        SHA3			rewardToken[address(p.splitData[0].newDAO)]
        PUSH 0		rewardToken[address(p.splitData[0].newDAO)]
        DUP3			rewardToken[address(p.splitData[0].newDAO)] += rewardTokenToBeMoved
        DUP3			rewardToken[address(p.splitData[0].newDAO)] += rewardTokenToBeMoved
        DUP3			rewardToken[address(p.splitData[0].newDAO)] += rewardTokenToBeMoved
        POP			rewardToken[address(p.splitData[0].newDAO)] += rewardTokenToBeMoved
        SLOAD			rewardToken[address(p.splitData[0].newDAO)] += rewardTokenToBeMoved
        ADD			rewardToken[address(p.splitData[0].newDAO)] += rewardTokenToBeMoved
        SWAP3			rewardToken[address(p.splitData[0].newDAO)] += rewardTokenToBeMoved
        POP			rewardToken[address(p.splitData[0].newDAO)] += rewardTokenToBeMoved
        POP			rewardToken[address(p.splitData[0].newDAO)] += rewardTokenToBeMoved
        DUP2			rewardToken[address(p.splitData[0].newDAO)] += rewardTokenToBeMoved
        SWAP1			rewardToken[address(p.splitData[0].newDAO)] += rewardTokenToBeMoved
        SSTORE			rewardToken[address(p.splitData[0].newDAO)] += rewardTokenToBeMoved
        POP			rewardToken[address(p.splitData[0].newDAO)] += rewardTokenToBeMoved
        DUP2			rewardTokenToBeMoved
        PUSH 5		rewardToken
        PUSH 0		rewardToken
        POP			rewardToken
        PUSH 0		rewardToken[address(this)]
        ADDRESS			this
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		rewardToken[address(this)]
        AND			rewardToken[address(this)]
        DUP2			rewardToken[address(this)]
        MSTORE			rewardToken[address(this)]
        PUSH 20		rewardToken[address(this)]
        ADD			rewardToken[address(this)]
        SWAP1			rewardToken[address(this)]
        DUP2			rewardToken[address(this)]
        MSTORE			rewardToken[address(this)]
        PUSH 20		rewardToken[address(this)]
        ADD			rewardToken[address(this)]
        PUSH 0		rewardToken[address(this)]
        SHA3			rewardToken[address(this)]
        PUSH 0		rewardToken[address(this)]
        POP			rewardToken[address(this)]
        SLOAD			rewardToken[address(this)]
        LT			rewardToken[address(this)] < rewardTokenToBeMoved
        ISZERO			if (rewardToken[address(this)] < rewardTokenToBeMoved)...
        PUSH [tag313]		if (rewardToken[address(this)] < rewardTokenToBeMoved)...
        JUMPI			if (rewardToken[address(this)] < rewardTokenToBeMoved)...
        PUSH [ErrorTag]		throw
        JUMP			throw
      tag313: 
        JUMPDEST		if (rewardToken[address(this)] < rewardTokenToBeMoved)...
        DUP2			rewardTokenToBeMoved
        PUSH 5		rewardToken
        PUSH 0		rewardToken
        POP			rewardToken
        PUSH 0		rewardToken[address(this)]
        ADDRESS			this
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		rewardToken[address(this)]
        AND			rewardToken[address(this)]
        DUP2			rewardToken[address(this)]
        MSTORE			rewardToken[address(this)]
        PUSH 20		rewardToken[address(this)]
        ADD			rewardToken[address(this)]
        SWAP1			rewardToken[address(this)]
        DUP2			rewardToken[address(this)]
        MSTORE			rewardToken[address(this)]
        PUSH 20		rewardToken[address(this)]
        ADD			rewardToken[address(this)]
        PUSH 0		rewardToken[address(this)]
        SHA3			rewardToken[address(this)]
        PUSH 0		rewardToken[address(this)]
        DUP3			rewardToken[address(this)] -= rewardTokenToBeMoved
        DUP3			rewardToken[address(this)] -= rewardTokenToBeMoved
        DUP3			rewardToken[address(this)] -= rewardTokenToBeMoved
        POP			rewardToken[address(this)] -= rewardTokenToBeMoved
        SLOAD			rewardToken[address(this)] -= rewardTokenToBeMoved
        SUB			rewardToken[address(this)] -= rewardTokenToBeMoved
        SWAP3			rewardToken[address(this)] -= rewardTokenToBeMoved
        POP			rewardToken[address(this)] -= rewardTokenToBeMoved
        POP			rewardToken[address(this)] -= rewardTokenToBeMoved
        DUP2			rewardToken[address(this)] -= rewardTokenToBeMoved
        SWAP1			rewardToken[address(this)] -= rewardTokenToBeMoved
        SSTORE			rewardToken[address(this)] -= rewardTokenToBeMoved
        POP			rewardToken[address(this)] -= rewardTokenToBeMoved
        DUP1			paidOutToBeMoved
        PUSH 9		DAOpaidOut
        PUSH 0		DAOpaidOut
        POP			DAOpaidOut
        PUSH 0		DAOpaidOut[address(p.splitData[0].newDAO)]
        DUP7			p
        PUSH 8		p.splitData
        ADD			p.splitData
        PUSH 0		p.splitData
        POP			p.splitData
        PUSH 0		0
        DUP2			p.splitData[0]
        SLOAD			p.splitData[0]
        DUP2			p.splitData[0]
        LT			p.splitData[0]
        ISZERO			p.splitData[0]
        PUSH [ErrorTag]		p.splitData[0]
        JUMPI			p.splitData[0]
        SWAP1			p.splitData[0]
        PUSH 0		p.splitData[0]
        MSTORE			p.splitData[0]
        PUSH 20		p.splitData[0]
        PUSH 0		p.splitData[0]
        SHA3			p.splitData[0]
        SWAP1			p.splitData[0]
        PUSH 4		p.splitData[0]
        MUL			p.splitData[0]
        ADD			p.splitData[0]
        PUSH 0		p.splitData[0]
      tag314: 
        JUMPDEST		p.splitData[0]
        POP			p.splitData[0]
        PUSH 3		p.splitData[0].newDAO
        ADD			p.splitData[0].newDAO
        PUSH 0		p.splitData[0].newDAO
        SWAP1			p.splitData[0].newDAO
        SLOAD			p.splitData[0].newDAO
        SWAP1			p.splitData[0].newDAO
        PUSH 100		p.splitData[0].newDAO
        EXP			p.splitData[0].newDAO
        SWAP1			p.splitData[0].newDAO
        DIV			p.splitData[0].newDAO
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		p.splitData[0].newDAO
        AND			p.splitData[0].newDAO
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		DAOpaidOut[address(p.splitData[0].newDAO)]
        AND			DAOpaidOut[address(p.splitData[0].newDAO)]
        DUP2			DAOpaidOut[address(p.splitData[0].newDAO)]
        MSTORE			DAOpaidOut[address(p.splitData[0].newDAO)]
        PUSH 20		DAOpaidOut[address(p.splitData[0].newDAO)]
        ADD			DAOpaidOut[address(p.splitData[0].newDAO)]
        SWAP1			DAOpaidOut[address(p.splitData[0].newDAO)]
        DUP2			DAOpaidOut[address(p.splitData[0].newDAO)]
        MSTORE			DAOpaidOut[address(p.splitData[0].newDAO)]
        PUSH 20		DAOpaidOut[address(p.splitData[0].newDAO)]
        ADD			DAOpaidOut[address(p.splitData[0].newDAO)]
        PUSH 0		DAOpaidOut[address(p.splitData[0].newDAO)]
        SHA3			DAOpaidOut[address(p.splitData[0].newDAO)]
        PUSH 0		DAOpaidOut[address(p.splitData[0].newDAO)]
        DUP3			DAOpaidOut[address(p.splitData[0].newDAO)] += paidOutToBeMoved
        DUP3			DAOpaidOut[address(p.splitData[0].newDAO)] += paidOutToBeMoved
        DUP3			DAOpaidOut[address(p.splitData[0].newDAO)] += paidOutToBeMoved
        POP			DAOpaidOut[address(p.splitData[0].newDAO)] += paidOutToBeMoved
        SLOAD			DAOpaidOut[address(p.splitData[0].newDAO)] += paidOutToBeMoved
        ADD			DAOpaidOut[address(p.splitData[0].newDAO)] += paidOutToBeMoved
        SWAP3			DAOpaidOut[address(p.splitData[0].newDAO)] += paidOutToBeMoved
        POP			DAOpaidOut[address(p.splitData[0].newDAO)] += paidOutToBeMoved
        POP			DAOpaidOut[address(p.splitData[0].newDAO)] += paidOutToBeMoved
        DUP2			DAOpaidOut[address(p.splitData[0].newDAO)] += paidOutToBeMoved
        SWAP1			DAOpaidOut[address(p.splitData[0].newDAO)] += paidOutToBeMoved
        SSTORE			DAOpaidOut[address(p.splitData[0].newDAO)] += paidOutToBeMoved
        POP			DAOpaidOut[address(p.splitData[0].newDAO)] += paidOutToBeMoved
        DUP1			paidOutToBeMoved
        PUSH 9		DAOpaidOut
        PUSH 0		DAOpaidOut
        POP			DAOpaidOut
        PUSH 0		DAOpaidOut[address(this)]
        ADDRESS			this
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		DAOpaidOut[address(this)]
        AND			DAOpaidOut[address(this)]
        DUP2			DAOpaidOut[address(this)]
        MSTORE			DAOpaidOut[address(this)]
        PUSH 20		DAOpaidOut[address(this)]
        ADD			DAOpaidOut[address(this)]
        SWAP1			DAOpaidOut[address(this)]
        DUP2			DAOpaidOut[address(this)]
        MSTORE			DAOpaidOut[address(this)]
        PUSH 20		DAOpaidOut[address(this)]
        ADD			DAOpaidOut[address(this)]
        PUSH 0		DAOpaidOut[address(this)]
        SHA3			DAOpaidOut[address(this)]
        PUSH 0		DAOpaidOut[address(this)]
        POP			DAOpaidOut[address(this)]
        SLOAD			DAOpaidOut[address(this)]
        LT			DAOpaidOut[address(this)] < paidOutToBeMoved
        ISZERO			if (DAOpaidOut[address(this)] < paidOutToBeMoved)...
        PUSH [tag315]		if (DAOpaidOut[address(this)] < paidOutToBeMoved)...
        JUMPI			if (DAOpaidOut[address(this)] < paidOutToBeMoved)...
        PUSH [ErrorTag]		throw
        JUMP			throw
      tag315: 
        JUMPDEST		if (DAOpaidOut[address(this)] < paidOutToBeMoved)...
        DUP1			paidOutToBeMoved
        PUSH 9		DAOpaidOut
        PUSH 0		DAOpaidOut
        POP			DAOpaidOut
        PUSH 0		DAOpaidOut[address(this)]
        ADDRESS			this
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		DAOpaidOut[address(this)]
        AND			DAOpaidOut[address(this)]
        DUP2			DAOpaidOut[address(this)]
        MSTORE			DAOpaidOut[address(this)]
        PUSH 20		DAOpaidOut[address(this)]
        ADD			DAOpaidOut[address(this)]
        SWAP1			DAOpaidOut[address(this)]
        DUP2			DAOpaidOut[address(this)]
        MSTORE			DAOpaidOut[address(this)]
        PUSH 20		DAOpaidOut[address(this)]
        ADD			DAOpaidOut[address(this)]
        PUSH 0		DAOpaidOut[address(this)]
        SHA3			DAOpaidOut[address(this)]
        PUSH 0		DAOpaidOut[address(this)]
        DUP3			DAOpaidOut[address(this)] -= paidOutToBeMoved
        DUP3			DAOpaidOut[address(this)] -= paidOutToBeMoved
        DUP3			DAOpaidOut[address(this)] -= paidOutToBeMoved
        POP			DAOpaidOut[address(this)] -= paidOutToBeMoved
        SLOAD			DAOpaidOut[address(this)] -= paidOutToBeMoved
        SUB			DAOpaidOut[address(this)] -= paidOutToBeMoved
        SWAP3			DAOpaidOut[address(this)] -= paidOutToBeMoved
        POP			DAOpaidOut[address(this)] -= paidOutToBeMoved
        POP			DAOpaidOut[address(this)] -= paidOutToBeMoved
        DUP2			DAOpaidOut[address(this)] -= paidOutToBeMoved
        SWAP1			DAOpaidOut[address(this)] -= paidOutToBeMoved
        SSTORE			DAOpaidOut[address(this)] -= paidOutToBeMoved
        POP			DAOpaidOut[address(this)] -= paidOutToBeMoved
        PUSH 0		0
        CALLER			msg.sender
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		Transfer(msg.sender, 0, balances[msg.sender])
        AND			Transfer(msg.sender, 0, balances[msg.sender])
        PUSH DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF		Transfer(msg.sender, 0, balances[msg.sender])
        PUSH 14		balances
        PUSH 0		balances
        POP			balances
        PUSH 0		balances[msg.sender]
        CALLER			msg.sender
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		balances[msg.sender]
        AND			balances[msg.sender]
        DUP2			balances[msg.sender]
        MSTORE			balances[msg.sender]
        PUSH 20		balances[msg.sender]
        ADD			balances[msg.sender]
        SWAP1			balances[msg.sender]
        DUP2			balances[msg.sender]
        MSTORE			balances[msg.sender]
        PUSH 20		balances[msg.sender]
        ADD			balances[msg.sender]
        PUSH 0		balances[msg.sender]
        SHA3			balances[msg.sender]
        PUSH 0		balances[msg.sender]
        POP			balances[msg.sender]
        SLOAD			balances[msg.sender]
        PUSH 40		Transfer(msg.sender, 0, balances[msg.sender])
        MLOAD			Transfer(msg.sender, 0, balances[msg.sender])
        DUP1			Transfer(msg.sender, 0, balances[msg.sender])
        DUP3			Transfer(msg.sender, 0, balances[msg.sender])
        DUP2			Transfer(msg.sender, 0, balances[msg.sender])
        MSTORE			Transfer(msg.sender, 0, balances[msg.sender])
        PUSH 20		Transfer(msg.sender, 0, balances[msg.sender])
        ADD			Transfer(msg.sender, 0, balances[msg.sender])
        SWAP2			Transfer(msg.sender, 0, balances[msg.sender])
        POP			Transfer(msg.sender, 0, balances[msg.sender])
        POP			Transfer(msg.sender, 0, balances[msg.sender])
        PUSH 40		Transfer(msg.sender, 0, balances[msg.sender])
        MLOAD			Transfer(msg.sender, 0, balances[msg.sender])
        DUP1			Transfer(msg.sender, 0, balances[msg.sender])
        SWAP2			Transfer(msg.sender, 0, balances[msg.sender])
        SUB			Transfer(msg.sender, 0, balances[msg.sender])
        SWAP1			Transfer(msg.sender, 0, balances[msg.sender])
        LOG3			Transfer(msg.sender, 0, balances[msg.sender])
        PUSH [tag316]		withdrawRewardFor(msg.sender)
        CALLER			msg.sender
        PUSH [tag317]		withdrawRewardFor
        JUMP	[in]		withdrawRewardFor(msg.sender)
      tag316: 
        JUMPDEST		withdrawRewardFor(msg.sender)
        POP			withdrawRewardFor(msg.sender)
        PUSH 14		balances
        PUSH 0		balances
        POP			balances
        PUSH 0		balances[msg.sender]
        CALLER			msg.sender
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		balances[msg.sender]
        AND			balances[msg.sender]
        DUP2			balances[msg.sender]
        MSTORE			balances[msg.sender]
        PUSH 20		balances[msg.sender]
        ADD			balances[msg.sender]
        SWAP1			balances[msg.sender]
        DUP2			balances[msg.sender]
        MSTORE			balances[msg.sender]
        PUSH 20		balances[msg.sender]
        ADD			balances[msg.sender]
        PUSH 0		balances[msg.sender]
        SHA3			balances[msg.sender]
        PUSH 0		balances[msg.sender]
        POP			balances[msg.sender]
        SLOAD			balances[msg.sender]
        PUSH 16		totalSupply
        PUSH 0		totalSupply
        DUP3			totalSupply -= balances[msg.sender]
        DUP3			totalSupply -= balances[msg.sender]
        DUP3			totalSupply -= balances[msg.sender]
        POP			totalSupply -= balances[msg.sender]
        SLOAD			totalSupply -= balances[msg.sender]
        SUB			totalSupply -= balances[msg.sender]
        SWAP3			totalSupply -= balances[msg.sender]
        POP			totalSupply -= balances[msg.sender]
        POP			totalSupply -= balances[msg.sender]
        DUP2			totalSupply -= balances[msg.sender]
        SWAP1			totalSupply -= balances[msg.sender]
        SSTORE			totalSupply -= balances[msg.sender]
        POP			totalSupply -= balances[msg.sender]
        PUSH 0		0
        PUSH 14		balances
        PUSH 0		balances
        POP			balances
        PUSH 0		balances[msg.sender]
        CALLER			msg.sender
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		balances[msg.sender]
        AND			balances[msg.sender]
        DUP2			balances[msg.sender]
        MSTORE			balances[msg.sender]
        PUSH 20		balances[msg.sender]
        ADD			balances[msg.sender]
        SWAP1			balances[msg.sender]
        DUP2			balances[msg.sender]
        MSTORE			balances[msg.sender]
        PUSH 20		balances[msg.sender]
        ADD			balances[msg.sender]
        PUSH 0		balances[msg.sender]
        SHA3			balances[msg.sender]
        PUSH 0		balances[msg.sender]
        POP			balances[msg.sender] = 0
        DUP2			balances[msg.sender] = 0
        SWAP1			balances[msg.sender] = 0
        SSTORE			balances[msg.sender] = 0
        POP			balances[msg.sender] = 0
        PUSH 0		0
        PUSH A		paidOut
        PUSH 0		paidOut
        POP			paidOut
        PUSH 0		paidOut[msg.sender]
        CALLER			msg.sender
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		paidOut[msg.sender]
        AND			paidOut[msg.sender]
        DUP2			paidOut[msg.sender]
        MSTORE			paidOut[msg.sender]
        PUSH 20		paidOut[msg.sender]
        ADD			paidOut[msg.sender]
        SWAP1			paidOut[msg.sender]
        DUP2			paidOut[msg.sender]
        MSTORE			paidOut[msg.sender]
        PUSH 20		paidOut[msg.sender]
        ADD			paidOut[msg.sender]
        PUSH 0		paidOut[msg.sender]
        SHA3			paidOut[msg.sender]
        PUSH 0		paidOut[msg.sender]
        POP			paidOut[msg.sender] = 0
        DUP2			paidOut[msg.sender] = 0
        SWAP1			paidOut[msg.sender] = 0
        SSTORE			paidOut[msg.sender] = 0
        POP			paidOut[msg.sender] = 0
        PUSH 1		true
        SWAP5			return true
        POP			return true
        PUSH [tag282]		return true
        JUMP			return true
      tag282: 
        JUMPDEST		function splitDAO(...
        POP			function splitDAO(...
        POP			function splitDAO(...
        POP			function splitDAO(...
        POP			function splitDAO(...
        SWAP3			function splitDAO(...
        SWAP2			function splitDAO(...
        POP			function splitDAO(...
        POP			function splitDAO(...
        JUMP	[out]		function splitDAO(...
      tag102: 
        JUMPDEST		function newContract(address _newContract){...
        ADDRESS			this
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		msg.sender != address(this)
        AND			msg.sender != address(this)
        CALLER			msg.sender
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		msg.sender != address(this)
        AND			msg.sender != address(this)
        EQ			msg.sender != address(this)
        ISZERO			msg.sender != address(this)
        DUP1			msg.sender != address(this) || !allowedRecipients[_newContract]
        PUSH [tag319]		msg.sender != address(this) || !allowedRecipients[_newContract]
        JUMPI			msg.sender != address(this) || !allowedRecipients[_newContract]
        POP			msg.sender != address(this) || !allowedRecipients[_newContract]
        PUSH 4		allowedRecipients
        PUSH 0		allowedRecipients
        POP			allowedRecipients
        PUSH 0		allowedRecipients[_newContract]
        DUP3			_newContract
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		allowedRecipients[_newContract]
        AND			allowedRecipients[_newContract]
        DUP2			allowedRecipients[_newContract]
        MSTORE			allowedRecipients[_newContract]
        PUSH 20		allowedRecipients[_newContract]
        ADD			allowedRecipients[_newContract]
        SWAP1			allowedRecipients[_newContract]
        DUP2			allowedRecipients[_newContract]
        MSTORE			allowedRecipients[_newContract]
        PUSH 20		allowedRecipients[_newContract]
        ADD			allowedRecipients[_newContract]
        PUSH 0		allowedRecipients[_newContract]
        SHA3			allowedRecipients[_newContract]
        PUSH 0		allowedRecipients[_newContract]
        SWAP1			allowedRecipients[_newContract]
        SLOAD			allowedRecipients[_newContract]
        SWAP1			allowedRecipients[_newContract]
        PUSH 100		allowedRecipients[_newContract]
        EXP			allowedRecipients[_newContract]
        SWAP1			allowedRecipients[_newContract]
        DIV			allowedRecipients[_newContract]
        PUSH FF		allowedRecipients[_newContract]
        AND			allowedRecipients[_newContract]
        ISZERO			!allowedRecipients[_newContract]
      tag319: 
        JUMPDEST		msg.sender != address(this) || !allowedRecipients[_newContract]
        ISZERO			if (msg.sender != address(this) || !allowedRecipients[_newContract]) return;
        PUSH [tag320]		if (msg.sender != address(this) || !allowedRecipients[_newContract]) return;
        JUMPI			if (msg.sender != address(this) || !allowedRecipients[_newContract]) return;
        PUSH [tag318]		return;
        JUMP			return;
      tag320: 
        JUMPDEST		if (msg.sender != address(this) || !allowedRecipients[_newContract]) return;
        DUP1			_newContract
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		_newContract.call
        AND			_newContract.call
        ADDRESS			this
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		address(this).balance
        AND			address(this).balance
        BALANCE			address(this).balance
        PUSH 40		_newContract.call.value(address(this).balance)()
        MLOAD			_newContract.call.value(address(this).balance)()
        DUP1			_newContract.call.value(address(this).balance)()
        SWAP1			_newContract.call.value(address(this).balance)()
        POP			_newContract.call.value(address(this).balance)()
        PUSH 0		_newContract.call.value(address(this).balance)()
        PUSH 40		_newContract.call.value(address(this).balance)()
        MLOAD			_newContract.call.value(address(this).balance)()
        DUP1			_newContract.call.value(address(this).balance)()
        DUP4			_newContract.call.value(address(this).balance)()
        SUB			_newContract.call.value(address(this).balance)()
        DUP2			_newContract.call.value(address(this).balance)()
        DUP6			_newContract.call.value(address(this).balance)()
        DUP8			_newContract.call.value(address(this).balance)()
        PUSH 8502		_newContract.call.value(address(this).balance)()
        GAS			_newContract.call.value(address(this).balance)()
        SUB			_newContract.call.value(address(this).balance)()
        CALL			_newContract.call.value(address(this).balance)()
        SWAP3			_newContract.call.value(address(this).balance)()
        POP			_newContract.call.value(address(this).balance)()
        POP			_newContract.call.value(address(this).balance)()
        POP			_newContract.call.value(address(this).balance)()
        ISZERO			!_newContract.call.value(address(this).balance)()
        ISZERO			if (!_newContract.call.value(address(this).balance)()) {...
        PUSH [tag321]		if (!_newContract.call.value(address(this).balance)()) {...
        JUMPI			if (!_newContract.call.value(address(this).balance)()) {...
        PUSH [ErrorTag]		throw
        JUMP			throw
      tag321: 
        JUMPDEST		if (!_newContract.call.value(address(this).balance)()) {...
        PUSH 5		rewardToken
        PUSH 0		rewardToken
        POP			rewardToken
        PUSH 0		rewardToken[address(this)]
        ADDRESS			this
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		rewardToken[address(this)]
        AND			rewardToken[address(this)]
        DUP2			rewardToken[address(this)]
        MSTORE			rewardToken[address(this)]
        PUSH 20		rewardToken[address(this)]
        ADD			rewardToken[address(this)]
        SWAP1			rewardToken[address(this)]
        DUP2			rewardToken[address(this)]
        MSTORE			rewardToken[address(this)]
        PUSH 20		rewardToken[address(this)]
        ADD			rewardToken[address(this)]
        PUSH 0		rewardToken[address(this)]
        SHA3			rewardToken[address(this)]
        PUSH 0		rewardToken[address(this)]
        POP			rewardToken[address(this)]
        SLOAD			rewardToken[address(this)]
        PUSH 5		rewardToken
        PUSH 0		rewardToken
        POP			rewardToken
        PUSH 0		rewardToken[_newContract]
        DUP4			_newContract
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		rewardToken[_newContract]
        AND			rewardToken[_newContract]
        DUP2			rewardToken[_newContract]
        MSTORE			rewardToken[_newContract]
        PUSH 20		rewardToken[_newContract]
        ADD			rewardToken[_newContract]
        SWAP1			rewardToken[_newContract]
        DUP2			rewardToken[_newContract]
        MSTORE			rewardToken[_newContract]
        PUSH 20		rewardToken[_newContract]
        ADD			rewardToken[_newContract]
        PUSH 0		rewardToken[_newContract]
        SHA3			rewardToken[_newContract]
        PUSH 0		rewardToken[_newContract]
        DUP3			rewardToken[_newContract] += rewardToken[address(this)]
        DUP3			rewardToken[_newContract] += rewardToken[address(this)]
        DUP3			rewardToken[_newContract] += rewardToken[address(this)]
        POP			rewardToken[_newContract] += rewardToken[address(this)]
        SLOAD			rewardToken[_newContract] += rewardToken[address(this)]
        ADD			rewardToken[_newContract] += rewardToken[address(this)]
        SWAP3			rewardToken[_newContract] += rewardToken[address(this)]
        POP			rewardToken[_newContract] += rewardToken[address(this)]
        POP			rewardToken[_newContract] += rewardToken[address(this)]
        DUP2			rewardToken[_newContract] += rewardToken[address(this)]
        SWAP1			rewardToken[_newContract] += rewardToken[address(this)]
        SSTORE			rewardToken[_newContract] += rewardToken[address(this)]
        POP			rewardToken[_newContract] += rewardToken[address(this)]
        PUSH 0		0
        PUSH 5		rewardToken
        PUSH 0		rewardToken
        POP			rewardToken
        PUSH 0		rewardToken[address(this)]
        ADDRESS			this
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		rewardToken[address(this)]
        AND			rewardToken[address(this)]
        DUP2			rewardToken[address(this)]
        MSTORE			rewardToken[address(this)]
        PUSH 20		rewardToken[address(this)]
        ADD			rewardToken[address(this)]
        SWAP1			rewardToken[address(this)]
        DUP2			rewardToken[address(this)]
        MSTORE			rewardToken[address(this)]
        PUSH 20		rewardToken[address(this)]
        ADD			rewardToken[address(this)]
        PUSH 0		rewardToken[address(this)]
        SHA3			rewardToken[address(this)]
        PUSH 0		rewardToken[address(this)]
        POP			rewardToken[address(this)] = 0
        DUP2			rewardToken[address(this)] = 0
        SWAP1			rewardToken[address(this)] = 0
        SSTORE			rewardToken[address(this)] = 0
        POP			rewardToken[address(this)] = 0
        PUSH 9		DAOpaidOut
        PUSH 0		DAOpaidOut
        POP			DAOpaidOut
        PUSH 0		DAOpaidOut[address(this)]
        ADDRESS			this
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		DAOpaidOut[address(this)]
        AND			DAOpaidOut[address(this)]
        DUP2			DAOpaidOut[address(this)]
        MSTORE			DAOpaidOut[address(this)]
        PUSH 20		DAOpaidOut[address(this)]
        ADD			DAOpaidOut[address(this)]
        SWAP1			DAOpaidOut[address(this)]
        DUP2			DAOpaidOut[address(this)]
        MSTORE			DAOpaidOut[address(this)]
        PUSH 20		DAOpaidOut[address(this)]
        ADD			DAOpaidOut[address(this)]
        PUSH 0		DAOpaidOut[address(this)]
        SHA3			DAOpaidOut[address(this)]
        PUSH 0		DAOpaidOut[address(this)]
        POP			DAOpaidOut[address(this)]
        SLOAD			DAOpaidOut[address(this)]
        PUSH 9		DAOpaidOut
        PUSH 0		DAOpaidOut
        POP			DAOpaidOut
        PUSH 0		DAOpaidOut[_newContract]
        DUP4			_newContract
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		DAOpaidOut[_newContract]
        AND			DAOpaidOut[_newContract]
        DUP2			DAOpaidOut[_newContract]
        MSTORE			DAOpaidOut[_newContract]
        PUSH 20		DAOpaidOut[_newContract]
        ADD			DAOpaidOut[_newContract]
        SWAP1			DAOpaidOut[_newContract]
        DUP2			DAOpaidOut[_newContract]
        MSTORE			DAOpaidOut[_newContract]
        PUSH 20		DAOpaidOut[_newContract]
        ADD			DAOpaidOut[_newContract]
        PUSH 0		DAOpaidOut[_newContract]
        SHA3			DAOpaidOut[_newContract]
        PUSH 0		DAOpaidOut[_newContract]
        DUP3			DAOpaidOut[_newContract] += DAOpaidOut[address(this)]
        DUP3			DAOpaidOut[_newContract] += DAOpaidOut[address(this)]
        DUP3			DAOpaidOut[_newContract] += DAOpaidOut[address(this)]
        POP			DAOpaidOut[_newContract] += DAOpaidOut[address(this)]
        SLOAD			DAOpaidOut[_newContract] += DAOpaidOut[address(this)]
        ADD			DAOpaidOut[_newContract] += DAOpaidOut[address(this)]
        SWAP3			DAOpaidOut[_newContract] += DAOpaidOut[address(this)]
        POP			DAOpaidOut[_newContract] += DAOpaidOut[address(this)]
        POP			DAOpaidOut[_newContract] += DAOpaidOut[address(this)]
        DUP2			DAOpaidOut[_newContract] += DAOpaidOut[address(this)]
        SWAP1			DAOpaidOut[_newContract] += DAOpaidOut[address(this)]
        SSTORE			DAOpaidOut[_newContract] += DAOpaidOut[address(this)]
        POP			DAOpaidOut[_newContract] += DAOpaidOut[address(this)]
        PUSH 0		0
        PUSH 9		DAOpaidOut
        PUSH 0		DAOpaidOut
        POP			DAOpaidOut
        PUSH 0		DAOpaidOut[address(this)]
        ADDRESS			this
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		DAOpaidOut[address(this)]
        AND			DAOpaidOut[address(this)]
        DUP2			DAOpaidOut[address(this)]
        MSTORE			DAOpaidOut[address(this)]
        PUSH 20		DAOpaidOut[address(this)]
        ADD			DAOpaidOut[address(this)]
        SWAP1			DAOpaidOut[address(this)]
        DUP2			DAOpaidOut[address(this)]
        MSTORE			DAOpaidOut[address(this)]
        PUSH 20		DAOpaidOut[address(this)]
        ADD			DAOpaidOut[address(this)]
        PUSH 0		DAOpaidOut[address(this)]
        SHA3			DAOpaidOut[address(this)]
        PUSH 0		DAOpaidOut[address(this)]
        POP			DAOpaidOut[address(this)] = 0
        DUP2			DAOpaidOut[address(this)] = 0
        SWAP1			DAOpaidOut[address(this)] = 0
        SSTORE			DAOpaidOut[address(this)] = 0
        POP			DAOpaidOut[address(this)] = 0
      tag318: 
        JUMPDEST		function newContract(address _newContract){...
        POP			function newContract(address _newContract){...
        JUMP	[out]		function newContract(address _newContract){...
      tag122: 
        JUMPDEST		function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
        PUSH 0		bool _success
        PUSH 0		DAO dao
        PUSH 0		uint reward
        PUSH 0		0
        CALLVALUE			msg.value
        GT			msg.value > 0
        ISZERO			if (msg.value > 0) throw
        PUSH [tag323]		if (msg.value > 0) throw
        JUMPI			if (msg.value > 0) throw
        PUSH [ErrorTag]		throw
        JUMP			throw
      tag323: 
        JUMPDEST		if (msg.value > 0) throw
        CALLER			msg.sender
        SWAP2			DAO dao = DAO(msg.sender)
        POP			DAO dao = DAO(msg.sender)
        PUSH 9		DAOpaidOut
        PUSH 0		DAOpaidOut
        POP			DAOpaidOut
        PUSH 0		DAOpaidOut[msg.sender]
        CALLER			msg.sender
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		DAOpaidOut[msg.sender]
        AND			DAOpaidOut[msg.sender]
        DUP2			DAOpaidOut[msg.sender]
        MSTORE			DAOpaidOut[msg.sender]
        PUSH 20		DAOpaidOut[msg.sender]
        ADD			DAOpaidOut[msg.sender]
        SWAP1			DAOpaidOut[msg.sender]
        DUP2			DAOpaidOut[msg.sender]
        MSTORE			DAOpaidOut[msg.sender]
        PUSH 20		DAOpaidOut[msg.sender]
        ADD			DAOpaidOut[msg.sender]
        PUSH 0		DAOpaidOut[msg.sender]
        SHA3			DAOpaidOut[msg.sender]
        PUSH 0		DAOpaidOut[msg.sender]
        POP			DAOpaidOut[msg.sender]
        SLOAD			DAOpaidOut[msg.sender]
        PUSH 6		totalRewardToken
        PUSH 0		totalRewardToken
        POP			totalRewardToken
        SLOAD			totalRewardToken
        PUSH 8		DAOrewardAccount
        PUSH 0		DAOrewardAccount
        SWAP1			DAOrewardAccount
        SLOAD			DAOrewardAccount
        SWAP1			DAOrewardAccount
        PUSH 100		DAOrewardAccount
        EXP			DAOrewardAccount
        SWAP1			DAOrewardAccount
        DIV			DAOrewardAccount
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		DAOrewardAccount
        AND			DAOrewardAccount
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		DAOrewardAccount.accumulatedInput
        AND			DAOrewardAccount.accumulatedInput
        PUSH D2CC718F		DAOrewardAccount.accumulatedInput
        PUSH 40		DAOrewardAccount.accumulatedInput()
        MLOAD			DAOrewardAccount.accumulatedInput()
        DUP2			DAOrewardAccount.accumulatedInput()
        PUSH 100000000000000000000000000000000000000000000000000000000		DAOrewardAccount.accumulatedInput()
        MUL			DAOrewardAccount.accumulatedInput()
        DUP2			DAOrewardAccount.accumulatedInput()
        MSTORE			DAOrewardAccount.accumulatedInput()
        PUSH 4		DAOrewardAccount.accumulatedInput()
        ADD			DAOrewardAccount.accumulatedInput()
        DUP1			DAOrewardAccount.accumulatedInput()
        SWAP1			DAOrewardAccount.accumulatedInput()
        POP			DAOrewardAccount.accumulatedInput()
        PUSH 20		DAOrewardAccount.accumulatedInput()
        PUSH 40		DAOrewardAccount.accumulatedInput()
        MLOAD			DAOrewardAccount.accumulatedInput()
        DUP1			DAOrewardAccount.accumulatedInput()
        DUP4			DAOrewardAccount.accumulatedInput()
        SUB			DAOrewardAccount.accumulatedInput()
        DUP2			DAOrewardAccount.accumulatedInput()
        PUSH 0		DAOrewardAccount.accumulatedInput()
        DUP8			DAOrewardAccount.accumulatedInput()
        PUSH 61DA		DAOrewardAccount.accumulatedInput()
        GAS			DAOrewardAccount.accumulatedInput()
        SUB			DAOrewardAccount.accumulatedInput()
        CALL			DAOrewardAccount.accumulatedInput()
        ISZERO			DAOrewardAccount.accumulatedInput()
        PUSH [ErrorTag]		DAOrewardAccount.accumulatedInput()
        JUMPI			DAOrewardAccount.accumulatedInput()
        POP			DAOrewardAccount.accumulatedInput()
        POP			DAOrewardAccount.accumulatedInput()
        POP			DAOrewardAccount.accumulatedInput()
        PUSH 40		DAOrewardAccount.accumulatedInput()
        MLOAD			DAOrewardAccount.accumulatedInput()
        DUP1			DAOrewardAccount.accumulatedInput()
        MLOAD			DAOrewardAccount.accumulatedInput()
        SWAP1			DAOrewardAccount.accumulatedInput()
        PUSH 20		DAOrewardAccount.accumulatedInput()
        ADD			DAOrewardAccount.accumulatedInput()
        POP			DAOrewardAccount.accumulatedInput()
        PUSH 5		rewardToken
        PUSH 0		rewardToken
        POP			rewardToken
        PUSH 0		rewardToken[msg.sender]
        CALLER			msg.sender
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		rewardToken[msg.sender]
        AND			rewardToken[msg.sender]
        DUP2			rewardToken[msg.sender]
        MSTORE			rewardToken[msg.sender]
        PUSH 20		rewardToken[msg.sender]
        ADD			rewardToken[msg.sender]
        SWAP1			rewardToken[msg.sender]
        DUP2			rewardToken[msg.sender]
        MSTORE			rewardToken[msg.sender]
        PUSH 20		rewardToken[msg.sender]
        ADD			rewardToken[msg.sender]
        PUSH 0		rewardToken[msg.sender]
        SHA3			rewardToken[msg.sender]
        PUSH 0		rewardToken[msg.sender]
        POP			rewardToken[msg.sender]
        SLOAD			rewardToken[msg.sender]
        MUL			rewardToken[msg.sender] * DAOrewardAccount.accumulatedInput()
        DIV			(rewardToken[msg.sender] * DAOrewardAccount.accumulatedInput()) /...
        LT			(rewardToken[msg.sender] * DAOrewardAccount.accumulatedInput()) /...
        ISZERO			if ((rewardToken[msg.sender] * DAOrewardAccount.accumulatedInput()) /...
        PUSH [tag324]		if ((rewardToken[msg.sender] * DAOrewardAccount.accumulatedInput()) /...
        JUMPI			if ((rewardToken[msg.sender] * DAOrewardAccount.accumulatedInput()) /...
        PUSH [ErrorTag]		throw
        JUMP			throw
      tag324: 
        JUMPDEST		if ((rewardToken[msg.sender] * DAOrewardAccount.accumulatedInput()) /...
        PUSH 9		DAOpaidOut
        PUSH 0		DAOpaidOut
        POP			DAOpaidOut
        PUSH 0		DAOpaidOut[msg.sender]
        CALLER			msg.sender
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		DAOpaidOut[msg.sender]
        AND			DAOpaidOut[msg.sender]
        DUP2			DAOpaidOut[msg.sender]
        MSTORE			DAOpaidOut[msg.sender]
        PUSH 20		DAOpaidOut[msg.sender]
        ADD			DAOpaidOut[msg.sender]
        SWAP1			DAOpaidOut[msg.sender]
        DUP2			DAOpaidOut[msg.sender]
        MSTORE			DAOpaidOut[msg.sender]
        PUSH 20		DAOpaidOut[msg.sender]
        ADD			DAOpaidOut[msg.sender]
        PUSH 0		DAOpaidOut[msg.sender]
        SHA3			DAOpaidOut[msg.sender]
        PUSH 0		DAOpaidOut[msg.sender]
        POP			DAOpaidOut[msg.sender]
        SLOAD			DAOpaidOut[msg.sender]
        PUSH 6		totalRewardToken
        PUSH 0		totalRewardToken
        POP			totalRewardToken
        SLOAD			totalRewardToken
        PUSH 8		DAOrewardAccount
        PUSH 0		DAOrewardAccount
        SWAP1			DAOrewardAccount
        SLOAD			DAOrewardAccount
        SWAP1			DAOrewardAccount
        PUSH 100		DAOrewardAccount
        EXP			DAOrewardAccount
        SWAP1			DAOrewardAccount
        DIV			DAOrewardAccount
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		DAOrewardAccount
        AND			DAOrewardAccount
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		DAOrewardAccount.accumulatedInput
        AND			DAOrewardAccount.accumulatedInput
        PUSH D2CC718F		DAOrewardAccount.accumulatedInput
        PUSH 40		DAOrewardAccount.accumulatedInput()
        MLOAD			DAOrewardAccount.accumulatedInput()
        DUP2			DAOrewardAccount.accumulatedInput()
        PUSH 100000000000000000000000000000000000000000000000000000000		DAOrewardAccount.accumulatedInput()
        MUL			DAOrewardAccount.accumulatedInput()
        DUP2			DAOrewardAccount.accumulatedInput()
        MSTORE			DAOrewardAccount.accumulatedInput()
        PUSH 4		DAOrewardAccount.accumulatedInput()
        ADD			DAOrewardAccount.accumulatedInput()
        DUP1			DAOrewardAccount.accumulatedInput()
        SWAP1			DAOrewardAccount.accumulatedInput()
        POP			DAOrewardAccount.accumulatedInput()
        PUSH 20		DAOrewardAccount.accumulatedInput()
        PUSH 40		DAOrewardAccount.accumulatedInput()
        MLOAD			DAOrewardAccount.accumulatedInput()
        DUP1			DAOrewardAccount.accumulatedInput()
        DUP4			DAOrewardAccount.accumulatedInput()
        SUB			DAOrewardAccount.accumulatedInput()
        DUP2			DAOrewardAccount.accumulatedInput()
        PUSH 0		DAOrewardAccount.accumulatedInput()
        DUP8			DAOrewardAccount.accumulatedInput()
        PUSH 61DA		DAOrewardAccount.accumulatedInput()
        GAS			DAOrewardAccount.accumulatedInput()
        SUB			DAOrewardAccount.accumulatedInput()
        CALL			DAOrewardAccount.accumulatedInput()
        ISZERO			DAOrewardAccount.accumulatedInput()
        PUSH [ErrorTag]		DAOrewardAccount.accumulatedInput()
        JUMPI			DAOrewardAccount.accumulatedInput()
        POP			DAOrewardAccount.accumulatedInput()
        POP			DAOrewardAccount.accumulatedInput()
        POP			DAOrewardAccount.accumulatedInput()
        PUSH 40		DAOrewardAccount.accumulatedInput()
        MLOAD			DAOrewardAccount.accumulatedInput()
        DUP1			DAOrewardAccount.accumulatedInput()
        MLOAD			DAOrewardAccount.accumulatedInput()
        SWAP1			DAOrewardAccount.accumulatedInput()
        PUSH 20		DAOrewardAccount.accumulatedInput()
        ADD			DAOrewardAccount.accumulatedInput()
        POP			DAOrewardAccount.accumulatedInput()
        PUSH 5		rewardToken
        PUSH 0		rewardToken
        POP			rewardToken
        PUSH 0		rewardToken[msg.sender]
        CALLER			msg.sender
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		rewardToken[msg.sender]
        AND			rewardToken[msg.sender]
        DUP2			rewardToken[msg.sender]
        MSTORE			rewardToken[msg.sender]
        PUSH 20		rewardToken[msg.sender]
        ADD			rewardToken[msg.sender]
        SWAP1			rewardToken[msg.sender]
        DUP2			rewardToken[msg.sender]
        MSTORE			rewardToken[msg.sender]
        PUSH 20		rewardToken[msg.sender]
        ADD			rewardToken[msg.sender]
        PUSH 0		rewardToken[msg.sender]
        SHA3			rewardToken[msg.sender]
        PUSH 0		rewardToken[msg.sender]
        POP			rewardToken[msg.sender]
        SLOAD			rewardToken[msg.sender]
        MUL			rewardToken[msg.sender] * DAOrewardAccount.accumulatedInput()
        DIV			(rewardToken[msg.sender] * DAOrewardAccount.accumulatedInput()) /...
        SUB			(rewardToken[msg.sender] * DAOrewardAccount.accumulatedInput()) /...
        SWAP1			uint reward =...
        POP			uint reward =...
        DUP4			_toMembers
        ISZERO			if(_toMembers) {...
        PUSH [tag325]		if(_toMembers) {...
        JUMPI			if(_toMembers) {...
        PUSH 8		DAOrewardAccount
        PUSH 0		DAOrewardAccount
        SWAP1			DAOrewardAccount
        SLOAD			DAOrewardAccount
        SWAP1			DAOrewardAccount
        PUSH 100		DAOrewardAccount
        EXP			DAOrewardAccount
        SWAP1			DAOrewardAccount
        DIV			DAOrewardAccount
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		DAOrewardAccount
        AND			DAOrewardAccount
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		DAOrewardAccount.payOut
        AND			DAOrewardAccount.payOut
        PUSH 221038A		DAOrewardAccount.payOut
        DUP4			dao
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		dao.rewardAccount
        AND			dao.rewardAccount
        PUSH E708203		dao.rewardAccount
        PUSH 40		dao.rewardAccount()
        MLOAD			dao.rewardAccount()
        DUP2			dao.rewardAccount()
        PUSH 100000000000000000000000000000000000000000000000000000000		dao.rewardAccount()
        MUL			dao.rewardAccount()
        DUP2			dao.rewardAccount()
        MSTORE			dao.rewardAccount()
        PUSH 4		dao.rewardAccount()
        ADD			dao.rewardAccount()
        DUP1			dao.rewardAccount()
        SWAP1			dao.rewardAccount()
        POP			dao.rewardAccount()
        PUSH 20		dao.rewardAccount()
        PUSH 40		dao.rewardAccount()
        MLOAD			dao.rewardAccount()
        DUP1			dao.rewardAccount()
        DUP4			dao.rewardAccount()
        SUB			dao.rewardAccount()
        DUP2			dao.rewardAccount()
        PUSH 0		dao.rewardAccount()
        DUP8			dao.rewardAccount()
        PUSH 61DA		dao.rewardAccount()
        GAS			dao.rewardAccount()
        SUB			dao.rewardAccount()
        CALL			dao.rewardAccount()
        ISZERO			dao.rewardAccount()
        PUSH [ErrorTag]		dao.rewardAccount()
        JUMPI			dao.rewardAccount()
        POP			dao.rewardAccount()
        POP			dao.rewardAccount()
        POP			dao.rewardAccount()
        PUSH 40		dao.rewardAccount()
        MLOAD			dao.rewardAccount()
        DUP1			dao.rewardAccount()
        MLOAD			dao.rewardAccount()
        SWAP1			dao.rewardAccount()
        PUSH 20		dao.rewardAccount()
        ADD			dao.rewardAccount()
        POP			dao.rewardAccount()
        DUP4			reward
        PUSH 40		DAOrewardAccount.payOut(dao.rewardAccount(), reward)
        MLOAD			DAOrewardAccount.payOut(dao.rewardAccount(), reward)
        DUP4			DAOrewardAccount.payOut(dao.rewardAccount(), reward)
        PUSH 100000000000000000000000000000000000000000000000000000000		DAOrewardAccount.payOut(dao.rewardAccount(), reward)
        MUL			DAOrewardAccount.payOut(dao.rewardAccount(), reward)
        DUP2			DAOrewardAccount.payOut(dao.rewardAccount(), reward)
        MSTORE			DAOrewardAccount.payOut(dao.rewardAccount(), reward)
        PUSH 4		DAOrewardAccount.payOut(dao.rewardAccount(), reward)
        ADD			DAOrewardAccount.payOut(dao.rewardAccount(), reward)
        DUP1			DAOrewardAccount.payOut(dao.rewardAccount(), reward)
        DUP4			DAOrewardAccount.payOut(dao.rewardAccount(), reward)
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		DAOrewardAccount.payOut(dao.rewardAccount(), reward)
        AND			DAOrewardAccount.payOut(dao.rewardAccount(), reward)
        DUP2			DAOrewardAccount.payOut(dao.rewardAccount(), reward)
        MSTORE			DAOrewardAccount.payOut(dao.rewardAccount(), reward)
        PUSH 20		DAOrewardAccount.payOut(dao.rewardAccount(), reward)
        ADD			DAOrewardAccount.payOut(dao.rewardAccount(), reward)
        DUP3			DAOrewardAccount.payOut(dao.rewardAccount(), reward)
        DUP2			DAOrewardAccount.payOut(dao.rewardAccount(), reward)
        MSTORE			DAOrewardAccount.payOut(dao.rewardAccount(), reward)
        PUSH 20		DAOrewardAccount.payOut(dao.rewardAccount(), reward)
        ADD			DAOrewardAccount.payOut(dao.rewardAccount(), reward)
        SWAP3			DAOrewardAccount.payOut(dao.rewardAccount(), reward)
        POP			DAOrewardAccount.payOut(dao.rewardAccount(), reward)
        POP			DAOrewardAccount.payOut(dao.rewardAccount(), reward)
        POP			DAOrewardAccount.payOut(dao.rewardAccount(), reward)
        PUSH 20		DAOrewardAccount.payOut(dao.rewardAccount(), reward)
        PUSH 40		DAOrewardAccount.payOut(dao.rewardAccount(), reward)
        MLOAD			DAOrewardAccount.payOut(dao.rewardAccount(), reward)
        DUP1			DAOrewardAccount.payOut(dao.rewardAccount(), reward)
        DUP4			DAOrewardAccount.payOut(dao.rewardAccount(), reward)
        SUB			DAOrewardAccount.payOut(dao.rewardAccount(), reward)
        DUP2			DAOrewardAccount.payOut(dao.rewardAccount(), reward)
        PUSH 0		DAOrewardAccount.payOut(dao.rewardAccount(), reward)
        DUP8			DAOrewardAccount.payOut(dao.rewardAccount(), reward)
        PUSH 61DA		DAOrewardAccount.payOut(dao.rewardAccount(), reward)
        GAS			DAOrewardAccount.payOut(dao.rewardAccount(), reward)
        SUB			DAOrewardAccount.payOut(dao.rewardAccount(), reward)
        CALL			DAOrewardAccount.payOut(dao.rewardAccount(), reward)
        ISZERO			DAOrewardAccount.payOut(dao.rewardAccount(), reward)
        PUSH [ErrorTag]		DAOrewardAccount.payOut(dao.rewardAccount(), reward)
        JUMPI			DAOrewardAccount.payOut(dao.rewardAccount(), reward)
        POP			DAOrewardAccount.payOut(dao.rewardAccount(), reward)
        POP			DAOrewardAccount.payOut(dao.rewardAccount(), reward)
        POP			DAOrewardAccount.payOut(dao.rewardAccount(), reward)
        PUSH 40		DAOrewardAccount.payOut(dao.rewardAccount(), reward)
        MLOAD			DAOrewardAccount.payOut(dao.rewardAccount(), reward)
        DUP1			DAOrewardAccount.payOut(dao.rewardAccount(), reward)
        MLOAD			DAOrewardAccount.payOut(dao.rewardAccount(), reward)
        SWAP1			DAOrewardAccount.payOut(dao.rewardAccount(), reward)
        PUSH 20		DAOrewardAccount.payOut(dao.rewardAccount(), reward)
        ADD			DAOrewardAccount.payOut(dao.rewardAccount(), reward)
        POP			DAOrewardAccount.payOut(dao.rewardAccount(), reward)
        ISZERO			!DAOrewardAccount.payOut(dao.rewardAccount(), reward)
        ISZERO			if (!DAOrewardAccount.payOut(dao.rewardAccount(), reward))...
        PUSH [tag326]		if (!DAOrewardAccount.payOut(dao.rewardAccount(), reward))...
        JUMPI			if (!DAOrewardAccount.payOut(dao.rewardAccount(), reward))...
        PUSH [ErrorTag]		throw
        JUMP			throw
      tag326: 
        JUMPDEST		if (!DAOrewardAccount.payOut(dao.rewardAccount(), reward))...
        PUSH [tag327]		if(_toMembers) {...
        JUMP			if(_toMembers) {...
      tag325: 
        JUMPDEST		if(_toMembers) {...
        PUSH 8		DAOrewardAccount
        PUSH 0		DAOrewardAccount
        SWAP1			DAOrewardAccount
        SLOAD			DAOrewardAccount
        SWAP1			DAOrewardAccount
        PUSH 100		DAOrewardAccount
        EXP			DAOrewardAccount
        SWAP1			DAOrewardAccount
        DIV			DAOrewardAccount
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		DAOrewardAccount
        AND			DAOrewardAccount
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		DAOrewardAccount.payOut
        AND			DAOrewardAccount.payOut
        PUSH 221038A		DAOrewardAccount.payOut
        DUP4			dao
        DUP4			reward
        PUSH 40		DAOrewardAccount.payOut(dao, reward)
        MLOAD			DAOrewardAccount.payOut(dao, reward)
        DUP4			DAOrewardAccount.payOut(dao, reward)
        PUSH 100000000000000000000000000000000000000000000000000000000		DAOrewardAccount.payOut(dao, reward)
        MUL			DAOrewardAccount.payOut(dao, reward)
        DUP2			DAOrewardAccount.payOut(dao, reward)
        MSTORE			DAOrewardAccount.payOut(dao, reward)
        PUSH 4		DAOrewardAccount.payOut(dao, reward)
        ADD			DAOrewardAccount.payOut(dao, reward)
        DUP1			DAOrewardAccount.payOut(dao, reward)
        DUP4			DAOrewardAccount.payOut(dao, reward)
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		DAOrewardAccount.payOut(dao, reward)
        AND			DAOrewardAccount.payOut(dao, reward)
        DUP2			DAOrewardAccount.payOut(dao, reward)
        MSTORE			DAOrewardAccount.payOut(dao, reward)
        PUSH 20		DAOrewardAccount.payOut(dao, reward)
        ADD			DAOrewardAccount.payOut(dao, reward)
        DUP3			DAOrewardAccount.payOut(dao, reward)
        DUP2			DAOrewardAccount.payOut(dao, reward)
        MSTORE			DAOrewardAccount.payOut(dao, reward)
        PUSH 20		DAOrewardAccount.payOut(dao, reward)
        ADD			DAOrewardAccount.payOut(dao, reward)
        SWAP3			DAOrewardAccount.payOut(dao, reward)
        POP			DAOrewardAccount.payOut(dao, reward)
        POP			DAOrewardAccount.payOut(dao, reward)
        POP			DAOrewardAccount.payOut(dao, reward)
        PUSH 20		DAOrewardAccount.payOut(dao, reward)
        PUSH 40		DAOrewardAccount.payOut(dao, reward)
        MLOAD			DAOrewardAccount.payOut(dao, reward)
        DUP1			DAOrewardAccount.payOut(dao, reward)
        DUP4			DAOrewardAccount.payOut(dao, reward)
        SUB			DAOrewardAccount.payOut(dao, reward)
        DUP2			DAOrewardAccount.payOut(dao, reward)
        PUSH 0		DAOrewardAccount.payOut(dao, reward)
        DUP8			DAOrewardAccount.payOut(dao, reward)
        PUSH 61DA		DAOrewardAccount.payOut(dao, reward)
        GAS			DAOrewardAccount.payOut(dao, reward)
        SUB			DAOrewardAccount.payOut(dao, reward)
        CALL			DAOrewardAccount.payOut(dao, reward)
        ISZERO			DAOrewardAccount.payOut(dao, reward)
        PUSH [ErrorTag]		DAOrewardAccount.payOut(dao, reward)
        JUMPI			DAOrewardAccount.payOut(dao, reward)
        POP			DAOrewardAccount.payOut(dao, reward)
        POP			DAOrewardAccount.payOut(dao, reward)
        POP			DAOrewardAccount.payOut(dao, reward)
        PUSH 40		DAOrewardAccount.payOut(dao, reward)
        MLOAD			DAOrewardAccount.payOut(dao, reward)
        DUP1			DAOrewardAccount.payOut(dao, reward)
        MLOAD			DAOrewardAccount.payOut(dao, reward)
        SWAP1			DAOrewardAccount.payOut(dao, reward)
        PUSH 20		DAOrewardAccount.payOut(dao, reward)
        ADD			DAOrewardAccount.payOut(dao, reward)
        POP			DAOrewardAccount.payOut(dao, reward)
        ISZERO			!DAOrewardAccount.payOut(dao, reward)
        ISZERO			if (!DAOrewardAccount.payOut(dao, reward))...
        PUSH [tag328]		if (!DAOrewardAccount.payOut(dao, reward))...
        JUMPI			if (!DAOrewardAccount.payOut(dao, reward))...
        PUSH [ErrorTag]		throw
        JUMP			throw
      tag328: 
        JUMPDEST		if (!DAOrewardAccount.payOut(dao, reward))...
      tag327: 
        JUMPDEST		if(_toMembers) {...
        DUP1			reward
        PUSH 9		DAOpaidOut
        PUSH 0		DAOpaidOut
        POP			DAOpaidOut
        PUSH 0		DAOpaidOut[msg.sender]
        CALLER			msg.sender
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		DAOpaidOut[msg.sender]
        AND			DAOpaidOut[msg.sender]
        DUP2			DAOpaidOut[msg.sender]
        MSTORE			DAOpaidOut[msg.sender]
        PUSH 20		DAOpaidOut[msg.sender]
        ADD			DAOpaidOut[msg.sender]
        SWAP1			DAOpaidOut[msg.sender]
        DUP2			DAOpaidOut[msg.sender]
        MSTORE			DAOpaidOut[msg.sender]
        PUSH 20		DAOpaidOut[msg.sender]
        ADD			DAOpaidOut[msg.sender]
        PUSH 0		DAOpaidOut[msg.sender]
        SHA3			DAOpaidOut[msg.sender]
        PUSH 0		DAOpaidOut[msg.sender]
        DUP3			DAOpaidOut[msg.sender] += reward
        DUP3			DAOpaidOut[msg.sender] += reward
        DUP3			DAOpaidOut[msg.sender] += reward
        POP			DAOpaidOut[msg.sender] += reward
        SLOAD			DAOpaidOut[msg.sender] += reward
        ADD			DAOpaidOut[msg.sender] += reward
        SWAP3			DAOpaidOut[msg.sender] += reward
        POP			DAOpaidOut[msg.sender] += reward
        POP			DAOpaidOut[msg.sender] += reward
        DUP2			DAOpaidOut[msg.sender] += reward
        SWAP1			DAOpaidOut[msg.sender] += reward
        SSTORE			DAOpaidOut[msg.sender] += reward
        POP			DAOpaidOut[msg.sender] += reward
        PUSH 1		true
        SWAP3			return true
        POP			return true
        PUSH [tag322]		return true
        JUMP			return true
      tag322: 
        JUMPDEST		function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
        POP			function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
        POP			function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
        SWAP2			function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
        SWAP1			function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
        POP			function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
        JUMP	[out]		function retrieveDAOReward(bool _toMembers) external noEther returns (bool _success) {...
      tag134: 
        JUMPDEST		function getMyReward() noEther returns (bool _success) {...
        PUSH 0		bool _success
        PUSH 0		0
        CALLVALUE			msg.value
        GT			msg.value > 0
        ISZERO			if (msg.value > 0) throw
        PUSH [tag330]		if (msg.value > 0) throw
        JUMPI			if (msg.value > 0) throw
        PUSH [ErrorTag]		throw
        JUMP			throw
      tag330: 
        JUMPDEST		if (msg.value > 0) throw
        PUSH [tag331]		withdrawRewardFor(msg.sender)
        CALLER			msg.sender
        PUSH [tag317]		withdrawRewardFor
        JUMP	[in]		withdrawRewardFor(msg.sender)
      tag331: 
        JUMPDEST		withdrawRewardFor(msg.sender)
        SWAP1			return withdrawRewardFor(msg.sender)
        POP			return withdrawRewardFor(msg.sender)
        PUSH [tag329]		return withdrawRewardFor(msg.sender)
        JUMP			return withdrawRewardFor(msg.sender)
      tag329: 
        JUMPDEST		function getMyReward() noEther returns (bool _success) {...
        SWAP1			function getMyReward() noEther returns (bool _success) {...
        JUMP	[out]		function getMyReward() noEther returns (bool _success) {...
      tag72: 
        JUMPDEST		uint256 public totalSupply
        PUSH 16		uint256 public totalSupply
        PUSH 0		uint256 public totalSupply
        POP			uint256 public totalSupply
        SLOAD			uint256 public totalSupply
        DUP2			uint256 public totalSupply
        JUMP	[out]		uint256 public totalSupply
      tag104: 
        JUMPDEST		function balanceOf(address _owner) constant returns (uint256 balance) {...
        PUSH 0		uint256 balance
        PUSH 14		balances
        PUSH 0		balances
        POP			balances
        PUSH 0		balances[_owner]
        DUP4			_owner
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		balances[_owner]
        AND			balances[_owner]
        DUP2			balances[_owner]
        MSTORE			balances[_owner]
        PUSH 20		balances[_owner]
        ADD			balances[_owner]
        SWAP1			balances[_owner]
        DUP2			balances[_owner]
        MSTORE			balances[_owner]
        PUSH 20		balances[_owner]
        ADD			balances[_owner]
        PUSH 0		balances[_owner]
        SHA3			balances[_owner]
        PUSH 0		balances[_owner]
        POP			balances[_owner]
        SLOAD			balances[_owner]
        SWAP1			return balances[_owner]
        POP			return balances[_owner]
        PUSH [tag332]		return balances[_owner]
        JUMP			return balances[_owner]
      tag332: 
        JUMPDEST		function balanceOf(address _owner) constant returns (uint256 balance) {...
        SWAP2			function balanceOf(address _owner) constant returns (uint256 balance) {...
        SWAP1			function balanceOf(address _owner) constant returns (uint256 balance) {...
        POP			function balanceOf(address _owner) constant returns (uint256 balance) {...
        JUMP	[out]		function balanceOf(address _owner) constant returns (uint256 balance) {...
      tag125: 
        JUMPDEST		function transfer(address _to, uint256 _value) returns (bool success) {...
        PUSH 0		bool success
        PUSH 11		isFueled
        PUSH 0		isFueled
        SWAP1			isFueled
        SLOAD			isFueled
        SWAP1			isFueled
        PUSH 100		isFueled
        EXP			isFueled
        SWAP1			isFueled
        DIV			isFueled
        PUSH FF		isFueled
        AND			isFueled
        DUP1			isFueled...
        ISZERO			isFueled...
        PUSH [tag334]		isFueled...
        JUMPI			isFueled...
        POP			isFueled...
        PUSH F		closingTime
        PUSH 0		closingTime
        POP			closingTime
        SLOAD			closingTime
        TIMESTAMP			now
        GT			now > closingTime
      tag334: 
        JUMPDEST		isFueled...
        DUP1			isFueled...
        ISZERO			isFueled...
        PUSH [tag335]		isFueled...
        JUMPI			isFueled...
        POP			isFueled...
        PUSH [tag336]		isBlocked(msg.sender)
        CALLER			msg.sender
        PUSH [tag337]		isBlocked
        JUMP	[in]		isBlocked(msg.sender)
      tag336: 
        JUMPDEST		isBlocked(msg.sender)
        ISZERO			!isBlocked(msg.sender)
      tag335: 
        JUMPDEST		isFueled...
        DUP1			isFueled...
        ISZERO			isFueled...
        PUSH [tag338]		isFueled...
        JUMPI			isFueled...
        POP			isFueled...
        PUSH [tag339]		transferPaidOut(msg.sender, _to, _value)
        CALLER			msg.sender
        DUP5			_to
        DUP5			_value
        PUSH [tag340]		transferPaidOut
        JUMP	[in]		transferPaidOut(msg.sender, _to, _value)
      tag339: 
        JUMPDEST		transferPaidOut(msg.sender, _to, _value)
      tag338: 
        JUMPDEST		isFueled...
        DUP1			isFueled...
        ISZERO			isFueled...
        PUSH [tag341]		isFueled...
        JUMPI			isFueled...
        POP			isFueled...
        PUSH [tag342]		super.transfer(_to, _value)
        DUP4			_to
        DUP4			_value
        PUSH [tag343]		super.transfer
        JUMP	[in]		super.transfer(_to, _value)
      tag342: 
        JUMPDEST		super.transfer(_to, _value)
      tag341: 
        JUMPDEST		isFueled...
        ISZERO			if (isFueled...
        PUSH [tag344]		if (isFueled...
        JUMPI			if (isFueled...
        PUSH 1		true
        SWAP1			return true
        POP			return true
        PUSH [tag333]		return true
        JUMP			return true
        PUSH [tag345]		if (isFueled...
        JUMP			if (isFueled...
      tag344: 
        JUMPDEST		if (isFueled...
        PUSH [ErrorTag]		throw
        JUMP			throw
      tag345: 
        JUMPDEST		if (isFueled...
      tag333: 
        JUMPDEST		function transfer(address _to, uint256 _value) returns (bool success) {...
        SWAP3			function transfer(address _to, uint256 _value) returns (bool success) {...
        SWAP2			function transfer(address _to, uint256 _value) returns (bool success) {...
        POP			function transfer(address _to, uint256 _value) returns (bool success) {...
        POP			function transfer(address _to, uint256 _value) returns (bool success) {...
        JUMP	[out]		function transfer(address _to, uint256 _value) returns (bool success) {...
      tag92: 
        JUMPDEST		function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
        PUSH 0		bool success
        PUSH [tag347]		getMyReward()
        PUSH [tag134]		getMyReward
        JUMP	[in]		getMyReward()
      tag347: 
        JUMPDEST		getMyReward()
        ISZERO			!getMyReward()
        ISZERO			if (!getMyReward())...
        PUSH [tag348]		if (!getMyReward())...
        JUMPI			if (!getMyReward())...
        PUSH [ErrorTag]		throw
        JUMP			throw
      tag348: 
        JUMPDEST		if (!getMyReward())...
        PUSH [tag349]		transfer(_to, _value)
        DUP4			_to
        DUP4			_value
        PUSH [tag125]		transfer
        JUMP	[in]		transfer(_to, _value)
      tag349: 
        JUMPDEST		transfer(_to, _value)
        SWAP1			return transfer(_to, _value)
        POP			return transfer(_to, _value)
        PUSH [tag346]		return transfer(_to, _value)
        JUMP			return transfer(_to, _value)
      tag346: 
        JUMPDEST		function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
        SWAP3			function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
        SWAP2			function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
        POP			function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
        POP			function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
        JUMP	[out]		function transferWithoutReward(address _to, uint256 _value) returns (bool success) {...
      tag80: 
        JUMPDEST		function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
        PUSH 0		bool success
        PUSH 11		isFueled
        PUSH 0		isFueled
        SWAP1			isFueled
        SLOAD			isFueled
        SWAP1			isFueled
        PUSH 100		isFueled
        EXP			isFueled
        SWAP1			isFueled
        DIV			isFueled
        PUSH FF		isFueled
        AND			isFueled
        DUP1			isFueled...
        ISZERO			isFueled...
        PUSH [tag351]		isFueled...
        JUMPI			isFueled...
        POP			isFueled...
        PUSH F		closingTime
        PUSH 0		closingTime
        POP			closingTime
        SLOAD			closingTime
        TIMESTAMP			now
        GT			now > closingTime
      tag351: 
        JUMPDEST		isFueled...
        DUP1			isFueled...
        ISZERO			isFueled...
        PUSH [tag352]		isFueled...
        JUMPI			isFueled...
        POP			isFueled...
        PUSH [tag353]		isBlocked(_from)
        DUP5			_from
        PUSH [tag337]		isBlocked
        JUMP	[in]		isBlocked(_from)
      tag353: 
        JUMPDEST		isBlocked(_from)
        ISZERO			!isBlocked(_from)
      tag352: 
        JUMPDEST		isFueled...
        DUP1			isFueled...
        ISZERO			isFueled...
        PUSH [tag354]		isFueled...
        JUMPI			isFueled...
        POP			isFueled...
        PUSH [tag355]		transferPaidOut(_from, _to, _value)
        DUP5			_from
        DUP5			_to
        DUP5			_value
        PUSH [tag340]		transferPaidOut
        JUMP	[in]		transferPaidOut(_from, _to, _value)
      tag355: 
        JUMPDEST		transferPaidOut(_from, _to, _value)
      tag354: 
        JUMPDEST		isFueled...
        DUP1			isFueled...
        ISZERO			isFueled...
        PUSH [tag356]		isFueled...
        JUMPI			isFueled...
        POP			isFueled...
        PUSH [tag357]		super.transferFrom(_from, _to, _value)
        DUP5			_from
        DUP5			_to
        DUP5			_value
        PUSH [tag358]		super.transferFrom
        JUMP	[in]		super.transferFrom(_from, _to, _value)
      tag357: 
        JUMPDEST		super.transferFrom(_from, _to, _value)
      tag356: 
        JUMPDEST		isFueled...
        ISZERO			if (isFueled...
        PUSH [tag359]		if (isFueled...
        JUMPI			if (isFueled...
        PUSH 1		true
        SWAP1			return true
        POP			return true
        PUSH [tag350]		return true
        JUMP			return true
        PUSH [tag360]		if (isFueled...
        JUMP			if (isFueled...
      tag359: 
        JUMPDEST		if (isFueled...
        PUSH [ErrorTag]		throw
        JUMP			throw
      tag360: 
        JUMPDEST		if (isFueled...
      tag350: 
        JUMPDEST		function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
        SWAP4			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
        SWAP3			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
        POP			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
        POP			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
        POP			function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
        JUMP	[out]		function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {...
      tag138: 
        JUMPDEST		function transferFromWithoutReward(...
        PUSH 0		bool success
        PUSH [tag362]		withdrawRewardFor(_from)
        DUP5			_from
        PUSH [tag317]		withdrawRewardFor
        JUMP	[in]		withdrawRewardFor(_from)
      tag362: 
        JUMPDEST		withdrawRewardFor(_from)
        ISZERO			!withdrawRewardFor(_from)
        ISZERO			if (!withdrawRewardFor(_from))...
        PUSH [tag363]		if (!withdrawRewardFor(_from))...
        JUMPI			if (!withdrawRewardFor(_from))...
        PUSH [ErrorTag]		throw
        JUMP			throw
      tag363: 
        JUMPDEST		if (!withdrawRewardFor(_from))...
        PUSH [tag364]		transferFrom(_from, _to, _value)
        DUP5			_from
        DUP5			_to
        DUP5			_value
        PUSH [tag80]		transferFrom
        JUMP	[in]		transferFrom(_from, _to, _value)
      tag364: 
        JUMPDEST		transferFrom(_from, _to, _value)
        SWAP1			return transferFrom(_from, _to, _value)
        POP			return transferFrom(_from, _to, _value)
        PUSH [tag361]		return transferFrom(_from, _to, _value)
        JUMP			return transferFrom(_from, _to, _value)
      tag361: 
        JUMPDEST		function transferFromWithoutReward(...
        SWAP4			function transferFromWithoutReward(...
        SWAP3			function transferFromWithoutReward(...
        POP			function transferFromWithoutReward(...
        POP			function transferFromWithoutReward(...
        POP			function transferFromWithoutReward(...
        JUMP	[out]		function transferFromWithoutReward(...
      tag142: 
        JUMPDEST		function changeProposalDeposit(uint _proposalDeposit) noEther external {...
        PUSH 0		0
        CALLVALUE			msg.value
        GT			msg.value > 0
        ISZERO			if (msg.value > 0) throw
        PUSH [tag366]		if (msg.value > 0) throw
        JUMPI			if (msg.value > 0) throw
        PUSH [ErrorTag]		throw
        JUMP			throw
      tag366: 
        JUMPDEST		if (msg.value > 0) throw
        ADDRESS			this
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		msg.sender != address(this)
        AND			msg.sender != address(this)
        CALLER			msg.sender
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		msg.sender != address(this)
        AND			msg.sender != address(this)
        EQ			msg.sender != address(this)
        ISZERO			msg.sender != address(this)
        DUP1			msg.sender != address(this) || _proposalDeposit > (actualBalance() + rewardToken[address(this)])...
        PUSH [tag367]		msg.sender != address(this) || _proposalDeposit > (actualBalance() + rewardToken[address(this)])...
        JUMPI			msg.sender != address(this) || _proposalDeposit > (actualBalance() + rewardToken[address(this)])...
        POP			msg.sender != address(this) || _proposalDeposit > (actualBalance() + rewardToken[address(this)])...
        PUSH 64		100
        PUSH 5		rewardToken
        PUSH 0		rewardToken
        POP			rewardToken
        PUSH 0		rewardToken[address(this)]
        ADDRESS			this
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		rewardToken[address(this)]
        AND			rewardToken[address(this)]
        DUP2			rewardToken[address(this)]
        MSTORE			rewardToken[address(this)]
        PUSH 20		rewardToken[address(this)]
        ADD			rewardToken[address(this)]
        SWAP1			rewardToken[address(this)]
        DUP2			rewardToken[address(this)]
        MSTORE			rewardToken[address(this)]
        PUSH 20		rewardToken[address(this)]
        ADD			rewardToken[address(this)]
        PUSH 0		rewardToken[address(this)]
        SHA3			rewardToken[address(this)]
        PUSH 0		rewardToken[address(this)]
        POP			rewardToken[address(this)]
        SLOAD			rewardToken[address(this)]
        PUSH [tag368]		actualBalance()
        PUSH [tag86]		actualBalance
        JUMP	[in]		actualBalance()
      tag368: 
        JUMPDEST		actualBalance()
        ADD			actualBalance() + rewardToken[address(this)]
        DIV			(actualBalance() + rewardToken[address(this)])...
        DUP2			_proposalDeposit
        GT			_proposalDeposit > (actualBalance() + rewardToken[address(this)])...
      tag367: 
        JUMPDEST		msg.sender != address(this) || _proposalDeposit > (actualBalance() + rewardToken[address(this)])...
        ISZERO			if (msg.sender != address(this) || _proposalDeposit > (actualBalance() + rewardToken[address(this)])...
        PUSH [tag369]		if (msg.sender != address(this) || _proposalDeposit > (actualBalance() + rewardToken[address(this)])...
        JUMPI			if (msg.sender != address(this) || _proposalDeposit > (actualBalance() + rewardToken[address(this)])...
        PUSH [ErrorTag]		throw
        JUMP			throw
      tag369: 
        JUMPDEST		if (msg.sender != address(this) || _proposalDeposit > (actualBalance() + rewardToken[address(this)])...
        DUP1			_proposalDeposit
        PUSH C		proposalDeposit
        PUSH 0		proposalDeposit
        POP			proposalDeposit = _proposalDeposit
        DUP2			proposalDeposit = _proposalDeposit
        SWAP1			proposalDeposit = _proposalDeposit
        SSTORE			proposalDeposit = _proposalDeposit
        POP			proposalDeposit = _proposalDeposit
      tag365: 
        JUMPDEST		function changeProposalDeposit(uint _proposalDeposit) noEther external {...
        POP			function changeProposalDeposit(uint _proposalDeposit) noEther external {...
        JUMP	[out]		function changeProposalDeposit(uint _proposalDeposit) noEther external {...
      tag106: 
        JUMPDEST		function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
        PUSH 0		bool _success
        PUSH 0		0
        CALLVALUE			msg.value
        GT			msg.value > 0
        ISZERO			if (msg.value > 0) throw
        PUSH [tag371]		if (msg.value > 0) throw
        JUMPI			if (msg.value > 0) throw
        PUSH [ErrorTag]		throw
        JUMP			throw
      tag371: 
        JUMPDEST		if (msg.value > 0) throw
        PUSH 3		curator
        PUSH 0		curator
        SWAP1			curator
        SLOAD			curator
        SWAP1			curator
        PUSH 100		curator
        EXP			curator
        SWAP1			curator
        DIV			curator
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		curator
        AND			curator
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		msg.sender != curator
        AND			msg.sender != curator
        CALLER			msg.sender
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		msg.sender != curator
        AND			msg.sender != curator
        EQ			msg.sender != curator
        ISZERO			msg.sender != curator
        ISZERO			if (msg.sender != curator)...
        PUSH [tag372]		if (msg.sender != curator)...
        JUMPI			if (msg.sender != curator)...
        PUSH [ErrorTag]		throw
        JUMP			throw
      tag372: 
        JUMPDEST		if (msg.sender != curator)...
        DUP2			_allowed
        PUSH 4		allowedRecipients
        PUSH 0		allowedRecipients
        POP			allowedRecipients
        PUSH 0		allowedRecipients[_recipient]
        DUP6			_recipient
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		allowedRecipients[_recipient]
        AND			allowedRecipients[_recipient]
        DUP2			allowedRecipients[_recipient]
        MSTORE			allowedRecipients[_recipient]
        PUSH 20		allowedRecipients[_recipient]
        ADD			allowedRecipients[_recipient]
        SWAP1			allowedRecipients[_recipient]
        DUP2			allowedRecipients[_recipient]
        MSTORE			allowedRecipients[_recipient]
        PUSH 20		allowedRecipients[_recipient]
        ADD			allowedRecipients[_recipient]
        PUSH 0		allowedRecipients[_recipient]
        SHA3			allowedRecipients[_recipient]
        PUSH 0		allowedRecipients[_recipient]
        PUSH 100		allowedRecipients[_recipient] = _allowed
        EXP			allowedRecipients[_recipient] = _allowed
        DUP2			allowedRecipients[_recipient] = _allowed
        SLOAD			allowedRecipients[_recipient] = _allowed
        DUP2			allowedRecipients[_recipient] = _allowed
        PUSH FF		allowedRecipients[_recipient] = _allowed
        MUL			allowedRecipients[_recipient] = _allowed
        NOT			allowedRecipients[_recipient] = _allowed
        AND			allowedRecipients[_recipient] = _allowed
        SWAP1			allowedRecipients[_recipient] = _allowed
        DUP4			allowedRecipients[_recipient] = _allowed
        MUL			allowedRecipients[_recipient] = _allowed
        OR			allowedRecipients[_recipient] = _allowed
        SWAP1			allowedRecipients[_recipient] = _allowed
        SSTORE			allowedRecipients[_recipient] = _allowed
        POP			allowedRecipients[_recipient] = _allowed
        DUP3			_recipient
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		AllowedRecipientChanged(_recipient, _allowed)
        AND			AllowedRecipientChanged(_recipient, _allowed)
        PUSH 73AD2A153C8B67991DF9459024950B318A609782CEE8C7EEDA47B905F9BAA91F		AllowedRecipientChanged(_recipient, _allowed)
        DUP4			_allowed
        PUSH 40		AllowedRecipientChanged(_recipient, _allowed)
        MLOAD			AllowedRecipientChanged(_recipient, _allowed)
        DUP1			AllowedRecipientChanged(_recipient, _allowed)
        DUP3			AllowedRecipientChanged(_recipient, _allowed)
        DUP2			AllowedRecipientChanged(_recipient, _allowed)
        MSTORE			AllowedRecipientChanged(_recipient, _allowed)
        PUSH 20		AllowedRecipientChanged(_recipient, _allowed)
        ADD			AllowedRecipientChanged(_recipient, _allowed)
        SWAP2			AllowedRecipientChanged(_recipient, _allowed)
        POP			AllowedRecipientChanged(_recipient, _allowed)
        POP			AllowedRecipientChanged(_recipient, _allowed)
        PUSH 40		AllowedRecipientChanged(_recipient, _allowed)
        MLOAD			AllowedRecipientChanged(_recipient, _allowed)
        DUP1			AllowedRecipientChanged(_recipient, _allowed)
        SWAP2			AllowedRecipientChanged(_recipient, _allowed)
        SUB			AllowedRecipientChanged(_recipient, _allowed)
        SWAP1			AllowedRecipientChanged(_recipient, _allowed)
        LOG2			AllowedRecipientChanged(_recipient, _allowed)
        PUSH 1		true
        SWAP1			return true
        POP			return true
        PUSH [tag370]		return true
        JUMP			return true
      tag370: 
        JUMPDEST		function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
        SWAP3			function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
        SWAP2			function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
        POP			function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
        POP			function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
        JUMP	[out]		function changeAllowedRecipients(address _recipient, bool _allowed) noEther external returns (bool _success) {...
      tag86: 
        JUMPDEST		function actualBalance() constant returns (uint _actualBalance) {...
        PUSH 0		uint _actualBalance
        PUSH D		sumOfProposalDeposits
        PUSH 0		sumOfProposalDeposits
        POP			sumOfProposalDeposits
        SLOAD			sumOfProposalDeposits
        ADDRESS			this
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		this.balance
        AND			this.balance
        BALANCE			this.balance
        SUB			this.balance - sumOfProposalDeposits
        SWAP1			return this.balance - sumOfProposalDeposits
        POP			return this.balance - sumOfProposalDeposits
        PUSH [tag373]		return this.balance - sumOfProposalDeposits
        JUMP			return this.balance - sumOfProposalDeposits
      tag373: 
        JUMPDEST		function actualBalance() constant returns (uint _actualBalance) {...
        SWAP1			function actualBalance() constant returns (uint _actualBalance) {...
        JUMP	[out]		function actualBalance() constant returns (uint _actualBalance) {...
      tag108: 
        JUMPDEST		function halveMinQuorum() returns (bool _success) {...
        PUSH 0		bool _success
        PUSH E6B680		25 weeks
        TIMESTAMP			now
        SUB			now - quorumHalvingPeriod
        PUSH 2		lastTimeMinQuorumMet
        PUSH 0		lastTimeMinQuorumMet
        POP			lastTimeMinQuorumMet
        SLOAD			lastTimeMinQuorumMet
        LT			lastTimeMinQuorumMet < (now - quorumHalvingPeriod)
        DUP1			lastTimeMinQuorumMet < (now - quorumHalvingPeriod) || msg.sender == curator
        PUSH [tag375]		lastTimeMinQuorumMet < (now - quorumHalvingPeriod) || msg.sender == curator
        JUMPI			lastTimeMinQuorumMet < (now - quorumHalvingPeriod) || msg.sender == curator
        POP			lastTimeMinQuorumMet < (now - quorumHalvingPeriod) || msg.sender == curator
        PUSH 3		curator
        PUSH 0		curator
        SWAP1			curator
        SLOAD			curator
        SWAP1			curator
        PUSH 100		curator
        EXP			curator
        SWAP1			curator
        DIV			curator
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		curator
        AND			curator
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		msg.sender == curator
        AND			msg.sender == curator
        CALLER			msg.sender
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		msg.sender == curator
        AND			msg.sender == curator
        EQ			msg.sender == curator
      tag375: 
        JUMPDEST		lastTimeMinQuorumMet < (now - quorumHalvingPeriod) || msg.sender == curator
        DUP1			(lastTimeMinQuorumMet < (now - quorumHalvingPeriod) || msg.sender == curator)...
        ISZERO			(lastTimeMinQuorumMet < (now - quorumHalvingPeriod) || msg.sender == curator)...
        PUSH [tag376]		(lastTimeMinQuorumMet < (now - quorumHalvingPeriod) || msg.sender == curator)...
        JUMPI			(lastTimeMinQuorumMet < (now - quorumHalvingPeriod) || msg.sender == curator)...
        POP			(lastTimeMinQuorumMet < (now - quorumHalvingPeriod) || msg.sender == curator)...
        PUSH 127500		2 weeks
        TIMESTAMP			now
        SUB			now - minProposalDebatePeriod
        PUSH 2		lastTimeMinQuorumMet
        PUSH 0		lastTimeMinQuorumMet
        POP			lastTimeMinQuorumMet
        SLOAD			lastTimeMinQuorumMet
        LT			lastTimeMinQuorumMet < (now - minProposalDebatePeriod)
      tag376: 
        JUMPDEST		(lastTimeMinQuorumMet < (now - quorumHalvingPeriod) || msg.sender == curator)...
        ISZERO			if ((lastTimeMinQuorumMet < (now - quorumHalvingPeriod) || msg.sender == curator)...
        PUSH [tag377]		if ((lastTimeMinQuorumMet < (now - quorumHalvingPeriod) || msg.sender == curator)...
        JUMPI			if ((lastTimeMinQuorumMet < (now - quorumHalvingPeriod) || msg.sender == curator)...
        TIMESTAMP			now
        PUSH 2		lastTimeMinQuorumMet
        PUSH 0		lastTimeMinQuorumMet
        POP			lastTimeMinQuorumMet = now
        DUP2			lastTimeMinQuorumMet = now
        SWAP1			lastTimeMinQuorumMet = now
        SSTORE			lastTimeMinQuorumMet = now
        POP			lastTimeMinQuorumMet = now
        PUSH 2		2
        PUSH 1		minQuorumDivisor
        PUSH 0		minQuorumDivisor
        DUP3			minQuorumDivisor *= 2
        DUP3			minQuorumDivisor *= 2
        DUP3			minQuorumDivisor *= 2
        POP			minQuorumDivisor *= 2
        SLOAD			minQuorumDivisor *= 2
        MUL			minQuorumDivisor *= 2
        SWAP3			minQuorumDivisor *= 2
        POP			minQuorumDivisor *= 2
        POP			minQuorumDivisor *= 2
        DUP2			minQuorumDivisor *= 2
        SWAP1			minQuorumDivisor *= 2
        SSTORE			minQuorumDivisor *= 2
        POP			minQuorumDivisor *= 2
        PUSH 1		true
        SWAP1			return true
        POP			return true
        PUSH [tag374]		return true
        JUMP			return true
        PUSH [tag378]		if ((lastTimeMinQuorumMet < (now - quorumHalvingPeriod) || msg.sender == curator)...
        JUMP			if ((lastTimeMinQuorumMet < (now - quorumHalvingPeriod) || msg.sender == curator)...
      tag377: 
        JUMPDEST		if ((lastTimeMinQuorumMet < (now - quorumHalvingPeriod) || msg.sender == curator)...
        PUSH 0		false
        SWAP1			return false
        POP			return false
        PUSH [tag374]		return false
        JUMP			return false
      tag378: 
        JUMPDEST		if ((lastTimeMinQuorumMet < (now - quorumHalvingPeriod) || msg.sender == curator)...
      tag374: 
        JUMPDEST		function halveMinQuorum() returns (bool _success) {...
        SWAP1			function halveMinQuorum() returns (bool _success) {...
        JUMP	[out]		function halveMinQuorum() returns (bool _success) {...
      tag118: 
        JUMPDEST		function numberOfProposals() constant returns (uint _numberOfProposals) {...
        PUSH 0		uint _numberOfProposals
        PUSH 1		1
        PUSH 0		proposals
        PUSH 0		proposals
        POP			proposals
        DUP1			proposals.length
        SLOAD			proposals.length
        SWAP1			proposals.length
        POP			proposals.length
        SUB			proposals.length - 1
        SWAP1			return proposals.length - 1
        POP			return proposals.length - 1
        PUSH [tag379]		return proposals.length - 1
        JUMP			return proposals.length - 1
      tag379: 
        JUMPDEST		function numberOfProposals() constant returns (uint _numberOfProposals) {...
        SWAP1			function numberOfProposals() constant returns (uint _numberOfProposals) {...
        JUMP	[out]		function numberOfProposals() constant returns (uint _numberOfProposals) {...
      tag130: 
        JUMPDEST		function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
        PUSH 0		address _newDAO
        PUSH 0		proposals
        PUSH 0		proposals
        POP			proposals
        DUP3			_proposalID
        DUP2			proposals[_proposalID]
        SLOAD			proposals[_proposalID]
        DUP2			proposals[_proposalID]
        LT			proposals[_proposalID]
        ISZERO			proposals[_proposalID]
        PUSH [ErrorTag]		proposals[_proposalID]
        JUMPI			proposals[_proposalID]
        SWAP1			proposals[_proposalID]
        PUSH 0		proposals[_proposalID]
        MSTORE			proposals[_proposalID]
        PUSH 20		proposals[_proposalID]
        PUSH 0		proposals[_proposalID]
        SHA3			proposals[_proposalID]
        SWAP1			proposals[_proposalID]
        PUSH E		proposals[_proposalID]
        MUL			proposals[_proposalID]
        ADD			proposals[_proposalID]
        PUSH 0		proposals[_proposalID]
      tag381: 
        JUMPDEST		proposals[_proposalID]
        POP			proposals[_proposalID]
        PUSH 8		proposals[_proposalID].splitData
        ADD			proposals[_proposalID].splitData
        PUSH 0		proposals[_proposalID].splitData
        POP			proposals[_proposalID].splitData
        PUSH 0		0
        DUP2			proposals[_proposalID].splitData[0]
        SLOAD			proposals[_proposalID].splitData[0]
        DUP2			proposals[_proposalID].splitData[0]
        LT			proposals[_proposalID].splitData[0]
        ISZERO			proposals[_proposalID].splitData[0]
        PUSH [ErrorTag]		proposals[_proposalID].splitData[0]
        JUMPI			proposals[_proposalID].splitData[0]
        SWAP1			proposals[_proposalID].splitData[0]
        PUSH 0		proposals[_proposalID].splitData[0]
        MSTORE			proposals[_proposalID].splitData[0]
        PUSH 20		proposals[_proposalID].splitData[0]
        PUSH 0		proposals[_proposalID].splitData[0]
        SHA3			proposals[_proposalID].splitData[0]
        SWAP1			proposals[_proposalID].splitData[0]
        PUSH 4		proposals[_proposalID].splitData[0]
        MUL			proposals[_proposalID].splitData[0]
        ADD			proposals[_proposalID].splitData[0]
        PUSH 0		proposals[_proposalID].splitData[0]
      tag382: 
        JUMPDEST		proposals[_proposalID].splitData[0]
        POP			proposals[_proposalID].splitData[0]
        PUSH 3		proposals[_proposalID].splitData[0].newDAO
        ADD			proposals[_proposalID].splitData[0].newDAO
        PUSH 0		proposals[_proposalID].splitData[0].newDAO
        SWAP1			proposals[_proposalID].splitData[0].newDAO
        SLOAD			proposals[_proposalID].splitData[0].newDAO
        SWAP1			proposals[_proposalID].splitData[0].newDAO
        PUSH 100		proposals[_proposalID].splitData[0].newDAO
        EXP			proposals[_proposalID].splitData[0].newDAO
        SWAP1			proposals[_proposalID].splitData[0].newDAO
        DIV			proposals[_proposalID].splitData[0].newDAO
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		proposals[_proposalID].splitData[0].newDAO
        AND			proposals[_proposalID].splitData[0].newDAO
        SWAP1			return proposals[_proposalID].splitData[0].newDAO
        POP			return proposals[_proposalID].splitData[0].newDAO
        PUSH [tag380]		return proposals[_proposalID].splitData[0].newDAO
        JUMP			return proposals[_proposalID].splitData[0].newDAO
      tag380: 
        JUMPDEST		function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
        SWAP2			function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
        SWAP1			function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
        POP			function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
        JUMP	[out]		function getNewDAOAddress(uint _proposalID) constant returns (address _newDAO) {...
      tag82: 
        JUMPDEST		function unblockMe() returns (bool) {...
        PUSH 0		bool
        PUSH [tag384]		isBlocked(msg.sender)
        CALLER			msg.sender
        PUSH [tag337]		isBlocked
        JUMP	[in]		isBlocked(msg.sender)
      tag384: 
        JUMPDEST		isBlocked(msg.sender)
        SWAP1			return isBlocked(msg.sender)
        POP			return isBlocked(msg.sender)
        PUSH [tag383]		return isBlocked(msg.sender)
        JUMP			return isBlocked(msg.sender)
      tag383: 
        JUMPDEST		function unblockMe() returns (bool) {...
        SWAP1			function unblockMe() returns (bool) {...
        JUMP	[out]		function unblockMe() returns (bool) {...
      tag343: 
        JUMPDEST		function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
        PUSH 0		bool success
        PUSH 0		0
        CALLVALUE			msg.value
        GT			msg.value > 0
        ISZERO			if (msg.value > 0) throw
        PUSH [tag386]		if (msg.value > 0) throw
        JUMPI			if (msg.value > 0) throw
        PUSH [ErrorTag]		throw
        JUMP			throw
      tag386: 
        JUMPDEST		if (msg.value > 0) throw
        DUP2			_amount
        PUSH 14		balances
        PUSH 0		balances
        POP			balances
        PUSH 0		balances[msg.sender]
        CALLER			msg.sender
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		balances[msg.sender]
        AND			balances[msg.sender]
        DUP2			balances[msg.sender]
        MSTORE			balances[msg.sender]
        PUSH 20		balances[msg.sender]
        ADD			balances[msg.sender]
        SWAP1			balances[msg.sender]
        DUP2			balances[msg.sender]
        MSTORE			balances[msg.sender]
        PUSH 20		balances[msg.sender]
        ADD			balances[msg.sender]
        PUSH 0		balances[msg.sender]
        SHA3			balances[msg.sender]
        PUSH 0		balances[msg.sender]
        POP			balances[msg.sender]
        SLOAD			balances[msg.sender]
        LT			balances[msg.sender] >= _amount
        ISZERO			balances[msg.sender] >= _amount
        DUP1			balances[msg.sender] >= _amount && _amount > 0
        ISZERO			balances[msg.sender] >= _amount && _amount > 0
        PUSH [tag387]		balances[msg.sender] >= _amount && _amount > 0
        JUMPI			balances[msg.sender] >= _amount && _amount > 0
        POP			balances[msg.sender] >= _amount && _amount > 0
        PUSH 0		0
        DUP3			_amount
        GT			_amount > 0
      tag387: 
        JUMPDEST		balances[msg.sender] >= _amount && _amount > 0
        ISZERO			if (balances[msg.sender] >= _amount && _amount > 0) {...
        PUSH [tag388]		if (balances[msg.sender] >= _amount && _amount > 0) {...
        JUMPI			if (balances[msg.sender] >= _amount && _amount > 0) {...
        DUP2			_amount
        PUSH 14		balances
        PUSH 0		balances
        POP			balances
        PUSH 0		balances[msg.sender]
        CALLER			msg.sender
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		balances[msg.sender]
        AND			balances[msg.sender]
        DUP2			balances[msg.sender]
        MSTORE			balances[msg.sender]
        PUSH 20		balances[msg.sender]
        ADD			balances[msg.sender]
        SWAP1			balances[msg.sender]
        DUP2			balances[msg.sender]
        MSTORE			balances[msg.sender]
        PUSH 20		balances[msg.sender]
        ADD			balances[msg.sender]
        PUSH 0		balances[msg.sender]
        SHA3			balances[msg.sender]
        PUSH 0		balances[msg.sender]
        DUP3			balances[msg.sender] -= _amount
        DUP3			balances[msg.sender] -= _amount
        DUP3			balances[msg.sender] -= _amount
        POP			balances[msg.sender] -= _amount
        SLOAD			balances[msg.sender] -= _amount
        SUB			balances[msg.sender] -= _amount
        SWAP3			balances[msg.sender] -= _amount
        POP			balances[msg.sender] -= _amount
        POP			balances[msg.sender] -= _amount
        DUP2			balances[msg.sender] -= _amount
        SWAP1			balances[msg.sender] -= _amount
        SSTORE			balances[msg.sender] -= _amount
        POP			balances[msg.sender] -= _amount
        DUP2			_amount
        PUSH 14		balances
        PUSH 0		balances
        POP			balances
        PUSH 0		balances[_to]
        DUP6			_to
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		balances[_to]
        AND			balances[_to]
        DUP2			balances[_to]
        MSTORE			balances[_to]
        PUSH 20		balances[_to]
        ADD			balances[_to]
        SWAP1			balances[_to]
        DUP2			balances[_to]
        MSTORE			balances[_to]
        PUSH 20		balances[_to]
        ADD			balances[_to]
        PUSH 0		balances[_to]
        SHA3			balances[_to]
        PUSH 0		balances[_to]
        DUP3			balances[_to] += _amount
        DUP3			balances[_to] += _amount
        DUP3			balances[_to] += _amount
        POP			balances[_to] += _amount
        SLOAD			balances[_to] += _amount
        ADD			balances[_to] += _amount
        SWAP3			balances[_to] += _amount
        POP			balances[_to] += _amount
        POP			balances[_to] += _amount
        DUP2			balances[_to] += _amount
        SWAP1			balances[_to] += _amount
        SSTORE			balances[_to] += _amount
        POP			balances[_to] += _amount
        DUP3			_to
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		Transfer(msg.sender, _to, _amount)
        AND			Transfer(msg.sender, _to, _amount)
        CALLER			msg.sender
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		Transfer(msg.sender, _to, _amount)
        AND			Transfer(msg.sender, _to, _amount)
        PUSH DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF		Transfer(msg.sender, _to, _amount)
        DUP5			_amount
        PUSH 40		Transfer(msg.sender, _to, _amount)
        MLOAD			Transfer(msg.sender, _to, _amount)
        DUP1			Transfer(msg.sender, _to, _amount)
        DUP3			Transfer(msg.sender, _to, _amount)
        DUP2			Transfer(msg.sender, _to, _amount)
        MSTORE			Transfer(msg.sender, _to, _amount)
        PUSH 20		Transfer(msg.sender, _to, _amount)
        ADD			Transfer(msg.sender, _to, _amount)
        SWAP2			Transfer(msg.sender, _to, _amount)
        POP			Transfer(msg.sender, _to, _amount)
        POP			Transfer(msg.sender, _to, _amount)
        PUSH 40		Transfer(msg.sender, _to, _amount)
        MLOAD			Transfer(msg.sender, _to, _amount)
        DUP1			Transfer(msg.sender, _to, _amount)
        SWAP2			Transfer(msg.sender, _to, _amount)
        SUB			Transfer(msg.sender, _to, _amount)
        SWAP1			Transfer(msg.sender, _to, _amount)
        LOG3			Transfer(msg.sender, _to, _amount)
        PUSH 1		true
        SWAP1			return true
        POP			return true
        PUSH [tag385]		return true
        JUMP			return true
        PUSH [tag389]		if (balances[msg.sender] >= _amount && _amount > 0) {...
        JUMP			if (balances[msg.sender] >= _amount && _amount > 0) {...
      tag388: 
        JUMPDEST		if (balances[msg.sender] >= _amount && _amount > 0) {...
        PUSH 0		false
        SWAP1			return false
        POP			return false
        PUSH [tag385]		return false
        JUMP			return false
      tag389: 
        JUMPDEST		if (balances[msg.sender] >= _amount && _amount > 0) {...
      tag385: 
        JUMPDEST		function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
        SWAP3			function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
        SWAP2			function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
        POP			function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
        POP			function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
        JUMP	[out]		function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
      tag358: 
        JUMPDEST		function transferFrom(...
        PUSH 0		bool success
        PUSH 0		0
        CALLVALUE			msg.value
        GT			msg.value > 0
        ISZERO			if (msg.value > 0) throw
        PUSH [tag391]		if (msg.value > 0) throw
        JUMPI			if (msg.value > 0) throw
        PUSH [ErrorTag]		throw
        JUMP			throw
      tag391: 
        JUMPDEST		if (msg.value > 0) throw
        DUP2			_amount
        PUSH 14		balances
        PUSH 0		balances
        POP			balances
        PUSH 0		balances[_from]
        DUP7			_from
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		balances[_from]
        AND			balances[_from]
        DUP2			balances[_from]
        MSTORE			balances[_from]
        PUSH 20		balances[_from]
        ADD			balances[_from]
        SWAP1			balances[_from]
        DUP2			balances[_from]
        MSTORE			balances[_from]
        PUSH 20		balances[_from]
        ADD			balances[_from]
        PUSH 0		balances[_from]
        SHA3			balances[_from]
        PUSH 0		balances[_from]
        POP			balances[_from]
        SLOAD			balances[_from]
        LT			balances[_from] >= _amount
        ISZERO			balances[_from] >= _amount
        DUP1			balances[_from] >= _amount...
        ISZERO			balances[_from] >= _amount...
        PUSH [tag392]		balances[_from] >= _amount...
        JUMPI			balances[_from] >= _amount...
        POP			balances[_from] >= _amount...
        DUP2			_amount
        PUSH 15		allowed
        PUSH 0		allowed
        POP			allowed
        PUSH 0		allowed[_from]
        DUP7			_from
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		allowed[_from]
        AND			allowed[_from]
        DUP2			allowed[_from]
        MSTORE			allowed[_from]
        PUSH 20		allowed[_from]
        ADD			allowed[_from]
        SWAP1			allowed[_from]
        DUP2			allowed[_from]
        MSTORE			allowed[_from]
        PUSH 20		allowed[_from]
        ADD			allowed[_from]
        PUSH 0		allowed[_from]
        SHA3			allowed[_from]
        PUSH 0		allowed[_from]
        POP			allowed[_from]
        PUSH 0		allowed[_from][msg.sender]
        CALLER			msg.sender
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		allowed[_from][msg.sender]
        AND			allowed[_from][msg.sender]
        DUP2			allowed[_from][msg.sender]
        MSTORE			allowed[_from][msg.sender]
        PUSH 20		allowed[_from][msg.sender]
        ADD			allowed[_from][msg.sender]
        SWAP1			allowed[_from][msg.sender]
        DUP2			allowed[_from][msg.sender]
        MSTORE			allowed[_from][msg.sender]
        PUSH 20		allowed[_from][msg.sender]
        ADD			allowed[_from][msg.sender]
        PUSH 0		allowed[_from][msg.sender]
        SHA3			allowed[_from][msg.sender]
        PUSH 0		allowed[_from][msg.sender]
        POP			allowed[_from][msg.sender]
        SLOAD			allowed[_from][msg.sender]
        LT			allowed[_from][msg.sender] >= _amount
        ISZERO			allowed[_from][msg.sender] >= _amount
      tag392: 
        JUMPDEST		balances[_from] >= _amount...
        DUP1			balances[_from] >= _amount...
        ISZERO			balances[_from] >= _amount...
        PUSH [tag393]		balances[_from] >= _amount...
        JUMPI			balances[_from] >= _amount...
        POP			balances[_from] >= _amount...
        PUSH 0		0
        DUP3			_amount
        GT			_amount > 0
      tag393: 
        JUMPDEST		balances[_from] >= _amount...
        ISZERO			if (balances[_from] >= _amount...
        PUSH [tag394]		if (balances[_from] >= _amount...
        JUMPI			if (balances[_from] >= _amount...
        DUP2			_amount
        PUSH 14		balances
        PUSH 0		balances
        POP			balances
        PUSH 0		balances[_to]
        DUP6			_to
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		balances[_to]
        AND			balances[_to]
        DUP2			balances[_to]
        MSTORE			balances[_to]
        PUSH 20		balances[_to]
        ADD			balances[_to]
        SWAP1			balances[_to]
        DUP2			balances[_to]
        MSTORE			balances[_to]
        PUSH 20		balances[_to]
        ADD			balances[_to]
        PUSH 0		balances[_to]
        SHA3			balances[_to]
        PUSH 0		balances[_to]
        DUP3			balances[_to] += _amount
        DUP3			balances[_to] += _amount
        DUP3			balances[_to] += _amount
        POP			balances[_to] += _amount
        SLOAD			balances[_to] += _amount
        ADD			balances[_to] += _amount
        SWAP3			balances[_to] += _amount
        POP			balances[_to] += _amount
        POP			balances[_to] += _amount
        DUP2			balances[_to] += _amount
        SWAP1			balances[_to] += _amount
        SSTORE			balances[_to] += _amount
        POP			balances[_to] += _amount
        DUP2			_amount
        PUSH 14		balances
        PUSH 0		balances
        POP			balances
        PUSH 0		balances[_from]
        DUP7			_from
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		balances[_from]
        AND			balances[_from]
        DUP2			balances[_from]
        MSTORE			balances[_from]
        PUSH 20		balances[_from]
        ADD			balances[_from]
        SWAP1			balances[_from]
        DUP2			balances[_from]
        MSTORE			balances[_from]
        PUSH 20		balances[_from]
        ADD			balances[_from]
        PUSH 0		balances[_from]
        SHA3			balances[_from]
        PUSH 0		balances[_from]
        DUP3			balances[_from] -= _amount
        DUP3			balances[_from] -= _amount
        DUP3			balances[_from] -= _amount
        POP			balances[_from] -= _amount
        SLOAD			balances[_from] -= _amount
        SUB			balances[_from] -= _amount
        SWAP3			balances[_from] -= _amount
        POP			balances[_from] -= _amount
        POP			balances[_from] -= _amount
        DUP2			balances[_from] -= _amount
        SWAP1			balances[_from] -= _amount
        SSTORE			balances[_from] -= _amount
        POP			balances[_from] -= _amount
        DUP2			_amount
        PUSH 15		allowed
        PUSH 0		allowed
        POP			allowed
        PUSH 0		allowed[_from]
        DUP7			_from
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		allowed[_from]
        AND			allowed[_from]
        DUP2			allowed[_from]
        MSTORE			allowed[_from]
        PUSH 20		allowed[_from]
        ADD			allowed[_from]
        SWAP1			allowed[_from]
        DUP2			allowed[_from]
        MSTORE			allowed[_from]
        PUSH 20		allowed[_from]
        ADD			allowed[_from]
        PUSH 0		allowed[_from]
        SHA3			allowed[_from]
        PUSH 0		allowed[_from]
        POP			allowed[_from]
        PUSH 0		allowed[_from][msg.sender]
        CALLER			msg.sender
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		allowed[_from][msg.sender]
        AND			allowed[_from][msg.sender]
        DUP2			allowed[_from][msg.sender]
        MSTORE			allowed[_from][msg.sender]
        PUSH 20		allowed[_from][msg.sender]
        ADD			allowed[_from][msg.sender]
        SWAP1			allowed[_from][msg.sender]
        DUP2			allowed[_from][msg.sender]
        MSTORE			allowed[_from][msg.sender]
        PUSH 20		allowed[_from][msg.sender]
        ADD			allowed[_from][msg.sender]
        PUSH 0		allowed[_from][msg.sender]
        SHA3			allowed[_from][msg.sender]
        PUSH 0		allowed[_from][msg.sender]
        DUP3			allowed[_from][msg.sender] -= _amount
        DUP3			allowed[_from][msg.sender] -= _amount
        DUP3			allowed[_from][msg.sender] -= _amount
        POP			allowed[_from][msg.sender] -= _amount
        SLOAD			allowed[_from][msg.sender] -= _amount
        SUB			allowed[_from][msg.sender] -= _amount
        SWAP3			allowed[_from][msg.sender] -= _amount
        POP			allowed[_from][msg.sender] -= _amount
        POP			allowed[_from][msg.sender] -= _amount
        DUP2			allowed[_from][msg.sender] -= _amount
        SWAP1			allowed[_from][msg.sender] -= _amount
        SSTORE			allowed[_from][msg.sender] -= _amount
        POP			allowed[_from][msg.sender] -= _amount
        DUP3			_to
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		Transfer(_from, _to, _amount)
        AND			Transfer(_from, _to, _amount)
        DUP5			_from
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		Transfer(_from, _to, _amount)
        AND			Transfer(_from, _to, _amount)
        PUSH DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF		Transfer(_from, _to, _amount)
        DUP5			_amount
        PUSH 40		Transfer(_from, _to, _amount)
        MLOAD			Transfer(_from, _to, _amount)
        DUP1			Transfer(_from, _to, _amount)
        DUP3			Transfer(_from, _to, _amount)
        DUP2			Transfer(_from, _to, _amount)
        MSTORE			Transfer(_from, _to, _amount)
        PUSH 20		Transfer(_from, _to, _amount)
        ADD			Transfer(_from, _to, _amount)
        SWAP2			Transfer(_from, _to, _amount)
        POP			Transfer(_from, _to, _amount)
        POP			Transfer(_from, _to, _amount)
        PUSH 40		Transfer(_from, _to, _amount)
        MLOAD			Transfer(_from, _to, _amount)
        DUP1			Transfer(_from, _to, _amount)
        SWAP2			Transfer(_from, _to, _amount)
        SUB			Transfer(_from, _to, _amount)
        SWAP1			Transfer(_from, _to, _amount)
        LOG3			Transfer(_from, _to, _amount)
        PUSH 1		true
        SWAP1			return true
        POP			return true
        PUSH [tag390]		return true
        JUMP			return true
        PUSH [tag395]		if (balances[_from] >= _amount...
        JUMP			if (balances[_from] >= _amount...
      tag394: 
        JUMPDEST		if (balances[_from] >= _amount...
        PUSH 0		false
        SWAP1			return false
        POP			return false
        PUSH [tag390]		return false
        JUMP			return false
      tag395: 
        JUMPDEST		if (balances[_from] >= _amount...
      tag390: 
        JUMPDEST		function transferFrom(...
        SWAP4			function transferFrom(...
        SWAP3			function transferFrom(...
        POP			function transferFrom(...
        POP			function transferFrom(...
        POP			function transferFrom(...
        JUMP	[out]		function transferFrom(...
      tag248: 
        JUMPDEST		function closeProposal(uint _proposalID) internal {...
        PUSH 0		Proposal p
        PUSH 0		proposals
        PUSH 0		proposals
        POP			proposals
        DUP3			_proposalID
        DUP2			proposals[_proposalID]
        SLOAD			proposals[_proposalID]
        DUP2			proposals[_proposalID]
        LT			proposals[_proposalID]
        ISZERO			proposals[_proposalID]
        PUSH [ErrorTag]		proposals[_proposalID]
        JUMPI			proposals[_proposalID]
        SWAP1			proposals[_proposalID]
        PUSH 0		proposals[_proposalID]
        MSTORE			proposals[_proposalID]
        PUSH 20		proposals[_proposalID]
        PUSH 0		proposals[_proposalID]
        SHA3			proposals[_proposalID]
        SWAP1			proposals[_proposalID]
        PUSH E		proposals[_proposalID]
        MUL			proposals[_proposalID]
        ADD			proposals[_proposalID]
        PUSH 0		proposals[_proposalID]
      tag397: 
        JUMPDEST		proposals[_proposalID]
        POP			proposals[_proposalID]
        SWAP1			Proposal p = proposals[_proposalID]
        POP			Proposal p = proposals[_proposalID]
        DUP1			p
        PUSH 4		p.open
        ADD			p.open
        PUSH 0		p.open
        SWAP1			p.open
        SLOAD			p.open
        SWAP1			p.open
        PUSH 100		p.open
        EXP			p.open
        SWAP1			p.open
        DIV			p.open
        PUSH FF		p.open
        AND			p.open
        ISZERO			if (p.open)...
        PUSH [tag398]		if (p.open)...
        JUMPI			if (p.open)...
        DUP1			p
        PUSH 6		p.proposalDeposit
        ADD			p.proposalDeposit
        PUSH 0		p.proposalDeposit
        POP			p.proposalDeposit
        SLOAD			p.proposalDeposit
        PUSH D		sumOfProposalDeposits
        PUSH 0		sumOfProposalDeposits
        DUP3			sumOfProposalDeposits -= p.proposalDeposit
        DUP3			sumOfProposalDeposits -= p.proposalDeposit
        DUP3			sumOfProposalDeposits -= p.proposalDeposit
        POP			sumOfProposalDeposits -= p.proposalDeposit
        SLOAD			sumOfProposalDeposits -= p.proposalDeposit
        SUB			sumOfProposalDeposits -= p.proposalDeposit
        SWAP3			sumOfProposalDeposits -= p.proposalDeposit
        POP			sumOfProposalDeposits -= p.proposalDeposit
        POP			sumOfProposalDeposits -= p.proposalDeposit
        DUP2			sumOfProposalDeposits -= p.proposalDeposit
        SWAP1			sumOfProposalDeposits -= p.proposalDeposit
        SSTORE			sumOfProposalDeposits -= p.proposalDeposit
        POP			sumOfProposalDeposits -= p.proposalDeposit
      tag398: 
        JUMPDEST		if (p.open)...
        PUSH 0		false
        DUP2			p
        PUSH 4		p.open
        ADD			p.open
        PUSH 0		p.open
        PUSH 100		p.open = false
        EXP			p.open = false
        DUP2			p.open = false
        SLOAD			p.open = false
        DUP2			p.open = false
        PUSH FF		p.open = false
        MUL			p.open = false
        NOT			p.open = false
        AND			p.open = false
        SWAP1			p.open = false
        DUP4			p.open = false
        MUL			p.open = false
        OR			p.open = false
        SWAP1			p.open = false
        SSTORE			p.open = false
        POP			p.open = false
      tag396: 
        JUMPDEST		function closeProposal(uint _proposalID) internal {...
        POP			function closeProposal(uint _proposalID) internal {...
        POP			function closeProposal(uint _proposalID) internal {...
        JUMP	[out]		function closeProposal(uint _proposalID) internal {...
      tag317: 
        JUMPDEST		function withdrawRewardFor(address _account) noEther internal returns (bool _success) {...
        PUSH 0		bool _success
        PUSH 0		uint reward
        PUSH 0		0
        CALLVALUE			msg.value
        GT			msg.value > 0
        ISZERO			if (msg.value > 0) throw
        PUSH [tag400]		if (msg.value > 0) throw
        JUMPI			if (msg.value > 0) throw
        PUSH [ErrorTag]		throw
        JUMP			throw
      tag400: 
        JUMPDEST		if (msg.value > 0) throw
        PUSH A		paidOut
        PUSH 0		paidOut
        POP			paidOut
        PUSH 0		paidOut[_account]
        DUP5			_account
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		paidOut[_account]
        AND			paidOut[_account]
        DUP2			paidOut[_account]
        MSTORE			paidOut[_account]
        PUSH 20		paidOut[_account]
        ADD			paidOut[_account]
        SWAP1			paidOut[_account]
        DUP2			paidOut[_account]
        MSTORE			paidOut[_account]
        PUSH 20		paidOut[_account]
        ADD			paidOut[_account]
        PUSH 0		paidOut[_account]
        SHA3			paidOut[_account]
        PUSH 0		paidOut[_account]
        POP			paidOut[_account]
        SLOAD			paidOut[_account]
        PUSH 16		totalSupply
        PUSH 0		totalSupply
        POP			totalSupply
        SLOAD			totalSupply
        PUSH 7		rewardAccount
        PUSH 0		rewardAccount
        SWAP1			rewardAccount
        SLOAD			rewardAccount
        SWAP1			rewardAccount
        PUSH 100		rewardAccount
        EXP			rewardAccount
        SWAP1			rewardAccount
        DIV			rewardAccount
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		rewardAccount
        AND			rewardAccount
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		rewardAccount.accumulatedInput
        AND			rewardAccount.accumulatedInput
        PUSH D2CC718F		rewardAccount.accumulatedInput
        PUSH 40		rewardAccount.accumulatedInput()
        MLOAD			rewardAccount.accumulatedInput()
        DUP2			rewardAccount.accumulatedInput()
        PUSH 100000000000000000000000000000000000000000000000000000000		rewardAccount.accumulatedInput()
        MUL			rewardAccount.accumulatedInput()
        DUP2			rewardAccount.accumulatedInput()
        MSTORE			rewardAccount.accumulatedInput()
        PUSH 4		rewardAccount.accumulatedInput()
        ADD			rewardAccount.accumulatedInput()
        DUP1			rewardAccount.accumulatedInput()
        SWAP1			rewardAccount.accumulatedInput()
        POP			rewardAccount.accumulatedInput()
        PUSH 20		rewardAccount.accumulatedInput()
        PUSH 40		rewardAccount.accumulatedInput()
        MLOAD			rewardAccount.accumulatedInput()
        DUP1			rewardAccount.accumulatedInput()
        DUP4			rewardAccount.accumulatedInput()
        SUB			rewardAccount.accumulatedInput()
        DUP2			rewardAccount.accumulatedInput()
        PUSH 0		rewardAccount.accumulatedInput()
        DUP8			rewardAccount.accumulatedInput()
        PUSH 61DA		rewardAccount.accumulatedInput()
        GAS			rewardAccount.accumulatedInput()
        SUB			rewardAccount.accumulatedInput()
        CALL			rewardAccount.accumulatedInput()
        ISZERO			rewardAccount.accumulatedInput()
        PUSH [ErrorTag]		rewardAccount.accumulatedInput()
        JUMPI			rewardAccount.accumulatedInput()
        POP			rewardAccount.accumulatedInput()
        POP			rewardAccount.accumulatedInput()
        POP			rewardAccount.accumulatedInput()
        PUSH 40		rewardAccount.accumulatedInput()
        MLOAD			rewardAccount.accumulatedInput()
        DUP1			rewardAccount.accumulatedInput()
        MLOAD			rewardAccount.accumulatedInput()
        SWAP1			rewardAccount.accumulatedInput()
        PUSH 20		rewardAccount.accumulatedInput()
        ADD			rewardAccount.accumulatedInput()
        POP			rewardAccount.accumulatedInput()
        PUSH [tag401]		balanceOf(_account)
        DUP7			_account
        PUSH [tag104]		balanceOf
        JUMP	[in]		balanceOf(_account)
      tag401: 
        JUMPDEST		balanceOf(_account)
        MUL			balanceOf(_account) * rewardAccount.accumulatedInput()
        DIV			(balanceOf(_account) * rewardAccount.accumulatedInput()) / totalSupply
        LT			(balanceOf(_account) * rewardAccount.accumulatedInput()) / totalSupply < paidOut[_account]
        ISZERO			if ((balanceOf(_account) * rewardAccount.accumulatedInput()) / totalSupply < paidOut[_account])...
        PUSH [tag402]		if ((balanceOf(_account) * rewardAccount.accumulatedInput()) / totalSupply < paidOut[_account])...
        JUMPI			if ((balanceOf(_account) * rewardAccount.accumulatedInput()) / totalSupply < paidOut[_account])...
        PUSH [ErrorTag]		throw
        JUMP			throw
      tag402: 
        JUMPDEST		if ((balanceOf(_account) * rewardAccount.accumulatedInput()) / totalSupply < paidOut[_account])...
        PUSH A		paidOut
        PUSH 0		paidOut
        POP			paidOut
        PUSH 0		paidOut[_account]
        DUP5			_account
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		paidOut[_account]
        AND			paidOut[_account]
        DUP2			paidOut[_account]
        MSTORE			paidOut[_account]
        PUSH 20		paidOut[_account]
        ADD			paidOut[_account]
        SWAP1			paidOut[_account]
        DUP2			paidOut[_account]
        MSTORE			paidOut[_account]
        PUSH 20		paidOut[_account]
        ADD			paidOut[_account]
        PUSH 0		paidOut[_account]
        SHA3			paidOut[_account]
        PUSH 0		paidOut[_account]
        POP			paidOut[_account]
        SLOAD			paidOut[_account]
        PUSH 16		totalSupply
        PUSH 0		totalSupply
        POP			totalSupply
        SLOAD			totalSupply
        PUSH 7		rewardAccount
        PUSH 0		rewardAccount
        SWAP1			rewardAccount
        SLOAD			rewardAccount
        SWAP1			rewardAccount
        PUSH 100		rewardAccount
        EXP			rewardAccount
        SWAP1			rewardAccount
        DIV			rewardAccount
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		rewardAccount
        AND			rewardAccount
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		rewardAccount.accumulatedInput
        AND			rewardAccount.accumulatedInput
        PUSH D2CC718F		rewardAccount.accumulatedInput
        PUSH 40		rewardAccount.accumulatedInput()
        MLOAD			rewardAccount.accumulatedInput()
        DUP2			rewardAccount.accumulatedInput()
        PUSH 100000000000000000000000000000000000000000000000000000000		rewardAccount.accumulatedInput()
        MUL			rewardAccount.accumulatedInput()
        DUP2			rewardAccount.accumulatedInput()
        MSTORE			rewardAccount.accumulatedInput()
        PUSH 4		rewardAccount.accumulatedInput()
        ADD			rewardAccount.accumulatedInput()
        DUP1			rewardAccount.accumulatedInput()
        SWAP1			rewardAccount.accumulatedInput()
        POP			rewardAccount.accumulatedInput()
        PUSH 20		rewardAccount.accumulatedInput()
        PUSH 40		rewardAccount.accumulatedInput()
        MLOAD			rewardAccount.accumulatedInput()
        DUP1			rewardAccount.accumulatedInput()
        DUP4			rewardAccount.accumulatedInput()
        SUB			rewardAccount.accumulatedInput()
        DUP2			rewardAccount.accumulatedInput()
        PUSH 0		rewardAccount.accumulatedInput()
        DUP8			rewardAccount.accumulatedInput()
        PUSH 61DA		rewardAccount.accumulatedInput()
        GAS			rewardAccount.accumulatedInput()
        SUB			rewardAccount.accumulatedInput()
        CALL			rewardAccount.accumulatedInput()
        ISZERO			rewardAccount.accumulatedInput()
        PUSH [ErrorTag]		rewardAccount.accumulatedInput()
        JUMPI			rewardAccount.accumulatedInput()
        POP			rewardAccount.accumulatedInput()
        POP			rewardAccount.accumulatedInput()
        POP			rewardAccount.accumulatedInput()
        PUSH 40		rewardAccount.accumulatedInput()
        MLOAD			rewardAccount.accumulatedInput()
        DUP1			rewardAccount.accumulatedInput()
        MLOAD			rewardAccount.accumulatedInput()
        SWAP1			rewardAccount.accumulatedInput()
        PUSH 20		rewardAccount.accumulatedInput()
        ADD			rewardAccount.accumulatedInput()
        POP			rewardAccount.accumulatedInput()
        PUSH [tag403]		balanceOf(_account)
        DUP7			_account
        PUSH [tag104]		balanceOf
        JUMP	[in]		balanceOf(_account)
      tag403: 
        JUMPDEST		balanceOf(_account)
        MUL			balanceOf(_account) * rewardAccount.accumulatedInput()
        DIV			(balanceOf(_account) * rewardAccount.accumulatedInput()) / totalSupply
        SUB			(balanceOf(_account) * rewardAccount.accumulatedInput()) / totalSupply - paidOut[_account]
        SWAP1			uint reward =...
        POP			uint reward =...
        PUSH 7		rewardAccount
        PUSH 0		rewardAccount
        SWAP1			rewardAccount
        SLOAD			rewardAccount
        SWAP1			rewardAccount
        PUSH 100		rewardAccount
        EXP			rewardAccount
        SWAP1			rewardAccount
        DIV			rewardAccount
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		rewardAccount
        AND			rewardAccount
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		rewardAccount.payOut
        AND			rewardAccount.payOut
        PUSH 221038A		rewardAccount.payOut
        DUP5			_account
        DUP4			reward
        PUSH 40		rewardAccount.payOut(_account, reward)
        MLOAD			rewardAccount.payOut(_account, reward)
        DUP4			rewardAccount.payOut(_account, reward)
        PUSH 100000000000000000000000000000000000000000000000000000000		rewardAccount.payOut(_account, reward)
        MUL			rewardAccount.payOut(_account, reward)
        DUP2			rewardAccount.payOut(_account, reward)
        MSTORE			rewardAccount.payOut(_account, reward)
        PUSH 4		rewardAccount.payOut(_account, reward)
        ADD			rewardAccount.payOut(_account, reward)
        DUP1			rewardAccount.payOut(_account, reward)
        DUP4			rewardAccount.payOut(_account, reward)
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		rewardAccount.payOut(_account, reward)
        AND			rewardAccount.payOut(_account, reward)
        DUP2			rewardAccount.payOut(_account, reward)
        MSTORE			rewardAccount.payOut(_account, reward)
        PUSH 20		rewardAccount.payOut(_account, reward)
        ADD			rewardAccount.payOut(_account, reward)
        DUP3			rewardAccount.payOut(_account, reward)
        DUP2			rewardAccount.payOut(_account, reward)
        MSTORE			rewardAccount.payOut(_account, reward)
        PUSH 20		rewardAccount.payOut(_account, reward)
        ADD			rewardAccount.payOut(_account, reward)
        SWAP3			rewardAccount.payOut(_account, reward)
        POP			rewardAccount.payOut(_account, reward)
        POP			rewardAccount.payOut(_account, reward)
        POP			rewardAccount.payOut(_account, reward)
        PUSH 20		rewardAccount.payOut(_account, reward)
        PUSH 40		rewardAccount.payOut(_account, reward)
        MLOAD			rewardAccount.payOut(_account, reward)
        DUP1			rewardAccount.payOut(_account, reward)
        DUP4			rewardAccount.payOut(_account, reward)
        SUB			rewardAccount.payOut(_account, reward)
        DUP2			rewardAccount.payOut(_account, reward)
        PUSH 0		rewardAccount.payOut(_account, reward)
        DUP8			rewardAccount.payOut(_account, reward)
        PUSH 61DA		rewardAccount.payOut(_account, reward)
        GAS			rewardAccount.payOut(_account, reward)
        SUB			rewardAccount.payOut(_account, reward)
        CALL			rewardAccount.payOut(_account, reward)
        ISZERO			rewardAccount.payOut(_account, reward)
        PUSH [ErrorTag]		rewardAccount.payOut(_account, reward)
        JUMPI			rewardAccount.payOut(_account, reward)
        POP			rewardAccount.payOut(_account, reward)
        POP			rewardAccount.payOut(_account, reward)
        POP			rewardAccount.payOut(_account, reward)
        PUSH 40		rewardAccount.payOut(_account, reward)
        MLOAD			rewardAccount.payOut(_account, reward)
        DUP1			rewardAccount.payOut(_account, reward)
        MLOAD			rewardAccount.payOut(_account, reward)
        SWAP1			rewardAccount.payOut(_account, reward)
        PUSH 20		rewardAccount.payOut(_account, reward)
        ADD			rewardAccount.payOut(_account, reward)
        POP			rewardAccount.payOut(_account, reward)
        ISZERO			!rewardAccount.payOut(_account, reward)
        ISZERO			if (!rewardAccount.payOut(_account, reward))...
        PUSH [tag404]		if (!rewardAccount.payOut(_account, reward))...
        JUMPI			if (!rewardAccount.payOut(_account, reward))...
        PUSH [ErrorTag]		throw
        JUMP			throw
      tag404: 
        JUMPDEST		if (!rewardAccount.payOut(_account, reward))...
        DUP1			reward
        PUSH A		paidOut
        PUSH 0		paidOut
        POP			paidOut
        PUSH 0		paidOut[_account]
        DUP6			_account
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		paidOut[_account]
        AND			paidOut[_account]
        DUP2			paidOut[_account]
        MSTORE			paidOut[_account]
        PUSH 20		paidOut[_account]
        ADD			paidOut[_account]
        SWAP1			paidOut[_account]
        DUP2			paidOut[_account]
        MSTORE			paidOut[_account]
        PUSH 20		paidOut[_account]
        ADD			paidOut[_account]
        PUSH 0		paidOut[_account]
        SHA3			paidOut[_account]
        PUSH 0		paidOut[_account]
        DUP3			paidOut[_account] += reward
        DUP3			paidOut[_account] += reward
        DUP3			paidOut[_account] += reward
        POP			paidOut[_account] += reward
        SLOAD			paidOut[_account] += reward
        ADD			paidOut[_account] += reward
        SWAP3			paidOut[_account] += reward
        POP			paidOut[_account] += reward
        POP			paidOut[_account] += reward
        DUP2			paidOut[_account] += reward
        SWAP1			paidOut[_account] += reward
        SSTORE			paidOut[_account] += reward
        POP			paidOut[_account] += reward
        PUSH 1		true
        SWAP2			return true
        POP			return true
        PUSH [tag399]		return true
        JUMP			return true
      tag399: 
        JUMPDEST		function withdrawRewardFor(address _account) noEther internal returns (bool _success) {...
        POP			function withdrawRewardFor(address _account) noEther internal returns (bool _success) {...
        SWAP2			function withdrawRewardFor(address _account) noEther internal returns (bool _success) {...
        SWAP1			function withdrawRewardFor(address _account) noEther internal returns (bool _success) {...
        POP			function withdrawRewardFor(address _account) noEther internal returns (bool _success) {...
        JUMP	[out]		function withdrawRewardFor(address _account) noEther internal returns (bool _success) {...
      tag340: 
        JUMPDEST		function transferPaidOut(...
        PUSH 0		bool success
        PUSH 0		uint transferPaidOut
        PUSH [tag406]		balanceOf(_from)
        DUP6			_from
        PUSH [tag104]		balanceOf
        JUMP	[in]		balanceOf(_from)
      tag406: 
        JUMPDEST		balanceOf(_from)
        DUP4			_value
        PUSH A		paidOut
        PUSH 0		paidOut
        POP			paidOut
        PUSH 0		paidOut[_from]
        DUP9			_from
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		paidOut[_from]
        AND			paidOut[_from]
        DUP2			paidOut[_from]
        MSTORE			paidOut[_from]
        PUSH 20		paidOut[_from]
        ADD			paidOut[_from]
        SWAP1			paidOut[_from]
        DUP2			paidOut[_from]
        MSTORE			paidOut[_from]
        PUSH 20		paidOut[_from]
        ADD			paidOut[_from]
        PUSH 0		paidOut[_from]
        SHA3			paidOut[_from]
        PUSH 0		paidOut[_from]
        POP			paidOut[_from]
        SLOAD			paidOut[_from]
        MUL			paidOut[_from] * _value
        DIV			paidOut[_from] * _value / balanceOf(_from)
        SWAP1			uint transferPaidOut = paidOut[_from] * _value / balanceOf(_from)
        POP			uint transferPaidOut = paidOut[_from] * _value / balanceOf(_from)
        PUSH A		paidOut
        PUSH 0		paidOut
        POP			paidOut
        PUSH 0		paidOut[_from]
        DUP7			_from
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		paidOut[_from]
        AND			paidOut[_from]
        DUP2			paidOut[_from]
        MSTORE			paidOut[_from]
        PUSH 20		paidOut[_from]
        ADD			paidOut[_from]
        SWAP1			paidOut[_from]
        DUP2			paidOut[_from]
        MSTORE			paidOut[_from]
        PUSH 20		paidOut[_from]
        ADD			paidOut[_from]
        PUSH 0		paidOut[_from]
        SHA3			paidOut[_from]
        PUSH 0		paidOut[_from]
        POP			paidOut[_from]
        SLOAD			paidOut[_from]
        DUP2			transferPaidOut
        GT			transferPaidOut > paidOut[_from]
        ISZERO			if (transferPaidOut > paidOut[_from])...
        PUSH [tag407]		if (transferPaidOut > paidOut[_from])...
        JUMPI			if (transferPaidOut > paidOut[_from])...
        PUSH [ErrorTag]		throw
        JUMP			throw
      tag407: 
        JUMPDEST		if (transferPaidOut > paidOut[_from])...
        DUP1			transferPaidOut
        PUSH A		paidOut
        PUSH 0		paidOut
        POP			paidOut
        PUSH 0		paidOut[_from]
        DUP8			_from
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		paidOut[_from]
        AND			paidOut[_from]
        DUP2			paidOut[_from]
        MSTORE			paidOut[_from]
        PUSH 20		paidOut[_from]
        ADD			paidOut[_from]
        SWAP1			paidOut[_from]
        DUP2			paidOut[_from]
        MSTORE			paidOut[_from]
        PUSH 20		paidOut[_from]
        ADD			paidOut[_from]
        PUSH 0		paidOut[_from]
        SHA3			paidOut[_from]
        PUSH 0		paidOut[_from]
        DUP3			paidOut[_from] -= transferPaidOut
        DUP3			paidOut[_from] -= transferPaidOut
        DUP3			paidOut[_from] -= transferPaidOut
        POP			paidOut[_from] -= transferPaidOut
        SLOAD			paidOut[_from] -= transferPaidOut
        SUB			paidOut[_from] -= transferPaidOut
        SWAP3			paidOut[_from] -= transferPaidOut
        POP			paidOut[_from] -= transferPaidOut
        POP			paidOut[_from] -= transferPaidOut
        DUP2			paidOut[_from] -= transferPaidOut
        SWAP1			paidOut[_from] -= transferPaidOut
        SSTORE			paidOut[_from] -= transferPaidOut
        POP			paidOut[_from] -= transferPaidOut
        DUP1			transferPaidOut
        PUSH A		paidOut
        PUSH 0		paidOut
        POP			paidOut
        PUSH 0		paidOut[_to]
        DUP7			_to
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		paidOut[_to]
        AND			paidOut[_to]
        DUP2			paidOut[_to]
        MSTORE			paidOut[_to]
        PUSH 20		paidOut[_to]
        ADD			paidOut[_to]
        SWAP1			paidOut[_to]
        DUP2			paidOut[_to]
        MSTORE			paidOut[_to]
        PUSH 20		paidOut[_to]
        ADD			paidOut[_to]
        PUSH 0		paidOut[_to]
        SHA3			paidOut[_to]
        PUSH 0		paidOut[_to]
        DUP3			paidOut[_to] += transferPaidOut
        DUP3			paidOut[_to] += transferPaidOut
        DUP3			paidOut[_to] += transferPaidOut
        POP			paidOut[_to] += transferPaidOut
        SLOAD			paidOut[_to] += transferPaidOut
        ADD			paidOut[_to] += transferPaidOut
        SWAP3			paidOut[_to] += transferPaidOut
        POP			paidOut[_to] += transferPaidOut
        POP			paidOut[_to] += transferPaidOut
        DUP2			paidOut[_to] += transferPaidOut
        SWAP1			paidOut[_to] += transferPaidOut
        SSTORE			paidOut[_to] += transferPaidOut
        POP			paidOut[_to] += transferPaidOut
        PUSH 1		true
        SWAP2			return true
        POP			return true
        PUSH [tag405]		return true
        JUMP			return true
      tag405: 
        JUMPDEST		function transferPaidOut(...
        POP			function transferPaidOut(...
        SWAP4			function transferPaidOut(...
        SWAP3			function transferPaidOut(...
        POP			function transferPaidOut(...
        POP			function transferPaidOut(...
        POP			function transferPaidOut(...
        JUMP	[out]		function transferPaidOut(...
      tag186: 
        JUMPDEST		function isRecipientAllowed(address _recipient) internal returns (bool _isAllowed) {...
        PUSH 0		bool _isAllowed
        PUSH 4		allowedRecipients
        PUSH 0		allowedRecipients
        POP			allowedRecipients
        PUSH 0		allowedRecipients[_recipient]
        DUP4			_recipient
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		allowedRecipients[_recipient]
        AND			allowedRecipients[_recipient]
        DUP2			allowedRecipients[_recipient]
        MSTORE			allowedRecipients[_recipient]
        PUSH 20		allowedRecipients[_recipient]
        ADD			allowedRecipients[_recipient]
        SWAP1			allowedRecipients[_recipient]
        DUP2			allowedRecipients[_recipient]
        MSTORE			allowedRecipients[_recipient]
        PUSH 20		allowedRecipients[_recipient]
        ADD			allowedRecipients[_recipient]
        PUSH 0		allowedRecipients[_recipient]
        SHA3			allowedRecipients[_recipient]
        PUSH 0		allowedRecipients[_recipient]
        SWAP1			allowedRecipients[_recipient]
        SLOAD			allowedRecipients[_recipient]
        SWAP1			allowedRecipients[_recipient]
        PUSH 100		allowedRecipients[_recipient]
        EXP			allowedRecipients[_recipient]
        SWAP1			allowedRecipients[_recipient]
        DIV			allowedRecipients[_recipient]
        PUSH FF		allowedRecipients[_recipient]
        AND			allowedRecipients[_recipient]
        DUP1			allowedRecipients[_recipient]...
        PUSH [tag409]		allowedRecipients[_recipient]...
        JUMPI			allowedRecipients[_recipient]...
        POP			allowedRecipients[_recipient]...
        PUSH 12		extraBalance
        PUSH 0		extraBalance
        SWAP1			extraBalance
        SLOAD			extraBalance
        SWAP1			extraBalance
        PUSH 100		extraBalance
        EXP			extraBalance
        SWAP1			extraBalance
        DIV			extraBalance
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		extraBalance
        AND			extraBalance
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		_recipient == address(extraBalance)
        AND			_recipient == address(extraBalance)
        DUP3			_recipient
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		_recipient == address(extraBalance)
        AND			_recipient == address(extraBalance)
        EQ			_recipient == address(extraBalance)
        DUP1			_recipient == address(extraBalance)...
        ISZERO			_recipient == address(extraBalance)...
        PUSH [tag410]		_recipient == address(extraBalance)...
        JUMPI			_recipient == address(extraBalance)...
        POP			_recipient == address(extraBalance)...
        PUSH 12		extraBalance
        PUSH 0		extraBalance
        SWAP1			extraBalance
        SLOAD			extraBalance
        SWAP1			extraBalance
        PUSH 100		extraBalance
        EXP			extraBalance
        SWAP1			extraBalance
        DIV			extraBalance
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		extraBalance
        AND			extraBalance
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		extraBalance.accumulatedInput
        AND			extraBalance.accumulatedInput
        PUSH D2CC718F		extraBalance.accumulatedInput
        PUSH 40		extraBalance.accumulatedInput()
        MLOAD			extraBalance.accumulatedInput()
        DUP2			extraBalance.accumulatedInput()
        PUSH 100000000000000000000000000000000000000000000000000000000		extraBalance.accumulatedInput()
        MUL			extraBalance.accumulatedInput()
        DUP2			extraBalance.accumulatedInput()
        MSTORE			extraBalance.accumulatedInput()
        PUSH 4		extraBalance.accumulatedInput()
        ADD			extraBalance.accumulatedInput()
        DUP1			extraBalance.accumulatedInput()
        SWAP1			extraBalance.accumulatedInput()
        POP			extraBalance.accumulatedInput()
        PUSH 20		extraBalance.accumulatedInput()
        PUSH 40		extraBalance.accumulatedInput()
        MLOAD			extraBalance.accumulatedInput()
        DUP1			extraBalance.accumulatedInput()
        DUP4			extraBalance.accumulatedInput()
        SUB			extraBalance.accumulatedInput()
        DUP2			extraBalance.accumulatedInput()
        PUSH 0		extraBalance.accumulatedInput()
        DUP8			extraBalance.accumulatedInput()
        PUSH 61DA		extraBalance.accumulatedInput()
        GAS			extraBalance.accumulatedInput()
        SUB			extraBalance.accumulatedInput()
        CALL			extraBalance.accumulatedInput()
        ISZERO			extraBalance.accumulatedInput()
        PUSH [ErrorTag]		extraBalance.accumulatedInput()
        JUMPI			extraBalance.accumulatedInput()
        POP			extraBalance.accumulatedInput()
        POP			extraBalance.accumulatedInput()
        POP			extraBalance.accumulatedInput()
        PUSH 40		extraBalance.accumulatedInput()
        MLOAD			extraBalance.accumulatedInput()
        DUP1			extraBalance.accumulatedInput()
        MLOAD			extraBalance.accumulatedInput()
        SWAP1			extraBalance.accumulatedInput()
        PUSH 20		extraBalance.accumulatedInput()
        ADD			extraBalance.accumulatedInput()
        POP			extraBalance.accumulatedInput()
        PUSH 6		totalRewardToken
        PUSH 0		totalRewardToken
        POP			totalRewardToken
        SLOAD			totalRewardToken
        GT			totalRewardToken > extraBalance.accumulatedInput()
      tag410: 
        JUMPDEST		_recipient == address(extraBalance)...
      tag409: 
        JUMPDEST		allowedRecipients[_recipient]...
        ISZERO			if (allowedRecipients[_recipient]...
        PUSH [tag411]		if (allowedRecipients[_recipient]...
        JUMPI			if (allowedRecipients[_recipient]...
        PUSH 1		true
        SWAP1			return true
        POP			return true
        PUSH [tag408]		return true
        JUMP			return true
        PUSH [tag412]		if (allowedRecipients[_recipient]...
        JUMP			if (allowedRecipients[_recipient]...
      tag411: 
        JUMPDEST		if (allowedRecipients[_recipient]...
        PUSH 0		false
        SWAP1			return false
        POP			return false
        PUSH [tag408]		return false
        JUMP			return false
      tag412: 
        JUMPDEST		if (allowedRecipients[_recipient]...
      tag408: 
        JUMPDEST		function isRecipientAllowed(address _recipient) internal returns (bool _isAllowed) {...
        SWAP2			function isRecipientAllowed(address _recipient) internal returns (bool _isAllowed) {...
        SWAP1			function isRecipientAllowed(address _recipient) internal returns (bool _isAllowed) {...
        POP			function isRecipientAllowed(address _recipient) internal returns (bool _isAllowed) {...
        JUMP	[out]		function isRecipientAllowed(address _recipient) internal returns (bool _isAllowed) {...
      tag264: 
        JUMPDEST		function minQuorum(uint _value) internal constant returns (uint _minQuorum) {...
        PUSH 0		uint _minQuorum
        PUSH 5		rewardToken
        PUSH 0		rewardToken
        POP			rewardToken
        PUSH 0		rewardToken[address(this)]
        ADDRESS			this
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		rewardToken[address(this)]
        AND			rewardToken[address(this)]
        DUP2			rewardToken[address(this)]
        MSTORE			rewardToken[address(this)]
        PUSH 20		rewardToken[address(this)]
        ADD			rewardToken[address(this)]
        SWAP1			rewardToken[address(this)]
        DUP2			rewardToken[address(this)]
        MSTORE			rewardToken[address(this)]
        PUSH 20		rewardToken[address(this)]
        ADD			rewardToken[address(this)]
        PUSH 0		rewardToken[address(this)]
        SHA3			rewardToken[address(this)]
        PUSH 0		rewardToken[address(this)]
        POP			rewardToken[address(this)]
        SLOAD			rewardToken[address(this)]
        PUSH [tag414]		actualBalance()
        PUSH [tag86]		actualBalance
        JUMP	[in]		actualBalance()
      tag414: 
        JUMPDEST		actualBalance()
        ADD			actualBalance() + rewardToken[address(this)]
        PUSH 3		3
        MUL			3 * (actualBalance() + rewardToken[address(this)])
        PUSH 16		totalSupply
        PUSH 0		totalSupply
        POP			totalSupply
        SLOAD			totalSupply
        DUP4			_value
        MUL			_value * totalSupply
        DIV			(_value * totalSupply) / (3 * (actualBalance() + rewardToken[address(this)]))
        PUSH 1		minQuorumDivisor
        PUSH 0		minQuorumDivisor
        POP			minQuorumDivisor
        SLOAD			minQuorumDivisor
        PUSH 16		totalSupply
        PUSH 0		totalSupply
        POP			totalSupply
        SLOAD			totalSupply
        DIV			totalSupply / minQuorumDivisor
        ADD			totalSupply / minQuorumDivisor +...
        SWAP1			return totalSupply / minQuorumDivisor +...
        POP			return totalSupply / minQuorumDivisor +...
        PUSH [tag413]		return totalSupply / minQuorumDivisor +...
        JUMP			return totalSupply / minQuorumDivisor +...
      tag413: 
        JUMPDEST		function minQuorum(uint _value) internal constant returns (uint _minQuorum) {...
        SWAP2			function minQuorum(uint _value) internal constant returns (uint _minQuorum) {...
        SWAP1			function minQuorum(uint _value) internal constant returns (uint _minQuorum) {...
        POP			function minQuorum(uint _value) internal constant returns (uint _minQuorum) {...
        JUMP	[out]		function minQuorum(uint _value) internal constant returns (uint _minQuorum) {...
      tag297: 
        JUMPDEST		function createNewDAO(address _newCurator) internal returns (DAO _newDAO) {...
        PUSH 0		DAO _newDAO
        DUP2			_newCurator
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		NewCurator(_newCurator)
        AND			NewCurator(_newCurator)
        PUSH 9046FEFD66F538AB35263248A44217DCB70E2EB2CD136629E141B8B8F9F03B60		NewCurator(_newCurator)
        PUSH 40		NewCurator(_newCurator)
        MLOAD			NewCurator(_newCurator)
        DUP1			NewCurator(_newCurator)
        SWAP1			NewCurator(_newCurator)
        POP			NewCurator(_newCurator)
        PUSH 40		NewCurator(_newCurator)
        MLOAD			NewCurator(_newCurator)
        DUP1			NewCurator(_newCurator)
        SWAP2			NewCurator(_newCurator)
        SUB			NewCurator(_newCurator)
        SWAP1			NewCurator(_newCurator)
        LOG2			NewCurator(_newCurator)
        PUSH E		daoCreator
        PUSH 0		daoCreator
        SWAP1			daoCreator
        SLOAD			daoCreator
        SWAP1			daoCreator
        PUSH 100		daoCreator
        EXP			daoCreator
        SWAP1			daoCreator
        DIV			daoCreator
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		daoCreator
        AND			daoCreator
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		daoCreator.createDAO
        AND			daoCreator.createDAO
        PUSH E2FAF044		daoCreator.createDAO
        DUP4			_newCurator
        PUSH 0		0
        PUSH 0		0
        PUSH 239880		27 days
        TIMESTAMP			now
        ADD			now + splitExecutionPeriod
        PUSH 40		daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
        MLOAD			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
        DUP6			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
        PUSH 100000000000000000000000000000000000000000000000000000000		daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
        MUL			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
        DUP2			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
        MSTORE			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
        PUSH 4		daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
        ADD			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
        DUP1			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
        DUP6			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
        AND			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
        DUP2			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
        MSTORE			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
        PUSH 20		daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
        ADD			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
        DUP5			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
        DUP2			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
        MSTORE			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
        PUSH 20		daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
        ADD			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
        DUP4			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
        DUP2			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
        MSTORE			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
        PUSH 20		daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
        ADD			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
        DUP3			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
        DUP2			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
        MSTORE			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
        PUSH 20		daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
        ADD			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
        SWAP5			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
        POP			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
        POP			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
        POP			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
        POP			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
        POP			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
        PUSH 20		daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
        PUSH 40		daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
        MLOAD			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
        DUP1			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
        DUP4			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
        SUB			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
        DUP2			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
        PUSH 0		daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
        DUP8			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
        PUSH 61DA		daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
        GAS			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
        SUB			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
        CALL			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
        ISZERO			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
        PUSH [ErrorTag]		daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
        JUMPI			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
        POP			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
        POP			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
        POP			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
        PUSH 40		daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
        MLOAD			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
        DUP1			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
        MLOAD			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
        SWAP1			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
        PUSH 20		daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
        ADD			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
        POP			daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
        SWAP1			return daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
        POP			return daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
        PUSH [tag415]		return daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
        JUMP			return daoCreator.createDAO(_newCurator, 0, 0, now + splitExecutionPeriod)
      tag415: 
        JUMPDEST		function createNewDAO(address _newCurator) internal returns (DAO _newDAO) {...
        SWAP2			function createNewDAO(address _newCurator) internal returns (DAO _newDAO) {...
        SWAP1			function createNewDAO(address _newCurator) internal returns (DAO _newDAO) {...
        POP			function createNewDAO(address _newCurator) internal returns (DAO _newDAO) {...
        JUMP	[out]		function createNewDAO(address _newCurator) internal returns (DAO _newDAO) {...
      tag337: 
        JUMPDEST		function isBlocked(address _account) internal returns (bool) {...
        PUSH 0		bool
        PUSH 0		Proposal p
        PUSH 0		0
        PUSH B		blocked
        PUSH 0		blocked
        POP			blocked
        PUSH 0		blocked[_account]
        DUP6			_account
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		blocked[_account]
        AND			blocked[_account]
        DUP2			blocked[_account]
        MSTORE			blocked[_account]
        PUSH 20		blocked[_account]
        ADD			blocked[_account]
        SWAP1			blocked[_account]
        DUP2			blocked[_account]
        MSTORE			blocked[_account]
        PUSH 20		blocked[_account]
        ADD			blocked[_account]
        PUSH 0		blocked[_account]
        SHA3			blocked[_account]
        PUSH 0		blocked[_account]
        POP			blocked[_account]
        SLOAD			blocked[_account]
        EQ			blocked[_account] == 0
        ISZERO			if (blocked[_account] == 0)...
        PUSH [tag417]		if (blocked[_account] == 0)...
        JUMPI			if (blocked[_account] == 0)...
        PUSH 0		false
        SWAP2			return false
        POP			return false
        PUSH [tag416]		return false
        JUMP			return false
      tag417: 
        JUMPDEST		if (blocked[_account] == 0)...
        PUSH 0		proposals
        PUSH 0		proposals
        POP			proposals
        PUSH B		blocked
        PUSH 0		blocked
        POP			blocked
        PUSH 0		blocked[_account]
        DUP6			_account
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		blocked[_account]
        AND			blocked[_account]
        DUP2			blocked[_account]
        MSTORE			blocked[_account]
        PUSH 20		blocked[_account]
        ADD			blocked[_account]
        SWAP1			blocked[_account]
        DUP2			blocked[_account]
        MSTORE			blocked[_account]
        PUSH 20		blocked[_account]
        ADD			blocked[_account]
        PUSH 0		blocked[_account]
        SHA3			blocked[_account]
        PUSH 0		blocked[_account]
        POP			blocked[_account]
        SLOAD			blocked[_account]
        DUP2			proposals[blocked[_account]]
        SLOAD			proposals[blocked[_account]]
        DUP2			proposals[blocked[_account]]
        LT			proposals[blocked[_account]]
        ISZERO			proposals[blocked[_account]]
        PUSH [ErrorTag]		proposals[blocked[_account]]
        JUMPI			proposals[blocked[_account]]
        SWAP1			proposals[blocked[_account]]
        PUSH 0		proposals[blocked[_account]]
        MSTORE			proposals[blocked[_account]]
        PUSH 20		proposals[blocked[_account]]
        PUSH 0		proposals[blocked[_account]]
        SHA3			proposals[blocked[_account]]
        SWAP1			proposals[blocked[_account]]
        PUSH E		proposals[blocked[_account]]
        MUL			proposals[blocked[_account]]
        ADD			proposals[blocked[_account]]
        PUSH 0		proposals[blocked[_account]]
      tag418: 
        JUMPDEST		proposals[blocked[_account]]
        POP			proposals[blocked[_account]]
        SWAP1			Proposal p = proposals[blocked[_account]]
        POP			Proposal p = proposals[blocked[_account]]
        DUP1			p
        PUSH 3		p.votingDeadline
        ADD			p.votingDeadline
        PUSH 0		p.votingDeadline
        POP			p.votingDeadline
        SLOAD			p.votingDeadline
        TIMESTAMP			now
        GT			now > p.votingDeadline
        ISZERO			if (now > p.votingDeadline) {...
        PUSH [tag419]		if (now > p.votingDeadline) {...
        JUMPI			if (now > p.votingDeadline) {...
        PUSH 0		0
        PUSH B		blocked
        PUSH 0		blocked
        POP			blocked
        PUSH 0		blocked[_account]
        DUP6			_account
        PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		blocked[_account]
        AND			blocked[_account]
        DUP2			blocked[_account]
        MSTORE			blocked[_account]
        PUSH 20		blocked[_account]
        ADD			blocked[_account]
        SWAP1			blocked[_account]
        DUP2			blocked[_account]
        MSTORE			blocked[_account]
        PUSH 20		blocked[_account]
        ADD			blocked[_account]
        PUSH 0		blocked[_account]
        SHA3			blocked[_account]
        PUSH 0		blocked[_account]
        POP			blocked[_account] = 0
        DUP2			blocked[_account] = 0
        SWAP1			blocked[_account] = 0
        SSTORE			blocked[_account] = 0
        POP			blocked[_account] = 0
        PUSH 0		false
        SWAP2			return false
        POP			return false
        PUSH [tag416]		return false
        JUMP			return false
        PUSH [tag420]		if (now > p.votingDeadline) {...
        JUMP			if (now > p.votingDeadline) {...
      tag419: 
        JUMPDEST		if (now > p.votingDeadline) {...
        PUSH 1		true
        SWAP2			return true
        POP			return true
        PUSH [tag416]		return true
        JUMP			return true
      tag420: 
        JUMPDEST		if (now > p.votingDeadline) {...
      tag416: 
        JUMPDEST		function isBlocked(address _account) internal returns (bool) {...
        POP			function isBlocked(address _account) internal returns (bool) {...
        SWAP2			function isBlocked(address _account) internal returns (bool) {...
        SWAP1			function isBlocked(address _account) internal returns (bool) {...
        POP			function isBlocked(address _account) internal returns (bool) {...
        JUMP	[out]		function isBlocked(address _account) internal returns (bool) {...

======= ManagedAccount =======
EVM assembly:
.code:
  PUSH 60		contract ManagedAccount is ManagedAccountInterface{...
  PUSH 40		contract ManagedAccount is ManagedAccountInterface{...
  MSTORE			contract ManagedAccount is ManagedAccountInterface{...
  PUSH 40		function ManagedAccount(address _owner, bool _payOwnerOnly) {...
  MLOAD			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
  PUSH 40		function ManagedAccount(address _owner, bool _payOwnerOnly) {...
  DUP1			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
  PUSHSIZE		function ManagedAccount(address _owner, bool _payOwnerOnly) {...
  DUP4			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
  CODECOPY			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
  DUP2			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
  ADD			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
  PUSH 40		function ManagedAccount(address _owner, bool _payOwnerOnly) {...
  MSTORE			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
  DUP1			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
  DUP1			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
  MLOAD			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
  SWAP1			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
  PUSH 20		function ManagedAccount(address _owner, bool _payOwnerOnly) {...
  ADD			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
  SWAP1			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
  SWAP2			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
  SWAP1			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
  DUP1			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
  MLOAD			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
  SWAP1			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
  PUSH 20		function ManagedAccount(address _owner, bool _payOwnerOnly) {...
  ADD			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
  SWAP1			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
  SWAP2			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
  SWAP1			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
  POP			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
  POP			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
tag1: 
  JUMPDEST		function ManagedAccount(address _owner, bool _payOwnerOnly) {...
  DUP2			_owner
  PUSH 0		owner
  PUSH 0		owner
  PUSH 100		owner = _owner
  EXP			owner = _owner
  DUP2			owner = _owner
  SLOAD			owner = _owner
  DUP2			owner = _owner
  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		owner = _owner
  MUL			owner = _owner
  NOT			owner = _owner
  AND			owner = _owner
  SWAP1			owner = _owner
  DUP4			owner = _owner
  MUL			owner = _owner
  OR			owner = _owner
  SWAP1			owner = _owner
  SSTORE			owner = _owner
  POP			owner = _owner
  DUP1			_payOwnerOnly
  PUSH 0		payOwnerOnly
  PUSH 14		payOwnerOnly
  PUSH 100		payOwnerOnly = _payOwnerOnly
  EXP			payOwnerOnly = _payOwnerOnly
  DUP2			payOwnerOnly = _payOwnerOnly
  SLOAD			payOwnerOnly = _payOwnerOnly
  DUP2			payOwnerOnly = _payOwnerOnly
  PUSH FF		payOwnerOnly = _payOwnerOnly
  MUL			payOwnerOnly = _payOwnerOnly
  NOT			payOwnerOnly = _payOwnerOnly
  AND			payOwnerOnly = _payOwnerOnly
  SWAP1			payOwnerOnly = _payOwnerOnly
  DUP4			payOwnerOnly = _payOwnerOnly
  MUL			payOwnerOnly = _payOwnerOnly
  OR			payOwnerOnly = _payOwnerOnly
  SWAP1			payOwnerOnly = _payOwnerOnly
  SSTORE			payOwnerOnly = _payOwnerOnly
  POP			payOwnerOnly = _payOwnerOnly
tag2: 
  JUMPDEST		function ManagedAccount(address _owner, bool _payOwnerOnly) {...
  POP			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
  POP			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
  PUSH #[$00000000…00000000]		contract ManagedAccount is ManagedAccountInterface{...
  DUP1			contract ManagedAccount is ManagedAccountInterface{...
  PUSH [$00000000…00000000]		contract ManagedAccount is ManagedAccountInterface{...
  PUSH 0		contract ManagedAccount is ManagedAccountInterface{...
  CODECOPY			contract ManagedAccount is ManagedAccountInterface{...
  PUSH 0		contract ManagedAccount is ManagedAccountInterface{...
  RETURN			contract ManagedAccount is ManagedAccountInterface{...
.data:
  0: 
  .code:
    PUSH 60		contract ManagedAccount is ManagedAccountInterface{...
    PUSH 40		contract ManagedAccount is ManagedAccountInterface{...
    MSTORE			contract ManagedAccount is ManagedAccountInterface{...
    CALLDATASIZE			contract ManagedAccount is ManagedAccountInterface{...
    ISZERO			contract ManagedAccount is ManagedAccountInterface{...
    PUSH [tag1]		contract ManagedAccount is ManagedAccountInterface{...
    JUMPI			contract ManagedAccount is ManagedAccountInterface{...
    PUSH 0		contract ManagedAccount is ManagedAccountInterface{...
    CALLDATALOAD			contract ManagedAccount is ManagedAccountInterface{...
    PUSH 100000000000000000000000000000000000000000000000000000000		contract ManagedAccount is ManagedAccountInterface{...
    SWAP1			contract ManagedAccount is ManagedAccountInterface{...
    DIV			contract ManagedAccount is ManagedAccountInterface{...
    DUP1			contract ManagedAccount is ManagedAccountInterface{...
    PUSH 221038A		contract ManagedAccount is ManagedAccountInterface{...
    EQ			contract ManagedAccount is ManagedAccountInterface{...
    PUSH [tag2]		contract ManagedAccount is ManagedAccountInterface{...
    JUMPI			contract ManagedAccount is ManagedAccountInterface{...
    DUP1			contract ManagedAccount is ManagedAccountInterface{...
    PUSH 18BDC79A		contract ManagedAccount is ManagedAccountInterface{...
    EQ			contract ManagedAccount is ManagedAccountInterface{...
    PUSH [tag3]		contract ManagedAccount is ManagedAccountInterface{...
    JUMPI			contract ManagedAccount is ManagedAccountInterface{...
    DUP1			contract ManagedAccount is ManagedAccountInterface{...
    PUSH 8DA5CB5B		contract ManagedAccount is ManagedAccountInterface{...
    EQ			contract ManagedAccount is ManagedAccountInterface{...
    PUSH [tag4]		contract ManagedAccount is ManagedAccountInterface{...
    JUMPI			contract ManagedAccount is ManagedAccountInterface{...
    DUP1			contract ManagedAccount is ManagedAccountInterface{...
    PUSH D2CC718F		contract ManagedAccount is ManagedAccountInterface{...
    EQ			contract ManagedAccount is ManagedAccountInterface{...
    PUSH [tag5]		contract ManagedAccount is ManagedAccountInterface{...
    JUMPI			contract ManagedAccount is ManagedAccountInterface{...
    PUSH [tag1]		contract ManagedAccount is ManagedAccountInterface{...
    JUMP			contract ManagedAccount is ManagedAccountInterface{...
  tag1: 
    JUMPDEST		contract ManagedAccount is ManagedAccountInterface{...
    PUSH [tag6]		contract ManagedAccount is ManagedAccountInterface{...
  tag7: 
    JUMPDEST		function() {...
    CALLVALUE			msg.value
    PUSH 1		accumulatedInput
    PUSH 0		accumulatedInput
    DUP3			accumulatedInput += msg.value
    DUP3			accumulatedInput += msg.value
    DUP3			accumulatedInput += msg.value
    POP			accumulatedInput += msg.value
    SLOAD			accumulatedInput += msg.value
    ADD			accumulatedInput += msg.value
    SWAP3			accumulatedInput += msg.value
    POP			accumulatedInput += msg.value
    POP			accumulatedInput += msg.value
    DUP2			accumulatedInput += msg.value
    SWAP1			accumulatedInput += msg.value
    SSTORE			accumulatedInput += msg.value
    POP			accumulatedInput += msg.value
  tag8: 
    JUMPDEST		function() {...
    JUMP	[out]		function() {...
  tag6: 
    JUMPDEST		contract ManagedAccount is ManagedAccountInterface{...
    STOP			contract ManagedAccount is ManagedAccountInterface{...
  tag2: 
    JUMPDEST		function payOut(address _recipient, uint _amount) returns (bool) {...
    PUSH [tag9]		function payOut(address _recipient, uint _amount) returns (bool) {...
    PUSH 4		function payOut(address _recipient, uint _amount) returns (bool) {...
    DUP1			function payOut(address _recipient, uint _amount) returns (bool) {...
    DUP1			function payOut(address _recipient, uint _amount) returns (bool) {...
    CALLDATALOAD			function payOut(address _recipient, uint _amount) returns (bool) {...
    SWAP1			function payOut(address _recipient, uint _amount) returns (bool) {...
    PUSH 20		function payOut(address _recipient, uint _amount) returns (bool) {...
    ADD			function payOut(address _recipient, uint _amount) returns (bool) {...
    SWAP1			function payOut(address _recipient, uint _amount) returns (bool) {...
    SWAP2			function payOut(address _recipient, uint _amount) returns (bool) {...
    SWAP1			function payOut(address _recipient, uint _amount) returns (bool) {...
    DUP1			function payOut(address _recipient, uint _amount) returns (bool) {...
    CALLDATALOAD			function payOut(address _recipient, uint _amount) returns (bool) {...
    SWAP1			function payOut(address _recipient, uint _amount) returns (bool) {...
    PUSH 20		function payOut(address _recipient, uint _amount) returns (bool) {...
    ADD			function payOut(address _recipient, uint _amount) returns (bool) {...
    SWAP1			function payOut(address _recipient, uint _amount) returns (bool) {...
    SWAP2			function payOut(address _recipient, uint _amount) returns (bool) {...
    SWAP1			function payOut(address _recipient, uint _amount) returns (bool) {...
    POP			function payOut(address _recipient, uint _amount) returns (bool) {...
    POP			function payOut(address _recipient, uint _amount) returns (bool) {...
    PUSH [tag10]		function payOut(address _recipient, uint _amount) returns (bool) {...
    JUMP			function payOut(address _recipient, uint _amount) returns (bool) {...
  tag9: 
    JUMPDEST		function payOut(address _recipient, uint _amount) returns (bool) {...
    PUSH 40		function payOut(address _recipient, uint _amount) returns (bool) {...
    MLOAD			function payOut(address _recipient, uint _amount) returns (bool) {...
    DUP1			function payOut(address _recipient, uint _amount) returns (bool) {...
    DUP3			function payOut(address _recipient, uint _amount) returns (bool) {...
    DUP2			function payOut(address _recipient, uint _amount) returns (bool) {...
    MSTORE			function payOut(address _recipient, uint _amount) returns (bool) {...
    PUSH 20		function payOut(address _recipient, uint _amount) returns (bool) {...
    ADD			function payOut(address _recipient, uint _amount) returns (bool) {...
    SWAP2			function payOut(address _recipient, uint _amount) returns (bool) {...
    POP			function payOut(address _recipient, uint _amount) returns (bool) {...
    POP			function payOut(address _recipient, uint _amount) returns (bool) {...
    PUSH 40		function payOut(address _recipient, uint _amount) returns (bool) {...
    MLOAD			function payOut(address _recipient, uint _amount) returns (bool) {...
    DUP1			function payOut(address _recipient, uint _amount) returns (bool) {...
    SWAP2			function payOut(address _recipient, uint _amount) returns (bool) {...
    SUB			function payOut(address _recipient, uint _amount) returns (bool) {...
    SWAP1			function payOut(address _recipient, uint _amount) returns (bool) {...
    RETURN			function payOut(address _recipient, uint _amount) returns (bool) {...
  tag3: 
    JUMPDEST		bool public payOwnerOnly
    PUSH [tag11]		bool public payOwnerOnly
    PUSH 4		bool public payOwnerOnly
    DUP1			bool public payOwnerOnly
    POP			bool public payOwnerOnly
    POP			bool public payOwnerOnly
    PUSH [tag12]		bool public payOwnerOnly
    JUMP			bool public payOwnerOnly
  tag11: 
    JUMPDEST		bool public payOwnerOnly
    PUSH 40		bool public payOwnerOnly
    MLOAD			bool public payOwnerOnly
    DUP1			bool public payOwnerOnly
    DUP3			bool public payOwnerOnly
    DUP2			bool public payOwnerOnly
    MSTORE			bool public payOwnerOnly
    PUSH 20		bool public payOwnerOnly
    ADD			bool public payOwnerOnly
    SWAP2			bool public payOwnerOnly
    POP			bool public payOwnerOnly
    POP			bool public payOwnerOnly
    PUSH 40		bool public payOwnerOnly
    MLOAD			bool public payOwnerOnly
    DUP1			bool public payOwnerOnly
    SWAP2			bool public payOwnerOnly
    SUB			bool public payOwnerOnly
    SWAP1			bool public payOwnerOnly
    RETURN			bool public payOwnerOnly
  tag4: 
    JUMPDEST		address public owner
    PUSH [tag13]		address public owner
    PUSH 4		address public owner
    DUP1			address public owner
    POP			address public owner
    POP			address public owner
    PUSH [tag14]		address public owner
    JUMP			address public owner
  tag13: 
    JUMPDEST		address public owner
    PUSH 40		address public owner
    MLOAD			address public owner
    DUP1			address public owner
    DUP3			address public owner
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		address public owner
    AND			address public owner
    DUP2			address public owner
    MSTORE			address public owner
    PUSH 20		address public owner
    ADD			address public owner
    SWAP2			address public owner
    POP			address public owner
    POP			address public owner
    PUSH 40		address public owner
    MLOAD			address public owner
    DUP1			address public owner
    SWAP2			address public owner
    SUB			address public owner
    SWAP1			address public owner
    RETURN			address public owner
  tag5: 
    JUMPDEST		uint public accumulatedInput
    PUSH [tag15]		uint public accumulatedInput
    PUSH 4		uint public accumulatedInput
    DUP1			uint public accumulatedInput
    POP			uint public accumulatedInput
    POP			uint public accumulatedInput
    PUSH [tag16]		uint public accumulatedInput
    JUMP			uint public accumulatedInput
  tag15: 
    JUMPDEST		uint public accumulatedInput
    PUSH 40		uint public accumulatedInput
    MLOAD			uint public accumulatedInput
    DUP1			uint public accumulatedInput
    DUP3			uint public accumulatedInput
    DUP2			uint public accumulatedInput
    MSTORE			uint public accumulatedInput
    PUSH 20		uint public accumulatedInput
    ADD			uint public accumulatedInput
    SWAP2			uint public accumulatedInput
    POP			uint public accumulatedInput
    POP			uint public accumulatedInput
    PUSH 40		uint public accumulatedInput
    MLOAD			uint public accumulatedInput
    DUP1			uint public accumulatedInput
    SWAP2			uint public accumulatedInput
    SUB			uint public accumulatedInput
    SWAP1			uint public accumulatedInput
    RETURN			uint public accumulatedInput
  tag14: 
    JUMPDEST		address public owner
    PUSH 0		address public owner
    PUSH 0		address public owner
    SWAP1			address public owner
    SLOAD			address public owner
    SWAP1			address public owner
    PUSH 100		address public owner
    EXP			address public owner
    SWAP1			address public owner
    DIV			address public owner
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		address public owner
    AND			address public owner
    DUP2			address public owner
    JUMP	[out]		address public owner
  tag12: 
    JUMPDEST		bool public payOwnerOnly
    PUSH 0		bool public payOwnerOnly
    PUSH 14		bool public payOwnerOnly
    SWAP1			bool public payOwnerOnly
    SLOAD			bool public payOwnerOnly
    SWAP1			bool public payOwnerOnly
    PUSH 100		bool public payOwnerOnly
    EXP			bool public payOwnerOnly
    SWAP1			bool public payOwnerOnly
    DIV			bool public payOwnerOnly
    PUSH FF		bool public payOwnerOnly
    AND			bool public payOwnerOnly
    DUP2			bool public payOwnerOnly
    JUMP	[out]		bool public payOwnerOnly
  tag16: 
    JUMPDEST		uint public accumulatedInput
    PUSH 1		uint public accumulatedInput
    PUSH 0		uint public accumulatedInput
    POP			uint public accumulatedInput
    SLOAD			uint public accumulatedInput
    DUP2			uint public accumulatedInput
    JUMP	[out]		uint public accumulatedInput
  tag10: 
    JUMPDEST		function payOut(address _recipient, uint _amount) returns (bool) {...
    PUSH 0		bool
    PUSH 0		owner
    PUSH 0		owner
    SWAP1			owner
    SLOAD			owner
    SWAP1			owner
    PUSH 100		owner
    EXP			owner
    SWAP1			owner
    DIV			owner
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		owner
    AND			owner
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		msg.sender != owner
    AND			msg.sender != owner
    CALLER			msg.sender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		msg.sender != owner
    AND			msg.sender != owner
    EQ			msg.sender != owner
    ISZERO			msg.sender != owner
    DUP1			msg.sender != owner || msg.value > 0
    PUSH [tag18]		msg.sender != owner || msg.value > 0
    JUMPI			msg.sender != owner || msg.value > 0
    POP			msg.sender != owner || msg.value > 0
    PUSH 0		0
    CALLVALUE			msg.value
    GT			msg.value > 0
  tag18: 
    JUMPDEST		msg.sender != owner || msg.value > 0
    DUP1			msg.sender != owner || msg.value > 0 || (payOwnerOnly && _recipient != owner)
    PUSH [tag19]		msg.sender != owner || msg.value > 0 || (payOwnerOnly && _recipient != owner)
    JUMPI			msg.sender != owner || msg.value > 0 || (payOwnerOnly && _recipient != owner)
    POP			msg.sender != owner || msg.value > 0 || (payOwnerOnly && _recipient != owner)
    PUSH 0		payOwnerOnly
    PUSH 14		payOwnerOnly
    SWAP1			payOwnerOnly
    SLOAD			payOwnerOnly
    SWAP1			payOwnerOnly
    PUSH 100		payOwnerOnly
    EXP			payOwnerOnly
    SWAP1			payOwnerOnly
    DIV			payOwnerOnly
    PUSH FF		payOwnerOnly
    AND			payOwnerOnly
    DUP1			payOwnerOnly && _recipient != owner
    ISZERO			payOwnerOnly && _recipient != owner
    PUSH [tag20]		payOwnerOnly && _recipient != owner
    JUMPI			payOwnerOnly && _recipient != owner
    POP			payOwnerOnly && _recipient != owner
    PUSH 0		owner
    PUSH 0		owner
    SWAP1			owner
    SLOAD			owner
    SWAP1			owner
    PUSH 100		owner
    EXP			owner
    SWAP1			owner
    DIV			owner
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		owner
    AND			owner
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		_recipient != owner
    AND			_recipient != owner
    DUP4			_recipient
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		_recipient != owner
    AND			_recipient != owner
    EQ			_recipient != owner
    ISZERO			_recipient != owner
  tag20: 
    JUMPDEST		payOwnerOnly && _recipient != owner
  tag19: 
    JUMPDEST		msg.sender != owner || msg.value > 0 || (payOwnerOnly && _recipient != owner)
    ISZERO			if (msg.sender != owner || msg.value > 0 || (payOwnerOnly && _recipient != owner))...
    PUSH [tag21]		if (msg.sender != owner || msg.value > 0 || (payOwnerOnly && _recipient != owner))...
    JUMPI			if (msg.sender != owner || msg.value > 0 || (payOwnerOnly && _recipient != owner))...
    PUSH [ErrorTag]		throw
    JUMP			throw
  tag21: 
    JUMPDEST		if (msg.sender != owner || msg.value > 0 || (payOwnerOnly && _recipient != owner))...
    DUP3			_recipient
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		_recipient.call
    AND			_recipient.call
    DUP3			_amount
    PUSH 40		_recipient.call.value(_amount)()
    MLOAD			_recipient.call.value(_amount)()
    DUP1			_recipient.call.value(_amount)()
    SWAP1			_recipient.call.value(_amount)()
    POP			_recipient.call.value(_amount)()
    PUSH 0		_recipient.call.value(_amount)()
    PUSH 40		_recipient.call.value(_amount)()
    MLOAD			_recipient.call.value(_amount)()
    DUP1			_recipient.call.value(_amount)()
    DUP4			_recipient.call.value(_amount)()
    SUB			_recipient.call.value(_amount)()
    DUP2			_recipient.call.value(_amount)()
    DUP6			_recipient.call.value(_amount)()
    DUP8			_recipient.call.value(_amount)()
    PUSH 8502		_recipient.call.value(_amount)()
    GAS			_recipient.call.value(_amount)()
    SUB			_recipient.call.value(_amount)()
    CALL			_recipient.call.value(_amount)()
    SWAP3			_recipient.call.value(_amount)()
    POP			_recipient.call.value(_amount)()
    POP			_recipient.call.value(_amount)()
    POP			_recipient.call.value(_amount)()
    ISZERO			if (_recipient.call.value(_amount)()) {...
    PUSH [tag22]		if (_recipient.call.value(_amount)()) {...
    JUMPI			if (_recipient.call.value(_amount)()) {...
    DUP3			_recipient
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		PayOut(_recipient, _amount)
    AND			PayOut(_recipient, _amount)
    PUSH 9735B0CB909F3D21D5C16BBCCCD272D85FA11446F6D679F6ECB170D2DABFECFC		PayOut(_recipient, _amount)
    DUP4			_amount
    PUSH 40		PayOut(_recipient, _amount)
    MLOAD			PayOut(_recipient, _amount)
    DUP1			PayOut(_recipient, _amount)
    DUP3			PayOut(_recipient, _amount)
    DUP2			PayOut(_recipient, _amount)
    MSTORE			PayOut(_recipient, _amount)
    PUSH 20		PayOut(_recipient, _amount)
    ADD			PayOut(_recipient, _amount)
    SWAP2			PayOut(_recipient, _amount)
    POP			PayOut(_recipient, _amount)
    POP			PayOut(_recipient, _amount)
    PUSH 40		PayOut(_recipient, _amount)
    MLOAD			PayOut(_recipient, _amount)
    DUP1			PayOut(_recipient, _amount)
    SWAP2			PayOut(_recipient, _amount)
    SUB			PayOut(_recipient, _amount)
    SWAP1			PayOut(_recipient, _amount)
    LOG2			PayOut(_recipient, _amount)
    PUSH 1		true
    SWAP1			return true
    POP			return true
    PUSH [tag17]		return true
    JUMP			return true
    PUSH [tag23]		if (_recipient.call.value(_amount)()) {...
    JUMP			if (_recipient.call.value(_amount)()) {...
  tag22: 
    JUMPDEST		if (_recipient.call.value(_amount)()) {...
    PUSH 0		false
    SWAP1			return false
    POP			return false
    PUSH [tag17]		return false
    JUMP			return false
  tag23: 
    JUMPDEST		if (_recipient.call.value(_amount)()) {...
  tag17: 
    JUMPDEST		function payOut(address _recipient, uint _amount) returns (bool) {...
    SWAP3			function payOut(address _recipient, uint _amount) returns (bool) {...
    SWAP2			function payOut(address _recipient, uint _amount) returns (bool) {...
    POP			function payOut(address _recipient, uint _amount) returns (bool) {...
    POP			function payOut(address _recipient, uint _amount) returns (bool) {...
    JUMP	[out]		function payOut(address _recipient, uint _amount) returns (bool) {...

======= ManagedAccountInterface =======
EVM assembly:
Contract not fully implemented

======= Token =======
EVM assembly:
.code:
  PUSH 60		contract Token is TokenInterface {...
  PUSH 40		contract Token is TokenInterface {...
  MSTORE			contract Token is TokenInterface {...
  PUSH #[$00000000…00000000]		contract Token is TokenInterface {...
  DUP1			contract Token is TokenInterface {...
  PUSH [$00000000…00000000]		contract Token is TokenInterface {...
  PUSH 0		contract Token is TokenInterface {...
  CODECOPY			contract Token is TokenInterface {...
  PUSH 0		contract Token is TokenInterface {...
  RETURN			contract Token is TokenInterface {...
.data:
  0: 
  .code:
    PUSH 60		contract Token is TokenInterface {...
    PUSH 40		contract Token is TokenInterface {...
    MSTORE			contract Token is TokenInterface {...
    CALLDATASIZE			contract Token is TokenInterface {...
    ISZERO			contract Token is TokenInterface {...
    PUSH [tag1]		contract Token is TokenInterface {...
    JUMPI			contract Token is TokenInterface {...
    PUSH 0		contract Token is TokenInterface {...
    CALLDATALOAD			contract Token is TokenInterface {...
    PUSH 100000000000000000000000000000000000000000000000000000000		contract Token is TokenInterface {...
    SWAP1			contract Token is TokenInterface {...
    DIV			contract Token is TokenInterface {...
    DUP1			contract Token is TokenInterface {...
    PUSH 95EA7B3		contract Token is TokenInterface {...
    EQ			contract Token is TokenInterface {...
    PUSH [tag2]		contract Token is TokenInterface {...
    JUMPI			contract Token is TokenInterface {...
    DUP1			contract Token is TokenInterface {...
    PUSH 18160DDD		contract Token is TokenInterface {...
    EQ			contract Token is TokenInterface {...
    PUSH [tag3]		contract Token is TokenInterface {...
    JUMPI			contract Token is TokenInterface {...
    DUP1			contract Token is TokenInterface {...
    PUSH 23B872DD		contract Token is TokenInterface {...
    EQ			contract Token is TokenInterface {...
    PUSH [tag4]		contract Token is TokenInterface {...
    JUMPI			contract Token is TokenInterface {...
    DUP1			contract Token is TokenInterface {...
    PUSH 70A08231		contract Token is TokenInterface {...
    EQ			contract Token is TokenInterface {...
    PUSH [tag5]		contract Token is TokenInterface {...
    JUMPI			contract Token is TokenInterface {...
    DUP1			contract Token is TokenInterface {...
    PUSH A9059CBB		contract Token is TokenInterface {...
    EQ			contract Token is TokenInterface {...
    PUSH [tag6]		contract Token is TokenInterface {...
    JUMPI			contract Token is TokenInterface {...
    DUP1			contract Token is TokenInterface {...
    PUSH DD62ED3E		contract Token is TokenInterface {...
    EQ			contract Token is TokenInterface {...
    PUSH [tag7]		contract Token is TokenInterface {...
    JUMPI			contract Token is TokenInterface {...
    PUSH [tag1]		contract Token is TokenInterface {...
    JUMP			contract Token is TokenInterface {...
  tag1: 
    JUMPDEST		contract Token is TokenInterface {...
    STOP			contract Token is TokenInterface {...
  tag2: 
    JUMPDEST		function approve(address _spender, uint256 _amount) returns (bool success) {...
    PUSH [tag8]		function approve(address _spender, uint256 _amount) returns (bool success) {...
    PUSH 4		function approve(address _spender, uint256 _amount) returns (bool success) {...
    DUP1			function approve(address _spender, uint256 _amount) returns (bool success) {...
    DUP1			function approve(address _spender, uint256 _amount) returns (bool success) {...
    CALLDATALOAD			function approve(address _spender, uint256 _amount) returns (bool success) {...
    SWAP1			function approve(address _spender, uint256 _amount) returns (bool success) {...
    PUSH 20		function approve(address _spender, uint256 _amount) returns (bool success) {...
    ADD			function approve(address _spender, uint256 _amount) returns (bool success) {...
    SWAP1			function approve(address _spender, uint256 _amount) returns (bool success) {...
    SWAP2			function approve(address _spender, uint256 _amount) returns (bool success) {...
    SWAP1			function approve(address _spender, uint256 _amount) returns (bool success) {...
    DUP1			function approve(address _spender, uint256 _amount) returns (bool success) {...
    CALLDATALOAD			function approve(address _spender, uint256 _amount) returns (bool success) {...
    SWAP1			function approve(address _spender, uint256 _amount) returns (bool success) {...
    PUSH 20		function approve(address _spender, uint256 _amount) returns (bool success) {...
    ADD			function approve(address _spender, uint256 _amount) returns (bool success) {...
    SWAP1			function approve(address _spender, uint256 _amount) returns (bool success) {...
    SWAP2			function approve(address _spender, uint256 _amount) returns (bool success) {...
    SWAP1			function approve(address _spender, uint256 _amount) returns (bool success) {...
    POP			function approve(address _spender, uint256 _amount) returns (bool success) {...
    POP			function approve(address _spender, uint256 _amount) returns (bool success) {...
    PUSH [tag9]		function approve(address _spender, uint256 _amount) returns (bool success) {...
    JUMP			function approve(address _spender, uint256 _amount) returns (bool success) {...
  tag8: 
    JUMPDEST		function approve(address _spender, uint256 _amount) returns (bool success) {...
    PUSH 40		function approve(address _spender, uint256 _amount) returns (bool success) {...
    MLOAD			function approve(address _spender, uint256 _amount) returns (bool success) {...
    DUP1			function approve(address _spender, uint256 _amount) returns (bool success) {...
    DUP3			function approve(address _spender, uint256 _amount) returns (bool success) {...
    DUP2			function approve(address _spender, uint256 _amount) returns (bool success) {...
    MSTORE			function approve(address _spender, uint256 _amount) returns (bool success) {...
    PUSH 20		function approve(address _spender, uint256 _amount) returns (bool success) {...
    ADD			function approve(address _spender, uint256 _amount) returns (bool success) {...
    SWAP2			function approve(address _spender, uint256 _amount) returns (bool success) {...
    POP			function approve(address _spender, uint256 _amount) returns (bool success) {...
    POP			function approve(address _spender, uint256 _amount) returns (bool success) {...
    PUSH 40		function approve(address _spender, uint256 _amount) returns (bool success) {...
    MLOAD			function approve(address _spender, uint256 _amount) returns (bool success) {...
    DUP1			function approve(address _spender, uint256 _amount) returns (bool success) {...
    SWAP2			function approve(address _spender, uint256 _amount) returns (bool success) {...
    SUB			function approve(address _spender, uint256 _amount) returns (bool success) {...
    SWAP1			function approve(address _spender, uint256 _amount) returns (bool success) {...
    RETURN			function approve(address _spender, uint256 _amount) returns (bool success) {...
  tag3: 
    JUMPDEST		uint256 public totalSupply
    PUSH [tag10]		uint256 public totalSupply
    PUSH 4		uint256 public totalSupply
    DUP1			uint256 public totalSupply
    POP			uint256 public totalSupply
    POP			uint256 public totalSupply
    PUSH [tag11]		uint256 public totalSupply
    JUMP			uint256 public totalSupply
  tag10: 
    JUMPDEST		uint256 public totalSupply
    PUSH 40		uint256 public totalSupply
    MLOAD			uint256 public totalSupply
    DUP1			uint256 public totalSupply
    DUP3			uint256 public totalSupply
    DUP2			uint256 public totalSupply
    MSTORE			uint256 public totalSupply
    PUSH 20		uint256 public totalSupply
    ADD			uint256 public totalSupply
    SWAP2			uint256 public totalSupply
    POP			uint256 public totalSupply
    POP			uint256 public totalSupply
    PUSH 40		uint256 public totalSupply
    MLOAD			uint256 public totalSupply
    DUP1			uint256 public totalSupply
    SWAP2			uint256 public totalSupply
    SUB			uint256 public totalSupply
    SWAP1			uint256 public totalSupply
    RETURN			uint256 public totalSupply
  tag4: 
    JUMPDEST		function transferFrom(...
    PUSH [tag12]		function transferFrom(...
    PUSH 4		function transferFrom(...
    DUP1			function transferFrom(...
    DUP1			function transferFrom(...
    CALLDATALOAD			function transferFrom(...
    SWAP1			function transferFrom(...
    PUSH 20		function transferFrom(...
    ADD			function transferFrom(...
    SWAP1			function transferFrom(...
    SWAP2			function transferFrom(...
    SWAP1			function transferFrom(...
    DUP1			function transferFrom(...
    CALLDATALOAD			function transferFrom(...
    SWAP1			function transferFrom(...
    PUSH 20		function transferFrom(...
    ADD			function transferFrom(...
    SWAP1			function transferFrom(...
    SWAP2			function transferFrom(...
    SWAP1			function transferFrom(...
    DUP1			function transferFrom(...
    CALLDATALOAD			function transferFrom(...
    SWAP1			function transferFrom(...
    PUSH 20		function transferFrom(...
    ADD			function transferFrom(...
    SWAP1			function transferFrom(...
    SWAP2			function transferFrom(...
    SWAP1			function transferFrom(...
    POP			function transferFrom(...
    POP			function transferFrom(...
    PUSH [tag13]		function transferFrom(...
    JUMP			function transferFrom(...
  tag12: 
    JUMPDEST		function transferFrom(...
    PUSH 40		function transferFrom(...
    MLOAD			function transferFrom(...
    DUP1			function transferFrom(...
    DUP3			function transferFrom(...
    DUP2			function transferFrom(...
    MSTORE			function transferFrom(...
    PUSH 20		function transferFrom(...
    ADD			function transferFrom(...
    SWAP2			function transferFrom(...
    POP			function transferFrom(...
    POP			function transferFrom(...
    PUSH 40		function transferFrom(...
    MLOAD			function transferFrom(...
    DUP1			function transferFrom(...
    SWAP2			function transferFrom(...
    SUB			function transferFrom(...
    SWAP1			function transferFrom(...
    RETURN			function transferFrom(...
  tag5: 
    JUMPDEST		function balanceOf(address _owner) constant returns (uint256 balance) {...
    PUSH [tag14]		function balanceOf(address _owner) constant returns (uint256 balance) {...
    PUSH 4		function balanceOf(address _owner) constant returns (uint256 balance) {...
    DUP1			function balanceOf(address _owner) constant returns (uint256 balance) {...
    DUP1			function balanceOf(address _owner) constant returns (uint256 balance) {...
    CALLDATALOAD			function balanceOf(address _owner) constant returns (uint256 balance) {...
    SWAP1			function balanceOf(address _owner) constant returns (uint256 balance) {...
    PUSH 20		function balanceOf(address _owner) constant returns (uint256 balance) {...
    ADD			function balanceOf(address _owner) constant returns (uint256 balance) {...
    SWAP1			function balanceOf(address _owner) constant returns (uint256 balance) {...
    SWAP2			function balanceOf(address _owner) constant returns (uint256 balance) {...
    SWAP1			function balanceOf(address _owner) constant returns (uint256 balance) {...
    POP			function balanceOf(address _owner) constant returns (uint256 balance) {...
    POP			function balanceOf(address _owner) constant returns (uint256 balance) {...
    PUSH [tag15]		function balanceOf(address _owner) constant returns (uint256 balance) {...
    JUMP			function balanceOf(address _owner) constant returns (uint256 balance) {...
  tag14: 
    JUMPDEST		function balanceOf(address _owner) constant returns (uint256 balance) {...
    PUSH 40		function balanceOf(address _owner) constant returns (uint256 balance) {...
    MLOAD			function balanceOf(address _owner) constant returns (uint256 balance) {...
    DUP1			function balanceOf(address _owner) constant returns (uint256 balance) {...
    DUP3			function balanceOf(address _owner) constant returns (uint256 balance) {...
    DUP2			function balanceOf(address _owner) constant returns (uint256 balance) {...
    MSTORE			function balanceOf(address _owner) constant returns (uint256 balance) {...
    PUSH 20		function balanceOf(address _owner) constant returns (uint256 balance) {...
    ADD			function balanceOf(address _owner) constant returns (uint256 balance) {...
    SWAP2			function balanceOf(address _owner) constant returns (uint256 balance) {...
    POP			function balanceOf(address _owner) constant returns (uint256 balance) {...
    POP			function balanceOf(address _owner) constant returns (uint256 balance) {...
    PUSH 40		function balanceOf(address _owner) constant returns (uint256 balance) {...
    MLOAD			function balanceOf(address _owner) constant returns (uint256 balance) {...
    DUP1			function balanceOf(address _owner) constant returns (uint256 balance) {...
    SWAP2			function balanceOf(address _owner) constant returns (uint256 balance) {...
    SUB			function balanceOf(address _owner) constant returns (uint256 balance) {...
    SWAP1			function balanceOf(address _owner) constant returns (uint256 balance) {...
    RETURN			function balanceOf(address _owner) constant returns (uint256 balance) {...
  tag6: 
    JUMPDEST		function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    PUSH [tag16]		function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    PUSH 4		function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    DUP1			function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    DUP1			function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    CALLDATALOAD			function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    SWAP1			function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    PUSH 20		function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    ADD			function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    SWAP1			function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    SWAP2			function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    SWAP1			function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    DUP1			function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    CALLDATALOAD			function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    SWAP1			function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    PUSH 20		function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    ADD			function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    SWAP1			function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    SWAP2			function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    SWAP1			function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    POP			function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    POP			function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    PUSH [tag17]		function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    JUMP			function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
  tag16: 
    JUMPDEST		function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    PUSH 40		function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    MLOAD			function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    DUP1			function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    DUP3			function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    DUP2			function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    MSTORE			function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    PUSH 20		function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    ADD			function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    SWAP2			function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    POP			function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    POP			function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    PUSH 40		function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    MLOAD			function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    DUP1			function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    SWAP2			function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    SUB			function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    SWAP1			function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    RETURN			function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
  tag7: 
    JUMPDEST		function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    PUSH [tag18]		function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    PUSH 4		function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    DUP1			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    DUP1			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    CALLDATALOAD			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    SWAP1			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    PUSH 20		function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    ADD			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    SWAP1			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    SWAP2			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    SWAP1			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    DUP1			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    CALLDATALOAD			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    SWAP1			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    PUSH 20		function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    ADD			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    SWAP1			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    SWAP2			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    SWAP1			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    POP			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    POP			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    PUSH [tag19]		function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    JUMP			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
  tag18: 
    JUMPDEST		function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    PUSH 40		function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    MLOAD			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    DUP1			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    DUP3			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    DUP2			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    MSTORE			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    PUSH 20		function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    ADD			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    SWAP2			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    POP			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    POP			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    PUSH 40		function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    MLOAD			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    DUP1			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    SWAP2			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    SUB			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    SWAP1			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    RETURN			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
  tag17: 
    JUMPDEST		function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    PUSH 0		bool success
    PUSH 0		0
    CALLVALUE			msg.value
    GT			msg.value > 0
    ISZERO			if (msg.value > 0) throw
    PUSH [tag21]		if (msg.value > 0) throw
    JUMPI			if (msg.value > 0) throw
    PUSH [ErrorTag]		throw
    JUMP			throw
  tag21: 
    JUMPDEST		if (msg.value > 0) throw
    DUP2			_amount
    PUSH 0		balances
    PUSH 0		balances
    POP			balances
    PUSH 0		balances[msg.sender]
    CALLER			msg.sender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		balances[msg.sender]
    AND			balances[msg.sender]
    DUP2			balances[msg.sender]
    MSTORE			balances[msg.sender]
    PUSH 20		balances[msg.sender]
    ADD			balances[msg.sender]
    SWAP1			balances[msg.sender]
    DUP2			balances[msg.sender]
    MSTORE			balances[msg.sender]
    PUSH 20		balances[msg.sender]
    ADD			balances[msg.sender]
    PUSH 0		balances[msg.sender]
    SHA3			balances[msg.sender]
    PUSH 0		balances[msg.sender]
    POP			balances[msg.sender]
    SLOAD			balances[msg.sender]
    LT			balances[msg.sender] >= _amount
    ISZERO			balances[msg.sender] >= _amount
    DUP1			balances[msg.sender] >= _amount && _amount > 0
    ISZERO			balances[msg.sender] >= _amount && _amount > 0
    PUSH [tag22]		balances[msg.sender] >= _amount && _amount > 0
    JUMPI			balances[msg.sender] >= _amount && _amount > 0
    POP			balances[msg.sender] >= _amount && _amount > 0
    PUSH 0		0
    DUP3			_amount
    GT			_amount > 0
  tag22: 
    JUMPDEST		balances[msg.sender] >= _amount && _amount > 0
    ISZERO			if (balances[msg.sender] >= _amount && _amount > 0) {...
    PUSH [tag23]		if (balances[msg.sender] >= _amount && _amount > 0) {...
    JUMPI			if (balances[msg.sender] >= _amount && _amount > 0) {...
    DUP2			_amount
    PUSH 0		balances
    PUSH 0		balances
    POP			balances
    PUSH 0		balances[msg.sender]
    CALLER			msg.sender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		balances[msg.sender]
    AND			balances[msg.sender]
    DUP2			balances[msg.sender]
    MSTORE			balances[msg.sender]
    PUSH 20		balances[msg.sender]
    ADD			balances[msg.sender]
    SWAP1			balances[msg.sender]
    DUP2			balances[msg.sender]
    MSTORE			balances[msg.sender]
    PUSH 20		balances[msg.sender]
    ADD			balances[msg.sender]
    PUSH 0		balances[msg.sender]
    SHA3			balances[msg.sender]
    PUSH 0		balances[msg.sender]
    DUP3			balances[msg.sender] -= _amount
    DUP3			balances[msg.sender] -= _amount
    DUP3			balances[msg.sender] -= _amount
    POP			balances[msg.sender] -= _amount
    SLOAD			balances[msg.sender] -= _amount
    SUB			balances[msg.sender] -= _amount
    SWAP3			balances[msg.sender] -= _amount
    POP			balances[msg.sender] -= _amount
    POP			balances[msg.sender] -= _amount
    DUP2			balances[msg.sender] -= _amount
    SWAP1			balances[msg.sender] -= _amount
    SSTORE			balances[msg.sender] -= _amount
    POP			balances[msg.sender] -= _amount
    DUP2			_amount
    PUSH 0		balances
    PUSH 0		balances
    POP			balances
    PUSH 0		balances[_to]
    DUP6			_to
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		balances[_to]
    AND			balances[_to]
    DUP2			balances[_to]
    MSTORE			balances[_to]
    PUSH 20		balances[_to]
    ADD			balances[_to]
    SWAP1			balances[_to]
    DUP2			balances[_to]
    MSTORE			balances[_to]
    PUSH 20		balances[_to]
    ADD			balances[_to]
    PUSH 0		balances[_to]
    SHA3			balances[_to]
    PUSH 0		balances[_to]
    DUP3			balances[_to] += _amount
    DUP3			balances[_to] += _amount
    DUP3			balances[_to] += _amount
    POP			balances[_to] += _amount
    SLOAD			balances[_to] += _amount
    ADD			balances[_to] += _amount
    SWAP3			balances[_to] += _amount
    POP			balances[_to] += _amount
    POP			balances[_to] += _amount
    DUP2			balances[_to] += _amount
    SWAP1			balances[_to] += _amount
    SSTORE			balances[_to] += _amount
    POP			balances[_to] += _amount
    DUP3			_to
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		Transfer(msg.sender, _to, _amount)
    AND			Transfer(msg.sender, _to, _amount)
    CALLER			msg.sender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		Transfer(msg.sender, _to, _amount)
    AND			Transfer(msg.sender, _to, _amount)
    PUSH DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF		Transfer(msg.sender, _to, _amount)
    DUP5			_amount
    PUSH 40		Transfer(msg.sender, _to, _amount)
    MLOAD			Transfer(msg.sender, _to, _amount)
    DUP1			Transfer(msg.sender, _to, _amount)
    DUP3			Transfer(msg.sender, _to, _amount)
    DUP2			Transfer(msg.sender, _to, _amount)
    MSTORE			Transfer(msg.sender, _to, _amount)
    PUSH 20		Transfer(msg.sender, _to, _amount)
    ADD			Transfer(msg.sender, _to, _amount)
    SWAP2			Transfer(msg.sender, _to, _amount)
    POP			Transfer(msg.sender, _to, _amount)
    POP			Transfer(msg.sender, _to, _amount)
    PUSH 40		Transfer(msg.sender, _to, _amount)
    MLOAD			Transfer(msg.sender, _to, _amount)
    DUP1			Transfer(msg.sender, _to, _amount)
    SWAP2			Transfer(msg.sender, _to, _amount)
    SUB			Transfer(msg.sender, _to, _amount)
    SWAP1			Transfer(msg.sender, _to, _amount)
    LOG3			Transfer(msg.sender, _to, _amount)
    PUSH 1		true
    SWAP1			return true
    POP			return true
    PUSH [tag20]		return true
    JUMP			return true
    PUSH [tag24]		if (balances[msg.sender] >= _amount && _amount > 0) {...
    JUMP			if (balances[msg.sender] >= _amount && _amount > 0) {...
  tag23: 
    JUMPDEST		if (balances[msg.sender] >= _amount && _amount > 0) {...
    PUSH 0		false
    SWAP1			return false
    POP			return false
    PUSH [tag20]		return false
    JUMP			return false
  tag24: 
    JUMPDEST		if (balances[msg.sender] >= _amount && _amount > 0) {...
  tag20: 
    JUMPDEST		function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    SWAP3			function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    SWAP2			function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    POP			function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    POP			function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    JUMP	[out]		function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
  tag13: 
    JUMPDEST		function transferFrom(...
    PUSH 0		bool success
    PUSH 0		0
    CALLVALUE			msg.value
    GT			msg.value > 0
    ISZERO			if (msg.value > 0) throw
    PUSH [tag26]		if (msg.value > 0) throw
    JUMPI			if (msg.value > 0) throw
    PUSH [ErrorTag]		throw
    JUMP			throw
  tag26: 
    JUMPDEST		if (msg.value > 0) throw
    DUP2			_amount
    PUSH 0		balances
    PUSH 0		balances
    POP			balances
    PUSH 0		balances[_from]
    DUP7			_from
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		balances[_from]
    AND			balances[_from]
    DUP2			balances[_from]
    MSTORE			balances[_from]
    PUSH 20		balances[_from]
    ADD			balances[_from]
    SWAP1			balances[_from]
    DUP2			balances[_from]
    MSTORE			balances[_from]
    PUSH 20		balances[_from]
    ADD			balances[_from]
    PUSH 0		balances[_from]
    SHA3			balances[_from]
    PUSH 0		balances[_from]
    POP			balances[_from]
    SLOAD			balances[_from]
    LT			balances[_from] >= _amount
    ISZERO			balances[_from] >= _amount
    DUP1			balances[_from] >= _amount...
    ISZERO			balances[_from] >= _amount...
    PUSH [tag27]		balances[_from] >= _amount...
    JUMPI			balances[_from] >= _amount...
    POP			balances[_from] >= _amount...
    DUP2			_amount
    PUSH 1		allowed
    PUSH 0		allowed
    POP			allowed
    PUSH 0		allowed[_from]
    DUP7			_from
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		allowed[_from]
    AND			allowed[_from]
    DUP2			allowed[_from]
    MSTORE			allowed[_from]
    PUSH 20		allowed[_from]
    ADD			allowed[_from]
    SWAP1			allowed[_from]
    DUP2			allowed[_from]
    MSTORE			allowed[_from]
    PUSH 20		allowed[_from]
    ADD			allowed[_from]
    PUSH 0		allowed[_from]
    SHA3			allowed[_from]
    PUSH 0		allowed[_from]
    POP			allowed[_from]
    PUSH 0		allowed[_from][msg.sender]
    CALLER			msg.sender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		allowed[_from][msg.sender]
    AND			allowed[_from][msg.sender]
    DUP2			allowed[_from][msg.sender]
    MSTORE			allowed[_from][msg.sender]
    PUSH 20		allowed[_from][msg.sender]
    ADD			allowed[_from][msg.sender]
    SWAP1			allowed[_from][msg.sender]
    DUP2			allowed[_from][msg.sender]
    MSTORE			allowed[_from][msg.sender]
    PUSH 20		allowed[_from][msg.sender]
    ADD			allowed[_from][msg.sender]
    PUSH 0		allowed[_from][msg.sender]
    SHA3			allowed[_from][msg.sender]
    PUSH 0		allowed[_from][msg.sender]
    POP			allowed[_from][msg.sender]
    SLOAD			allowed[_from][msg.sender]
    LT			allowed[_from][msg.sender] >= _amount
    ISZERO			allowed[_from][msg.sender] >= _amount
  tag27: 
    JUMPDEST		balances[_from] >= _amount...
    DUP1			balances[_from] >= _amount...
    ISZERO			balances[_from] >= _amount...
    PUSH [tag28]		balances[_from] >= _amount...
    JUMPI			balances[_from] >= _amount...
    POP			balances[_from] >= _amount...
    PUSH 0		0
    DUP3			_amount
    GT			_amount > 0
  tag28: 
    JUMPDEST		balances[_from] >= _amount...
    ISZERO			if (balances[_from] >= _amount...
    PUSH [tag29]		if (balances[_from] >= _amount...
    JUMPI			if (balances[_from] >= _amount...
    DUP2			_amount
    PUSH 0		balances
    PUSH 0		balances
    POP			balances
    PUSH 0		balances[_to]
    DUP6			_to
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		balances[_to]
    AND			balances[_to]
    DUP2			balances[_to]
    MSTORE			balances[_to]
    PUSH 20		balances[_to]
    ADD			balances[_to]
    SWAP1			balances[_to]
    DUP2			balances[_to]
    MSTORE			balances[_to]
    PUSH 20		balances[_to]
    ADD			balances[_to]
    PUSH 0		balances[_to]
    SHA3			balances[_to]
    PUSH 0		balances[_to]
    DUP3			balances[_to] += _amount
    DUP3			balances[_to] += _amount
    DUP3			balances[_to] += _amount
    POP			balances[_to] += _amount
    SLOAD			balances[_to] += _amount
    ADD			balances[_to] += _amount
    SWAP3			balances[_to] += _amount
    POP			balances[_to] += _amount
    POP			balances[_to] += _amount
    DUP2			balances[_to] += _amount
    SWAP1			balances[_to] += _amount
    SSTORE			balances[_to] += _amount
    POP			balances[_to] += _amount
    DUP2			_amount
    PUSH 0		balances
    PUSH 0		balances
    POP			balances
    PUSH 0		balances[_from]
    DUP7			_from
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		balances[_from]
    AND			balances[_from]
    DUP2			balances[_from]
    MSTORE			balances[_from]
    PUSH 20		balances[_from]
    ADD			balances[_from]
    SWAP1			balances[_from]
    DUP2			balances[_from]
    MSTORE			balances[_from]
    PUSH 20		balances[_from]
    ADD			balances[_from]
    PUSH 0		balances[_from]
    SHA3			balances[_from]
    PUSH 0		balances[_from]
    DUP3			balances[_from] -= _amount
    DUP3			balances[_from] -= _amount
    DUP3			balances[_from] -= _amount
    POP			balances[_from] -= _amount
    SLOAD			balances[_from] -= _amount
    SUB			balances[_from] -= _amount
    SWAP3			balances[_from] -= _amount
    POP			balances[_from] -= _amount
    POP			balances[_from] -= _amount
    DUP2			balances[_from] -= _amount
    SWAP1			balances[_from] -= _amount
    SSTORE			balances[_from] -= _amount
    POP			balances[_from] -= _amount
    DUP2			_amount
    PUSH 1		allowed
    PUSH 0		allowed
    POP			allowed
    PUSH 0		allowed[_from]
    DUP7			_from
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		allowed[_from]
    AND			allowed[_from]
    DUP2			allowed[_from]
    MSTORE			allowed[_from]
    PUSH 20		allowed[_from]
    ADD			allowed[_from]
    SWAP1			allowed[_from]
    DUP2			allowed[_from]
    MSTORE			allowed[_from]
    PUSH 20		allowed[_from]
    ADD			allowed[_from]
    PUSH 0		allowed[_from]
    SHA3			allowed[_from]
    PUSH 0		allowed[_from]
    POP			allowed[_from]
    PUSH 0		allowed[_from][msg.sender]
    CALLER			msg.sender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		allowed[_from][msg.sender]
    AND			allowed[_from][msg.sender]
    DUP2			allowed[_from][msg.sender]
    MSTORE			allowed[_from][msg.sender]
    PUSH 20		allowed[_from][msg.sender]
    ADD			allowed[_from][msg.sender]
    SWAP1			allowed[_from][msg.sender]
    DUP2			allowed[_from][msg.sender]
    MSTORE			allowed[_from][msg.sender]
    PUSH 20		allowed[_from][msg.sender]
    ADD			allowed[_from][msg.sender]
    PUSH 0		allowed[_from][msg.sender]
    SHA3			allowed[_from][msg.sender]
    PUSH 0		allowed[_from][msg.sender]
    DUP3			allowed[_from][msg.sender] -= _amount
    DUP3			allowed[_from][msg.sender] -= _amount
    DUP3			allowed[_from][msg.sender] -= _amount
    POP			allowed[_from][msg.sender] -= _amount
    SLOAD			allowed[_from][msg.sender] -= _amount
    SUB			allowed[_from][msg.sender] -= _amount
    SWAP3			allowed[_from][msg.sender] -= _amount
    POP			allowed[_from][msg.sender] -= _amount
    POP			allowed[_from][msg.sender] -= _amount
    DUP2			allowed[_from][msg.sender] -= _amount
    SWAP1			allowed[_from][msg.sender] -= _amount
    SSTORE			allowed[_from][msg.sender] -= _amount
    POP			allowed[_from][msg.sender] -= _amount
    DUP3			_to
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		Transfer(_from, _to, _amount)
    AND			Transfer(_from, _to, _amount)
    DUP5			_from
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		Transfer(_from, _to, _amount)
    AND			Transfer(_from, _to, _amount)
    PUSH DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF		Transfer(_from, _to, _amount)
    DUP5			_amount
    PUSH 40		Transfer(_from, _to, _amount)
    MLOAD			Transfer(_from, _to, _amount)
    DUP1			Transfer(_from, _to, _amount)
    DUP3			Transfer(_from, _to, _amount)
    DUP2			Transfer(_from, _to, _amount)
    MSTORE			Transfer(_from, _to, _amount)
    PUSH 20		Transfer(_from, _to, _amount)
    ADD			Transfer(_from, _to, _amount)
    SWAP2			Transfer(_from, _to, _amount)
    POP			Transfer(_from, _to, _amount)
    POP			Transfer(_from, _to, _amount)
    PUSH 40		Transfer(_from, _to, _amount)
    MLOAD			Transfer(_from, _to, _amount)
    DUP1			Transfer(_from, _to, _amount)
    SWAP2			Transfer(_from, _to, _amount)
    SUB			Transfer(_from, _to, _amount)
    SWAP1			Transfer(_from, _to, _amount)
    LOG3			Transfer(_from, _to, _amount)
    PUSH 1		true
    SWAP1			return true
    POP			return true
    PUSH [tag25]		return true
    JUMP			return true
    PUSH [tag30]		if (balances[_from] >= _amount...
    JUMP			if (balances[_from] >= _amount...
  tag29: 
    JUMPDEST		if (balances[_from] >= _amount...
    PUSH 0		false
    SWAP1			return false
    POP			return false
    PUSH [tag25]		return false
    JUMP			return false
  tag30: 
    JUMPDEST		if (balances[_from] >= _amount...
  tag25: 
    JUMPDEST		function transferFrom(...
    SWAP4			function transferFrom(...
    SWAP3			function transferFrom(...
    POP			function transferFrom(...
    POP			function transferFrom(...
    POP			function transferFrom(...
    JUMP	[out]		function transferFrom(...
  tag9: 
    JUMPDEST		function approve(address _spender, uint256 _amount) returns (bool success) {...
    PUSH 0		bool success
    DUP2			_amount
    PUSH 1		allowed
    PUSH 0		allowed
    POP			allowed
    PUSH 0		allowed[msg.sender]
    CALLER			msg.sender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		allowed[msg.sender]
    AND			allowed[msg.sender]
    DUP2			allowed[msg.sender]
    MSTORE			allowed[msg.sender]
    PUSH 20		allowed[msg.sender]
    ADD			allowed[msg.sender]
    SWAP1			allowed[msg.sender]
    DUP2			allowed[msg.sender]
    MSTORE			allowed[msg.sender]
    PUSH 20		allowed[msg.sender]
    ADD			allowed[msg.sender]
    PUSH 0		allowed[msg.sender]
    SHA3			allowed[msg.sender]
    PUSH 0		allowed[msg.sender]
    POP			allowed[msg.sender]
    PUSH 0		allowed[msg.sender][_spender]
    DUP6			_spender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		allowed[msg.sender][_spender]
    AND			allowed[msg.sender][_spender]
    DUP2			allowed[msg.sender][_spender]
    MSTORE			allowed[msg.sender][_spender]
    PUSH 20		allowed[msg.sender][_spender]
    ADD			allowed[msg.sender][_spender]
    SWAP1			allowed[msg.sender][_spender]
    DUP2			allowed[msg.sender][_spender]
    MSTORE			allowed[msg.sender][_spender]
    PUSH 20		allowed[msg.sender][_spender]
    ADD			allowed[msg.sender][_spender]
    PUSH 0		allowed[msg.sender][_spender]
    SHA3			allowed[msg.sender][_spender]
    PUSH 0		allowed[msg.sender][_spender]
    POP			allowed[msg.sender][_spender] = _amount
    DUP2			allowed[msg.sender][_spender] = _amount
    SWAP1			allowed[msg.sender][_spender] = _amount
    SSTORE			allowed[msg.sender][_spender] = _amount
    POP			allowed[msg.sender][_spender] = _amount
    DUP3			_spender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		Approval(msg.sender, _spender, _amount)
    AND			Approval(msg.sender, _spender, _amount)
    CALLER			msg.sender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		Approval(msg.sender, _spender, _amount)
    AND			Approval(msg.sender, _spender, _amount)
    PUSH 8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925		Approval(msg.sender, _spender, _amount)
    DUP5			_amount
    PUSH 40		Approval(msg.sender, _spender, _amount)
    MLOAD			Approval(msg.sender, _spender, _amount)
    DUP1			Approval(msg.sender, _spender, _amount)
    DUP3			Approval(msg.sender, _spender, _amount)
    DUP2			Approval(msg.sender, _spender, _amount)
    MSTORE			Approval(msg.sender, _spender, _amount)
    PUSH 20		Approval(msg.sender, _spender, _amount)
    ADD			Approval(msg.sender, _spender, _amount)
    SWAP2			Approval(msg.sender, _spender, _amount)
    POP			Approval(msg.sender, _spender, _amount)
    POP			Approval(msg.sender, _spender, _amount)
    PUSH 40		Approval(msg.sender, _spender, _amount)
    MLOAD			Approval(msg.sender, _spender, _amount)
    DUP1			Approval(msg.sender, _spender, _amount)
    SWAP2			Approval(msg.sender, _spender, _amount)
    SUB			Approval(msg.sender, _spender, _amount)
    SWAP1			Approval(msg.sender, _spender, _amount)
    LOG3			Approval(msg.sender, _spender, _amount)
    PUSH 1		true
    SWAP1			return true
    POP			return true
    PUSH [tag31]		return true
    JUMP			return true
  tag31: 
    JUMPDEST		function approve(address _spender, uint256 _amount) returns (bool success) {...
    SWAP3			function approve(address _spender, uint256 _amount) returns (bool success) {...
    SWAP2			function approve(address _spender, uint256 _amount) returns (bool success) {...
    POP			function approve(address _spender, uint256 _amount) returns (bool success) {...
    POP			function approve(address _spender, uint256 _amount) returns (bool success) {...
    JUMP	[out]		function approve(address _spender, uint256 _amount) returns (bool success) {...
  tag19: 
    JUMPDEST		function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    PUSH 0		uint256 remaining
    PUSH 1		allowed
    PUSH 0		allowed
    POP			allowed
    PUSH 0		allowed[_owner]
    DUP5			_owner
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		allowed[_owner]
    AND			allowed[_owner]
    DUP2			allowed[_owner]
    MSTORE			allowed[_owner]
    PUSH 20		allowed[_owner]
    ADD			allowed[_owner]
    SWAP1			allowed[_owner]
    DUP2			allowed[_owner]
    MSTORE			allowed[_owner]
    PUSH 20		allowed[_owner]
    ADD			allowed[_owner]
    PUSH 0		allowed[_owner]
    SHA3			allowed[_owner]
    PUSH 0		allowed[_owner]
    POP			allowed[_owner]
    PUSH 0		allowed[_owner][_spender]
    DUP4			_spender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		allowed[_owner][_spender]
    AND			allowed[_owner][_spender]
    DUP2			allowed[_owner][_spender]
    MSTORE			allowed[_owner][_spender]
    PUSH 20		allowed[_owner][_spender]
    ADD			allowed[_owner][_spender]
    SWAP1			allowed[_owner][_spender]
    DUP2			allowed[_owner][_spender]
    MSTORE			allowed[_owner][_spender]
    PUSH 20		allowed[_owner][_spender]
    ADD			allowed[_owner][_spender]
    PUSH 0		allowed[_owner][_spender]
    SHA3			allowed[_owner][_spender]
    PUSH 0		allowed[_owner][_spender]
    POP			allowed[_owner][_spender]
    SLOAD			allowed[_owner][_spender]
    SWAP1			return allowed[_owner][_spender]
    POP			return allowed[_owner][_spender]
    PUSH [tag32]		return allowed[_owner][_spender]
    JUMP			return allowed[_owner][_spender]
  tag32: 
    JUMPDEST		function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    SWAP3			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    SWAP2			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    POP			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    POP			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    JUMP	[out]		function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
  tag11: 
    JUMPDEST		uint256 public totalSupply
    PUSH 2		uint256 public totalSupply
    PUSH 0		uint256 public totalSupply
    POP			uint256 public totalSupply
    SLOAD			uint256 public totalSupply
    DUP2			uint256 public totalSupply
    JUMP	[out]		uint256 public totalSupply
  tag15: 
    JUMPDEST		function balanceOf(address _owner) constant returns (uint256 balance) {...
    PUSH 0		uint256 balance
    PUSH 0		balances
    PUSH 0		balances
    POP			balances
    PUSH 0		balances[_owner]
    DUP4			_owner
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		balances[_owner]
    AND			balances[_owner]
    DUP2			balances[_owner]
    MSTORE			balances[_owner]
    PUSH 20		balances[_owner]
    ADD			balances[_owner]
    SWAP1			balances[_owner]
    DUP2			balances[_owner]
    MSTORE			balances[_owner]
    PUSH 20		balances[_owner]
    ADD			balances[_owner]
    PUSH 0		balances[_owner]
    SHA3			balances[_owner]
    PUSH 0		balances[_owner]
    POP			balances[_owner]
    SLOAD			balances[_owner]
    SWAP1			return balances[_owner]
    POP			return balances[_owner]
    PUSH [tag33]		return balances[_owner]
    JUMP			return balances[_owner]
  tag33: 
    JUMPDEST		function balanceOf(address _owner) constant returns (uint256 balance) {...
    SWAP2			function balanceOf(address _owner) constant returns (uint256 balance) {...
    SWAP1			function balanceOf(address _owner) constant returns (uint256 balance) {...
    POP			function balanceOf(address _owner) constant returns (uint256 balance) {...
    JUMP	[out]		function balanceOf(address _owner) constant returns (uint256 balance) {...

======= TokenCreation =======
EVM assembly:
.code:
  PUSH 60		contract TokenCreation is TokenCreationInterface, Token {...
  PUSH 40		contract TokenCreation is TokenCreationInterface, Token {...
  MSTORE			contract TokenCreation is TokenCreationInterface, Token {...
  PUSH 40		function TokenCreation(...
  MLOAD			function TokenCreation(...
  PUSH 60		function TokenCreation(...
  DUP1			function TokenCreation(...
  PUSHSIZE		function TokenCreation(...
  DUP4			function TokenCreation(...
  CODECOPY			function TokenCreation(...
  DUP2			function TokenCreation(...
  ADD			function TokenCreation(...
  PUSH 40		function TokenCreation(...
  MSTORE			function TokenCreation(...
  DUP1			function TokenCreation(...
  DUP1			function TokenCreation(...
  MLOAD			function TokenCreation(...
  SWAP1			function TokenCreation(...
  PUSH 20		function TokenCreation(...
  ADD			function TokenCreation(...
  SWAP1			function TokenCreation(...
  SWAP2			function TokenCreation(...
  SWAP1			function TokenCreation(...
  DUP1			function TokenCreation(...
  MLOAD			function TokenCreation(...
  SWAP1			function TokenCreation(...
  PUSH 20		function TokenCreation(...
  ADD			function TokenCreation(...
  SWAP1			function TokenCreation(...
  SWAP2			function TokenCreation(...
  SWAP1			function TokenCreation(...
  DUP1			function TokenCreation(...
  MLOAD			function TokenCreation(...
  SWAP1			function TokenCreation(...
  PUSH 20		function TokenCreation(...
  ADD			function TokenCreation(...
  SWAP1			function TokenCreation(...
  SWAP2			function TokenCreation(...
  SWAP1			function TokenCreation(...
  POP			function TokenCreation(...
  POP			function TokenCreation(...
tag1: 
  JUMPDEST		function TokenCreation(...
  DUP2			_closingTime
  PUSH 0		closingTime
  PUSH 0		closingTime
  POP			closingTime = _closingTime
  DUP2			closingTime = _closingTime
  SWAP1			closingTime = _closingTime
  SSTORE			closingTime = _closingTime
  POP			closingTime = _closingTime
  DUP3			_minTokensToCreate
  PUSH 1		minTokensToCreate
  PUSH 0		minTokensToCreate
  POP			minTokensToCreate = _minTokensToCreate
  DUP2			minTokensToCreate = _minTokensToCreate
  SWAP1			minTokensToCreate = _minTokensToCreate
  SSTORE			minTokensToCreate = _minTokensToCreate
  POP			minTokensToCreate = _minTokensToCreate
  DUP1			_privateCreation
  PUSH 2		privateCreation
  PUSH 1		privateCreation
  PUSH 100		privateCreation = _privateCreation
  EXP			privateCreation = _privateCreation
  DUP2			privateCreation = _privateCreation
  SLOAD			privateCreation = _privateCreation
  DUP2			privateCreation = _privateCreation
  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		privateCreation = _privateCreation
  MUL			privateCreation = _privateCreation
  NOT			privateCreation = _privateCreation
  AND			privateCreation = _privateCreation
  SWAP1			privateCreation = _privateCreation
  DUP4			privateCreation = _privateCreation
  MUL			privateCreation = _privateCreation
  OR			privateCreation = _privateCreation
  SWAP1			privateCreation = _privateCreation
  SSTORE			privateCreation = _privateCreation
  POP			privateCreation = _privateCreation
  ADDRESS			this
  PUSH 1		true
  PUSH 40		new ManagedAccount(address(this), true)
  MLOAD			new ManagedAccount(address(this), true)
  PUSH #[$00000000…00000000]		new ManagedAccount(address(this), true)
  DUP1			new ManagedAccount(address(this), true)
  PUSH [$00000000…00000000]		new ManagedAccount(address(this), true)
  DUP4			new ManagedAccount(address(this), true)
  CODECOPY			new ManagedAccount(address(this), true)
  ADD			new ManagedAccount(address(this), true)
  DUP1			new ManagedAccount(address(this), true)
  DUP4			new ManagedAccount(address(this), true)
  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		new ManagedAccount(address(this), true)
  AND			new ManagedAccount(address(this), true)
  DUP2			new ManagedAccount(address(this), true)
  MSTORE			new ManagedAccount(address(this), true)
  PUSH 20		new ManagedAccount(address(this), true)
  ADD			new ManagedAccount(address(this), true)
  DUP3			new ManagedAccount(address(this), true)
  DUP2			new ManagedAccount(address(this), true)
  MSTORE			new ManagedAccount(address(this), true)
  PUSH 20		new ManagedAccount(address(this), true)
  ADD			new ManagedAccount(address(this), true)
  SWAP3			new ManagedAccount(address(this), true)
  POP			new ManagedAccount(address(this), true)
  POP			new ManagedAccount(address(this), true)
  POP			new ManagedAccount(address(this), true)
  PUSH 40		new ManagedAccount(address(this), true)
  MLOAD			new ManagedAccount(address(this), true)
  DUP1			new ManagedAccount(address(this), true)
  SWAP2			new ManagedAccount(address(this), true)
  SUB			new ManagedAccount(address(this), true)
  SWAP1			new ManagedAccount(address(this), true)
  PUSH 0		new ManagedAccount(address(this), true)
  CREATE			new ManagedAccount(address(this), true)
  PUSH 3		extraBalance
  PUSH 0		extraBalance
  PUSH 100		extraBalance = new ManagedAccount(address(this), true)
  EXP			extraBalance = new ManagedAccount(address(this), true)
  DUP2			extraBalance = new ManagedAccount(address(this), true)
  SLOAD			extraBalance = new ManagedAccount(address(this), true)
  DUP2			extraBalance = new ManagedAccount(address(this), true)
  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		extraBalance = new ManagedAccount(address(this), true)
  MUL			extraBalance = new ManagedAccount(address(this), true)
  NOT			extraBalance = new ManagedAccount(address(this), true)
  AND			extraBalance = new ManagedAccount(address(this), true)
  SWAP1			extraBalance = new ManagedAccount(address(this), true)
  DUP4			extraBalance = new ManagedAccount(address(this), true)
  MUL			extraBalance = new ManagedAccount(address(this), true)
  OR			extraBalance = new ManagedAccount(address(this), true)
  SWAP1			extraBalance = new ManagedAccount(address(this), true)
  SSTORE			extraBalance = new ManagedAccount(address(this), true)
  POP			extraBalance = new ManagedAccount(address(this), true)
tag2: 
  JUMPDEST		function TokenCreation(...
  POP			function TokenCreation(...
  POP			function TokenCreation(...
  POP			function TokenCreation(...
  PUSH #[$00000000…00000001]		contract TokenCreation is TokenCreationInterface, Token {...
  DUP1			contract TokenCreation is TokenCreationInterface, Token {...
  PUSH [$00000000…00000001]		contract TokenCreation is TokenCreationInterface, Token {...
  PUSH 0		contract TokenCreation is TokenCreationInterface, Token {...
  CODECOPY			contract TokenCreation is TokenCreationInterface, Token {...
  PUSH 0		contract TokenCreation is TokenCreationInterface, Token {...
  RETURN			contract TokenCreation is TokenCreationInterface, Token {...
.data:
  0: 
  .code:
    PUSH 60		contract ManagedAccount is ManagedAccountInterface{...
    PUSH 40		contract ManagedAccount is ManagedAccountInterface{...
    MSTORE			contract ManagedAccount is ManagedAccountInterface{...
    PUSH 40		function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    MLOAD			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    PUSH 40		function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    DUP1			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    PUSHSIZE		function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    DUP4			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    CODECOPY			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    DUP2			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    ADD			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    PUSH 40		function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    MSTORE			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    DUP1			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    DUP1			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    MLOAD			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    SWAP1			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    PUSH 20		function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    ADD			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    SWAP1			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    SWAP2			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    SWAP1			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    DUP1			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    MLOAD			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    SWAP1			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    PUSH 20		function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    ADD			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    SWAP1			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    SWAP2			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    SWAP1			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    POP			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    POP			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
  tag1: 
    JUMPDEST		function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    DUP2			_owner
    PUSH 0		owner
    PUSH 0		owner
    PUSH 100		owner = _owner
    EXP			owner = _owner
    DUP2			owner = _owner
    SLOAD			owner = _owner
    DUP2			owner = _owner
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		owner = _owner
    MUL			owner = _owner
    NOT			owner = _owner
    AND			owner = _owner
    SWAP1			owner = _owner
    DUP4			owner = _owner
    MUL			owner = _owner
    OR			owner = _owner
    SWAP1			owner = _owner
    SSTORE			owner = _owner
    POP			owner = _owner
    DUP1			_payOwnerOnly
    PUSH 0		payOwnerOnly
    PUSH 14		payOwnerOnly
    PUSH 100		payOwnerOnly = _payOwnerOnly
    EXP			payOwnerOnly = _payOwnerOnly
    DUP2			payOwnerOnly = _payOwnerOnly
    SLOAD			payOwnerOnly = _payOwnerOnly
    DUP2			payOwnerOnly = _payOwnerOnly
    PUSH FF		payOwnerOnly = _payOwnerOnly
    MUL			payOwnerOnly = _payOwnerOnly
    NOT			payOwnerOnly = _payOwnerOnly
    AND			payOwnerOnly = _payOwnerOnly
    SWAP1			payOwnerOnly = _payOwnerOnly
    DUP4			payOwnerOnly = _payOwnerOnly
    MUL			payOwnerOnly = _payOwnerOnly
    OR			payOwnerOnly = _payOwnerOnly
    SWAP1			payOwnerOnly = _payOwnerOnly
    SSTORE			payOwnerOnly = _payOwnerOnly
    POP			payOwnerOnly = _payOwnerOnly
  tag2: 
    JUMPDEST		function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    POP			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    POP			function ManagedAccount(address _owner, bool _payOwnerOnly) {...
    PUSH #[$00000000…00000000]		contract ManagedAccount is ManagedAccountInterface{...
    DUP1			contract ManagedAccount is ManagedAccountInterface{...
    PUSH [$00000000…00000000]		contract ManagedAccount is ManagedAccountInterface{...
    PUSH 0		contract ManagedAccount is ManagedAccountInterface{...
    CODECOPY			contract ManagedAccount is ManagedAccountInterface{...
    PUSH 0		contract ManagedAccount is ManagedAccountInterface{...
    RETURN			contract ManagedAccount is ManagedAccountInterface{...
  .data:
    0: 
    .code:
      PUSH 60		contract ManagedAccount is ManagedAccountInterface{...
      PUSH 40		contract ManagedAccount is ManagedAccountInterface{...
      MSTORE			contract ManagedAccount is ManagedAccountInterface{...
      CALLDATASIZE			contract ManagedAccount is ManagedAccountInterface{...
      ISZERO			contract ManagedAccount is ManagedAccountInterface{...
      PUSH [tag1]		contract ManagedAccount is ManagedAccountInterface{...
      JUMPI			contract ManagedAccount is ManagedAccountInterface{...
      PUSH 0		contract ManagedAccount is ManagedAccountInterface{...
      CALLDATALOAD			contract ManagedAccount is ManagedAccountInterface{...
      PUSH 100000000000000000000000000000000000000000000000000000000		contract ManagedAccount is ManagedAccountInterface{...
      SWAP1			contract ManagedAccount is ManagedAccountInterface{...
      DIV			contract ManagedAccount is ManagedAccountInterface{...
      DUP1			contract ManagedAccount is ManagedAccountInterface{...
      PUSH 221038A		contract ManagedAccount is ManagedAccountInterface{...
      EQ			contract ManagedAccount is ManagedAccountInterface{...
      PUSH [tag2]		contract ManagedAccount is ManagedAccountInterface{...
      JUMPI			contract ManagedAccount is ManagedAccountInterface{...
      DUP1			contract ManagedAccount is ManagedAccountInterface{...
      PUSH 18BDC79A		contract ManagedAccount is ManagedAccountInterface{...
      EQ			contract ManagedAccount is ManagedAccountInterface{...
      PUSH [tag3]		contract ManagedAccount is ManagedAccountInterface{...
      JUMPI			contract ManagedAccount is ManagedAccountInterface{...
      DUP1			contract ManagedAccount is ManagedAccountInterface{...
      PUSH 8DA5CB5B		contract ManagedAccount is ManagedAccountInterface{...
      EQ			contract ManagedAccount is ManagedAccountInterface{...
      PUSH [tag4]		contract ManagedAccount is ManagedAccountInterface{...
      JUMPI			contract ManagedAccount is ManagedAccountInterface{...
      DUP1			contract ManagedAccount is ManagedAccountInterface{...
      PUSH D2CC718F		contract ManagedAccount is ManagedAccountInterface{...
      EQ			contract ManagedAccount is ManagedAccountInterface{...
      PUSH [tag5]		contract ManagedAccount is ManagedAccountInterface{...
      JUMPI			contract ManagedAccount is ManagedAccountInterface{...
      PUSH [tag1]		contract ManagedAccount is ManagedAccountInterface{...
      JUMP			contract ManagedAccount is ManagedAccountInterface{...
    tag1: 
      JUMPDEST		contract ManagedAccount is ManagedAccountInterface{...
      PUSH [tag6]		contract ManagedAccount is ManagedAccountInterface{...
    tag7: 
      JUMPDEST		function() {...
      CALLVALUE			msg.value
      PUSH 1		accumulatedInput
      PUSH 0		accumulatedInput
      DUP3			accumulatedInput += msg.value
      DUP3			accumulatedInput += msg.value
      DUP3			accumulatedInput += msg.value
      POP			accumulatedInput += msg.value
      SLOAD			accumulatedInput += msg.value
      ADD			accumulatedInput += msg.value
      SWAP3			accumulatedInput += msg.value
      POP			accumulatedInput += msg.value
      POP			accumulatedInput += msg.value
      DUP2			accumulatedInput += msg.value
      SWAP1			accumulatedInput += msg.value
      SSTORE			accumulatedInput += msg.value
      POP			accumulatedInput += msg.value
    tag8: 
      JUMPDEST		function() {...
      JUMP	[out]		function() {...
    tag6: 
      JUMPDEST		contract ManagedAccount is ManagedAccountInterface{...
      STOP			contract ManagedAccount is ManagedAccountInterface{...
    tag2: 
      JUMPDEST		function payOut(address _recipient, uint _amount) returns (bool) {...
      PUSH [tag9]		function payOut(address _recipient, uint _amount) returns (bool) {...
      PUSH 4		function payOut(address _recipient, uint _amount) returns (bool) {...
      DUP1			function payOut(address _recipient, uint _amount) returns (bool) {...
      DUP1			function payOut(address _recipient, uint _amount) returns (bool) {...
      CALLDATALOAD			function payOut(address _recipient, uint _amount) returns (bool) {...
      SWAP1			function payOut(address _recipient, uint _amount) returns (bool) {...
      PUSH 20		function payOut(address _recipient, uint _amount) returns (bool) {...
      ADD			function payOut(address _recipient, uint _amount) returns (bool) {...
      SWAP1			function payOut(address _recipient, uint _amount) returns (bool) {...
      SWAP2			function payOut(address _recipient, uint _amount) returns (bool) {...
      SWAP1			function payOut(address _recipient, uint _amount) returns (bool) {...
      DUP1			function payOut(address _recipient, uint _amount) returns (bool) {...
      CALLDATALOAD			function payOut(address _recipient, uint _amount) returns (bool) {...
      SWAP1			function payOut(address _recipient, uint _amount) returns (bool) {...
      PUSH 20		function payOut(address _recipient, uint _amount) returns (bool) {...
      ADD			function payOut(address _recipient, uint _amount) returns (bool) {...
      SWAP1			function payOut(address _recipient, uint _amount) returns (bool) {...
      SWAP2			function payOut(address _recipient, uint _amount) returns (bool) {...
      SWAP1			function payOut(address _recipient, uint _amount) returns (bool) {...
      POP			function payOut(address _recipient, uint _amount) returns (bool) {...
      POP			function payOut(address _recipient, uint _amount) returns (bool) {...
      PUSH [tag10]		function payOut(address _recipient, uint _amount) returns (bool) {...
      JUMP			function payOut(address _recipient, uint _amount) returns (bool) {...
    tag9: 
      JUMPDEST		function payOut(address _recipient, uint _amount) returns (bool) {...
      PUSH 40		function payOut(address _recipient, uint _amount) returns (bool) {...
      MLOAD			function payOut(address _recipient, uint _amount) returns (bool) {...
      DUP1			function payOut(address _recipient, uint _amount) returns (bool) {...
      DUP3			function payOut(address _recipient, uint _amount) returns (bool) {...
      DUP2			function payOut(address _recipient, uint _amount) returns (bool) {...
      MSTORE			function payOut(address _recipient, uint _amount) returns (bool) {...
      PUSH 20		function payOut(address _recipient, uint _amount) returns (bool) {...
      ADD			function payOut(address _recipient, uint _amount) returns (bool) {...
      SWAP2			function payOut(address _recipient, uint _amount) returns (bool) {...
      POP			function payOut(address _recipient, uint _amount) returns (bool) {...
      POP			function payOut(address _recipient, uint _amount) returns (bool) {...
      PUSH 40		function payOut(address _recipient, uint _amount) returns (bool) {...
      MLOAD			function payOut(address _recipient, uint _amount) returns (bool) {...
      DUP1			function payOut(address _recipient, uint _amount) returns (bool) {...
      SWAP2			function payOut(address _recipient, uint _amount) returns (bool) {...
      SUB			function payOut(address _recipient, uint _amount) returns (bool) {...
      SWAP1			function payOut(address _recipient, uint _amount) returns (bool) {...
      RETURN			function payOut(address _recipient, uint _amount) returns (bool) {...
    tag3: 
      JUMPDEST		bool public payOwnerOnly
      PUSH [tag11]		bool public payOwnerOnly
      PUSH 4		bool public payOwnerOnly
      DUP1			bool public payOwnerOnly
      POP			bool public payOwnerOnly
      POP			bool public payOwnerOnly
      PUSH [tag12]		bool public payOwnerOnly
      JUMP			bool public payOwnerOnly
    tag11: 
      JUMPDEST		bool public payOwnerOnly
      PUSH 40		bool public payOwnerOnly
      MLOAD			bool public payOwnerOnly
      DUP1			bool public payOwnerOnly
      DUP3			bool public payOwnerOnly
      DUP2			bool public payOwnerOnly
      MSTORE			bool public payOwnerOnly
      PUSH 20		bool public payOwnerOnly
      ADD			bool public payOwnerOnly
      SWAP2			bool public payOwnerOnly
      POP			bool public payOwnerOnly
      POP			bool public payOwnerOnly
      PUSH 40		bool public payOwnerOnly
      MLOAD			bool public payOwnerOnly
      DUP1			bool public payOwnerOnly
      SWAP2			bool public payOwnerOnly
      SUB			bool public payOwnerOnly
      SWAP1			bool public payOwnerOnly
      RETURN			bool public payOwnerOnly
    tag4: 
      JUMPDEST		address public owner
      PUSH [tag13]		address public owner
      PUSH 4		address public owner
      DUP1			address public owner
      POP			address public owner
      POP			address public owner
      PUSH [tag14]		address public owner
      JUMP			address public owner
    tag13: 
      JUMPDEST		address public owner
      PUSH 40		address public owner
      MLOAD			address public owner
      DUP1			address public owner
      DUP3			address public owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		address public owner
      AND			address public owner
      DUP2			address public owner
      MSTORE			address public owner
      PUSH 20		address public owner
      ADD			address public owner
      SWAP2			address public owner
      POP			address public owner
      POP			address public owner
      PUSH 40		address public owner
      MLOAD			address public owner
      DUP1			address public owner
      SWAP2			address public owner
      SUB			address public owner
      SWAP1			address public owner
      RETURN			address public owner
    tag5: 
      JUMPDEST		uint public accumulatedInput
      PUSH [tag15]		uint public accumulatedInput
      PUSH 4		uint public accumulatedInput
      DUP1			uint public accumulatedInput
      POP			uint public accumulatedInput
      POP			uint public accumulatedInput
      PUSH [tag16]		uint public accumulatedInput
      JUMP			uint public accumulatedInput
    tag15: 
      JUMPDEST		uint public accumulatedInput
      PUSH 40		uint public accumulatedInput
      MLOAD			uint public accumulatedInput
      DUP1			uint public accumulatedInput
      DUP3			uint public accumulatedInput
      DUP2			uint public accumulatedInput
      MSTORE			uint public accumulatedInput
      PUSH 20		uint public accumulatedInput
      ADD			uint public accumulatedInput
      SWAP2			uint public accumulatedInput
      POP			uint public accumulatedInput
      POP			uint public accumulatedInput
      PUSH 40		uint public accumulatedInput
      MLOAD			uint public accumulatedInput
      DUP1			uint public accumulatedInput
      SWAP2			uint public accumulatedInput
      SUB			uint public accumulatedInput
      SWAP1			uint public accumulatedInput
      RETURN			uint public accumulatedInput
    tag14: 
      JUMPDEST		address public owner
      PUSH 0		address public owner
      PUSH 0		address public owner
      SWAP1			address public owner
      SLOAD			address public owner
      SWAP1			address public owner
      PUSH 100		address public owner
      EXP			address public owner
      SWAP1			address public owner
      DIV			address public owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		address public owner
      AND			address public owner
      DUP2			address public owner
      JUMP	[out]		address public owner
    tag12: 
      JUMPDEST		bool public payOwnerOnly
      PUSH 0		bool public payOwnerOnly
      PUSH 14		bool public payOwnerOnly
      SWAP1			bool public payOwnerOnly
      SLOAD			bool public payOwnerOnly
      SWAP1			bool public payOwnerOnly
      PUSH 100		bool public payOwnerOnly
      EXP			bool public payOwnerOnly
      SWAP1			bool public payOwnerOnly
      DIV			bool public payOwnerOnly
      PUSH FF		bool public payOwnerOnly
      AND			bool public payOwnerOnly
      DUP2			bool public payOwnerOnly
      JUMP	[out]		bool public payOwnerOnly
    tag16: 
      JUMPDEST		uint public accumulatedInput
      PUSH 1		uint public accumulatedInput
      PUSH 0		uint public accumulatedInput
      POP			uint public accumulatedInput
      SLOAD			uint public accumulatedInput
      DUP2			uint public accumulatedInput
      JUMP	[out]		uint public accumulatedInput
    tag10: 
      JUMPDEST		function payOut(address _recipient, uint _amount) returns (bool) {...
      PUSH 0		bool
      PUSH 0		owner
      PUSH 0		owner
      SWAP1			owner
      SLOAD			owner
      SWAP1			owner
      PUSH 100		owner
      EXP			owner
      SWAP1			owner
      DIV			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		owner
      AND			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		msg.sender != owner
      AND			msg.sender != owner
      CALLER			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		msg.sender != owner
      AND			msg.sender != owner
      EQ			msg.sender != owner
      ISZERO			msg.sender != owner
      DUP1			msg.sender != owner || msg.value > 0
      PUSH [tag18]		msg.sender != owner || msg.value > 0
      JUMPI			msg.sender != owner || msg.value > 0
      POP			msg.sender != owner || msg.value > 0
      PUSH 0		0
      CALLVALUE			msg.value
      GT			msg.value > 0
    tag18: 
      JUMPDEST		msg.sender != owner || msg.value > 0
      DUP1			msg.sender != owner || msg.value > 0 || (payOwnerOnly && _recipient != owner)
      PUSH [tag19]		msg.sender != owner || msg.value > 0 || (payOwnerOnly && _recipient != owner)
      JUMPI			msg.sender != owner || msg.value > 0 || (payOwnerOnly && _recipient != owner)
      POP			msg.sender != owner || msg.value > 0 || (payOwnerOnly && _recipient != owner)
      PUSH 0		payOwnerOnly
      PUSH 14		payOwnerOnly
      SWAP1			payOwnerOnly
      SLOAD			payOwnerOnly
      SWAP1			payOwnerOnly
      PUSH 100		payOwnerOnly
      EXP			payOwnerOnly
      SWAP1			payOwnerOnly
      DIV			payOwnerOnly
      PUSH FF		payOwnerOnly
      AND			payOwnerOnly
      DUP1			payOwnerOnly && _recipient != owner
      ISZERO			payOwnerOnly && _recipient != owner
      PUSH [tag20]		payOwnerOnly && _recipient != owner
      JUMPI			payOwnerOnly && _recipient != owner
      POP			payOwnerOnly && _recipient != owner
      PUSH 0		owner
      PUSH 0		owner
      SWAP1			owner
      SLOAD			owner
      SWAP1			owner
      PUSH 100		owner
      EXP			owner
      SWAP1			owner
      DIV			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		owner
      AND			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		_recipient != owner
      AND			_recipient != owner
      DUP4			_recipient
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		_recipient != owner
      AND			_recipient != owner
      EQ			_recipient != owner
      ISZERO			_recipient != owner
    tag20: 
      JUMPDEST		payOwnerOnly && _recipient != owner
    tag19: 
      JUMPDEST		msg.sender != owner || msg.value > 0 || (payOwnerOnly && _recipient != owner)
      ISZERO			if (msg.sender != owner || msg.value > 0 || (payOwnerOnly && _recipient != owner))...
      PUSH [tag21]		if (msg.sender != owner || msg.value > 0 || (payOwnerOnly && _recipient != owner))...
      JUMPI			if (msg.sender != owner || msg.value > 0 || (payOwnerOnly && _recipient != owner))...
      PUSH [ErrorTag]		throw
      JUMP			throw
    tag21: 
      JUMPDEST		if (msg.sender != owner || msg.value > 0 || (payOwnerOnly && _recipient != owner))...
      DUP3			_recipient
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		_recipient.call
      AND			_recipient.call
      DUP3			_amount
      PUSH 40		_recipient.call.value(_amount)()
      MLOAD			_recipient.call.value(_amount)()
      DUP1			_recipient.call.value(_amount)()
      SWAP1			_recipient.call.value(_amount)()
      POP			_recipient.call.value(_amount)()
      PUSH 0		_recipient.call.value(_amount)()
      PUSH 40		_recipient.call.value(_amount)()
      MLOAD			_recipient.call.value(_amount)()
      DUP1			_recipient.call.value(_amount)()
      DUP4			_recipient.call.value(_amount)()
      SUB			_recipient.call.value(_amount)()
      DUP2			_recipient.call.value(_amount)()
      DUP6			_recipient.call.value(_amount)()
      DUP8			_recipient.call.value(_amount)()
      PUSH 8502		_recipient.call.value(_amount)()
      GAS			_recipient.call.value(_amount)()
      SUB			_recipient.call.value(_amount)()
      CALL			_recipient.call.value(_amount)()
      SWAP3			_recipient.call.value(_amount)()
      POP			_recipient.call.value(_amount)()
      POP			_recipient.call.value(_amount)()
      POP			_recipient.call.value(_amount)()
      ISZERO			if (_recipient.call.value(_amount)()) {...
      PUSH [tag22]		if (_recipient.call.value(_amount)()) {...
      JUMPI			if (_recipient.call.value(_amount)()) {...
      DUP3			_recipient
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		PayOut(_recipient, _amount)
      AND			PayOut(_recipient, _amount)
      PUSH 9735B0CB909F3D21D5C16BBCCCD272D85FA11446F6D679F6ECB170D2DABFECFC		PayOut(_recipient, _amount)
      DUP4			_amount
      PUSH 40		PayOut(_recipient, _amount)
      MLOAD			PayOut(_recipient, _amount)
      DUP1			PayOut(_recipient, _amount)
      DUP3			PayOut(_recipient, _amount)
      DUP2			PayOut(_recipient, _amount)
      MSTORE			PayOut(_recipient, _amount)
      PUSH 20		PayOut(_recipient, _amount)
      ADD			PayOut(_recipient, _amount)
      SWAP2			PayOut(_recipient, _amount)
      POP			PayOut(_recipient, _amount)
      POP			PayOut(_recipient, _amount)
      PUSH 40		PayOut(_recipient, _amount)
      MLOAD			PayOut(_recipient, _amount)
      DUP1			PayOut(_recipient, _amount)
      SWAP2			PayOut(_recipient, _amount)
      SUB			PayOut(_recipient, _amount)
      SWAP1			PayOut(_recipient, _amount)
      LOG2			PayOut(_recipient, _amount)
      PUSH 1		true
      SWAP1			return true
      POP			return true
      PUSH [tag17]		return true
      JUMP			return true
      PUSH [tag23]		if (_recipient.call.value(_amount)()) {...
      JUMP			if (_recipient.call.value(_amount)()) {...
    tag22: 
      JUMPDEST		if (_recipient.call.value(_amount)()) {...
      PUSH 0		false
      SWAP1			return false
      POP			return false
      PUSH [tag17]		return false
      JUMP			return false
    tag23: 
      JUMPDEST		if (_recipient.call.value(_amount)()) {...
    tag17: 
      JUMPDEST		function payOut(address _recipient, uint _amount) returns (bool) {...
      SWAP3			function payOut(address _recipient, uint _amount) returns (bool) {...
      SWAP2			function payOut(address _recipient, uint _amount) returns (bool) {...
      POP			function payOut(address _recipient, uint _amount) returns (bool) {...
      POP			function payOut(address _recipient, uint _amount) returns (bool) {...
      JUMP	[out]		function payOut(address _recipient, uint _amount) returns (bool) {...
  1: 
  .code:
    PUSH 60		contract TokenCreation is TokenCreationInterface, Token {...
    PUSH 40		contract TokenCreation is TokenCreationInterface, Token {...
    MSTORE			contract TokenCreation is TokenCreationInterface, Token {...
    CALLDATASIZE			contract TokenCreation is TokenCreationInterface, Token {...
    ISZERO			contract TokenCreation is TokenCreationInterface, Token {...
    PUSH [tag1]		contract TokenCreation is TokenCreationInterface, Token {...
    JUMPI			contract TokenCreation is TokenCreationInterface, Token {...
    PUSH 0		contract TokenCreation is TokenCreationInterface, Token {...
    CALLDATALOAD			contract TokenCreation is TokenCreationInterface, Token {...
    PUSH 100000000000000000000000000000000000000000000000000000000		contract TokenCreation is TokenCreationInterface, Token {...
    SWAP1			contract TokenCreation is TokenCreationInterface, Token {...
    DIV			contract TokenCreation is TokenCreationInterface, Token {...
    DUP1			contract TokenCreation is TokenCreationInterface, Token {...
    PUSH 95EA7B3		contract TokenCreation is TokenCreationInterface, Token {...
    EQ			contract TokenCreation is TokenCreationInterface, Token {...
    PUSH [tag2]		contract TokenCreation is TokenCreationInterface, Token {...
    JUMPI			contract TokenCreation is TokenCreationInterface, Token {...
    DUP1			contract TokenCreation is TokenCreationInterface, Token {...
    PUSH C3B7B96		contract TokenCreation is TokenCreationInterface, Token {...
    EQ			contract TokenCreation is TokenCreationInterface, Token {...
    PUSH [tag3]		contract TokenCreation is TokenCreationInterface, Token {...
    JUMPI			contract TokenCreation is TokenCreationInterface, Token {...
    DUP1			contract TokenCreation is TokenCreationInterface, Token {...
    PUSH 18160DDD		contract TokenCreation is TokenCreationInterface, Token {...
    EQ			contract TokenCreation is TokenCreationInterface, Token {...
    PUSH [tag4]		contract TokenCreation is TokenCreationInterface, Token {...
    JUMPI			contract TokenCreation is TokenCreationInterface, Token {...
    DUP1			contract TokenCreation is TokenCreationInterface, Token {...
    PUSH 1F2DC5EF		contract TokenCreation is TokenCreationInterface, Token {...
    EQ			contract TokenCreation is TokenCreationInterface, Token {...
    PUSH [tag5]		contract TokenCreation is TokenCreationInterface, Token {...
    JUMPI			contract TokenCreation is TokenCreationInterface, Token {...
    DUP1			contract TokenCreation is TokenCreationInterface, Token {...
    PUSH 21B5B8DD		contract TokenCreation is TokenCreationInterface, Token {...
    EQ			contract TokenCreation is TokenCreationInterface, Token {...
    PUSH [tag6]		contract TokenCreation is TokenCreationInterface, Token {...
    JUMPI			contract TokenCreation is TokenCreationInterface, Token {...
    DUP1			contract TokenCreation is TokenCreationInterface, Token {...
    PUSH 23B872DD		contract TokenCreation is TokenCreationInterface, Token {...
    EQ			contract TokenCreation is TokenCreationInterface, Token {...
    PUSH [tag7]		contract TokenCreation is TokenCreationInterface, Token {...
    JUMPI			contract TokenCreation is TokenCreationInterface, Token {...
    DUP1			contract TokenCreation is TokenCreationInterface, Token {...
    PUSH 4B6753BC		contract TokenCreation is TokenCreationInterface, Token {...
    EQ			contract TokenCreation is TokenCreationInterface, Token {...
    PUSH [tag8]		contract TokenCreation is TokenCreationInterface, Token {...
    JUMPI			contract TokenCreation is TokenCreationInterface, Token {...
    DUP1			contract TokenCreation is TokenCreationInterface, Token {...
    PUSH 590E1AE3		contract TokenCreation is TokenCreationInterface, Token {...
    EQ			contract TokenCreation is TokenCreationInterface, Token {...
    PUSH [tag9]		contract TokenCreation is TokenCreationInterface, Token {...
    JUMPI			contract TokenCreation is TokenCreationInterface, Token {...
    DUP1			contract TokenCreation is TokenCreationInterface, Token {...
    PUSH 70A08231		contract TokenCreation is TokenCreationInterface, Token {...
    EQ			contract TokenCreation is TokenCreationInterface, Token {...
    PUSH [tag10]		contract TokenCreation is TokenCreationInterface, Token {...
    JUMPI			contract TokenCreation is TokenCreationInterface, Token {...
    DUP1			contract TokenCreation is TokenCreationInterface, Token {...
    PUSH A9059CBB		contract TokenCreation is TokenCreationInterface, Token {...
    EQ			contract TokenCreation is TokenCreationInterface, Token {...
    PUSH [tag11]		contract TokenCreation is TokenCreationInterface, Token {...
    JUMPI			contract TokenCreation is TokenCreationInterface, Token {...
    DUP1			contract TokenCreation is TokenCreationInterface, Token {...
    PUSH B7BC2C84		contract TokenCreation is TokenCreationInterface, Token {...
    EQ			contract TokenCreation is TokenCreationInterface, Token {...
    PUSH [tag12]		contract TokenCreation is TokenCreationInterface, Token {...
    JUMPI			contract TokenCreation is TokenCreationInterface, Token {...
    DUP1			contract TokenCreation is TokenCreationInterface, Token {...
    PUSH BAAC5300		contract TokenCreation is TokenCreationInterface, Token {...
    EQ			contract TokenCreation is TokenCreationInterface, Token {...
    PUSH [tag13]		contract TokenCreation is TokenCreationInterface, Token {...
    JUMPI			contract TokenCreation is TokenCreationInterface, Token {...
    DUP1			contract TokenCreation is TokenCreationInterface, Token {...
    PUSH DD62ED3E		contract TokenCreation is TokenCreationInterface, Token {...
    EQ			contract TokenCreation is TokenCreationInterface, Token {...
    PUSH [tag14]		contract TokenCreation is TokenCreationInterface, Token {...
    JUMPI			contract TokenCreation is TokenCreationInterface, Token {...
    DUP1			contract TokenCreation is TokenCreationInterface, Token {...
    PUSH F8C80D26		contract TokenCreation is TokenCreationInterface, Token {...
    EQ			contract TokenCreation is TokenCreationInterface, Token {...
    PUSH [tag15]		contract TokenCreation is TokenCreationInterface, Token {...
    JUMPI			contract TokenCreation is TokenCreationInterface, Token {...
    PUSH [tag1]		contract TokenCreation is TokenCreationInterface, Token {...
    JUMP			contract TokenCreation is TokenCreationInterface, Token {...
  tag1: 
    JUMPDEST		contract TokenCreation is TokenCreationInterface, Token {...
    STOP			contract TokenCreation is TokenCreationInterface, Token {...
  tag2: 
    JUMPDEST		function approve(address _spender, uint256 _amount) returns (bool success) {...
    PUSH [tag16]		function approve(address _spender, uint256 _amount) returns (bool success) {...
    PUSH 4		function approve(address _spender, uint256 _amount) returns (bool success) {...
    DUP1			function approve(address _spender, uint256 _amount) returns (bool success) {...
    DUP1			function approve(address _spender, uint256 _amount) returns (bool success) {...
    CALLDATALOAD			function approve(address _spender, uint256 _amount) returns (bool success) {...
    SWAP1			function approve(address _spender, uint256 _amount) returns (bool success) {...
    PUSH 20		function approve(address _spender, uint256 _amount) returns (bool success) {...
    ADD			function approve(address _spender, uint256 _amount) returns (bool success) {...
    SWAP1			function approve(address _spender, uint256 _amount) returns (bool success) {...
    SWAP2			function approve(address _spender, uint256 _amount) returns (bool success) {...
    SWAP1			function approve(address _spender, uint256 _amount) returns (bool success) {...
    DUP1			function approve(address _spender, uint256 _amount) returns (bool success) {...
    CALLDATALOAD			function approve(address _spender, uint256 _amount) returns (bool success) {...
    SWAP1			function approve(address _spender, uint256 _amount) returns (bool success) {...
    PUSH 20		function approve(address _spender, uint256 _amount) returns (bool success) {...
    ADD			function approve(address _spender, uint256 _amount) returns (bool success) {...
    SWAP1			function approve(address _spender, uint256 _amount) returns (bool success) {...
    SWAP2			function approve(address _spender, uint256 _amount) returns (bool success) {...
    SWAP1			function approve(address _spender, uint256 _amount) returns (bool success) {...
    POP			function approve(address _spender, uint256 _amount) returns (bool success) {...
    POP			function approve(address _spender, uint256 _amount) returns (bool success) {...
    PUSH [tag17]		function approve(address _spender, uint256 _amount) returns (bool success) {...
    JUMP			function approve(address _spender, uint256 _amount) returns (bool success) {...
  tag16: 
    JUMPDEST		function approve(address _spender, uint256 _amount) returns (bool success) {...
    PUSH 40		function approve(address _spender, uint256 _amount) returns (bool success) {...
    MLOAD			function approve(address _spender, uint256 _amount) returns (bool success) {...
    DUP1			function approve(address _spender, uint256 _amount) returns (bool success) {...
    DUP3			function approve(address _spender, uint256 _amount) returns (bool success) {...
    DUP2			function approve(address _spender, uint256 _amount) returns (bool success) {...
    MSTORE			function approve(address _spender, uint256 _amount) returns (bool success) {...
    PUSH 20		function approve(address _spender, uint256 _amount) returns (bool success) {...
    ADD			function approve(address _spender, uint256 _amount) returns (bool success) {...
    SWAP2			function approve(address _spender, uint256 _amount) returns (bool success) {...
    POP			function approve(address _spender, uint256 _amount) returns (bool success) {...
    POP			function approve(address _spender, uint256 _amount) returns (bool success) {...
    PUSH 40		function approve(address _spender, uint256 _amount) returns (bool success) {...
    MLOAD			function approve(address _spender, uint256 _amount) returns (bool success) {...
    DUP1			function approve(address _spender, uint256 _amount) returns (bool success) {...
    SWAP2			function approve(address _spender, uint256 _amount) returns (bool success) {...
    SUB			function approve(address _spender, uint256 _amount) returns (bool success) {...
    SWAP1			function approve(address _spender, uint256 _amount) returns (bool success) {...
    RETURN			function approve(address _spender, uint256 _amount) returns (bool success) {...
  tag3: 
    JUMPDEST		uint public minTokensToCreate
    PUSH [tag18]		uint public minTokensToCreate
    PUSH 4		uint public minTokensToCreate
    DUP1			uint public minTokensToCreate
    POP			uint public minTokensToCreate
    POP			uint public minTokensToCreate
    PUSH [tag19]		uint public minTokensToCreate
    JUMP			uint public minTokensToCreate
  tag18: 
    JUMPDEST		uint public minTokensToCreate
    PUSH 40		uint public minTokensToCreate
    MLOAD			uint public minTokensToCreate
    DUP1			uint public minTokensToCreate
    DUP3			uint public minTokensToCreate
    DUP2			uint public minTokensToCreate
    MSTORE			uint public minTokensToCreate
    PUSH 20		uint public minTokensToCreate
    ADD			uint public minTokensToCreate
    SWAP2			uint public minTokensToCreate
    POP			uint public minTokensToCreate
    POP			uint public minTokensToCreate
    PUSH 40		uint public minTokensToCreate
    MLOAD			uint public minTokensToCreate
    DUP1			uint public minTokensToCreate
    SWAP2			uint public minTokensToCreate
    SUB			uint public minTokensToCreate
    SWAP1			uint public minTokensToCreate
    RETURN			uint public minTokensToCreate
  tag4: 
    JUMPDEST		uint256 public totalSupply
    PUSH [tag20]		uint256 public totalSupply
    PUSH 4		uint256 public totalSupply
    DUP1			uint256 public totalSupply
    POP			uint256 public totalSupply
    POP			uint256 public totalSupply
    PUSH [tag21]		uint256 public totalSupply
    JUMP			uint256 public totalSupply
  tag20: 
    JUMPDEST		uint256 public totalSupply
    PUSH 40		uint256 public totalSupply
    MLOAD			uint256 public totalSupply
    DUP1			uint256 public totalSupply
    DUP3			uint256 public totalSupply
    DUP2			uint256 public totalSupply
    MSTORE			uint256 public totalSupply
    PUSH 20		uint256 public totalSupply
    ADD			uint256 public totalSupply
    SWAP2			uint256 public totalSupply
    POP			uint256 public totalSupply
    POP			uint256 public totalSupply
    PUSH 40		uint256 public totalSupply
    MLOAD			uint256 public totalSupply
    DUP1			uint256 public totalSupply
    SWAP2			uint256 public totalSupply
    SUB			uint256 public totalSupply
    SWAP1			uint256 public totalSupply
    RETURN			uint256 public totalSupply
  tag5: 
    JUMPDEST		function divisor() constant returns (uint divisor) {...
    PUSH [tag22]		function divisor() constant returns (uint divisor) {...
    PUSH 4		function divisor() constant returns (uint divisor) {...
    DUP1			function divisor() constant returns (uint divisor) {...
    POP			function divisor() constant returns (uint divisor) {...
    POP			function divisor() constant returns (uint divisor) {...
    PUSH [tag23]		function divisor() constant returns (uint divisor) {...
    JUMP			function divisor() constant returns (uint divisor) {...
  tag22: 
    JUMPDEST		function divisor() constant returns (uint divisor) {...
    PUSH 40		function divisor() constant returns (uint divisor) {...
    MLOAD			function divisor() constant returns (uint divisor) {...
    DUP1			function divisor() constant returns (uint divisor) {...
    DUP3			function divisor() constant returns (uint divisor) {...
    DUP2			function divisor() constant returns (uint divisor) {...
    MSTORE			function divisor() constant returns (uint divisor) {...
    PUSH 20		function divisor() constant returns (uint divisor) {...
    ADD			function divisor() constant returns (uint divisor) {...
    SWAP2			function divisor() constant returns (uint divisor) {...
    POP			function divisor() constant returns (uint divisor) {...
    POP			function divisor() constant returns (uint divisor) {...
    PUSH 40		function divisor() constant returns (uint divisor) {...
    MLOAD			function divisor() constant returns (uint divisor) {...
    DUP1			function divisor() constant returns (uint divisor) {...
    SWAP2			function divisor() constant returns (uint divisor) {...
    SUB			function divisor() constant returns (uint divisor) {...
    SWAP1			function divisor() constant returns (uint divisor) {...
    RETURN			function divisor() constant returns (uint divisor) {...
  tag6: 
    JUMPDEST		ManagedAccount public extraBalance
    PUSH [tag24]		ManagedAccount public extraBalance
    PUSH 4		ManagedAccount public extraBalance
    DUP1			ManagedAccount public extraBalance
    POP			ManagedAccount public extraBalance
    POP			ManagedAccount public extraBalance
    PUSH [tag25]		ManagedAccount public extraBalance
    JUMP			ManagedAccount public extraBalance
  tag24: 
    JUMPDEST		ManagedAccount public extraBalance
    PUSH 40		ManagedAccount public extraBalance
    MLOAD			ManagedAccount public extraBalance
    DUP1			ManagedAccount public extraBalance
    DUP3			ManagedAccount public extraBalance
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		ManagedAccount public extraBalance
    AND			ManagedAccount public extraBalance
    DUP2			ManagedAccount public extraBalance
    MSTORE			ManagedAccount public extraBalance
    PUSH 20		ManagedAccount public extraBalance
    ADD			ManagedAccount public extraBalance
    SWAP2			ManagedAccount public extraBalance
    POP			ManagedAccount public extraBalance
    POP			ManagedAccount public extraBalance
    PUSH 40		ManagedAccount public extraBalance
    MLOAD			ManagedAccount public extraBalance
    DUP1			ManagedAccount public extraBalance
    SWAP2			ManagedAccount public extraBalance
    SUB			ManagedAccount public extraBalance
    SWAP1			ManagedAccount public extraBalance
    RETURN			ManagedAccount public extraBalance
  tag7: 
    JUMPDEST		function transferFrom(...
    PUSH [tag26]		function transferFrom(...
    PUSH 4		function transferFrom(...
    DUP1			function transferFrom(...
    DUP1			function transferFrom(...
    CALLDATALOAD			function transferFrom(...
    SWAP1			function transferFrom(...
    PUSH 20		function transferFrom(...
    ADD			function transferFrom(...
    SWAP1			function transferFrom(...
    SWAP2			function transferFrom(...
    SWAP1			function transferFrom(...
    DUP1			function transferFrom(...
    CALLDATALOAD			function transferFrom(...
    SWAP1			function transferFrom(...
    PUSH 20		function transferFrom(...
    ADD			function transferFrom(...
    SWAP1			function transferFrom(...
    SWAP2			function transferFrom(...
    SWAP1			function transferFrom(...
    DUP1			function transferFrom(...
    CALLDATALOAD			function transferFrom(...
    SWAP1			function transferFrom(...
    PUSH 20		function transferFrom(...
    ADD			function transferFrom(...
    SWAP1			function transferFrom(...
    SWAP2			function transferFrom(...
    SWAP1			function transferFrom(...
    POP			function transferFrom(...
    POP			function transferFrom(...
    PUSH [tag27]		function transferFrom(...
    JUMP			function transferFrom(...
  tag26: 
    JUMPDEST		function transferFrom(...
    PUSH 40		function transferFrom(...
    MLOAD			function transferFrom(...
    DUP1			function transferFrom(...
    DUP3			function transferFrom(...
    DUP2			function transferFrom(...
    MSTORE			function transferFrom(...
    PUSH 20		function transferFrom(...
    ADD			function transferFrom(...
    SWAP2			function transferFrom(...
    POP			function transferFrom(...
    POP			function transferFrom(...
    PUSH 40		function transferFrom(...
    MLOAD			function transferFrom(...
    DUP1			function transferFrom(...
    SWAP2			function transferFrom(...
    SUB			function transferFrom(...
    SWAP1			function transferFrom(...
    RETURN			function transferFrom(...
  tag8: 
    JUMPDEST		uint public closingTime
    PUSH [tag28]		uint public closingTime
    PUSH 4		uint public closingTime
    DUP1			uint public closingTime
    POP			uint public closingTime
    POP			uint public closingTime
    PUSH [tag29]		uint public closingTime
    JUMP			uint public closingTime
  tag28: 
    JUMPDEST		uint public closingTime
    PUSH 40		uint public closingTime
    MLOAD			uint public closingTime
    DUP1			uint public closingTime
    DUP3			uint public closingTime
    DUP2			uint public closingTime
    MSTORE			uint public closingTime
    PUSH 20		uint public closingTime
    ADD			uint public closingTime
    SWAP2			uint public closingTime
    POP			uint public closingTime
    POP			uint public closingTime
    PUSH 40		uint public closingTime
    MLOAD			uint public closingTime
    DUP1			uint public closingTime
    SWAP2			uint public closingTime
    SUB			uint public closingTime
    SWAP1			uint public closingTime
    RETURN			uint public closingTime
  tag9: 
    JUMPDEST		function refund() noEther {...
    PUSH [tag30]		function refund() noEther {...
    PUSH 4		function refund() noEther {...
    DUP1			function refund() noEther {...
    POP			function refund() noEther {...
    POP			function refund() noEther {...
    PUSH [tag31]		function refund() noEther {...
    JUMP			function refund() noEther {...
  tag30: 
    JUMPDEST		function refund() noEther {...
    STOP			function refund() noEther {...
  tag10: 
    JUMPDEST		function balanceOf(address _owner) constant returns (uint256 balance) {...
    PUSH [tag32]		function balanceOf(address _owner) constant returns (uint256 balance) {...
    PUSH 4		function balanceOf(address _owner) constant returns (uint256 balance) {...
    DUP1			function balanceOf(address _owner) constant returns (uint256 balance) {...
    DUP1			function balanceOf(address _owner) constant returns (uint256 balance) {...
    CALLDATALOAD			function balanceOf(address _owner) constant returns (uint256 balance) {...
    SWAP1			function balanceOf(address _owner) constant returns (uint256 balance) {...
    PUSH 20		function balanceOf(address _owner) constant returns (uint256 balance) {...
    ADD			function balanceOf(address _owner) constant returns (uint256 balance) {...
    SWAP1			function balanceOf(address _owner) constant returns (uint256 balance) {...
    SWAP2			function balanceOf(address _owner) constant returns (uint256 balance) {...
    SWAP1			function balanceOf(address _owner) constant returns (uint256 balance) {...
    POP			function balanceOf(address _owner) constant returns (uint256 balance) {...
    POP			function balanceOf(address _owner) constant returns (uint256 balance) {...
    PUSH [tag33]		function balanceOf(address _owner) constant returns (uint256 balance) {...
    JUMP			function balanceOf(address _owner) constant returns (uint256 balance) {...
  tag32: 
    JUMPDEST		function balanceOf(address _owner) constant returns (uint256 balance) {...
    PUSH 40		function balanceOf(address _owner) constant returns (uint256 balance) {...
    MLOAD			function balanceOf(address _owner) constant returns (uint256 balance) {...
    DUP1			function balanceOf(address _owner) constant returns (uint256 balance) {...
    DUP3			function balanceOf(address _owner) constant returns (uint256 balance) {...
    DUP2			function balanceOf(address _owner) constant returns (uint256 balance) {...
    MSTORE			function balanceOf(address _owner) constant returns (uint256 balance) {...
    PUSH 20		function balanceOf(address _owner) constant returns (uint256 balance) {...
    ADD			function balanceOf(address _owner) constant returns (uint256 balance) {...
    SWAP2			function balanceOf(address _owner) constant returns (uint256 balance) {...
    POP			function balanceOf(address _owner) constant returns (uint256 balance) {...
    POP			function balanceOf(address _owner) constant returns (uint256 balance) {...
    PUSH 40		function balanceOf(address _owner) constant returns (uint256 balance) {...
    MLOAD			function balanceOf(address _owner) constant returns (uint256 balance) {...
    DUP1			function balanceOf(address _owner) constant returns (uint256 balance) {...
    SWAP2			function balanceOf(address _owner) constant returns (uint256 balance) {...
    SUB			function balanceOf(address _owner) constant returns (uint256 balance) {...
    SWAP1			function balanceOf(address _owner) constant returns (uint256 balance) {...
    RETURN			function balanceOf(address _owner) constant returns (uint256 balance) {...
  tag11: 
    JUMPDEST		function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    PUSH [tag34]		function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    PUSH 4		function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    DUP1			function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    DUP1			function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    CALLDATALOAD			function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    SWAP1			function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    PUSH 20		function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    ADD			function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    SWAP1			function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    SWAP2			function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    SWAP1			function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    DUP1			function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    CALLDATALOAD			function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    SWAP1			function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    PUSH 20		function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    ADD			function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    SWAP1			function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    SWAP2			function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    SWAP1			function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    POP			function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    POP			function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    PUSH [tag35]		function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    JUMP			function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
  tag34: 
    JUMPDEST		function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    PUSH 40		function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    MLOAD			function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    DUP1			function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    DUP3			function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    DUP2			function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    MSTORE			function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    PUSH 20		function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    ADD			function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    SWAP2			function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    POP			function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    POP			function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    PUSH 40		function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    MLOAD			function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    DUP1			function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    SWAP2			function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    SUB			function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    SWAP1			function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    RETURN			function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
  tag12: 
    JUMPDEST		bool public isFueled
    PUSH [tag36]		bool public isFueled
    PUSH 4		bool public isFueled
    DUP1			bool public isFueled
    POP			bool public isFueled
    POP			bool public isFueled
    PUSH [tag37]		bool public isFueled
    JUMP			bool public isFueled
  tag36: 
    JUMPDEST		bool public isFueled
    PUSH 40		bool public isFueled
    MLOAD			bool public isFueled
    DUP1			bool public isFueled
    DUP3			bool public isFueled
    DUP2			bool public isFueled
    MSTORE			bool public isFueled
    PUSH 20		bool public isFueled
    ADD			bool public isFueled
    SWAP2			bool public isFueled
    POP			bool public isFueled
    POP			bool public isFueled
    PUSH 40		bool public isFueled
    MLOAD			bool public isFueled
    DUP1			bool public isFueled
    SWAP2			bool public isFueled
    SUB			bool public isFueled
    SWAP1			bool public isFueled
    RETURN			bool public isFueled
  tag13: 
    JUMPDEST		function createTokenProxy(address _tokenHolder) returns (bool success) {...
    PUSH [tag38]		function createTokenProxy(address _tokenHolder) returns (bool success) {...
    PUSH 4		function createTokenProxy(address _tokenHolder) returns (bool success) {...
    DUP1			function createTokenProxy(address _tokenHolder) returns (bool success) {...
    DUP1			function createTokenProxy(address _tokenHolder) returns (bool success) {...
    CALLDATALOAD			function createTokenProxy(address _tokenHolder) returns (bool success) {...
    SWAP1			function createTokenProxy(address _tokenHolder) returns (bool success) {...
    PUSH 20		function createTokenProxy(address _tokenHolder) returns (bool success) {...
    ADD			function createTokenProxy(address _tokenHolder) returns (bool success) {...
    SWAP1			function createTokenProxy(address _tokenHolder) returns (bool success) {...
    SWAP2			function createTokenProxy(address _tokenHolder) returns (bool success) {...
    SWAP1			function createTokenProxy(address _tokenHolder) returns (bool success) {...
    POP			function createTokenProxy(address _tokenHolder) returns (bool success) {...
    POP			function createTokenProxy(address _tokenHolder) returns (bool success) {...
    PUSH [tag39]		function createTokenProxy(address _tokenHolder) returns (bool success) {...
    JUMP			function createTokenProxy(address _tokenHolder) returns (bool success) {...
  tag38: 
    JUMPDEST		function createTokenProxy(address _tokenHolder) returns (bool success) {...
    PUSH 40		function createTokenProxy(address _tokenHolder) returns (bool success) {...
    MLOAD			function createTokenProxy(address _tokenHolder) returns (bool success) {...
    DUP1			function createTokenProxy(address _tokenHolder) returns (bool success) {...
    DUP3			function createTokenProxy(address _tokenHolder) returns (bool success) {...
    DUP2			function createTokenProxy(address _tokenHolder) returns (bool success) {...
    MSTORE			function createTokenProxy(address _tokenHolder) returns (bool success) {...
    PUSH 20		function createTokenProxy(address _tokenHolder) returns (bool success) {...
    ADD			function createTokenProxy(address _tokenHolder) returns (bool success) {...
    SWAP2			function createTokenProxy(address _tokenHolder) returns (bool success) {...
    POP			function createTokenProxy(address _tokenHolder) returns (bool success) {...
    POP			function createTokenProxy(address _tokenHolder) returns (bool success) {...
    PUSH 40		function createTokenProxy(address _tokenHolder) returns (bool success) {...
    MLOAD			function createTokenProxy(address _tokenHolder) returns (bool success) {...
    DUP1			function createTokenProxy(address _tokenHolder) returns (bool success) {...
    SWAP2			function createTokenProxy(address _tokenHolder) returns (bool success) {...
    SUB			function createTokenProxy(address _tokenHolder) returns (bool success) {...
    SWAP1			function createTokenProxy(address _tokenHolder) returns (bool success) {...
    RETURN			function createTokenProxy(address _tokenHolder) returns (bool success) {...
  tag14: 
    JUMPDEST		function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    PUSH [tag40]		function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    PUSH 4		function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    DUP1			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    DUP1			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    CALLDATALOAD			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    SWAP1			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    PUSH 20		function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    ADD			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    SWAP1			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    SWAP2			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    SWAP1			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    DUP1			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    CALLDATALOAD			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    SWAP1			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    PUSH 20		function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    ADD			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    SWAP1			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    SWAP2			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    SWAP1			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    POP			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    POP			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    PUSH [tag41]		function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    JUMP			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
  tag40: 
    JUMPDEST		function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    PUSH 40		function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    MLOAD			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    DUP1			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    DUP3			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    DUP2			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    MSTORE			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    PUSH 20		function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    ADD			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    SWAP2			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    POP			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    POP			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    PUSH 40		function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    MLOAD			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    DUP1			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    SWAP2			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    SUB			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    SWAP1			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    RETURN			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
  tag15: 
    JUMPDEST		address public privateCreation
    PUSH [tag42]		address public privateCreation
    PUSH 4		address public privateCreation
    DUP1			address public privateCreation
    POP			address public privateCreation
    POP			address public privateCreation
    PUSH [tag43]		address public privateCreation
    JUMP			address public privateCreation
  tag42: 
    JUMPDEST		address public privateCreation
    PUSH 40		address public privateCreation
    MLOAD			address public privateCreation
    DUP1			address public privateCreation
    DUP3			address public privateCreation
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		address public privateCreation
    AND			address public privateCreation
    DUP2			address public privateCreation
    MSTORE			address public privateCreation
    PUSH 20		address public privateCreation
    ADD			address public privateCreation
    SWAP2			address public privateCreation
    POP			address public privateCreation
    POP			address public privateCreation
    PUSH 40		address public privateCreation
    MLOAD			address public privateCreation
    DUP1			address public privateCreation
    SWAP2			address public privateCreation
    SUB			address public privateCreation
    SWAP1			address public privateCreation
    RETURN			address public privateCreation
  tag35: 
    JUMPDEST		function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    PUSH 0		bool success
    PUSH 0		0
    CALLVALUE			msg.value
    GT			msg.value > 0
    ISZERO			if (msg.value > 0) throw
    PUSH [tag45]		if (msg.value > 0) throw
    JUMPI			if (msg.value > 0) throw
    PUSH [ErrorTag]		throw
    JUMP			throw
  tag45: 
    JUMPDEST		if (msg.value > 0) throw
    DUP2			_amount
    PUSH 5		balances
    PUSH 0		balances
    POP			balances
    PUSH 0		balances[msg.sender]
    CALLER			msg.sender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		balances[msg.sender]
    AND			balances[msg.sender]
    DUP2			balances[msg.sender]
    MSTORE			balances[msg.sender]
    PUSH 20		balances[msg.sender]
    ADD			balances[msg.sender]
    SWAP1			balances[msg.sender]
    DUP2			balances[msg.sender]
    MSTORE			balances[msg.sender]
    PUSH 20		balances[msg.sender]
    ADD			balances[msg.sender]
    PUSH 0		balances[msg.sender]
    SHA3			balances[msg.sender]
    PUSH 0		balances[msg.sender]
    POP			balances[msg.sender]
    SLOAD			balances[msg.sender]
    LT			balances[msg.sender] >= _amount
    ISZERO			balances[msg.sender] >= _amount
    DUP1			balances[msg.sender] >= _amount && _amount > 0
    ISZERO			balances[msg.sender] >= _amount && _amount > 0
    PUSH [tag46]		balances[msg.sender] >= _amount && _amount > 0
    JUMPI			balances[msg.sender] >= _amount && _amount > 0
    POP			balances[msg.sender] >= _amount && _amount > 0
    PUSH 0		0
    DUP3			_amount
    GT			_amount > 0
  tag46: 
    JUMPDEST		balances[msg.sender] >= _amount && _amount > 0
    ISZERO			if (balances[msg.sender] >= _amount && _amount > 0) {...
    PUSH [tag47]		if (balances[msg.sender] >= _amount && _amount > 0) {...
    JUMPI			if (balances[msg.sender] >= _amount && _amount > 0) {...
    DUP2			_amount
    PUSH 5		balances
    PUSH 0		balances
    POP			balances
    PUSH 0		balances[msg.sender]
    CALLER			msg.sender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		balances[msg.sender]
    AND			balances[msg.sender]
    DUP2			balances[msg.sender]
    MSTORE			balances[msg.sender]
    PUSH 20		balances[msg.sender]
    ADD			balances[msg.sender]
    SWAP1			balances[msg.sender]
    DUP2			balances[msg.sender]
    MSTORE			balances[msg.sender]
    PUSH 20		balances[msg.sender]
    ADD			balances[msg.sender]
    PUSH 0		balances[msg.sender]
    SHA3			balances[msg.sender]
    PUSH 0		balances[msg.sender]
    DUP3			balances[msg.sender] -= _amount
    DUP3			balances[msg.sender] -= _amount
    DUP3			balances[msg.sender] -= _amount
    POP			balances[msg.sender] -= _amount
    SLOAD			balances[msg.sender] -= _amount
    SUB			balances[msg.sender] -= _amount
    SWAP3			balances[msg.sender] -= _amount
    POP			balances[msg.sender] -= _amount
    POP			balances[msg.sender] -= _amount
    DUP2			balances[msg.sender] -= _amount
    SWAP1			balances[msg.sender] -= _amount
    SSTORE			balances[msg.sender] -= _amount
    POP			balances[msg.sender] -= _amount
    DUP2			_amount
    PUSH 5		balances
    PUSH 0		balances
    POP			balances
    PUSH 0		balances[_to]
    DUP6			_to
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		balances[_to]
    AND			balances[_to]
    DUP2			balances[_to]
    MSTORE			balances[_to]
    PUSH 20		balances[_to]
    ADD			balances[_to]
    SWAP1			balances[_to]
    DUP2			balances[_to]
    MSTORE			balances[_to]
    PUSH 20		balances[_to]
    ADD			balances[_to]
    PUSH 0		balances[_to]
    SHA3			balances[_to]
    PUSH 0		balances[_to]
    DUP3			balances[_to] += _amount
    DUP3			balances[_to] += _amount
    DUP3			balances[_to] += _amount
    POP			balances[_to] += _amount
    SLOAD			balances[_to] += _amount
    ADD			balances[_to] += _amount
    SWAP3			balances[_to] += _amount
    POP			balances[_to] += _amount
    POP			balances[_to] += _amount
    DUP2			balances[_to] += _amount
    SWAP1			balances[_to] += _amount
    SSTORE			balances[_to] += _amount
    POP			balances[_to] += _amount
    DUP3			_to
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		Transfer(msg.sender, _to, _amount)
    AND			Transfer(msg.sender, _to, _amount)
    CALLER			msg.sender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		Transfer(msg.sender, _to, _amount)
    AND			Transfer(msg.sender, _to, _amount)
    PUSH DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF		Transfer(msg.sender, _to, _amount)
    DUP5			_amount
    PUSH 40		Transfer(msg.sender, _to, _amount)
    MLOAD			Transfer(msg.sender, _to, _amount)
    DUP1			Transfer(msg.sender, _to, _amount)
    DUP3			Transfer(msg.sender, _to, _amount)
    DUP2			Transfer(msg.sender, _to, _amount)
    MSTORE			Transfer(msg.sender, _to, _amount)
    PUSH 20		Transfer(msg.sender, _to, _amount)
    ADD			Transfer(msg.sender, _to, _amount)
    SWAP2			Transfer(msg.sender, _to, _amount)
    POP			Transfer(msg.sender, _to, _amount)
    POP			Transfer(msg.sender, _to, _amount)
    PUSH 40		Transfer(msg.sender, _to, _amount)
    MLOAD			Transfer(msg.sender, _to, _amount)
    DUP1			Transfer(msg.sender, _to, _amount)
    SWAP2			Transfer(msg.sender, _to, _amount)
    SUB			Transfer(msg.sender, _to, _amount)
    SWAP1			Transfer(msg.sender, _to, _amount)
    LOG3			Transfer(msg.sender, _to, _amount)
    PUSH 1		true
    SWAP1			return true
    POP			return true
    PUSH [tag44]		return true
    JUMP			return true
    PUSH [tag48]		if (balances[msg.sender] >= _amount && _amount > 0) {...
    JUMP			if (balances[msg.sender] >= _amount && _amount > 0) {...
  tag47: 
    JUMPDEST		if (balances[msg.sender] >= _amount && _amount > 0) {...
    PUSH 0		false
    SWAP1			return false
    POP			return false
    PUSH [tag44]		return false
    JUMP			return false
  tag48: 
    JUMPDEST		if (balances[msg.sender] >= _amount && _amount > 0) {...
  tag44: 
    JUMPDEST		function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    SWAP3			function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    SWAP2			function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    POP			function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    POP			function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
    JUMP	[out]		function transfer(address _to, uint256 _amount) noEther returns (bool success) {...
  tag27: 
    JUMPDEST		function transferFrom(...
    PUSH 0		bool success
    PUSH 0		0
    CALLVALUE			msg.value
    GT			msg.value > 0
    ISZERO			if (msg.value > 0) throw
    PUSH [tag50]		if (msg.value > 0) throw
    JUMPI			if (msg.value > 0) throw
    PUSH [ErrorTag]		throw
    JUMP			throw
  tag50: 
    JUMPDEST		if (msg.value > 0) throw
    DUP2			_amount
    PUSH 5		balances
    PUSH 0		balances
    POP			balances
    PUSH 0		balances[_from]
    DUP7			_from
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		balances[_from]
    AND			balances[_from]
    DUP2			balances[_from]
    MSTORE			balances[_from]
    PUSH 20		balances[_from]
    ADD			balances[_from]
    SWAP1			balances[_from]
    DUP2			balances[_from]
    MSTORE			balances[_from]
    PUSH 20		balances[_from]
    ADD			balances[_from]
    PUSH 0		balances[_from]
    SHA3			balances[_from]
    PUSH 0		balances[_from]
    POP			balances[_from]
    SLOAD			balances[_from]
    LT			balances[_from] >= _amount
    ISZERO			balances[_from] >= _amount
    DUP1			balances[_from] >= _amount...
    ISZERO			balances[_from] >= _amount...
    PUSH [tag51]		balances[_from] >= _amount...
    JUMPI			balances[_from] >= _amount...
    POP			balances[_from] >= _amount...
    DUP2			_amount
    PUSH 6		allowed
    PUSH 0		allowed
    POP			allowed
    PUSH 0		allowed[_from]
    DUP7			_from
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		allowed[_from]
    AND			allowed[_from]
    DUP2			allowed[_from]
    MSTORE			allowed[_from]
    PUSH 20		allowed[_from]
    ADD			allowed[_from]
    SWAP1			allowed[_from]
    DUP2			allowed[_from]
    MSTORE			allowed[_from]
    PUSH 20		allowed[_from]
    ADD			allowed[_from]
    PUSH 0		allowed[_from]
    SHA3			allowed[_from]
    PUSH 0		allowed[_from]
    POP			allowed[_from]
    PUSH 0		allowed[_from][msg.sender]
    CALLER			msg.sender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		allowed[_from][msg.sender]
    AND			allowed[_from][msg.sender]
    DUP2			allowed[_from][msg.sender]
    MSTORE			allowed[_from][msg.sender]
    PUSH 20		allowed[_from][msg.sender]
    ADD			allowed[_from][msg.sender]
    SWAP1			allowed[_from][msg.sender]
    DUP2			allowed[_from][msg.sender]
    MSTORE			allowed[_from][msg.sender]
    PUSH 20		allowed[_from][msg.sender]
    ADD			allowed[_from][msg.sender]
    PUSH 0		allowed[_from][msg.sender]
    SHA3			allowed[_from][msg.sender]
    PUSH 0		allowed[_from][msg.sender]
    POP			allowed[_from][msg.sender]
    SLOAD			allowed[_from][msg.sender]
    LT			allowed[_from][msg.sender] >= _amount
    ISZERO			allowed[_from][msg.sender] >= _amount
  tag51: 
    JUMPDEST		balances[_from] >= _amount...
    DUP1			balances[_from] >= _amount...
    ISZERO			balances[_from] >= _amount...
    PUSH [tag52]		balances[_from] >= _amount...
    JUMPI			balances[_from] >= _amount...
    POP			balances[_from] >= _amount...
    PUSH 0		0
    DUP3			_amount
    GT			_amount > 0
  tag52: 
    JUMPDEST		balances[_from] >= _amount...
    ISZERO			if (balances[_from] >= _amount...
    PUSH [tag53]		if (balances[_from] >= _amount...
    JUMPI			if (balances[_from] >= _amount...
    DUP2			_amount
    PUSH 5		balances
    PUSH 0		balances
    POP			balances
    PUSH 0		balances[_to]
    DUP6			_to
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		balances[_to]
    AND			balances[_to]
    DUP2			balances[_to]
    MSTORE			balances[_to]
    PUSH 20		balances[_to]
    ADD			balances[_to]
    SWAP1			balances[_to]
    DUP2			balances[_to]
    MSTORE			balances[_to]
    PUSH 20		balances[_to]
    ADD			balances[_to]
    PUSH 0		balances[_to]
    SHA3			balances[_to]
    PUSH 0		balances[_to]
    DUP3			balances[_to] += _amount
    DUP3			balances[_to] += _amount
    DUP3			balances[_to] += _amount
    POP			balances[_to] += _amount
    SLOAD			balances[_to] += _amount
    ADD			balances[_to] += _amount
    SWAP3			balances[_to] += _amount
    POP			balances[_to] += _amount
    POP			balances[_to] += _amount
    DUP2			balances[_to] += _amount
    SWAP1			balances[_to] += _amount
    SSTORE			balances[_to] += _amount
    POP			balances[_to] += _amount
    DUP2			_amount
    PUSH 5		balances
    PUSH 0		balances
    POP			balances
    PUSH 0		balances[_from]
    DUP7			_from
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		balances[_from]
    AND			balances[_from]
    DUP2			balances[_from]
    MSTORE			balances[_from]
    PUSH 20		balances[_from]
    ADD			balances[_from]
    SWAP1			balances[_from]
    DUP2			balances[_from]
    MSTORE			balances[_from]
    PUSH 20		balances[_from]
    ADD			balances[_from]
    PUSH 0		balances[_from]
    SHA3			balances[_from]
    PUSH 0		balances[_from]
    DUP3			balances[_from] -= _amount
    DUP3			balances[_from] -= _amount
    DUP3			balances[_from] -= _amount
    POP			balances[_from] -= _amount
    SLOAD			balances[_from] -= _amount
    SUB			balances[_from] -= _amount
    SWAP3			balances[_from] -= _amount
    POP			balances[_from] -= _amount
    POP			balances[_from] -= _amount
    DUP2			balances[_from] -= _amount
    SWAP1			balances[_from] -= _amount
    SSTORE			balances[_from] -= _amount
    POP			balances[_from] -= _amount
    DUP2			_amount
    PUSH 6		allowed
    PUSH 0		allowed
    POP			allowed
    PUSH 0		allowed[_from]
    DUP7			_from
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		allowed[_from]
    AND			allowed[_from]
    DUP2			allowed[_from]
    MSTORE			allowed[_from]
    PUSH 20		allowed[_from]
    ADD			allowed[_from]
    SWAP1			allowed[_from]
    DUP2			allowed[_from]
    MSTORE			allowed[_from]
    PUSH 20		allowed[_from]
    ADD			allowed[_from]
    PUSH 0		allowed[_from]
    SHA3			allowed[_from]
    PUSH 0		allowed[_from]
    POP			allowed[_from]
    PUSH 0		allowed[_from][msg.sender]
    CALLER			msg.sender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		allowed[_from][msg.sender]
    AND			allowed[_from][msg.sender]
    DUP2			allowed[_from][msg.sender]
    MSTORE			allowed[_from][msg.sender]
    PUSH 20		allowed[_from][msg.sender]
    ADD			allowed[_from][msg.sender]
    SWAP1			allowed[_from][msg.sender]
    DUP2			allowed[_from][msg.sender]
    MSTORE			allowed[_from][msg.sender]
    PUSH 20		allowed[_from][msg.sender]
    ADD			allowed[_from][msg.sender]
    PUSH 0		allowed[_from][msg.sender]
    SHA3			allowed[_from][msg.sender]
    PUSH 0		allowed[_from][msg.sender]
    DUP3			allowed[_from][msg.sender] -= _amount
    DUP3			allowed[_from][msg.sender] -= _amount
    DUP3			allowed[_from][msg.sender] -= _amount
    POP			allowed[_from][msg.sender] -= _amount
    SLOAD			allowed[_from][msg.sender] -= _amount
    SUB			allowed[_from][msg.sender] -= _amount
    SWAP3			allowed[_from][msg.sender] -= _amount
    POP			allowed[_from][msg.sender] -= _amount
    POP			allowed[_from][msg.sender] -= _amount
    DUP2			allowed[_from][msg.sender] -= _amount
    SWAP1			allowed[_from][msg.sender] -= _amount
    SSTORE			allowed[_from][msg.sender] -= _amount
    POP			allowed[_from][msg.sender] -= _amount
    DUP3			_to
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		Transfer(_from, _to, _amount)
    AND			Transfer(_from, _to, _amount)
    DUP5			_from
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		Transfer(_from, _to, _amount)
    AND			Transfer(_from, _to, _amount)
    PUSH DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF		Transfer(_from, _to, _amount)
    DUP5			_amount
    PUSH 40		Transfer(_from, _to, _amount)
    MLOAD			Transfer(_from, _to, _amount)
    DUP1			Transfer(_from, _to, _amount)
    DUP3			Transfer(_from, _to, _amount)
    DUP2			Transfer(_from, _to, _amount)
    MSTORE			Transfer(_from, _to, _amount)
    PUSH 20		Transfer(_from, _to, _amount)
    ADD			Transfer(_from, _to, _amount)
    SWAP2			Transfer(_from, _to, _amount)
    POP			Transfer(_from, _to, _amount)
    POP			Transfer(_from, _to, _amount)
    PUSH 40		Transfer(_from, _to, _amount)
    MLOAD			Transfer(_from, _to, _amount)
    DUP1			Transfer(_from, _to, _amount)
    SWAP2			Transfer(_from, _to, _amount)
    SUB			Transfer(_from, _to, _amount)
    SWAP1			Transfer(_from, _to, _amount)
    LOG3			Transfer(_from, _to, _amount)
    PUSH 1		true
    SWAP1			return true
    POP			return true
    PUSH [tag49]		return true
    JUMP			return true
    PUSH [tag54]		if (balances[_from] >= _amount...
    JUMP			if (balances[_from] >= _amount...
  tag53: 
    JUMPDEST		if (balances[_from] >= _amount...
    PUSH 0		false
    SWAP1			return false
    POP			return false
    PUSH [tag49]		return false
    JUMP			return false
  tag54: 
    JUMPDEST		if (balances[_from] >= _amount...
  tag49: 
    JUMPDEST		function transferFrom(...
    SWAP4			function transferFrom(...
    SWAP3			function transferFrom(...
    POP			function transferFrom(...
    POP			function transferFrom(...
    POP			function transferFrom(...
    JUMP	[out]		function transferFrom(...
  tag17: 
    JUMPDEST		function approve(address _spender, uint256 _amount) returns (bool success) {...
    PUSH 0		bool success
    DUP2			_amount
    PUSH 6		allowed
    PUSH 0		allowed
    POP			allowed
    PUSH 0		allowed[msg.sender]
    CALLER			msg.sender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		allowed[msg.sender]
    AND			allowed[msg.sender]
    DUP2			allowed[msg.sender]
    MSTORE			allowed[msg.sender]
    PUSH 20		allowed[msg.sender]
    ADD			allowed[msg.sender]
    SWAP1			allowed[msg.sender]
    DUP2			allowed[msg.sender]
    MSTORE			allowed[msg.sender]
    PUSH 20		allowed[msg.sender]
    ADD			allowed[msg.sender]
    PUSH 0		allowed[msg.sender]
    SHA3			allowed[msg.sender]
    PUSH 0		allowed[msg.sender]
    POP			allowed[msg.sender]
    PUSH 0		allowed[msg.sender][_spender]
    DUP6			_spender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		allowed[msg.sender][_spender]
    AND			allowed[msg.sender][_spender]
    DUP2			allowed[msg.sender][_spender]
    MSTORE			allowed[msg.sender][_spender]
    PUSH 20		allowed[msg.sender][_spender]
    ADD			allowed[msg.sender][_spender]
    SWAP1			allowed[msg.sender][_spender]
    DUP2			allowed[msg.sender][_spender]
    MSTORE			allowed[msg.sender][_spender]
    PUSH 20		allowed[msg.sender][_spender]
    ADD			allowed[msg.sender][_spender]
    PUSH 0		allowed[msg.sender][_spender]
    SHA3			allowed[msg.sender][_spender]
    PUSH 0		allowed[msg.sender][_spender]
    POP			allowed[msg.sender][_spender] = _amount
    DUP2			allowed[msg.sender][_spender] = _amount
    SWAP1			allowed[msg.sender][_spender] = _amount
    SSTORE			allowed[msg.sender][_spender] = _amount
    POP			allowed[msg.sender][_spender] = _amount
    DUP3			_spender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		Approval(msg.sender, _spender, _amount)
    AND			Approval(msg.sender, _spender, _amount)
    CALLER			msg.sender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		Approval(msg.sender, _spender, _amount)
    AND			Approval(msg.sender, _spender, _amount)
    PUSH 8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925		Approval(msg.sender, _spender, _amount)
    DUP5			_amount
    PUSH 40		Approval(msg.sender, _spender, _amount)
    MLOAD			Approval(msg.sender, _spender, _amount)
    DUP1			Approval(msg.sender, _spender, _amount)
    DUP3			Approval(msg.sender, _spender, _amount)
    DUP2			Approval(msg.sender, _spender, _amount)
    MSTORE			Approval(msg.sender, _spender, _amount)
    PUSH 20		Approval(msg.sender, _spender, _amount)
    ADD			Approval(msg.sender, _spender, _amount)
    SWAP2			Approval(msg.sender, _spender, _amount)
    POP			Approval(msg.sender, _spender, _amount)
    POP			Approval(msg.sender, _spender, _amount)
    PUSH 40		Approval(msg.sender, _spender, _amount)
    MLOAD			Approval(msg.sender, _spender, _amount)
    DUP1			Approval(msg.sender, _spender, _amount)
    SWAP2			Approval(msg.sender, _spender, _amount)
    SUB			Approval(msg.sender, _spender, _amount)
    SWAP1			Approval(msg.sender, _spender, _amount)
    LOG3			Approval(msg.sender, _spender, _amount)
    PUSH 1		true
    SWAP1			return true
    POP			return true
    PUSH [tag55]		return true
    JUMP			return true
  tag55: 
    JUMPDEST		function approve(address _spender, uint256 _amount) returns (bool success) {...
    SWAP3			function approve(address _spender, uint256 _amount) returns (bool success) {...
    SWAP2			function approve(address _spender, uint256 _amount) returns (bool success) {...
    POP			function approve(address _spender, uint256 _amount) returns (bool success) {...
    POP			function approve(address _spender, uint256 _amount) returns (bool success) {...
    JUMP	[out]		function approve(address _spender, uint256 _amount) returns (bool success) {...
  tag41: 
    JUMPDEST		function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    PUSH 0		uint256 remaining
    PUSH 6		allowed
    PUSH 0		allowed
    POP			allowed
    PUSH 0		allowed[_owner]
    DUP5			_owner
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		allowed[_owner]
    AND			allowed[_owner]
    DUP2			allowed[_owner]
    MSTORE			allowed[_owner]
    PUSH 20		allowed[_owner]
    ADD			allowed[_owner]
    SWAP1			allowed[_owner]
    DUP2			allowed[_owner]
    MSTORE			allowed[_owner]
    PUSH 20		allowed[_owner]
    ADD			allowed[_owner]
    PUSH 0		allowed[_owner]
    SHA3			allowed[_owner]
    PUSH 0		allowed[_owner]
    POP			allowed[_owner]
    PUSH 0		allowed[_owner][_spender]
    DUP4			_spender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		allowed[_owner][_spender]
    AND			allowed[_owner][_spender]
    DUP2			allowed[_owner][_spender]
    MSTORE			allowed[_owner][_spender]
    PUSH 20		allowed[_owner][_spender]
    ADD			allowed[_owner][_spender]
    SWAP1			allowed[_owner][_spender]
    DUP2			allowed[_owner][_spender]
    MSTORE			allowed[_owner][_spender]
    PUSH 20		allowed[_owner][_spender]
    ADD			allowed[_owner][_spender]
    PUSH 0		allowed[_owner][_spender]
    SHA3			allowed[_owner][_spender]
    PUSH 0		allowed[_owner][_spender]
    POP			allowed[_owner][_spender]
    SLOAD			allowed[_owner][_spender]
    SWAP1			return allowed[_owner][_spender]
    POP			return allowed[_owner][_spender]
    PUSH [tag56]		return allowed[_owner][_spender]
    JUMP			return allowed[_owner][_spender]
  tag56: 
    JUMPDEST		function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    SWAP3			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    SWAP2			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    POP			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    POP			function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
    JUMP	[out]		function allowance(address _owner, address _spender) constant returns (uint256 remaining) {...
  tag29: 
    JUMPDEST		uint public closingTime
    PUSH 0		uint public closingTime
    PUSH 0		uint public closingTime
    POP			uint public closingTime
    SLOAD			uint public closingTime
    DUP2			uint public closingTime
    JUMP	[out]		uint public closingTime
  tag19: 
    JUMPDEST		uint public minTokensToCreate
    PUSH 1		uint public minTokensToCreate
    PUSH 0		uint public minTokensToCreate
    POP			uint public minTokensToCreate
    SLOAD			uint public minTokensToCreate
    DUP2			uint public minTokensToCreate
    JUMP	[out]		uint public minTokensToCreate
  tag37: 
    JUMPDEST		bool public isFueled
    PUSH 2		bool public isFueled
    PUSH 0		bool public isFueled
    SWAP1			bool public isFueled
    SLOAD			bool public isFueled
    SWAP1			bool public isFueled
    PUSH 100		bool public isFueled
    EXP			bool public isFueled
    SWAP1			bool public isFueled
    DIV			bool public isFueled
    PUSH FF		bool public isFueled
    AND			bool public isFueled
    DUP2			bool public isFueled
    JUMP	[out]		bool public isFueled
  tag43: 
    JUMPDEST		address public privateCreation
    PUSH 2		address public privateCreation
    PUSH 1		address public privateCreation
    SWAP1			address public privateCreation
    SLOAD			address public privateCreation
    SWAP1			address public privateCreation
    PUSH 100		address public privateCreation
    EXP			address public privateCreation
    SWAP1			address public privateCreation
    DIV			address public privateCreation
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		address public privateCreation
    AND			address public privateCreation
    DUP2			address public privateCreation
    JUMP	[out]		address public privateCreation
  tag25: 
    JUMPDEST		ManagedAccount public extraBalance
    PUSH 3		ManagedAccount public extraBalance
    PUSH 0		ManagedAccount public extraBalance
    SWAP1			ManagedAccount public extraBalance
    SLOAD			ManagedAccount public extraBalance
    SWAP1			ManagedAccount public extraBalance
    PUSH 100		ManagedAccount public extraBalance
    EXP			ManagedAccount public extraBalance
    SWAP1			ManagedAccount public extraBalance
    DIV			ManagedAccount public extraBalance
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		ManagedAccount public extraBalance
    AND			ManagedAccount public extraBalance
    DUP2			ManagedAccount public extraBalance
    JUMP	[out]		ManagedAccount public extraBalance
  tag39: 
    JUMPDEST		function createTokenProxy(address _tokenHolder) returns (bool success) {...
    PUSH 0		bool success
    PUSH 0		uint token
    PUSH 0		closingTime
    PUSH 0		closingTime
    POP			closingTime
    SLOAD			closingTime
    TIMESTAMP			now
    LT			now < closingTime
    DUP1			now < closingTime && msg.value > 0
    ISZERO			now < closingTime && msg.value > 0
    PUSH [tag58]		now < closingTime && msg.value > 0
    JUMPI			now < closingTime && msg.value > 0
    POP			now < closingTime && msg.value > 0
    PUSH 0		0
    CALLVALUE			msg.value
    GT			msg.value > 0
  tag58: 
    JUMPDEST		now < closingTime && msg.value > 0
    DUP1			now < closingTime && msg.value > 0...
    ISZERO			now < closingTime && msg.value > 0...
    PUSH [tag59]		now < closingTime && msg.value > 0...
    JUMPI			now < closingTime && msg.value > 0...
    POP			now < closingTime && msg.value > 0...
    PUSH 0		0
    PUSH 2		privateCreation
    PUSH 1		privateCreation
    SWAP1			privateCreation
    SLOAD			privateCreation
    SWAP1			privateCreation
    PUSH 100		privateCreation
    EXP			privateCreation
    SWAP1			privateCreation
    DIV			privateCreation
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		privateCreation
    AND			privateCreation
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		privateCreation == 0
    AND			privateCreation == 0
    EQ			privateCreation == 0
    DUP1			privateCreation == 0 || privateCreation == msg.sender
    PUSH [tag60]		privateCreation == 0 || privateCreation == msg.sender
    JUMPI			privateCreation == 0 || privateCreation == msg.sender
    POP			privateCreation == 0 || privateCreation == msg.sender
    CALLER			msg.sender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		privateCreation == msg.sender
    AND			privateCreation == msg.sender
    PUSH 2		privateCreation
    PUSH 1		privateCreation
    SWAP1			privateCreation
    SLOAD			privateCreation
    SWAP1			privateCreation
    PUSH 100		privateCreation
    EXP			privateCreation
    SWAP1			privateCreation
    DIV			privateCreation
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		privateCreation
    AND			privateCreation
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		privateCreation == msg.sender
    AND			privateCreation == msg.sender
    EQ			privateCreation == msg.sender
  tag60: 
    JUMPDEST		privateCreation == 0 || privateCreation == msg.sender
  tag59: 
    JUMPDEST		now < closingTime && msg.value > 0...
    ISZERO			if (now < closingTime && msg.value > 0...
    PUSH [tag61]		if (now < closingTime && msg.value > 0...
    JUMPI			if (now < closingTime && msg.value > 0...
    PUSH [tag62]		divisor()
    PUSH [tag23]		divisor
    JUMP	[in]		divisor()
  tag62: 
    JUMPDEST		divisor()
    PUSH 14		20
    CALLVALUE			msg.value
    MUL			msg.value * 20
    DIV			(msg.value * 20) / divisor()
    SWAP1			uint token = (msg.value * 20) / divisor()
    POP			uint token = (msg.value * 20) / divisor()
    PUSH 3		extraBalance
    PUSH 0		extraBalance
    SWAP1			extraBalance
    SLOAD			extraBalance
    SWAP1			extraBalance
    PUSH 100		extraBalance
    EXP			extraBalance
    SWAP1			extraBalance
    DIV			extraBalance
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		extraBalance
    AND			extraBalance
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		extraBalance.call
    AND			extraBalance.call
    DUP2			token
    CALLVALUE			msg.value
    SUB			msg.value - token
    PUSH 40		extraBalance.call.value(msg.value - token)()
    MLOAD			extraBalance.call.value(msg.value - token)()
    DUP1			extraBalance.call.value(msg.value - token)()
    SWAP1			extraBalance.call.value(msg.value - token)()
    POP			extraBalance.call.value(msg.value - token)()
    PUSH 0		extraBalance.call.value(msg.value - token)()
    PUSH 40		extraBalance.call.value(msg.value - token)()
    MLOAD			extraBalance.call.value(msg.value - token)()
    DUP1			extraBalance.call.value(msg.value - token)()
    DUP4			extraBalance.call.value(msg.value - token)()
    SUB			extraBalance.call.value(msg.value - token)()
    DUP2			extraBalance.call.value(msg.value - token)()
    DUP6			extraBalance.call.value(msg.value - token)()
    DUP8			extraBalance.call.value(msg.value - token)()
    PUSH 8502		extraBalance.call.value(msg.value - token)()
    GAS			extraBalance.call.value(msg.value - token)()
    SUB			extraBalance.call.value(msg.value - token)()
    CALL			extraBalance.call.value(msg.value - token)()
    SWAP3			extraBalance.call.value(msg.value - token)()
    POP			extraBalance.call.value(msg.value - token)()
    POP			extraBalance.call.value(msg.value - token)()
    POP			extraBalance.call.value(msg.value - token)()
    POP			extraBalance.call.value(msg.value - token)()
    DUP1			token
    PUSH 5		balances
    PUSH 0		balances
    POP			balances
    PUSH 0		balances[_tokenHolder]
    DUP6			_tokenHolder
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		balances[_tokenHolder]
    AND			balances[_tokenHolder]
    DUP2			balances[_tokenHolder]
    MSTORE			balances[_tokenHolder]
    PUSH 20		balances[_tokenHolder]
    ADD			balances[_tokenHolder]
    SWAP1			balances[_tokenHolder]
    DUP2			balances[_tokenHolder]
    MSTORE			balances[_tokenHolder]
    PUSH 20		balances[_tokenHolder]
    ADD			balances[_tokenHolder]
    PUSH 0		balances[_tokenHolder]
    SHA3			balances[_tokenHolder]
    PUSH 0		balances[_tokenHolder]
    DUP3			balances[_tokenHolder] += token
    DUP3			balances[_tokenHolder] += token
    DUP3			balances[_tokenHolder] += token
    POP			balances[_tokenHolder] += token
    SLOAD			balances[_tokenHolder] += token
    ADD			balances[_tokenHolder] += token
    SWAP3			balances[_tokenHolder] += token
    POP			balances[_tokenHolder] += token
    POP			balances[_tokenHolder] += token
    DUP2			balances[_tokenHolder] += token
    SWAP1			balances[_tokenHolder] += token
    SSTORE			balances[_tokenHolder] += token
    POP			balances[_tokenHolder] += token
    DUP1			token
    PUSH 7		totalSupply
    PUSH 0		totalSupply
    DUP3			totalSupply += token
    DUP3			totalSupply += token
    DUP3			totalSupply += token
    POP			totalSupply += token
    SLOAD			totalSupply += token
    ADD			totalSupply += token
    SWAP3			totalSupply += token
    POP			totalSupply += token
    POP			totalSupply += token
    DUP2			totalSupply += token
    SWAP1			totalSupply += token
    SSTORE			totalSupply += token
    POP			totalSupply += token
    CALLVALUE			msg.value
    PUSH 4		weiGiven
    PUSH 0		weiGiven
    POP			weiGiven
    PUSH 0		weiGiven[_tokenHolder]
    DUP6			_tokenHolder
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		weiGiven[_tokenHolder]
    AND			weiGiven[_tokenHolder]
    DUP2			weiGiven[_tokenHolder]
    MSTORE			weiGiven[_tokenHolder]
    PUSH 20		weiGiven[_tokenHolder]
    ADD			weiGiven[_tokenHolder]
    SWAP1			weiGiven[_tokenHolder]
    DUP2			weiGiven[_tokenHolder]
    MSTORE			weiGiven[_tokenHolder]
    PUSH 20		weiGiven[_tokenHolder]
    ADD			weiGiven[_tokenHolder]
    PUSH 0		weiGiven[_tokenHolder]
    SHA3			weiGiven[_tokenHolder]
    PUSH 0		weiGiven[_tokenHolder]
    DUP3			weiGiven[_tokenHolder] += msg.value
    DUP3			weiGiven[_tokenHolder] += msg.value
    DUP3			weiGiven[_tokenHolder] += msg.value
    POP			weiGiven[_tokenHolder] += msg.value
    SLOAD			weiGiven[_tokenHolder] += msg.value
    ADD			weiGiven[_tokenHolder] += msg.value
    SWAP3			weiGiven[_tokenHolder] += msg.value
    POP			weiGiven[_tokenHolder] += msg.value
    POP			weiGiven[_tokenHolder] += msg.value
    DUP2			weiGiven[_tokenHolder] += msg.value
    SWAP1			weiGiven[_tokenHolder] += msg.value
    SSTORE			weiGiven[_tokenHolder] += msg.value
    POP			weiGiven[_tokenHolder] += msg.value
    DUP3			_tokenHolder
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		CreatedToken(_tokenHolder, token)
    AND			CreatedToken(_tokenHolder, token)
    PUSH DBCCB92686EFCEAFB9BB7E0394DF7F58F71B954061B81AFB57109BF247D3D75A		CreatedToken(_tokenHolder, token)
    DUP3			token
    PUSH 40		CreatedToken(_tokenHolder, token)
    MLOAD			CreatedToken(_tokenHolder, token)
    DUP1			CreatedToken(_tokenHolder, token)
    DUP3			CreatedToken(_tokenHolder, token)
    DUP2			CreatedToken(_tokenHolder, token)
    MSTORE			CreatedToken(_tokenHolder, token)
    PUSH 20		CreatedToken(_tokenHolder, token)
    ADD			CreatedToken(_tokenHolder, token)
    SWAP2			CreatedToken(_tokenHolder, token)
    POP			CreatedToken(_tokenHolder, token)
    POP			CreatedToken(_tokenHolder, token)
    PUSH 40		CreatedToken(_tokenHolder, token)
    MLOAD			CreatedToken(_tokenHolder, token)
    DUP1			CreatedToken(_tokenHolder, token)
    SWAP2			CreatedToken(_tokenHolder, token)
    SUB			CreatedToken(_tokenHolder, token)
    SWAP1			CreatedToken(_tokenHolder, token)
    LOG2			CreatedToken(_tokenHolder, token)
    PUSH 1		minTokensToCreate
    PUSH 0		minTokensToCreate
    POP			minTokensToCreate
    SLOAD			minTokensToCreate
    PUSH 7		totalSupply
    PUSH 0		totalSupply
    POP			totalSupply
    SLOAD			totalSupply
    LT			totalSupply >= minTokensToCreate
    ISZERO			totalSupply >= minTokensToCreate
    DUP1			totalSupply >= minTokensToCreate && !isFueled
    ISZERO			totalSupply >= minTokensToCreate && !isFueled
    PUSH [tag63]		totalSupply >= minTokensToCreate && !isFueled
    JUMPI			totalSupply >= minTokensToCreate && !isFueled
    POP			totalSupply >= minTokensToCreate && !isFueled
    PUSH 2		isFueled
    PUSH 0		isFueled
    SWAP1			isFueled
    SLOAD			isFueled
    SWAP1			isFueled
    PUSH 100		isFueled
    EXP			isFueled
    SWAP1			isFueled
    DIV			isFueled
    PUSH FF		isFueled
    AND			isFueled
    ISZERO			!isFueled
  tag63: 
    JUMPDEST		totalSupply >= minTokensToCreate && !isFueled
    ISZERO			if (totalSupply >= minTokensToCreate && !isFueled) {...
    PUSH [tag64]		if (totalSupply >= minTokensToCreate && !isFueled) {...
    JUMPI			if (totalSupply >= minTokensToCreate && !isFueled) {...
    PUSH 1		true
    PUSH 2		isFueled
    PUSH 0		isFueled
    PUSH 100		isFueled = true
    EXP			isFueled = true
    DUP2			isFueled = true
    SLOAD			isFueled = true
    DUP2			isFueled = true
    PUSH FF		isFueled = true
    MUL			isFueled = true
    NOT			isFueled = true
    AND			isFueled = true
    SWAP1			isFueled = true
    DUP4			isFueled = true
    MUL			isFueled = true
    OR			isFueled = true
    SWAP1			isFueled = true
    SSTORE			isFueled = true
    POP			isFueled = true
    PUSH F381A3E2428FDDA36615919E8D9C35878D9EB0CF85AC6EDF575088E80E4C147E		FuelingToDate(totalSupply)
    PUSH 7		totalSupply
    PUSH 0		totalSupply
    POP			totalSupply
    SLOAD			totalSupply
    PUSH 40		FuelingToDate(totalSupply)
    MLOAD			FuelingToDate(totalSupply)
    DUP1			FuelingToDate(totalSupply)
    DUP3			FuelingToDate(totalSupply)
    DUP2			FuelingToDate(totalSupply)
    MSTORE			FuelingToDate(totalSupply)
    PUSH 20		FuelingToDate(totalSupply)
    ADD			FuelingToDate(totalSupply)
    SWAP2			FuelingToDate(totalSupply)
    POP			FuelingToDate(totalSupply)
    POP			FuelingToDate(totalSupply)
    PUSH 40		FuelingToDate(totalSupply)
    MLOAD			FuelingToDate(totalSupply)
    DUP1			FuelingToDate(totalSupply)
    SWAP2			FuelingToDate(totalSupply)
    SUB			FuelingToDate(totalSupply)
    SWAP1			FuelingToDate(totalSupply)
    LOG1			FuelingToDate(totalSupply)
  tag64: 
    JUMPDEST		if (totalSupply >= minTokensToCreate && !isFueled) {...
    PUSH 1		true
    SWAP2			return true
    POP			return true
    PUSH [tag57]		return true
    JUMP			return true
  tag61: 
    JUMPDEST		if (now < closingTime && msg.value > 0...
    PUSH [ErrorTag]		throw
    JUMP			throw
  tag57: 
    JUMPDEST		function createTokenProxy(address _tokenHolder) returns (bool success) {...
    POP			function createTokenProxy(address _tokenHolder) returns (bool success) {...
    SWAP2			function createTokenProxy(address _tokenHolder) returns (bool success) {...
    SWAP1			function createTokenProxy(address _tokenHolder) returns (bool success) {...
    POP			function createTokenProxy(address _tokenHolder) returns (bool success) {...
    JUMP	[out]		function createTokenProxy(address _tokenHolder) returns (bool success) {...
  tag31: 
    JUMPDEST		function refund() noEther {...
    PUSH 0		0
    CALLVALUE			msg.value
    GT			msg.value > 0
    ISZERO			if (msg.value > 0) throw
    PUSH [tag66]		if (msg.value > 0) throw
    JUMPI			if (msg.value > 0) throw
    PUSH [ErrorTag]		throw
    JUMP			throw
  tag66: 
    JUMPDEST		if (msg.value > 0) throw
    PUSH 0		closingTime
    PUSH 0		closingTime
    POP			closingTime
    SLOAD			closingTime
    TIMESTAMP			now
    GT			now > closingTime
    DUP1			now > closingTime && !isFueled
    ISZERO			now > closingTime && !isFueled
    PUSH [tag67]		now > closingTime && !isFueled
    JUMPI			now > closingTime && !isFueled
    POP			now > closingTime && !isFueled
    PUSH 2		isFueled
    PUSH 0		isFueled
    SWAP1			isFueled
    SLOAD			isFueled
    SWAP1			isFueled
    PUSH 100		isFueled
    EXP			isFueled
    SWAP1			isFueled
    DIV			isFueled
    PUSH FF		isFueled
    AND			isFueled
    ISZERO			!isFueled
  tag67: 
    JUMPDEST		now > closingTime && !isFueled
    ISZERO			if (now > closingTime && !isFueled) {...
    PUSH [tag68]		if (now > closingTime && !isFueled) {...
    JUMPI			if (now > closingTime && !isFueled) {...
    PUSH 3		extraBalance
    PUSH 0		extraBalance
    SWAP1			extraBalance
    SLOAD			extraBalance
    SWAP1			extraBalance
    PUSH 100		extraBalance
    EXP			extraBalance
    SWAP1			extraBalance
    DIV			extraBalance
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		extraBalance
    AND			extraBalance
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		extraBalance.accumulatedInput
    AND			extraBalance.accumulatedInput
    PUSH D2CC718F		extraBalance.accumulatedInput
    PUSH 40		extraBalance.accumulatedInput()
    MLOAD			extraBalance.accumulatedInput()
    DUP2			extraBalance.accumulatedInput()
    PUSH 100000000000000000000000000000000000000000000000000000000		extraBalance.accumulatedInput()
    MUL			extraBalance.accumulatedInput()
    DUP2			extraBalance.accumulatedInput()
    MSTORE			extraBalance.accumulatedInput()
    PUSH 4		extraBalance.accumulatedInput()
    ADD			extraBalance.accumulatedInput()
    DUP1			extraBalance.accumulatedInput()
    SWAP1			extraBalance.accumulatedInput()
    POP			extraBalance.accumulatedInput()
    PUSH 20		extraBalance.accumulatedInput()
    PUSH 40		extraBalance.accumulatedInput()
    MLOAD			extraBalance.accumulatedInput()
    DUP1			extraBalance.accumulatedInput()
    DUP4			extraBalance.accumulatedInput()
    SUB			extraBalance.accumulatedInput()
    DUP2			extraBalance.accumulatedInput()
    PUSH 0		extraBalance.accumulatedInput()
    DUP8			extraBalance.accumulatedInput()
    PUSH 61DA		extraBalance.accumulatedInput()
    GAS			extraBalance.accumulatedInput()
    SUB			extraBalance.accumulatedInput()
    CALL			extraBalance.accumulatedInput()
    ISZERO			extraBalance.accumulatedInput()
    PUSH [ErrorTag]		extraBalance.accumulatedInput()
    JUMPI			extraBalance.accumulatedInput()
    POP			extraBalance.accumulatedInput()
    POP			extraBalance.accumulatedInput()
    POP			extraBalance.accumulatedInput()
    PUSH 40		extraBalance.accumulatedInput()
    MLOAD			extraBalance.accumulatedInput()
    DUP1			extraBalance.accumulatedInput()
    MLOAD			extraBalance.accumulatedInput()
    SWAP1			extraBalance.accumulatedInput()
    PUSH 20		extraBalance.accumulatedInput()
    ADD			extraBalance.accumulatedInput()
    POP			extraBalance.accumulatedInput()
    PUSH 3		extraBalance
    PUSH 0		extraBalance
    SWAP1			extraBalance
    SLOAD			extraBalance
    SWAP1			extraBalance
    PUSH 100		extraBalance
    EXP			extraBalance
    SWAP1			extraBalance
    DIV			extraBalance
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		extraBalance
    AND			extraBalance
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		extraBalance.balance
    AND			extraBalance.balance
    BALANCE			extraBalance.balance
    LT			extraBalance.balance >= extraBalance.accumulatedInput()
    ISZERO			extraBalance.balance >= extraBalance.accumulatedInput()
    ISZERO			if (extraBalance.balance >= extraBalance.accumulatedInput())...
    PUSH [tag69]		if (extraBalance.balance >= extraBalance.accumulatedInput())...
    JUMPI			if (extraBalance.balance >= extraBalance.accumulatedInput())...
    PUSH 3		extraBalance
    PUSH 0		extraBalance
    SWAP1			extraBalance
    SLOAD			extraBalance
    SWAP1			extraBalance
    PUSH 100		extraBalance
    EXP			extraBalance
    SWAP1			extraBalance
    DIV			extraBalance
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		extraBalance
    AND			extraBalance
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		extraBalance.payOut
    AND			extraBalance.payOut
    PUSH 221038A		extraBalance.payOut
    ADDRESS			this
    PUSH 3		extraBalance
    PUSH 0		extraBalance
    SWAP1			extraBalance
    SLOAD			extraBalance
    SWAP1			extraBalance
    PUSH 100		extraBalance
    EXP			extraBalance
    SWAP1			extraBalance
    DIV			extraBalance
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		extraBalance
    AND			extraBalance
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		extraBalance.accumulatedInput
    AND			extraBalance.accumulatedInput
    PUSH D2CC718F		extraBalance.accumulatedInput
    PUSH 40		extraBalance.accumulatedInput()
    MLOAD			extraBalance.accumulatedInput()
    DUP2			extraBalance.accumulatedInput()
    PUSH 100000000000000000000000000000000000000000000000000000000		extraBalance.accumulatedInput()
    MUL			extraBalance.accumulatedInput()
    DUP2			extraBalance.accumulatedInput()
    MSTORE			extraBalance.accumulatedInput()
    PUSH 4		extraBalance.accumulatedInput()
    ADD			extraBalance.accumulatedInput()
    DUP1			extraBalance.accumulatedInput()
    SWAP1			extraBalance.accumulatedInput()
    POP			extraBalance.accumulatedInput()
    PUSH 20		extraBalance.accumulatedInput()
    PUSH 40		extraBalance.accumulatedInput()
    MLOAD			extraBalance.accumulatedInput()
    DUP1			extraBalance.accumulatedInput()
    DUP4			extraBalance.accumulatedInput()
    SUB			extraBalance.accumulatedInput()
    DUP2			extraBalance.accumulatedInput()
    PUSH 0		extraBalance.accumulatedInput()
    DUP8			extraBalance.accumulatedInput()
    PUSH 61DA		extraBalance.accumulatedInput()
    GAS			extraBalance.accumulatedInput()
    SUB			extraBalance.accumulatedInput()
    CALL			extraBalance.accumulatedInput()
    ISZERO			extraBalance.accumulatedInput()
    PUSH [ErrorTag]		extraBalance.accumulatedInput()
    JUMPI			extraBalance.accumulatedInput()
    POP			extraBalance.accumulatedInput()
    POP			extraBalance.accumulatedInput()
    POP			extraBalance.accumulatedInput()
    PUSH 40		extraBalance.accumulatedInput()
    MLOAD			extraBalance.accumulatedInput()
    DUP1			extraBalance.accumulatedInput()
    MLOAD			extraBalance.accumulatedInput()
    SWAP1			extraBalance.accumulatedInput()
    PUSH 20		extraBalance.accumulatedInput()
    ADD			extraBalance.accumulatedInput()
    POP			extraBalance.accumulatedInput()
    PUSH 40		extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    MLOAD			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    DUP4			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    PUSH 100000000000000000000000000000000000000000000000000000000		extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    MUL			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    DUP2			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    MSTORE			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    PUSH 4		extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    ADD			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    DUP1			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    DUP4			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    AND			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    DUP2			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    MSTORE			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    PUSH 20		extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    ADD			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    DUP3			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    DUP2			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    MSTORE			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    PUSH 20		extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    ADD			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    SWAP3			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    POP			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    POP			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    POP			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    PUSH 20		extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    PUSH 40		extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    MLOAD			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    DUP1			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    DUP4			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    SUB			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    DUP2			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    PUSH 0		extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    DUP8			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    PUSH 61DA		extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    GAS			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    SUB			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    CALL			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    ISZERO			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    PUSH [ErrorTag]		extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    JUMPI			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    POP			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    POP			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    POP			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    PUSH 40		extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    MLOAD			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    DUP1			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    MLOAD			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    SWAP1			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    PUSH 20		extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    ADD			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    POP			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
    POP			extraBalance.payOut(address(this), extraBalance.accumulatedInput())
  tag69: 
    JUMPDEST		if (extraBalance.balance >= extraBalance.accumulatedInput())...
    CALLER			msg.sender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		msg.sender.call
    AND			msg.sender.call
    PUSH 4		weiGiven
    PUSH 0		weiGiven
    POP			weiGiven
    PUSH 0		weiGiven[msg.sender]
    CALLER			msg.sender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		weiGiven[msg.sender]
    AND			weiGiven[msg.sender]
    DUP2			weiGiven[msg.sender]
    MSTORE			weiGiven[msg.sender]
    PUSH 20		weiGiven[msg.sender]
    ADD			weiGiven[msg.sender]
    SWAP1			weiGiven[msg.sender]
    DUP2			weiGiven[msg.sender]
    MSTORE			weiGiven[msg.sender]
    PUSH 20		weiGiven[msg.sender]
    ADD			weiGiven[msg.sender]
    PUSH 0		weiGiven[msg.sender]
    SHA3			weiGiven[msg.sender]
    PUSH 0		weiGiven[msg.sender]
    POP			weiGiven[msg.sender]
    SLOAD			weiGiven[msg.sender]
    PUSH 40		msg.sender.call.value(weiGiven[msg.sender])()
    MLOAD			msg.sender.call.value(weiGiven[msg.sender])()
    DUP1			msg.sender.call.value(weiGiven[msg.sender])()
    SWAP1			msg.sender.call.value(weiGiven[msg.sender])()
    POP			msg.sender.call.value(weiGiven[msg.sender])()
    PUSH 0		msg.sender.call.value(weiGiven[msg.sender])()
    PUSH 40		msg.sender.call.value(weiGiven[msg.sender])()
    MLOAD			msg.sender.call.value(weiGiven[msg.sender])()
    DUP1			msg.sender.call.value(weiGiven[msg.sender])()
    DUP4			msg.sender.call.value(weiGiven[msg.sender])()
    SUB			msg.sender.call.value(weiGiven[msg.sender])()
    DUP2			msg.sender.call.value(weiGiven[msg.sender])()
    DUP6			msg.sender.call.value(weiGiven[msg.sender])()
    DUP8			msg.sender.call.value(weiGiven[msg.sender])()
    PUSH 8502		msg.sender.call.value(weiGiven[msg.sender])()
    GAS			msg.sender.call.value(weiGiven[msg.sender])()
    SUB			msg.sender.call.value(weiGiven[msg.sender])()
    CALL			msg.sender.call.value(weiGiven[msg.sender])()
    SWAP3			msg.sender.call.value(weiGiven[msg.sender])()
    POP			msg.sender.call.value(weiGiven[msg.sender])()
    POP			msg.sender.call.value(weiGiven[msg.sender])()
    POP			msg.sender.call.value(weiGiven[msg.sender])()
    ISZERO			if (msg.sender.call.value(weiGiven[msg.sender])()) {...
    PUSH [tag70]		if (msg.sender.call.value(weiGiven[msg.sender])()) {...
    JUMPI			if (msg.sender.call.value(weiGiven[msg.sender])()) {...
    CALLER			msg.sender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		Refund(msg.sender, weiGiven[msg.sender])
    AND			Refund(msg.sender, weiGiven[msg.sender])
    PUSH BB28353E4598C3B9199101A66E0989549B659A59A54D2C27FBB183F1932C8E6D		Refund(msg.sender, weiGiven[msg.sender])
    PUSH 4		weiGiven
    PUSH 0		weiGiven
    POP			weiGiven
    PUSH 0		weiGiven[msg.sender]
    CALLER			msg.sender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		weiGiven[msg.sender]
    AND			weiGiven[msg.sender]
    DUP2			weiGiven[msg.sender]
    MSTORE			weiGiven[msg.sender]
    PUSH 20		weiGiven[msg.sender]
    ADD			weiGiven[msg.sender]
    SWAP1			weiGiven[msg.sender]
    DUP2			weiGiven[msg.sender]
    MSTORE			weiGiven[msg.sender]
    PUSH 20		weiGiven[msg.sender]
    ADD			weiGiven[msg.sender]
    PUSH 0		weiGiven[msg.sender]
    SHA3			weiGiven[msg.sender]
    PUSH 0		weiGiven[msg.sender]
    POP			weiGiven[msg.sender]
    SLOAD			weiGiven[msg.sender]
    PUSH 40		Refund(msg.sender, weiGiven[msg.sender])
    MLOAD			Refund(msg.sender, weiGiven[msg.sender])
    DUP1			Refund(msg.sender, weiGiven[msg.sender])
    DUP3			Refund(msg.sender, weiGiven[msg.sender])
    DUP2			Refund(msg.sender, weiGiven[msg.sender])
    MSTORE			Refund(msg.sender, weiGiven[msg.sender])
    PUSH 20		Refund(msg.sender, weiGiven[msg.sender])
    ADD			Refund(msg.sender, weiGiven[msg.sender])
    SWAP2			Refund(msg.sender, weiGiven[msg.sender])
    POP			Refund(msg.sender, weiGiven[msg.sender])
    POP			Refund(msg.sender, weiGiven[msg.sender])
    PUSH 40		Refund(msg.sender, weiGiven[msg.sender])
    MLOAD			Refund(msg.sender, weiGiven[msg.sender])
    DUP1			Refund(msg.sender, weiGiven[msg.sender])
    SWAP2			Refund(msg.sender, weiGiven[msg.sender])
    SUB			Refund(msg.sender, weiGiven[msg.sender])
    SWAP1			Refund(msg.sender, weiGiven[msg.sender])
    LOG2			Refund(msg.sender, weiGiven[msg.sender])
    PUSH 5		balances
    PUSH 0		balances
    POP			balances
    PUSH 0		balances[msg.sender]
    CALLER			msg.sender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		balances[msg.sender]
    AND			balances[msg.sender]
    DUP2			balances[msg.sender]
    MSTORE			balances[msg.sender]
    PUSH 20		balances[msg.sender]
    ADD			balances[msg.sender]
    SWAP1			balances[msg.sender]
    DUP2			balances[msg.sender]
    MSTORE			balances[msg.sender]
    PUSH 20		balances[msg.sender]
    ADD			balances[msg.sender]
    PUSH 0		balances[msg.sender]
    SHA3			balances[msg.sender]
    PUSH 0		balances[msg.sender]
    POP			balances[msg.sender]
    SLOAD			balances[msg.sender]
    PUSH 7		totalSupply
    PUSH 0		totalSupply
    DUP3			totalSupply -= balances[msg.sender]
    DUP3			totalSupply -= balances[msg.sender]
    DUP3			totalSupply -= balances[msg.sender]
    POP			totalSupply -= balances[msg.sender]
    SLOAD			totalSupply -= balances[msg.sender]
    SUB			totalSupply -= balances[msg.sender]
    SWAP3			totalSupply -= balances[msg.sender]
    POP			totalSupply -= balances[msg.sender]
    POP			totalSupply -= balances[msg.sender]
    DUP2			totalSupply -= balances[msg.sender]
    SWAP1			totalSupply -= balances[msg.sender]
    SSTORE			totalSupply -= balances[msg.sender]
    POP			totalSupply -= balances[msg.sender]
    PUSH 0		0
    PUSH 5		balances
    PUSH 0		balances
    POP			balances
    PUSH 0		balances[msg.sender]
    CALLER			msg.sender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		balances[msg.sender]
    AND			balances[msg.sender]
    DUP2			balances[msg.sender]
    MSTORE			balances[msg.sender]
    PUSH 20		balances[msg.sender]
    ADD			balances[msg.sender]
    SWAP1			balances[msg.sender]
    DUP2			balances[msg.sender]
    MSTORE			balances[msg.sender]
    PUSH 20		balances[msg.sender]
    ADD			balances[msg.sender]
    PUSH 0		balances[msg.sender]
    SHA3			balances[msg.sender]
    PUSH 0		balances[msg.sender]
    POP			balances[msg.sender] = 0
    DUP2			balances[msg.sender] = 0
    SWAP1			balances[msg.sender] = 0
    SSTORE			balances[msg.sender] = 0
    POP			balances[msg.sender] = 0
    PUSH 0		0
    PUSH 4		weiGiven
    PUSH 0		weiGiven
    POP			weiGiven
    PUSH 0		weiGiven[msg.sender]
    CALLER			msg.sender
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		weiGiven[msg.sender]
    AND			weiGiven[msg.sender]
    DUP2			weiGiven[msg.sender]
    MSTORE			weiGiven[msg.sender]
    PUSH 20		weiGiven[msg.sender]
    ADD			weiGiven[msg.sender]
    SWAP1			weiGiven[msg.sender]
    DUP2			weiGiven[msg.sender]
    MSTORE			weiGiven[msg.sender]
    PUSH 20		weiGiven[msg.sender]
    ADD			weiGiven[msg.sender]
    PUSH 0		weiGiven[msg.sender]
    SHA3			weiGiven[msg.sender]
    PUSH 0		weiGiven[msg.sender]
    POP			weiGiven[msg.sender] = 0
    DUP2			weiGiven[msg.sender] = 0
    SWAP1			weiGiven[msg.sender] = 0
    SSTORE			weiGiven[msg.sender] = 0
    POP			weiGiven[msg.sender] = 0
  tag70: 
    JUMPDEST		if (msg.sender.call.value(weiGiven[msg.sender])()) {...
  tag68: 
    JUMPDEST		if (now > closingTime && !isFueled) {...
  tag65: 
    JUMPDEST		function refund() noEther {...
    JUMP	[out]		function refund() noEther {...
  tag23: 
    JUMPDEST		function divisor() constant returns (uint divisor) {...
    PUSH 0		uint divisor
    TIMESTAMP			now
    PUSH 127500		2 weeks
    PUSH 0		closingTime
    PUSH 0		closingTime
    POP			closingTime
    SLOAD			closingTime
    SUB			closingTime - 2 weeks
    GT			closingTime - 2 weeks > now
    ISZERO			if (closingTime - 2 weeks > now) {...
    PUSH [tag72]		if (closingTime - 2 weeks > now) {...
    JUMPI			if (closingTime - 2 weeks > now) {...
    PUSH 14		20
    SWAP1			return 20
    POP			return 20
    PUSH [tag71]		return 20
    JUMP			return 20
    PUSH [tag73]		if (closingTime - 2 weeks > now) {...
    JUMP			if (closingTime - 2 weeks > now) {...
  tag72: 
    JUMPDEST		if (closingTime - 2 weeks > now) {...
    TIMESTAMP			now
    PUSH 54600		4 days
    PUSH 0		closingTime
    PUSH 0		closingTime
    POP			closingTime
    SLOAD			closingTime
    SUB			closingTime - 4 days
    GT			closingTime - 4 days > now
    ISZERO			if (closingTime - 4 days > now) {...
    PUSH [tag74]		if (closingTime - 4 days > now) {...
    JUMPI			if (closingTime - 4 days > now) {...
    PUSH 15180		1 days
    PUSH 127500		2 weeks
    PUSH 0		closingTime
    PUSH 0		closingTime
    POP			closingTime
    SLOAD			closingTime
    SUB			closingTime - 2 weeks
    TIMESTAMP			now
    SUB			now - (closingTime - 2 weeks)
    DIV			(now - (closingTime - 2 weeks)) / (1 days)
    PUSH 14		20
    ADD			20 + (now - (closingTime - 2 weeks)) / (1 days)
    SWAP1			return (20 + (now - (closingTime - 2 weeks)) / (1 days))
    POP			return (20 + (now - (closingTime - 2 weeks)) / (1 days))
    PUSH [tag71]		return (20 + (now - (closingTime - 2 weeks)) / (1 days))
    JUMP			return (20 + (now - (closingTime - 2 weeks)) / (1 days))
    PUSH [tag75]		if (closingTime - 4 days > now) {...
    JUMP			if (closingTime - 4 days > now) {...
  tag74: 
    JUMPDEST		if (closingTime - 4 days > now) {...
    PUSH 1E		30
    SWAP1			return 30
    POP			return 30
    PUSH [tag71]		return 30
    JUMP			return 30
  tag75: 
    JUMPDEST		if (closingTime - 4 days > now) {...
  tag73: 
    JUMPDEST		if (closingTime - 2 weeks > now) {...
  tag71: 
    JUMPDEST		function divisor() constant returns (uint divisor) {...
    SWAP1			function divisor() constant returns (uint divisor) {...
    JUMP	[out]		function divisor() constant returns (uint divisor) {...
  tag21: 
    JUMPDEST		uint256 public totalSupply
    PUSH 7		uint256 public totalSupply
    PUSH 0		uint256 public totalSupply
    POP			uint256 public totalSupply
    SLOAD			uint256 public totalSupply
    DUP2			uint256 public totalSupply
    JUMP	[out]		uint256 public totalSupply
  tag33: 
    JUMPDEST		function balanceOf(address _owner) constant returns (uint256 balance) {...
    PUSH 0		uint256 balance
    PUSH 5		balances
    PUSH 0		balances
    POP			balances
    PUSH 0		balances[_owner]
    DUP4			_owner
    PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF		balances[_owner]
    AND			balances[_owner]
    DUP2			balances[_owner]
    MSTORE			balances[_owner]
    PUSH 20		balances[_owner]
    ADD			balances[_owner]
    SWAP1			balances[_owner]
    DUP2			balances[_owner]
    MSTORE			balances[_owner]
    PUSH 20		balances[_owner]
    ADD			balances[_owner]
    PUSH 0		balances[_owner]
    SHA3			balances[_owner]
    PUSH 0		balances[_owner]
    POP			balances[_owner]
    SLOAD			balances[_owner]
    SWAP1			return balances[_owner]
    POP			return balances[_owner]
    PUSH [tag76]		return balances[_owner]
    JUMP			return balances[_owner]
  tag76: 
    JUMPDEST		function balanceOf(address _owner) constant returns (uint256 balance) {...
    SWAP2			function balanceOf(address _owner) constant returns (uint256 balance) {...
    SWAP1			function balanceOf(address _owner) constant returns (uint256 balance) {...
    POP			function balanceOf(address _owner) constant returns (uint256 balance) {...
    JUMP	[out]		function balanceOf(address _owner) constant returns (uint256 balance) {...

======= TokenCreationInterface =======
EVM assembly:
Contract not fully implemented

======= TokenInterface =======
EVM assembly:
Contract not fully implemented
